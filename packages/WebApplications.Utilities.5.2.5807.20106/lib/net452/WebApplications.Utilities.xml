<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebApplications.Utilities</name>
    </assembly>
    <members>
        <member name="T:WebApplications.Utilities.Accessor">
            <summary>
            Makes any object instance implement a dictionary for accessing it's properties and fields.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Accessor._constructorFuncs">
            <summary>
            The constructor functions.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Accessor.Create(System.Object,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates a new <see cref="T:WebApplications.Utilities.Accessor`1" /> for the <paramref name="instance" /> given.
            </summary>
            <param name="instance">The instance.</param>
            <param name="includeFields">if set to <see langword="true" /> includes fields.</param>
            <param name="includeProperties">if set to <see langword="true" /> includes properties.</param>
            <param name="includeInstance">if set to <see langword="true" /> includes instance members.</param>
            <param name="includeStatic">if set to <see langword="true" /> includes static members.</param>
            <param name="includePublic">if set to <see langword="true" /> includes public members.</param>
            <param name="includeNonPublic">if set to <see langword="true" /> includes non-public members.</param>
            <param name="supportsNew">if set to <see langword="true" /> unknown keys are supported and stored.</param>
            <param name="isCaseSensitive">if set to
            <see langword="true" /> then keys are case sensitive; otherwise matching keys (due to case insensitivity) will result
            in missing accessors so this setting should be used with caution.</param>
            <returns>A new <see cref="T:WebApplications.Utilities.Accessor`1" /> of the</returns>
        </member>
        <member name="F:WebApplications.Utilities.Accessor.IsCaseSensitive">
            <summary>
            Whether keys are case sensitive.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Accessor.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Accessor" /> class.
            </summary>
            <param name="isCaseSensitive">if set to 
            <see langword="true" /> then keys are case sensitive;
            otherwise matching keys (due to case insensitivity) will resultin missing accessors so this setting should be used with caution.</param>
        </member>
        <member name="M:WebApplications.Utilities.Accessor.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Accessor.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Accessor.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
        </member>
        <member name="M:WebApplications.Utilities.Accessor.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Accessor.Clear(System.Boolean)">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="all">If set to <see langword="true" /> removes all the items; otherwise only the none field or property items.</param>
        </member>
        <member name="M:WebApplications.Utilities.Accessor.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Accessor.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
            <summary>
            Copies to.
            </summary>
            <param name="array">The array.</param>
            <param name="arrayIndex">Index of the array.</param>
        </member>
        <member name="M:WebApplications.Utilities.Accessor.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
        </member>
        <member name="P:WebApplications.Utilities.Accessor.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <value>The count.</value>
            <returns>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
        </member>
        <member name="P:WebApplications.Utilities.Accessor.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
            <value><see langword="true" /> if this instance is read only; otherwise, <see langword="false" />.</value>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Accessor.ContainsKey(System.String)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified key.
            </summary>
            <param name="key">The key to locate in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</param>
            <returns>true if the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the key; otherwise, false.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Accessor.Add(System.String,System.Object)">
            <summary>
            Adds an element with the provided key and value to the <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </summary>
            <param name="key">The object to use as the key of the element to add.</param>
            <param name="value">The object to use as the value of the element to add.</param>
        </member>
        <member name="M:WebApplications.Utilities.Accessor.Remove(System.String)">
            <summary>
            Removes the element with the specified key from the <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </summary>
            <param name="key">The key of the element to remove.</param>
            <returns>true if the element is successfully removed; otherwise, false.  This method also returns false if <paramref name="key" /> was not found in the original <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Accessor.TryGetValue(System.String,System.Object@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key whose value to get.</param>
            <param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <paramref name="value" /> parameter. This parameter is passed uninitialized.</param>
            <returns>true if the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified key; otherwise, false.</returns>
        </member>
        <member name="P:WebApplications.Utilities.Accessor.Item(System.String)">
            <summary>
            Gets or sets the element with the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="P:WebApplications.Utilities.Accessor.System#Collections#Generic#IReadOnlyDictionary{System#String,System#Object}#Keys">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </summary>
            <value>The keys.</value>
            <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
        </member>
        <member name="P:WebApplications.Utilities.Accessor.System#Collections#Generic#IReadOnlyDictionary{System#String,System#Object}#Values">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </summary>
            <value>The values.</value>
            <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
        </member>
        <member name="P:WebApplications.Utilities.Accessor.Keys">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </summary>
            <value>The keys.</value>
            <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
        </member>
        <member name="P:WebApplications.Utilities.Accessor.Values">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </summary>
            <value>The values.</value>
            <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Accessor.Apply(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
            Applies the specified snapshot.
            </summary>
            <param name="snapshot">The snapshot.</param>
        </member>
        <member name="M:WebApplications.Utilities.Accessor.Snapshot">
            <summary>
            Gets a snapshot of the object.
            </summary>
            <returns>ReadOnlyDictionary&lt;System.String, System.Object&gt;.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Accessor`1">
            <summary>
            Makes any object instance implement a dictionary for accessing it's properties and fields.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:WebApplications.Utilities.Accessor`1.Access">
            <summary>
            Holds accessor information for properties and fields.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Accessor`1.Access.Name">
            <summary>
            The name.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Accessor`1.Access.IsProperty">
            <summary>
            The instance represents a property.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Accessor`1.Access.IsStatic">
            <summary>
            The instance represents a static member.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Accessor`1.Access.IsPublic">
            <summary>
            The instance represents a public member.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Accessor`1.Access.Get">
            <summary>
            The get function.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Accessor`1.Access.Set">
            <summary>
            The set action.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Accessor`1.Access.#ctor(WebApplications.Utilities.Reflect.Field)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Accessor`1.Access" /> class.
            </summary>
            <param name="field">The field.</param>
        </member>
        <member name="M:WebApplications.Utilities.Accessor`1.Access.#ctor(WebApplications.Utilities.Reflect.Property)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Accessor`1.Access" /> class.
            </summary>
            <param name="property">The property.</param>
        </member>
        <member name="F:WebApplications.Utilities.Accessor`1._accessors">
            <summary>
            All accessors for the type.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Accessor`1.#cctor">
            <summary>
            Initializes static members of the <see cref="T:WebApplications.Utilities.Accessor`1" /> class.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Accessor`1._dictionary">
            <summary>
            The underlying dictionary.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Accessor`1._instance">
            <summary>
            The underlying instance.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Accessor`1._supportsNew">
            <summary>
            Whether to allow new keys.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Accessor`1.#ctor(`0,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Accessor`1" /> class.
            </summary>
            <param name="instance">The instance.</param>
            <param name="includeFields">if set to <see langword="true" /> includes fields.</param>
            <param name="includeProperties">if set to <see langword="true" /> includes properties.</param>
            <param name="includeInstance">if set to <see langword="true" /> includes instance members.</param>
            <param name="includeStatic">if set to <see langword="true" /> includes static members.</param>
            <param name="includePublic">if set to <see langword="true" /> includes public members.</param>
            <param name="includeNonPublic">if set to <see langword="true" /> includes non-public members.</param>
            <param name="supportsNew">if set to <see langword="true" /> unknown keys are supported and stored.</param>
            <param name="isCaseSensitive">if set to 
            <see langword="true" /> then keys are case sensitive;
            otherwise matching keys (due to case insensitivity) will result in missing accessors so this setting should be used with caution.</param>
        </member>
        <member name="M:WebApplications.Utilities.Accessor`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Accessor`1.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
        </member>
        <member name="M:WebApplications.Utilities.Accessor`1.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Accessor`1.Clear(System.Boolean)">
            <summary>
            Removes elements from the collection that aren't accessors to properties or fields.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Accessor`1.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Accessor`1.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
            <summary>
            Copies to.
            </summary>
            <param name="array">The array.</param>
            <param name="arrayIndex">Index of the array.</param>
        </member>
        <member name="M:WebApplications.Utilities.Accessor`1.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
        </member>
        <member name="P:WebApplications.Utilities.Accessor`1.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" /> that the value can be retrieved for.
            </summary>
            <value>The count.</value>
            <returns>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
        </member>
        <member name="P:WebApplications.Utilities.Accessor`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
            <value><see langword="true" /> if this instance is read only; otherwise, <see langword="false" />.</value>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Accessor`1.ContainsKey(System.String)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified key.
            </summary>
            <param name="key">The key to locate in the <see cref="T:System.Collections.Generic.IDictionary`2" />.</param>
            <returns>true if the <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the key; otherwise, false.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Accessor`1.Add(System.String,System.Object)">
            <summary>
            Adds an element with the provided key and value to the <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </summary>
            <param name="key">The object to use as the key of the element to add.</param>
            <param name="value">The object to use as the value of the element to add.</param>
        </member>
        <member name="M:WebApplications.Utilities.Accessor`1.Remove(System.String)">
            <summary>
            Removes the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns>System.Boolean.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Accessor`1.TryGetValue(System.String,System.Object@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key whose value to get.</param>
            <param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <paramref name="value" /> parameter. This parameter is passed uninitialized.</param>
            <returns>true if the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" /> contains an element with the specified key; otherwise, false.</returns>
        </member>
        <member name="P:WebApplications.Utilities.Accessor`1.Item(System.String)">
            <summary>
            Gets or sets the element with the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns>System.Object.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
            </exception>
        </member>
        <member name="P:WebApplications.Utilities.Accessor`1.Keys">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </summary>
            <value>The keys.</value>
            <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
        </member>
        <member name="P:WebApplications.Utilities.Accessor`1.Values">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the <see cref="T:System.Collections.Generic.IDictionary`2" />.
            </summary>
            <value>The values.</value>
            <returns>An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Accessor`1.op_Implicit(`0)~WebApplications.Utilities.Accessor{`0}">
            <summary>
            Performs an implicit conversion from <typeparamref name="T" /> to <see cref="T:WebApplications.Utilities.Accessor`1" />.
            </summary>
            <param name="instance">The instance.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Accessor`1.op_Explicit(WebApplications.Utilities.Accessor{`0})~`0">
            <summary>
            Performs an explicit conversion from <see cref="T:WebApplications.Utilities.Accessor`1" /> to <typeparamref name="T" />.
            </summary>
            <param name="accessor">The accessor.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Accessor`1.op_Implicit(WebApplications.Utilities.Accessor{`0})~System.Collections.ObjectModel.ReadOnlyDictionary{System.String,System.Object}">
            <summary>
            Performs an implicit conversion from <see cref="T:WebApplications.Utilities.Accessor`1" /> to <see cref="T:System.Collections.ObjectModel.ReadOnlyDictionary`2" />.
            </summary>
            <param name="accessor">The accessor.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.CanBeNullAttribute">
            <summary>
            Indicates that the value of the marked element could be <c>null</c> sometimes,
            so the check for <c>null</c> is necessary before its usage.
            </summary>
            <example><code>
            [CanBeNull] public object Test() { return null; }
            public void UseTest() {
              var p = Test();
              var s = p.ToString(); // Warning: Possible 'System.NullReferenceException'
            }
            </code></example>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.NotNullAttribute">
            <summary>
            Indicates that the value of the marked element could never be <c>null</c>.
            </summary>
            <example><code>
            [NotNull] public object Foo() {
              return null; // Warning: Possible 'null' assignment
            }
            </code></example>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.ItemNotNullAttribute">
            <summary>
            Indicates that collection or enumerable value does not contain null elements.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.ItemCanBeNullAttribute">
            <summary>
            Indicates that collection or enumerable value can contain null elements.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.StringFormatMethodAttribute">
            <summary>
            Indicates that the marked method builds string by format pattern and (optional) arguments.
            Parameter, which contains format string, should be given in constructor. The format string
            should be in <see cref="M:System.String.Format(System.IFormatProvider,System.String,System.Object[])"/>-like form.
            </summary>
            <example><code>
            [StringFormatMethod("message")]
            public void ShowError(string message, params object[] args) { /* do something */ }
            public void Foo() {
              ShowError("Failed: {0}"); // Warning: Non-existing argument in format string
            }
            </code></example>
        </member>
        <member name="M:WebApplications.Utilities.Annotations.StringFormatMethodAttribute.#ctor(System.String)">
            <param name="formatParameterName">
            Specifies which parameter of an annotated method should be treated as format-string
            </param>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.ValueProviderAttribute">
            <summary>
            For a parameter that is expected to be one of the limited set of values.
            Specify fields of which type should be used as values for this parameter.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.InvokerParameterNameAttribute">
            <summary>
            Indicates that the function argument should be string literal and match one
            of the parameters of the caller function. For example, ReSharper annotates
            the parameter of <see cref="T:System.ArgumentNullException"/>.
            </summary>
            <example><code>
            public void Foo(string param) {
              if (param == null)
                throw new ArgumentNullException("par"); // Warning: Cannot resolve symbol
            }
            </code></example>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.NotifyPropertyChangedInvocatorAttribute">
             <summary>
             Indicates that the method is contained in a type that implements
             <c>System.ComponentModel.INotifyPropertyChanged</c> interface and this method
             is used to notify that some property value changed.
             </summary>
             <remarks>
             The method should be non-static and conform to one of the supported signatures:
             <list>
             <item><c>NotifyChanged(string)</c></item>
             <item><c>NotifyChanged(params string[])</c></item>
             <item><c>NotifyChanged{T}(Expression{Func{T}})</c></item>
             <item><c>NotifyChanged{T,U}(Expression{Func{T,U}})</c></item>
             <item><c>SetProperty{T}(ref T, T, string)</c></item>
             </list>
             </remarks>
             <example><code>
             public class Foo : INotifyPropertyChanged {
               public event PropertyChangedEventHandler PropertyChanged;
               [NotifyPropertyChangedInvocator]
               protected virtual void NotifyChanged(string propertyName) { ... }
            
               private string _name;
               public string Name {
                 get { return _name; }
                 set { _name = value; NotifyChanged("LastName"); /* Warning */ }
               }
             }
             </code>
             Examples of generated notifications:
             <list>
             <item><c>NotifyChanged("Property")</c></item>
             <item><c>NotifyChanged(() =&gt; Property)</c></item>
             <item><c>NotifyChanged((VM x) =&gt; x.Property)</c></item>
             <item><c>SetProperty(ref myField, value, "Property")</c></item>
             </list>
             </example>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.ContractAnnotationAttribute">
            <summary>
            Describes dependency between method input and output.
            </summary>
            <syntax>
            <p>Function Definition Table syntax:</p>
            <list>
            <item>FDT      ::= FDTRow [;FDTRow]*</item>
            <item>FDTRow   ::= Input =&gt; Output | Output &lt;= Input</item>
            <item>Input    ::= ParameterName: Value [, Input]*</item>
            <item>Output   ::= [ParameterName: Value]* {halt|stop|void|nothing|Value}</item>
            <item>Value    ::= true | false | null | notnull | canbenull</item>
            </list>
            If method has single input parameter, it's name could be omitted.<br/>
            Using <c>halt</c> (or <c>void</c>/<c>nothing</c>, which is the same)
            for method output means that the methos doesn't return normally.<br/>
            <c>canbenull</c> annotation is only applicable for output parameters.<br/>
            You can use multiple <c>[ContractAnnotation]</c> for each FDT row,
            or use single attribute with rows separated by semicolon.<br/>
            </syntax>
            <examples><list>
            <item><code>
            [ContractAnnotation("=> halt")]
            public void TerminationMethod()
            </code></item>
            <item><code>
            [ContractAnnotation("halt &lt;= condition: false")]
            public void Assert(bool condition, string text) // regular assertion method
            </code></item>
            <item><code>
            [ContractAnnotation("s:null => true")]
            public bool IsNullOrEmpty(string s) // string.IsNullOrEmpty()
            </code></item>
            <item><code>
            // A method that returns null if the parameter is null,
            // and not null if the parameter is not null
            [ContractAnnotation("null => null; notnull => notnull")]
            public object Transform(object data) 
            </code></item>
            <item><code>
            [ContractAnnotation("s:null=>false; =>true,result:notnull; =>false, result:null")]
            public bool TryParse(string s, out Person result)
            </code></item>
            </list></examples>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.LocalizationRequiredAttribute">
            <summary>
            Indicates that marked element should be localized or not.
            </summary>
            <example><code>
            [LocalizationRequiredAttribute(true)]
            public class Foo {
              private string str = "my string"; // Warning: Localizable string
            }
            </code></example>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.CannotApplyEqualityOperatorAttribute">
            <summary>
            Indicates that the value of the marked type (or its derivatives)
            cannot be compared using '==' or '!=' operators and <c>Equals()</c>
            should be used instead. However, using '==' or '!=' for comparison
            with <c>null</c> is always permitted.
            </summary>
            <example><code>
            [CannotApplyEqualityOperator]
            class NoEquality { }
            class UsesNoEquality {
              public void Test() {
                var ca1 = new NoEquality();
                var ca2 = new NoEquality();
                if (ca1 != null) { // OK
                  bool condition = ca1 == ca2; // Warning
                }
              }
            }
            </code></example>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.BaseTypeRequiredAttribute">
            <summary>
            When applied to a target attribute, specifies a requirement for any type marked
            with the target attribute to implement or inherit specific type or types.
            </summary>
            <example><code>
            [BaseTypeRequired(typeof(IComponent)] // Specify requirement
            public class ComponentAttribute : Attribute { }
            [Component] // ComponentAttribute requires implementing IComponent interface
            public class MyComponent : IComponent { }
            </code></example>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.UsedImplicitlyAttribute">
            <summary>
            Indicates that the marked symbol is used implicitly (e.g. via reflection, in external library),
            so this symbol will not be marked as unused (as well as by other usage inspections).
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.MeansImplicitUseAttribute">
            <summary>
            Should be used on attributes and causes ReSharper to not mark symbols marked with such attributes
            as unused (as well as by other usage inspections)
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Annotations.ImplicitUseKindFlags.Access">
            <summary>Only entity marked with attribute considered used.</summary>
        </member>
        <member name="F:WebApplications.Utilities.Annotations.ImplicitUseKindFlags.Assign">
            <summary>Indicates implicit assignment to a member.</summary>
        </member>
        <member name="F:WebApplications.Utilities.Annotations.ImplicitUseKindFlags.InstantiatedWithFixedConstructorSignature">
            <summary>
            Indicates implicit instantiation of a type with fixed constructor signature.
            That means any unused constructor parameters won't be reported as such.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Annotations.ImplicitUseKindFlags.InstantiatedNoFixedConstructorSignature">
            <summary>Indicates implicit instantiation of a type.</summary>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.ImplicitUseTargetFlags">
            <summary>
            Specify what is considered used implicitly when marked
            with <see cref="T:WebApplications.Utilities.Annotations.MeansImplicitUseAttribute"/> or <see cref="T:WebApplications.Utilities.Annotations.UsedImplicitlyAttribute"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Annotations.ImplicitUseTargetFlags.Members">
            <summary>Members of entity marked with attribute are considered used.</summary>
        </member>
        <member name="F:WebApplications.Utilities.Annotations.ImplicitUseTargetFlags.WithMembers">
            <summary>Entity marked with attribute and all its members considered used.</summary>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.PublicAPIAttribute">
            <summary>
            This attribute is intended to mark publicly available API
            which should not be removed and so is treated as used.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.InstantHandleAttribute">
            <summary>
            Tells code analysis engine if the parameter is completely handled when the invoked method is on stack.
            If the parameter is a delegate, indicates that delegate is executed while the method is executed.
            If the parameter is an enumerable, indicates that it is enumerated while the method is executed.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.PureAttribute">
            <summary>
            Indicates that a method does not make any observable state changes.
            The same as <c>System.Diagnostics.Contracts.PureAttribute</c>.
            </summary>
            <example><code>
            [Pure] private int Multiply(int x, int y) { return x * y; }
            public void Foo() {
              const int a = 2, b = 2;
              Multiply(a, b); // Waring: Return value of pure method is not used
            }
            </code></example>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.PathReferenceAttribute">
            <summary>
            Indicates that a parameter is a path to a file or a folder within a web project.
            Path can be relative or absolute, starting from web root (~).
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.SourceTemplateAttribute">
            <summary>
            An extension method marked with this attribute is processed by ReSharper code completion
            as a 'Source Template'. When extension method is completed over some expression, it's source code
            is automatically expanded like a template at call site.
            </summary>
            <remarks>
            Template method body can contain valid source code and/or special comments starting with '$'.
            Text inside these comments is added as source code when the template is applied. Template parameters
            can be used either as additional method parameters or as identifiers wrapped in two '$' signs.
            Use the <see cref="T:WebApplications.Utilities.Annotations.MacroAttribute"/> attribute to specify macros for parameters.
            </remarks>
            <example>
            In this example, the 'forEach' method is a source template available over all values
            of enumerable types, producing ordinary C# 'foreach' statement and placing caret inside block:
            <code>
            [SourceTemplate]
            public static void forEach&lt;T&gt;(this IEnumerable&lt;T&gt; xs) {
              foreach (var x in xs) {
                 //$ $END$
              }
            }
            </code>
            </example>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.MacroAttribute">
            <summary>
            Allows specifying a macro for a parameter of a <see cref="T:WebApplications.Utilities.Annotations.SourceTemplateAttribute">source template</see>.
            </summary>
            <remarks>
            You can apply the attribute on the whole method or on any of its additional parameters. The macro expression
            is defined in the <see cref="P:WebApplications.Utilities.Annotations.MacroAttribute.Expression"/> property. When applied on a method, the target
            template parameter is defined in the <see cref="P:WebApplications.Utilities.Annotations.MacroAttribute.Target"/> property. To apply the macro silently
            for the parameter, set the <see cref="P:WebApplications.Utilities.Annotations.MacroAttribute.Editable"/> property value = -1.
            </remarks>
            <example>
            Applying the attribute on a source template method:
            <code>
            [SourceTemplate, Macro(Target = "item", Expression = "suggestVariableName()")]
            public static void forEach&lt;T&gt;(this IEnumerable&lt;T&gt; collection) {
              foreach (var item in collection) {
                //$ $END$
              }
            }
            </code>
            Applying the attribute on a template method parameter:
            <code>
            [SourceTemplate]
            public static void something(this Entity x, [Macro(Expression = "guid()", Editable = -1)] string newguid) {
              /*$ var $x$Id = "$newguid$" + x.ToString();
              x.DoSomething($x$Id); */
            }
            </code>
            </example>
        </member>
        <member name="P:WebApplications.Utilities.Annotations.MacroAttribute.Expression">
            <summary>
            Allows specifying a macro that will be executed for a <see cref="T:WebApplications.Utilities.Annotations.SourceTemplateAttribute">source template</see>
            parameter when the template is expanded.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Annotations.MacroAttribute.Editable">
            <summary>
            Allows specifying which occurrence of the target parameter becomes editable when the template is deployed.
            </summary>
            <remarks>
            If the target parameter is used several times in the template, only one occurrence becomes editable;
            other occurrences are changed synchronously. To specify the zero-based index of the editable occurrence,
            use values >= 0. To make the parameter non-editable when the template is expanded, use -1.
            </remarks>>
        </member>
        <member name="P:WebApplications.Utilities.Annotations.MacroAttribute.Target">
            <summary>
            Identifies the target parameter of a <see cref="T:WebApplications.Utilities.Annotations.SourceTemplateAttribute">source template</see> if the
            <see cref="T:WebApplications.Utilities.Annotations.MacroAttribute"/> is applied on a template method.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.AspMvcActionAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter
            is an MVC action. If applied to a method, the MVC action name is calculated
            implicitly from the context. Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String)</c>.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.AspMvcAreaAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC area.
            Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String)</c>.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.AspMvcControllerAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter is
            an MVC controller. If applied to a method, the MVC controller name is calculated
            implicitly from the context. Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String, String)</c>.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.AspMvcMasterAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC Master. Use this attribute
            for custom wrappers similar to <c>System.Web.Mvc.Controller.View(String, String)</c>.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.AspMvcModelTypeAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC model type. Use this attribute
            for custom wrappers similar to <c>System.Web.Mvc.Controller.View(String, Object)</c>.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.AspMvcPartialViewAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter is an MVC
            partial view. If applied to a method, the MVC partial view name is calculated implicitly
            from the context. Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(HtmlHelper, String)</c>.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.AspMvcSupressViewErrorAttribute">
            <summary>
            ASP.NET MVC attribute. Allows disabling inspections for MVC views within a class or a method.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.AspMvcDisplayTemplateAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC display template.
            Use this attribute for custom wrappers similar to 
            <c>System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(HtmlHelper, String)</c>.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.AspMvcEditorTemplateAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC editor template.
            Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.EditorExtensions.EditorForModel(HtmlHelper, String)</c>.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.AspMvcTemplateAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC template.
            Use this attribute for custom wrappers similar to
            <c>System.ComponentModel.DataAnnotations.UIHintAttribute(System.String)</c>.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.AspMvcViewAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter
            is an MVC view. If applied to a method, the MVC view name is calculated implicitly
            from the context. Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Controller.View(Object)</c>.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.AspMvcActionSelectorAttribute">
            <summary>
            ASP.NET MVC attribute. When applied to a parameter of an attribute,
            indicates that this parameter is an MVC action name.
            </summary>
            <example><code>
            [ActionName("Foo")]
            public ActionResult Login(string returnUrl) {
              ViewBag.ReturnUrl = Url.Action("Foo"); // OK
              return RedirectToAction("Bar"); // Error: Cannot resolve action
            }
            </code></example>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.RazorSectionAttribute">
            <summary>
            Razor attribute. Indicates that a parameter or a method is a Razor section.
            Use this attribute for custom wrappers similar to 
            <c>System.Web.WebPages.WebPageBase.RenderSection(String)</c>.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.CollectionAccessAttribute">
            <summary>
            Indicates how method invocation affects content of the collection.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Annotations.CollectionAccessType.None">
            <summary>Method does not use or modify content of the collection.</summary>
        </member>
        <member name="F:WebApplications.Utilities.Annotations.CollectionAccessType.Read">
            <summary>Method only reads content of the collection but does not modify it.</summary>
        </member>
        <member name="F:WebApplications.Utilities.Annotations.CollectionAccessType.ModifyExistingContent">
            <summary>Method can change content of the collection but does not add new elements.</summary>
        </member>
        <member name="F:WebApplications.Utilities.Annotations.CollectionAccessType.UpdatedContent">
            <summary>Method can add new elements to the collection.</summary>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.AssertionMethodAttribute">
            <summary>
            Indicates that the marked method is assertion method, i.e. it halts control flow if
            one of the conditions is satisfied. To set the condition, mark one of the parameters with 
            <see cref="T:WebApplications.Utilities.Annotations.AssertionConditionAttribute"/> attribute.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.AssertionConditionAttribute">
            <summary>
            Indicates the condition parameter of the assertion method. The method itself should be
            marked by <see cref="T:WebApplications.Utilities.Annotations.AssertionMethodAttribute"/> attribute. The mandatory argument of
            the attribute is the assertion type.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.AssertionConditionType">
            <summary>
            Specifies assertion type. If the assertion method argument satisfies the condition,
            then the execution continues. Otherwise, execution is assumed to be halted.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Annotations.AssertionConditionType.IS_TRUE">
            <summary>Marked parameter should be evaluated to true.</summary>
        </member>
        <member name="F:WebApplications.Utilities.Annotations.AssertionConditionType.IS_FALSE">
            <summary>Marked parameter should be evaluated to false.</summary>
        </member>
        <member name="F:WebApplications.Utilities.Annotations.AssertionConditionType.IS_NULL">
            <summary>Marked parameter should be evaluated to null value.</summary>
        </member>
        <member name="F:WebApplications.Utilities.Annotations.AssertionConditionType.IS_NOT_NULL">
            <summary>Marked parameter should be evaluated to not null value.</summary>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.TerminatesProgramAttribute">
            <summary>
            Indicates that the marked method unconditionally terminates control flow execution.
            For example, it could unconditionally throw exception.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.LinqTunnelAttribute">
            <summary>
            Indicates that method is pure LINQ method, with postponed enumeration (like Enumerable.Select,
            .Where). This annotation allows inference of [InstantHandle] annotation for parameters
            of delegate type by analyzing LINQ method chains.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.NoEnumerationAttribute">
            <summary>
            Indicates that IEnumerable, passed as parameter, is not enumerated.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.RegexPatternAttribute">
            <summary>
            Indicates that parameter is regular expression pattern.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.XamlItemsControlAttribute">
            <summary>
            XAML attribute. Indicates the type that has <c>ItemsSource</c> property and should be treated
            as <c>ItemsControl</c>-derived type, to enable inner items <c>DataContext</c> type resolve.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.XamlItemBindingOfItemsControlAttribute">
            <summary>
            XAML attibute. Indicates the property of some <c>BindingBase</c>-derived type, that
            is used to bind some item of <c>ItemsControl</c>-derived type. This annotation will
            enable the <c>DataContext</c> type resolve for XAML bindings for such properties.
            </summary>
            <remarks>
            Property should have the tree ancestor of the <c>ItemsControl</c> type or
            marked with the <see cref="T:WebApplications.Utilities.Annotations.XamlItemsControlAttribute"/> attribute.
            </remarks>
        </member>
        <member name="T:WebApplications.Utilities.Annotations.NoReorder">
            <summary>
            Prevents the Member Reordering feature from tossing members of the marked class.
            </summary>
            <remarks>
            The attribute must be mentioned in your member reordering patterns
            </remarks>
        </member>
        <member name="T:WebApplications.Utilities.AssemblySemanticVersionAttribute">
            <summary>
            Attribute that is used to decorate assemblies with a semantic version
            number.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.AssemblySemanticVersionAttribute.SemanticVersion">
            <summary>
            Gets the semantic number.
            </summary>
            <value>
            The semantic number.
            </value>
        </member>
        <member name="M:WebApplications.Utilities.AssemblySemanticVersionAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.AssemblySemanticVersionAttribute"/> class.
            </summary>
            <param name="semanticVersion">
            The semantic version number for the assembly.
            </param>
        </member>
        <member name="T:WebApplications.Utilities.Caching.WeakSingleton`1">
            <summary>
            Holds a <see cref="T:WebApplications.Utilities.Caching.WeakReference`1"/> to an instance of an object, lazily initialising the value if the object has been garbage collected.
            </summary>
            <typeparam name="T">The type of the singleton.</typeparam>
        </member>
        <member name="P:WebApplications.Utilities.Caching.WeakSingleton`1.Instance">
            <summary>
            Gets the instance of the type.
            </summary>
            <value>
            The instance.
            </value>
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakSingleton`1.#ctor(`0,System.Func{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Caching.WeakSingleton`1"/> class.
            </summary>
            <param name="initial">The initial value.</param>
            <param name="factory">The factory function. If null, the default constructor for the type will be used.</param>
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakSingleton`1.op_Implicit(WebApplications.Utilities.Caching.WeakSingleton{`0})~`0">
            <summary>
            Performs an implicit conversion from <see cref="T:WebApplications.Utilities.Caching.WeakSingleton`1"/> to <typeparamref name="T"/>.
            </summary>
            <param name="weak">The weak.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="T:WebApplications.Utilities.Caching.CachingDictionaryBase`2">
            <summary>
              Implements core functionality for caching classes.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionaryBase`2.#ctor">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Caching.CachingDictionaryBase`2"/> class.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Caching.CachingDictionaryBase`2.DefaultAbsoluteExpiration">
            <summary>
              Gets or sets the default absolute expiration.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Caching.CachingDictionaryBase`2.DefaultSlidingExpiration">
            <summary>
              Gets or sets the default sliding expiration.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionaryBase`2.ContainsKey(`0)">
            <summary>
              Checks whether an entry with the specified key currently exists within the cache.
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <returns>
              Returns <see langword="true"/> if the cache contains an entry with the same key value as <paramref name="key"/>;
              otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionaryBase`2.GetOrAdd(`0,`1)">
            <summary>
              Inserts a new entry into the cache using the specified key and value
              (if an entry doesn't already exist otherwise the existing value is returned).
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="value">The object to cache the value of.</param>
            <returns>
              Either the inserted or retrieved value depending on whether there's already an existing entry with the same key.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionaryBase`2.GetOrAdd(`0,`1,System.DateTimeOffset)">
            <summary>
              Inserts a new entry into the cache using the specified key and value along with the absolute expiration
              (if an entry doesn't already exist otherwise the existing value is returned).
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="value">The object to cache the value of.</param>
            <param name="absoluteExpiration">Sets when the cache entry will be expired.</param>
            <returns>
            Either the inserted or retrieved value depending on whether there's already an existing entry with the same key.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionaryBase`2.GetOrAdd(`0,`1,System.TimeSpan)">
            <summary>
              Inserts a new entry into the cache using the specified key and value along with the sliding expiration
              (if an entry doesn't already exist otherwise the existing value is returned).
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="value">The object to cache the value of.</param>
            <param name="slidingExpiration">
              The duration to wait before expiring the cache (if no requests are made for it during that period).
            </param>
            <returns>
              Either the inserted or retrieved value depending on whether there's already an existing entry with the same key.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionaryBase`2.GetOrAdd(`0,System.Func{`0,`1})">
            <summary>
              Inserts a new entry into the cache using the specified key and a factory to create the value
              (if an entry doesn't already exist otherwise the existing value is returned).
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="addValueFactory">Used to create the value we want to cache.</param>
            <returns>
              Either the inserted or retrieved value depending on whether there's already an existing entry with the same key.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionaryBase`2.GetOrAdd(`0,System.Func{`0,`1},System.DateTimeOffset)">
            <summary>
              Inserts a new entry into the cache using the specified key, the factory to create the value and the absolute expiration
              (if an entry doesn't already exist otherwise the existing value is returned).
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="addValueFactory">Used to create the value we want to cache.</param>
            <param name="absoluteExpiration">Sets when the cache entry will be expired.</param>
            <returns>
              Either the inserted or retrieved value depending on whether there's already an existing entry with the same key.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionaryBase`2.GetOrAdd(`0,System.Func{`0,`1},System.TimeSpan)">
            <summary>
              Inserts a new entry into the cache using the specified key, the factory to create the value and the sliding expiration
              (if an entry doesn't already exist otherwise the existing value is returned).
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="addValueFactory">Used to create the value we want to cache.</param>
            <param name="slidingExpiration">
              The duration to wait before expiring the cache (if no requests are made for it during that period).
            </param>
            <returns>
              Either the inserted or retrieved value depending on whether there's already an existing entry with the same key.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionaryBase`2.AddOrUpdate(`0,`1)">
            <summary>
              Inserts a new entry into the cache using the specified key and value
              (if an entry doesn't already exist otherwise the existing value is updated).
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="value">The object to either insert or update the existing value with.</param>
            <returns>
              Either the inserted or updated value depending on whether there's already an existing entry with the same key.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionaryBase`2.AddOrUpdate(`0,`1,System.DateTimeOffset)">
            <summary>
              Inserts a new entry into the cache using the specified key, value and absolute expiration
              (if an entry doesn't already exist otherwise the existing value is updated).
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="value">The object to either insert or update the existing value with.</param>
            <param name="absoluteExpiration">Sets when the cache entry will be expired.</param>
            <returns>
              Either the inserted or updated value depending on whether there's already an existing entry with the same key.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionaryBase`2.AddOrUpdate(`0,`1,System.TimeSpan)">
            <summary>
              Inserts a new entry into the cache using the specified key, value and sliding expiration
              (if an entry doesn't already exist otherwise the existing value is updated).
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="value">The object to either insert or update the existing value with.</param>
            <param name="slidingExpiration">
              The duration to wait before expiring the cache (if no requests are made for it during that period).
            </param>
            <returns>
              Either the inserted or updated value depending on whether there's already an existing entry with the same key.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionaryBase`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})">
            <summary>
              Inserts a new entry into the cache using the specified key and the add/update factories
              (if an entry doesn't already exist otherwise the existing value is updated).
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="addValueFactory">Used to create the value that we want to cache.</param>
            <param name="updateValueFactory">Used to update the value if it's already cached.</param>
            <returns>
              Either the inserted or updated value depending on whether there's already an existing entry with the same key.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionaryBase`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1},System.DateTimeOffset)">
            <summary>
              Inserts a new entry into the cache using the key, the add/update factories and the absolute expiration values specified
              (if an entry doesn't already exist otherwise the existing value is updated).
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="addValueFactory">Used to create the value that we want to cache.</param>
            <param name="updateValueFactory">Used to update the value if it's already cached.</param>
            <param name="absoluteExpiration">Sets when the cache entry will be expired.</param>
            <returns>
              Either the inserted or updated value depending on whether or not there's already an existing entry with the same key.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionaryBase`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1},System.TimeSpan)">
            <summary>
              Inserts a new entry into the cache using the key, the add/update factories and the sliding expiration values specified
              (if an entry doesn't already exist otherwise the existing value is updated).
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="addValueFactory">Used to calculate the value we want to cache.</param>
            <param name="updateValueFactory">Used to update the value if it's already cached.</param>
            <param name="slidingExpiration">
              The duration to wait before expiring the cache (if no requests are made for it during that period).
            </param>
            <returns>
              Either the inserted or updated value depending on whether or not there's already an existing entry in the cache
              with the same key as <paramref name="key"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionaryBase`2.TryGetValue(`0,`1@)">
            <summary>
              Tries to retrieve the value using the specified key.
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="value">The value retrieved.</param>
            <returns>
              Returns <see langword="true"/> if the corresponding <paramref name="key"/> exists and the value was successfully retrieved;
              otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionaryBase`2.TryRemove(`0,`1@)">
            <summary>
              Tries to remove an entry using the specified key.
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="value">The value removed.</param>
            <returns>
              Returns <see langword="true"/> if the corresponding <paramref name="key"/> exists and the value was successfully removed;
              otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionaryBase`2.TryAdd(`0,`1)">
            <summary>
              Tries to insert an entry into the cache using the specified key and value.
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="value">The object to cache.</param>
            <returns>
              Returns <see langword="true"/> if the entry was inserted successfully; otherwise returns <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionaryBase`2.TryAdd(`0,`1,System.DateTimeOffset)">
            <summary>
              Tries to insert an entry into the cache using the specified key, value and absolute expiration.
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="value">The object to cache.</param>
            <param name="absoluteExpiration">Sets when the cache entry will be expired.</param>
            <returns>
              Returns <see langword="true"/> if the entry was inserted successfully; otherwise returns <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionaryBase`2.TryAdd(`0,`1,System.TimeSpan)">
            <summary>
              Tries to insert an entry into the cache using the specified key, value and sliding expiration.
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="value">The object to cache.</param>
            <param name="slidingExpiration">
              The duration to wait before expiring the cache (if no requests are made for it during that period).
            </param>
            <returns>
            Returns <see langword="true"/> if the entry was inserted successfully; otherwise returns <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionaryBase`2.Clear">
            <summary>
              Clears the cache.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionaryBase`2.GetOrAdd(`0,`1,System.DateTimeOffset,System.TimeSpan)">
            <summary>
              Inserts a new entry into the cache using the specified key, the value, the absolute expiration and the sliding expiration
              (if an entry doesn't already exist otherwise the existing value is returned).
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="value">The value.</param>
            <param name="absoluteExpiration">Sets when the cache entry will be expired.</param>
            <param name="slidingExpiration">
              The duration to wait before expiring the cache (if no requests are made for it during that period).
            </param>
            <returns>
              Either the inserted or retrieved value depending on whether there's already an existing entry with the same key.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionaryBase`2.GetOrAdd(`0,System.Func{`0,`1},System.DateTimeOffset,System.TimeSpan)">
            <summary>
              Inserts a new entry into the cache using the specified key, the factory to create the value, the absolute expiration
              and the sliding expiration (if an entry doesn't already exist otherwise the existing value is returned).
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="addValueFactory">Used to create the value we want to cache.</param>
            <param name="absoluteExpiration">Sets when the cache entry will be expired.</param>
            <param name="slidingExpiration">
              The duration to wait before expiring the cache (if no requests are made for it during that period).
            </param>
            <returns>
              Either the inserted or retrieved value depending on whether there's already an existing entry with the same key.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionaryBase`2.AddOrUpdate(`0,`1,System.DateTimeOffset,System.TimeSpan)">
            <summary>
              Inserts a new entry into the cache using the specified key, value, absolute expiration and sliding expiration
              (if an entry doesn't already exist otherwise the existing value is updated).
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="value">The object to either insert or update the existing value with.</param>
            <param name="absoluteExpiration">Sets when the cache entry will be expired.</param>
            <param name="slidingExpiration">
              The duration to wait before expiring the cache (if no requests are made for it during that period).
            </param>
            <returns>
              Either the inserted or updated value depending on whether there's already an existing entry with the same key.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionaryBase`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1},System.DateTimeOffset,System.TimeSpan)">
            <summary>
              Inserts a new entry into the cache using the specified key and the add/update factories
              (if an entry doesn't already exist otherwise the existing value is updated).
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="addValueFactory">Used to create the value that we want to cache.</param>
            <param name="updateValueFactory">Used to update the value if it's already cached.</param>
            <param name="absoluteExpiration">Sets when the cache entry will be expired.</param>
            <param name="slidingExpiration">
              The duration to wait before expiring the cache (if no requests are made for it during that period).
            </param>
            <returns>
              Either the inserted or updated value depending on whether there's already an existing entry with the same key.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionaryBase`2.TryAdd(`0,`1,System.DateTimeOffset,System.TimeSpan)">
            <summary>
              Tries to insert an entry into the cache using the specified key, value, absolute expiration and sliding expiration.
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="value">The object to cache.</param>
            <param name="absoluteExpiration">Sets when the cache entry will be expired.</param>
            <param name="slidingExpiration">
              The duration to wait before expiring the cache (if no requests are made for it during that period).
            </param>
            <returns>
              Returns <see langword="true"/> if the entry was inserted successfully; otherwise returns <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionaryBase`2.AbsoluteExpiration">
            <summary>
              Calculate the default absolute expiration.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Caching.CachingQueue`1">
            <summary>
              Implements a thread safe FIFO queue of objects that will only remain present for a specific duration.
            </summary>
            <typeparam name="T">The type of the queued objects.</typeparam>
        </member>
        <member name="F:WebApplications.Utilities.Caching.CachingQueue`1.CacheExpiry">
            <summary>
              The time that an element remains in the queue.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Caching.CachingQueue`1.CleanAfter">
            <summary>
              If the queue isn't used for this period of time then expired items are cleaned out automatically.
              Normally a queue is only cleaned as it's used.
              <see cref="F:System.TimeSpan.Zero"/> indicates the queue is never cleaned out automatically.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Caching.CachingQueue`1.MaximumEntries">
            <summary>
              The maximum length of the queue.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Caching.CachingQueue`1._cleanLock">
            <summary>
              A lock <see cref="T:System.Object"/> to ensure that clean is not re-entrant.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Caching.CachingQueue`1._cleanTimer">
            <summary>
              The <see cref="T:System.Threading.Timer"/> used for cleaning the queue automatically
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Caching.CachingQueue`1._queue">
            <summary>
              Holds the underlying queue.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingQueue`1.#ctor(System.TimeSpan,System.Int32,System.TimeSpan)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Caching.CachingQueue`1"/> class.
            </summary>
            <param name="cacheExpiry">The cache expiry.</param>
            <param name="maximumEntries">The maximum entries.</param>
            <param name="cleanAfter">
              <para>If the queue is unused after this period of time then it is cleaned automatically.</para>
              <para>A negative value or <see cref="F:System.TimeSpan.Zero"/> means the queue is only cleaned on use and not automatically.</para>
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
              <para><paramref name="cacheExpiry"/> must be more than 1 second.</para>
              <para>-or-</para>
              <paramref name="maximumEntries"/> must be at least 1.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingQueue`1.GetEnumerator">
            <summary>
              Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
              A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingQueue`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
              Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
              A <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingQueue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
              Copies the elements of the <see cref="T:System.Collections.ICollection"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">
              The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection"/>.
              The <see cref="T:System.Array"/> must have zero-based indexing. </param><param name="index">The zero-based index in <paramref name="array"/> at which copying begins.
            </param>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException">
              <paramref name="array"/> is multidimensional.-or- The number of elements in the source <see cref="T:System.Collections.ICollection"/> is greater than the available
              space from <paramref name="index"/> to the end of the destination <paramref name="array"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
              The type of the source <see cref="T:System.Collections.ICollection"/> cannot be cast automatically to the type of the destination <paramref name="array"/>.
            </exception>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:WebApplications.Utilities.Caching.CachingQueue`1.System#Collections#ICollection#Count">
            <summary>
              Gets the number of elements contained in the <see cref="T:System.Collections.ICollection"/>.
            </summary>
            <returns>
              The number of elements contained in the <see cref="T:System.Collections.ICollection"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:WebApplications.Utilities.Caching.CachingQueue`1.System#Collections#ICollection#SyncRoot">
            <summary>
              Gets an <see cref="T:System.Object"/> that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"/>.
            </summary>
            <returns>
              An <see cref="T:System.Object"/> that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:WebApplications.Utilities.Caching.CachingQueue`1.System#Collections#ICollection#IsSynchronized">
            <summary>
              Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection"/> is synchronized (thread safe).
            </summary>
            <returns>
              Returns <see langword="true"/> if access to the <see cref="T:System.Collections.ICollection"/> is synchronized (thread safe);
              otherwise returns <see langword="false"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingQueue`1.System#Collections#Concurrent#IProducerConsumerCollection{T}#CopyTo(`0[],System.Int32)">
            <summary>
              Copies the elements of the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1">IProducerConsumerCollection</see>
              to an <see cref="T:System.Array"/>, starting at a specified index.
            </summary>
            <param name="array">
              <para>The one-dimensional array that is the destination of the elements copied from the
              <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1">IProducerConsumerCollection</see>.</para>
              <para>The array must have zero-based indexing.</para>
            </param>
            <param name="index">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is <see langword="null">null</see>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException">
              <para><paramref name="index"/> is greater than or equal to the length of the <paramref name="array"/>.</para>
              <para>-or-</para>
              <para>The number of elements in the source <see cref="T:System.Collections.Concurrent.ConcurrentQueue`1">ConcurrentQueue</see> is greater
              than the available space from <paramref name="index"/> to the end of the destination <paramref name="array"/>.</para>
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingQueue`1.System#Collections#Concurrent#IProducerConsumerCollection{T}#TryAdd(`0)">
            <summary>
              Attempts to add an <see cref="T:System.Object"/> to the
              <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1">IProducerConsumerCollection</see>.
            </summary>
            <param name="item">
              The object to add to the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1">IProducerConsumerCollection</see>.
            </param>
            <returns>
              Returns <see langword="true"/> if an <see cref="T:System.Object"/> was removed and returned successfully; otherwise returns <see langword="false"/>.
            </returns>
            <exception cref="T:System.ArgumentException">The <paramref name="item"/> was invalid for this collection.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingQueue`1.System#Collections#Concurrent#IProducerConsumerCollection{T}#TryTake(`0@)">
            <summary>
              Attempts to remove and return an <see cref="T:System.Object"/> from the
              <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1">IProducerConsumerCollection</see>.
            </summary>
            <param name="item">
              When this method returns, if the object was removed and returned successfully, <paramref name="item"/> contains the removed object.
              If no object was available to be removed, the value is unspecified.
            </param>
            <returns>
              Returns <see langword="true"/> if an <see cref="T:System.Object"/> was removed and returned successfully; otherwise returns <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingQueue`1.System#Collections#Concurrent#IProducerConsumerCollection{T}#ToArray">
            <summary>
              Copies the elements contained in the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1">IProducerConsumerCollection</see>.
              to a new <see cref="T:System.Array"/>.
            </summary>
            <returns>
              A new <see cref="T:System.Array"/> containing the elements copied from the
              <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1">IProducerConsumerCollection</see>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingQueue`1.Enqueue(`0)">
            <summary>
              Enqueues the specified item.
            </summary>
            <param name="item">The item to add to the queue.</param>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingQueue`1.TryDequeue(`0@)">
            <summary>
              Tries to dequeue the item at the beginning of the <see cref="T:WebApplications.Utilities.Caching.CachingQueue`1"/>.
            </summary>
            <param name="result">
              <para>The result.</para>
              <para>If no object is available to be removed then the default value of <typeparamref name="T"/> is returned.</para>
            </param>
            <returns>
              Returns <see langword="true"/> if an item was removed from the beginning of the queue successfully;
              otherwise returns <see langword="false"/>.
            </returns>
            <remarks>Will also dequeue any expired items at the front of the queue until a non-expired item is found.</remarks>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingQueue`1.TryPeek(`0@)">
            <summary>
              Tries to return the first non-expired item in the <see cref="T:WebApplications.Utilities.Caching.CachingQueue`1"/> without removing it.
              If expired items are found to be first in the queue then they are dequeued.
            </summary>
            <param name="result">
              <para>The result.</para>
              <para>If no object is available then the default value of <typeparamref name="T"/> is returned.</para>
            </param>
            <returns>
              Returns <see langword="true"/> if an object was successfully returned; otherwise returns <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingQueue`1.Clean">
            <summary>
              Cleans expired entries out of the queue.
            </summary>
            <remarks>
              This is called automatically if <see cref="F:WebApplications.Utilities.Caching.CachingQueue`1.CleanAfter"/> is greater than <see cref="F:System.TimeSpan.Zero"/>.
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingQueue`1.ToString">
            <summary>
              Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
              A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:WebApplications.Utilities.Caching.CachingQueue`1.Wrapper">
            <summary>
              A wrapper for a queued element, holds information about creation <see cref="T:System.DateTime"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Caching.CachingQueue`1.Wrapper.Value">
            <summary>
              The value of the wrapped element.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Caching.CachingQueue`1.Wrapper._expires">
            <summary>
              The expiry date time.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingQueue`1.Wrapper.#ctor(`0,System.DateTime)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Caching.CachingQueue`1.Wrapper"/> struct.
            </summary>
            <param name="value">The value of the wrapped element.</param>
            <param name="expires">The expiry date time.</param>
        </member>
        <member name="P:WebApplications.Utilities.Caching.CachingQueue`1.Wrapper.IsExpired">
            <summary>
              Returns a <see cref="T:System.Boolean"/> value indicating whether this instance is expired.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingQueue`1.Wrapper.ToString">
            <summary>
              Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
              A <see cref="T:System.String"/> representation of this instance.
            </returns>
        </member>
        <member name="T:WebApplications.Utilities.Caching.ConcurrentLookup`2">
            <summary>
              Implements a concurrent lookup, which allows a set of objects to be grouped and manipulated by a key.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
        </member>
        <member name="F:WebApplications.Utilities.Caching.ConcurrentLookup`2._dictionary">
            <summary>
              A concurrent dictionary that holds the underlying data.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Caching.ConcurrentLookup`2._valueComparer">
            <summary>
              The value comparer, used to check for equality.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Caching.ConcurrentLookup`2.#ctor(System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0},System.Collections.Generic.IEqualityComparer{`1})">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Caching.ConcurrentLookup`2"/> class.
            </summary>
            <param name="concurrencyLevel">
              <para>The concurrency level.</para>
              <para>This is the estimated number of threads that will update the lookup concurrently.</para>
              <para>By default this is 4 * the processor count.</para>
            </param>
            <param name="capacity">
              <para>The initial number of elements that the lookup can contain.</para>
              <para>By default this is 32.</para>
            </param>
            <param name="comparer">The comparer to use when comparing keys.</param>
            <param name="valueComparer">The value comparer, used to check for equality.</param>
        </member>
        <member name="M:WebApplications.Utilities.Caching.ConcurrentLookup`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0},System.Collections.Generic.IEqualityComparer{`1})">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Caching.ConcurrentLookup`2"/> class.
            </summary>
            <param name="collection">The collection to copy into the lookup.</param>
            <param name="concurrencyLevel">
              <para>The concurrency level.</para>
              <para>This is the estimated number of threads that will update the lookup concurrently.</para>
              <para>By default this is 4 * the processor count.</para>
            </param>
            <param name="capacity">
              <para>The initial number of elements that the lookup can contain.</para>
              <para>By default this is 32.</para>
            </param>
            <param name="comparer">The comparer to use when comparing keys.</param>
            <param name="valueComparer">The value comparer, used to check for equality.</param>
        </member>
        <member name="M:WebApplications.Utilities.Caching.ConcurrentLookup`2.GetEnumerator">
            <summary>
              Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
              A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:WebApplications.Utilities.Caching.ConcurrentLookup`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
              Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
              A <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:WebApplications.Utilities.Caching.ConcurrentLookup`2.Contains(`0)">
            <summary>
              Determines whether a specified key exists in the lookup.
            </summary>
            <param name="key">The key to search for in the lookup.</param>
            <returns>
              Returns <see langword="true"/> if the specified <paramref name="key"/> is in the lookup; otherwise returns <see langword="false"/>.
            </returns>
        </member>
        <member name="P:WebApplications.Utilities.Caching.ConcurrentLookup`2.Count">
            <summary>
            Gets the number of key/value collection pairs in the lookup.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Caching.ConcurrentLookup`2.Item(`0)">
            <summary>
              Retrieves the sequence of values indexed by a specified key.
            </summary>
            <param name="key">The key of the desired sequence of values.</param>
            <value>
              An <see cref="T:System.Collections.Generic.IEnumerable`1">IEnumerable</see> containing the sequence of values indexed by
              the specified<paramref name="key"/>.
            </value>
        </member>
        <member name="M:WebApplications.Utilities.Caching.ConcurrentLookup`2.TryGet(`0,System.Linq.IGrouping{`0,`1}@)">
            <summary>
              Tries to retrieve the group of values at the specified key.
            </summary>
            <param name="key">The key of the values to get.</param>
            <param name="value">The group of values to retrieve.</param>
            <returns>
              Returns <see langword="true"/> if the value is retrieved; otherwise returns <see langword="false"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="key"/> is a <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Caching.ConcurrentLookup`2.Add(`0,`1)">
            <summary>
              Adds the specified kvp to the lookup. If the key already exists then the value is updated instead.
            </summary>
            <param name="key">The key to add.</param>
            <param name="value">The corresponding values to add.</param>
            <returns>The new/updated values at the specified <paramref name="key"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="key"/> is a <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Caching.ConcurrentLookup`2.Remove(`0)">
            <summary>
              Removes the entire group of values at the specified key.
            </summary>
            <param name="key">The key of the group to remove.</param>
            <returns>
              Returns <see langword="true"/> if the group was removed successfully; otherwise returns <see langword="false"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="key"/> is a <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Caching.ConcurrentLookup`2.Remove(`0,`1)">
            <summary>
              Removes the specified value from the group.
            </summary>
            <param name="key">The key of the group to remove the value from.</param>
            <param name="value">The value to remove.</param>
            <returns>
              Returns <see langword="true"/> if the <paramref name="value"/> was removed; otherwise returns <see langword="false"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="key"/> is a <see langword="null"/>.
            </exception>
        </member>
        <member name="T:WebApplications.Utilities.Caching.ConcurrentLookup`2.Grouping">
            <summary>
              A collection of objects that share a common key.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Caching.ConcurrentLookup`2.Grouping._dictionary">
            <summary>
              The references.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Caching.ConcurrentLookup`2.Grouping._parent">
            <summary>
              The parent, which is the lookup that the group is contained in.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Caching.ConcurrentLookup`2.Grouping.#ctor(WebApplications.Utilities.Caching.ConcurrentLookup{`0,`1},`0)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Caching.ConcurrentLookup`2.Grouping"/> class.
            </summary>
            <param name="parent">The lookup that the group is contained in.</param>
            <param name="key">The key.</param>
        </member>
        <member name="M:WebApplications.Utilities.Caching.ConcurrentLookup`2.Grouping.#ctor(WebApplications.Utilities.Caching.ConcurrentLookup{`0,`1},`0,`1)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Caching.ConcurrentLookup`2.Grouping"/> class.
            </summary>
            <param name="parent">The lookup that the group is contained in.</param>
            <param name="key">The key.</param>
            <param name="value">The values that correspond to <paramref name="key"/>.</param>
        </member>
        <member name="M:WebApplications.Utilities.Caching.ConcurrentLookup`2.Grouping.GetEnumerator">
            <summary>
              Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
              A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:WebApplications.Utilities.Caching.ConcurrentLookup`2.Grouping.System#Collections#IEnumerable#GetEnumerator">
            <summary>
              Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
              A <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:WebApplications.Utilities.Caching.ConcurrentLookup`2.Grouping.Key">
            <summary>
              Gets the key that corresponds to this group.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Caching.ConcurrentLookup`2.Grouping.Add(`1)">
            <summary>
              Adds the specified value to the group.
            </summary>
            <param name="value">The value to add.</param>
            <returns>The new <paramref name="value"/> added to the group.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.ConcurrentLookup`2.Grouping.Remove(`1)">
            <summary>
              Removes the specified value from the group.
            </summary>
            <param name="value">The value to remove.</param>
            <returns>
              Returns <see langword="true"/> if the value was successfully removed; otherwise returns <see langword="false"/>.
            </returns>
        </member>
        <member name="T:WebApplications.Utilities.Caching.DictionaryEnumerator`2">
            <summary>
              A dictionary enumerator wraps the normal enumerator.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Caching.DictionaryEnumerator`2._enumerator">
            <summary>
              The actual enumerator.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Caching.DictionaryEnumerator`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Caching.DictionaryEnumerator`2"/> class.
            </summary>
            <param name="dictionary">The dictionary.</param>
        </member>
        <member name="P:WebApplications.Utilities.Caching.DictionaryEnumerator`2.Entry">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Caching.DictionaryEnumerator`2.Key">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Caching.DictionaryEnumerator`2.Value">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Caching.DictionaryEnumerator`2.Current">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Caching.DictionaryEnumerator`2.MoveNext">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Caching.DictionaryEnumerator`2.Reset">
            <inheritdoc />
        </member>
        <member name="T:WebApplications.Utilities.Caching.IObservableFinalize">
            <summary>
              Exposes the <see cref="E:WebApplications.Utilities.Caching.IObservableFinalize.Finalized"/> event.
            </summary>
        </member>
        <member name="E:WebApplications.Utilities.Caching.IObservableFinalize.Finalized">
            <summary>
              Event raised when the object is finalized (i.e. when its destructor is called).
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1">
            <summary>
            Represents a thread-safe first in-first out (FIFO) collection.  As the size exceeds <see cref="F:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1.Capacity"/> the queue automatically throws away head items.
            </summary>
            <typeparam name="T">The type of the elements contained in the queue.</typeparam>
        </member>
        <member name="F:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1.MaxCapacity">
            <summary>
            The maximum capacity which can be created.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1.Capacity">
            <summary>
            The maximum capacity of the queue.  As items are queued beyond the capacity, items are dequeued automatically.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1._chunkSize">
            <summary>
            This holds the Chunk size for each array chunk.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1._chunkSizeLog2">
            <summary>
            This holds the Chunk size for each array chunk, log 2.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1._chunks">
            <summary>
            Underlying array of chunks.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1._head">
            <summary>
            Points at the start of the elements that are being written to.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1._tail">
            <summary>
            Point at the next element to read from the queue.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1"/> class.
            </summary>
            <param name="capacity">The capacity.</param>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1"/> class that contains elements copied from the specified collection
            </summary>
            <param name="collection">The collection.</param>
            <param name="capacity">The capacity.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="collection"/> argument is null.</exception>
            <remarks></remarks>
        </member>
        <member name="P:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1.IsEmpty">
            <summary>
            Gets a value that indicates whether the <see cref="T:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1"/> is empty.
            </summary>
            
            <returns>
            true if the <see cref="T:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1"/> is empty; otherwise, false.
            </returns>
        </member>
        <member name="P:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.ICollection"/>.
            </summary>
            <returns>The number of elements contained in the <see cref="T:System.Collections.ICollection"/>.</returns>
            <remarks></remarks>
        </member>
        <member name="P:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1.System#Collections#ICollection#IsSynchronized">
            <inheritdoc/>
        </member>
        <member name="P:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1.System#Collections#ICollection#SyncRoot">
            <inheritdoc/>
        </member>
        <member name="P:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1.System#Collections#ICollection#Count">
            <inheritdoc/>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1.System#Collections#Concurrent#IProducerConsumerCollection{T}#TryAdd(`0)">
            <inheritdoc/>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1.System#Collections#Concurrent#IProducerConsumerCollection{T}#TryTake(`0@)">
            <inheritdoc/>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1.ToArray">
            <inheritdoc/>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1.CopyTo(`0[],System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1.Enqueue(`0)">
            <summary>
            Adds an object to the end of the <see cref="T:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1"/>.
            </summary>
            <param name="item">The object to add to the end of the <see cref="T:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1"/>. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1.TryDequeue(`0@)">
            <summary>
            Attempts to remove and return the object at the beginning of the <see cref="T:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1"/>.
            </summary>
            
            <returns>
            true if an element was removed and returned from the beggining of the <see cref="T:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1"/> succesfully; otherwise, false.
            </returns>
            <param name="result">When this method returns, if the operation was successful, <paramref name="result"/> contains the object removed. If no object was available to be removed, the value is unspecified.</param>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1.TryPeek(`0@)">
            <summary>
            Attempts to return an object from the beginning of the <see cref="T:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1"/> without removing it.
            </summary>
            
            <returns>
            true if and object was returned successfully; otherwise, false.
            </returns>
            <param name="result">When this method returns, <paramref name="result"/> contains an object from the beginning of the <see cref="T:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1"/> or an unspecified value if the operation failed.</param>
        </member>
        <member name="T:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1.Chunk">
            <summary>
            Holds a chunk.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1.Chunk.Array">
            <summary>
            The array.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1.Chunk.Size">
            <summary>
            The chunk size.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1.Chunk.SpinLock">
            <summary> 
            The spin lock for this chunk.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1.Chunk.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Caching.CyclicConcurrentQueue`1.Chunk"/> class.
            </summary>
            <param name="size">The size.</param>
            <remarks></remarks>
        </member>
        <member name="T:WebApplications.Utilities.Caching.WeakConcurrentLookup`2">
            <summary>
              A concurrent lookup, which allows a set of weak referenced objects to be grouped and manipulated by a key. 
              If TValue implements <see cref="T:WebApplications.Utilities.Caching.IObservableFinalize"/> then items are
              removed automatically, otherwise they are only removed when attempting to access (e.g. through iterating
              through the collection, or 'counting', etc.)
            </summary>
            <typeparam name="TKey">The of the key.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
        </member>
        <member name="F:WebApplications.Utilities.Caching.WeakConcurrentLookup`2._allowResurrection">
            <summary>
              A <see cref="T:System.Boolean"/> to indicate whether the lookup supports resurrection.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Caching.WeakConcurrentLookup`2._dictionary">
            <summary>
              The underlying weak references.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Caching.WeakConcurrentLookup`2._observable">
            <summary>
              A <see cref="T:System.Boolean"/> to indicate whether we are observing finalize.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Caching.WeakConcurrentLookup`2._valueComparer">
            <summary>
              The value comparer, used to check for equality.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentLookup`2.#ctor(System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0},System.Collections.Generic.IEqualityComparer{`1},WebApplications.Utilities.Enumerations.TriState)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Caching.WeakConcurrentLookup`2"/> class.
            </summary>
            <param name="concurrencyLevel">The estimated number of threads that will update the lookup concurrently.</param>
            <param name="capacity">The initial number of elements that the lookup can contain.</param>
            <param name="comparer">The comparer to use when comparing keys.</param>
            <param name="valueComparer">The value comparer, used to check for equality.</param>
            <param name="allowResurrection">
              If set to <see langword="true"/> then allow resurrections.
              If unset will allow resurrection if the type does not support dispose.
            </param>
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentLookup`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0},System.Collections.Generic.IEqualityComparer{`1},WebApplications.Utilities.Enumerations.TriState)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Caching.WeakConcurrentLookup`2"/> class.
            </summary>
            <param name="collection">The collection to copy into the lookup.</param>
            <param name="concurrencyLevel">The estimated number of threads that will update the lookup concurrently.</param>
            <param name="capacity">The initial number of elements that the lookup can contain.</param>
            <param name="comparer">The comparer to use when comparing keys.</param>
            <param name="valueComparer">The value comparer, used to check for equality.</param>
            <param name="allowResurrection">
              If set to <see langword="true"/> then allow resurrections.
              If unset will allow resurrection if the type does not support dispose.
            </param>
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentLookup`2.GetEnumerator">
            <summary>
              Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
              A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentLookup`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
              Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
              A <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentLookup`2.Contains(`0)">
            <summary>
              Determines whether a specified key exists in the lookup.
            </summary>
            <param name="key">The key to search for in the lookup.</param>
            <returns>
              Returns <see langword="true"/> if the specified <paramref name="key"/> is in the lookup;
              otherwise returns <see langword="false"/>.
            </returns>
        </member>
        <member name="P:WebApplications.Utilities.Caching.WeakConcurrentLookup`2.Count">
            <summary>
              Gets the number of key/value collection pairs in the lookup.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Caching.WeakConcurrentLookup`2.Item(`0)">
            <summary>
              Retrieves the sequence of values indexed by a specified key.
            </summary>
            <param name="key">The key of the desired sequence of values.</param>
            <value>
              An <see cref="T:System.Collections.Generic.IEnumerable`1">IEnumerable</see>
              containing the sequence of values indexed by the specified<paramref name="key"/>.
            </value>
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentLookup`2.TryGet(`0,System.Linq.IGrouping{`0,`1}@)">
            <summary>
              Tries to retrieve the group of values at the specified key.
            </summary>
            <param name="key">The key of the values to get.</param>
            <param name="value">The group of values to retrieve.</param>
            <returns>
              Returns <see langword="true"/> if the value is retrieved; otherwise returns <see langword="false"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="key"/> is <see langword="null">null</see>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentLookup`2.Add(`0,`1)">
            <summary>
              Adds the specified kvp to the lookup.
              If the key already exists then the value is updated instead.
            </summary>
            <param name="key">The key to add.</param>
            <param name="value">The corresponding values to add.</param>
            <returns>The new/updated values at the specified <paramref name="key"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="key"/> is a <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentLookup`2.Remove(`0)">
            <summary>
              Removes the entire group of values at the specified key.
            </summary>
            <param name="key">The key of the group to remove.</param>
            <returns>
              Returns <see langword="true"/> if the group was removed successfully; otherwise returns <see langword="false"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="key"/> is a <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentLookup`2.Remove(`0,`1)">
            <summary>
              Removes the specified value from the group.
            </summary>
            <param name="key">The key of the group to remove the value from.</param>
            <param name="value">The value to remove.</param>
            <returns>
              Returns <see langword="true"/> if the <paramref name="value"/> was removed; otherwise returns <see langword="false"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="key"/> is a <see langword="null"/>.
            </exception>
        </member>
        <member name="T:WebApplications.Utilities.Caching.WeakConcurrentLookup`2.WeakGrouping">
            <summary>
              A collection of weakly referenced objects that share a common key.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Caching.WeakConcurrentLookup`2.WeakGrouping._dictionary">
            <summary>
              The weak references.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Caching.WeakConcurrentLookup`2.WeakGrouping._parent">
            <summary>
              The parent, which is the lookup that the group is contained in.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentLookup`2.WeakGrouping.#ctor(WebApplications.Utilities.Caching.WeakConcurrentLookup{`0,`1},`0)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Caching.WeakConcurrentLookup`2.WeakGrouping"/> class.
            </summary>
            <param name="parent">The lookup that the group is contained in.</param>
            <param name="key">The key.</param>
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentLookup`2.WeakGrouping.#ctor(WebApplications.Utilities.Caching.WeakConcurrentLookup{`0,`1},`0,`1)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Caching.WeakConcurrentLookup`2.WeakGrouping"/> class.
            </summary>
            <param name="parent">The lookup that the group is contained in.</param>
            <param name="key">The key.</param>
            <param name="value">The values that correspond to <paramref name="key"/>.</param>
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentLookup`2.WeakGrouping.GetEnumerator">
            <summary>
              Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
              A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentLookup`2.WeakGrouping.System#Collections#IEnumerable#GetEnumerator">
            <summary>
              Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
              A <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:WebApplications.Utilities.Caching.WeakConcurrentLookup`2.WeakGrouping.Key">
            <summary>
            Gets the key that corresponds to this group.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentLookup`2.WeakGrouping.Add(`1)">
            <summary>
              Adds the specified value to the group.
            </summary>
            <param name="value">The value to add.</param>
            <returns>The new <paramref name="value"/> added to the group.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentLookup`2.WeakGrouping.Remove(`1)">
            <summary>
              Removes the specified value from the group.
            </summary>
            <param name="value">The value to remove.</param>
            <returns>
              Returns <see langword="true"/> if the value was successfully removed; otherwise returns <see langword="false"/>.
            </returns>
        </member>
        <member name="T:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2">
            <summary>
              Synchronized dictionary keeping only weak references to the items (but not to their keys) it contains.
              If TValue implements <see cref="T:WebApplications.Utilities.Caching.IObservableFinalize"/> then items are
              removed automatically, otherwise they are only removed when attempting to access (e.g. through iterating
              through the collection, or 'counting', etc.)
            </summary>
            <typeparam name="TKey">The type of the keys.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
        </member>
        <member name="F:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2._allowResurrection">
            <summary>
              A <see cref="T:System.Boolean"/> indicating whether the dictionary supports resurrection.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2._dictionary">
            <summary>
              The underlying weak references.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2._observable">
            <summary>
              A <see cref="T:System.Boolean"/> to indicate whether we are observing finalize.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.#ctor(System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0},WebApplications.Utilities.Enumerations.TriState)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2"/> class.
            </summary>
            <param name="concurrencyLevel">The estimated number of threads that will update the lookup concurrently.</param>
            <param name="capacity">The initial number of elements that the lookup can contain.</param>
            <param name="comparer">The comparer to use when comparing keys.</param>
            <param name="allowResurrection">
              If set to <see langword="true"/> then allow resurrections.
              If unset will allow resurrection if the type does not support dispose.
            </param>
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0},WebApplications.Utilities.Enumerations.TriState)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2"/> class.
            </summary>
            <param name="collection">The collection to copy into the dictionary.</param>
            <param name="concurrencyLevel">The estimated number of threads that will update the lookup concurrently.</param>
            <param name="capacity">The initial number of elements that the lookup can contain.</param>
            <param name="comparer">The comparer to use when comparing keys.</param>
            <param name="allowResurrection">
              If set to <see langword="true"/> then allow resurrections.
              If unset will allow resurrection if the type does not support dispose.</param>
        </member>
        <member name="P:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.IsEmpty">
            <summary>
              Gets a <see cref="T:System.Boolean"/> value indicating whether this instance is empty.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.System#Collections#IDictionary#Contains(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.System#Collections#IDictionary#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.System#Collections#IDictionary#Remove(System.Object)">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.System#Collections#IDictionary#Item(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.System#Collections#IDictionary#IsFixedSize">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.System#Collections#IDictionary#IsReadOnly">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.System#Collections#IDictionary#Keys">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.System#Collections#IDictionary#Values">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.System#Collections#ICollection#IsSynchronized">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.System#Collections#ICollection#SyncRoot">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.ContainsKey(`0)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.TryGetValue(`0,`1@)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.Clear">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.Item(`0)">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.Count">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.Keys">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.Values">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.Add(`0,`1)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Remove(`0)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.RegisterFinalize(`0,WebApplications.Utilities.Caching.WeakReference{`1})">
            <summary>
              Register the finalize event where appropriate.
            </summary>
            <param name="key">The key.</param>
            <param name="weakReference">The weak reference.</param>
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.UnregisterFinalize(WebApplications.Utilities.Caching.WeakReference{`1})">
            <summary>
              Unregisters the finalize event where appropriate.
            </summary>
            <param name="weakReference">The weak reference.</param>.
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.Wrap(`0,`1,System.Boolean)">
            <summary>
              Wraps the specified value in a weak reference.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="register">If set to <see langword="true"/> registers the finalize event immediately.</param>
            <returns>The wrapped value.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.TryAdd(`0,`1)">
            <summary>
            Tries to add an entry of the specified key and value.
            </summary>
            <param name="key">The key of the element to add.</param>
            <param name="value">The value of the element to add.</param>
            <returns>
              Returns <see langword="true"/> if the kvp was added successfully; otherwise returns <see langword="false"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="key"/> is a <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.TryRemove(`0,`1@)">
            <summary>
              Tries to remove the entry at the specified key.
            </summary>
            <param name="key">The key of the entry to remove.</param>
            <param name="value">The value of the removed object.</param>
            <returns>
              Returns <see langword="true"/> if the entry was removed successfully; otherwise returns <see langword="false"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="key"/> is a <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.TryUpdate(`0,`1,`1)">
            <summary>
              Tries to update the entry.
            </summary>
            <param name="key">The key of the entry to update.</param>
            <param name="newValue">The new value.</param>
            <param name="comparisonValue">The comparison value.</param>
            <returns>
              Returns <see langword="true"/> if the value was updated; otherwise returns <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.ToArray">
            <summary>
              Copies the dictionary entries to an <see cref="T:System.Array"/>.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
            <summary>
              Gets or adds the entry using the key and the function specified.
            </summary>
            <param name="key">The key of the entry to get/add.</param>
            <param name="valueFactory">Used to create the value we want to cache.</param>
            <returns>
              Either the inserted or retrieved value depending on whether there's already an existing entry with the same key.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.GetOrAdd(`0,`1)">
            <summary>
              Gets or adds the entry using the key and value specified.
            </summary>
            <param name="key">The key of the entry to get/add.</param>
            <param name="value">The value to add.</param>
            <returns>
              Either the inserted or retrieved value depending on whether there's already an existing entry with the same key.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})">
            <summary>
              Adds or updates the entry using the specified key, value and a function for updating the value if the entry exists.
            </summary>
            <param name="key">The key of the entry to add/update.</param>
            <param name="addValueFactory">Used to create the value that we want to cache.</param>
            <param name="updateValueFactory">Used to update the value if the entry already exists.</param>
            <returns>
              Either the inserted or updated value depending on whether there's already an existing entry with the same key.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.AddOrUpdate(`0,`1,System.Func{`0,`1,`1})">
            <summary>
              Adds or updates the entry using the specified key, value and a function for updating the value if the entry exists.
            </summary>
            <param name="key">The key of the entry to add/update.</param>
            <param name="addValue">The value to add.</param>
            <param name="updateValueFactory">Used to update the value if the entry already exists.</param>
            <returns>
              Either the inserted or updated value depending on whether there's already an existing entry with the same key.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.CopyToObjects(System.Object[],System.Int32)">
            <summary>
              Copies the entries to an array of <see cref="T:System.Object">objects</see>.
            </summary>
            <param name="array">The destination array.</param>
            <param name="index">The index at which copying begins.</param>
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.CopyToEntries(System.Collections.DictionaryEntry[],System.Int32)">
            <summary>
              Copies the entries to an array of <see cref="T:System.Collections.DictionaryEntry">dictionary entries</see>.
            </summary>
            <param name="array">The destination array.</param>
            <param name="index">The index at which copying begins.</param>
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakConcurrentDictionary`2.CopyToPairs(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
            <summary>
              Copies the entries to an array of <see cref="T:System.Collections.Generic.KeyValuePair`2">key value pairs</see>.
            </summary>
            <param name="array">The destination array.</param>
            <param name="index">The index at which copying begins.</param>
        </member>
        <member name="T:WebApplications.Utilities.Caching.EnhancedMemoryCacheNull`1">
            <summary>
              OBSOLETE - Use <see cref="T:WebApplications.Utilities.Caching.EnhancedMemoryCacheNull`2"/>
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="T:WebApplications.Utilities.Caching.EnhancedMemoryCacheNull`2">
            <summary>
              An Enhanced Memory Cache implementation, uses the <see cref="P:System.Runtime.Caching.MemoryCache.Default">default Memory Cache</see>
              but allows  multiple instances to be created (they all map share the underlying memory cache). This ensures
              type-safety on the cache values and allows the stored value to be a <see langword="null"/>. There is a small
              performance penalty for this support so the <see cref="T:WebApplications.Utilities.Caching.EnhancedMemoryCache`2"/> should be
              used in preference to this class in the case where nulls (<see langword="null"/>) are not possible.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="F:WebApplications.Utilities.Caching.EnhancedMemoryCacheNull`2._cache">
            <summary>
              We implement the enhanced memory cache using the default memory cache.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Caching.EnhancedMemoryCacheNull`2.#ctor(System.String)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Caching.EnhancedMemoryCacheNull`2" /> class.
            </summary>
            <param name="cacheName">The name of the cache.</param>
        </member>
        <member name="M:WebApplications.Utilities.Caching.EnhancedMemoryCacheNull`2.#ctor(System.TimeSpan,System.TimeSpan,System.String)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Caching.EnhancedMemoryCacheNull`2"/> class.
            </summary>
            <param name="defaultAbsoluteExpiration">
              <para>The default absolute expiration.</para>
              <para>This sets when the cache entry will be expired.</para>
            </param>
            <param name="defaultSlidingExpiration">
              <para>The default sliding expiration.</para>
              <para>This is the duration to wait before expiring the cache (if no requests are made for it during that period).</para>
            </param>
            <param name="cacheName">The name of the cache.</param>
        </member>
        <member name="M:WebApplications.Utilities.Caching.EnhancedMemoryCacheNull`2.ContainsKey(`0)">
            <summary>
              Returns a <see cref="T:System.Boolean"/> value indicating whether the cache contains the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns>
              Returns <see langword="true"/> if the key was found; otherwise returns <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.EnhancedMemoryCacheNull`2.GetOrAdd(`0,`1,System.DateTimeOffset,System.TimeSpan)">
            <summary>
              Inserts a new entry into the cache using the specified key, the factory to create the value, the absolute expiration
              and the sliding expiration (if an entry doesn't already exist otherwise the existing value is returned).
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="value">The value to add to the cache.</param>
            <param name="absoluteExpiration">Sets when the cache entry will be expired.</param>
            <param name="slidingExpiration">
              The duration to wait before expiring the cache (if no requests are made for it during that period).
            </param>
            <returns>
              Either the inserted or retrieved value depending on whether there's already an existing entry with the same key.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.EnhancedMemoryCacheNull`2.AddOrUpdate(`0,`1,System.DateTimeOffset,System.TimeSpan)">
            <summary>
              Inserts a new entry into the cache using the specified key, value, absolute expiration and sliding expiration
              (if an entry doesn't already exist otherwise the existing value is updated).
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="value">The object to either insert or update the existing value with.</param>
            <param name="absoluteExpiration">Sets when the cache entry will be expired.</param>
            <param name="slidingExpiration">
              The duration to wait before expiring the cache (if no requests are made for it during that period).
            </param>
            <returns>
              Either the inserted or updated value depending on whether there's already an existing entry with the same key.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.EnhancedMemoryCacheNull`2.TryGetValue(`0,`1@)">
            <summary>
              Tries to retrieve the value using the specified key.
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="value">The value retrieved.</param>
            <returns>
              Returns <see langword="true"/> if the corresponding <paramref name="key"/> exists and the value was successfully retrieved;
              otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.EnhancedMemoryCacheNull`2.TryRemove(`0,`1@)">
            <summary>
              Tries to remove an entry using the specified key.
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="value">The value removed.</param>
            <returns>
              Returns <see langword="true"/> if the corresponding <paramref name="key"/> exists and the value was successfully removed;
              otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.EnhancedMemoryCacheNull`2.TryAdd(`0,`1,System.DateTimeOffset,System.TimeSpan)">
            <summary>
              Tries to insert an entry into the cache using the specified key and value.
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="value">The object to cache.</param>
            <param name="absoluteExpiration">The absolute expiration.</param>
            <param name="slidingExpiration">The sliding expiration.</param>
            <returns>
              Returns <see langword="true"/> if the entry was inserted successfully; otherwise returns <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.EnhancedMemoryCacheNull`2.Clear">
            <summary>
              Flushes this instance.
            </summary>
            <exception cref="T:System.NotSupportedException">
              <see cref="P:System.Runtime.Caching.MemoryCache.Default"/> cannot be safely flushed.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Caching.EnhancedMemoryCacheNull`2.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <exception cref="T:System.NotSupportedException">
              <see cref="P:System.Runtime.Caching.MemoryCache.Default"/> cannot be safely disposed.
            </exception>
        </member>
        <member name="T:WebApplications.Utilities.Caching.EnhancedMemoryCache`1">
            <summary>
              OBSOLETE - Use <see cref="T:WebApplications.Utilities.Caching.EnhancedMemoryCache`2"/>
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="F:WebApplications.Utilities.Caching.EnhancedMemoryCache.NullSentinel">
            <summary>
            The sentinel used by <see cref="T:WebApplications.Utilities.Caching.EnhancedMemoryCacheNull`2"/> to store a <see langword="null"/> value in the cache.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Caching.EnhancedMemoryCache`2">
            <summary>
              An Enhanced Memory Cache implementation, uses the <see cref="P:System.Runtime.Caching.MemoryCache.Default">default Memory Cache</see>,
              but allows multiple instances to be created (they all map share the underlying memory cache). This ensures
              type-safety on the cache values but does not allow the value to be a <see langword="null"/>. For null value
              support you can use <see cref="T:WebApplications.Utilities.Caching.EnhancedMemoryCacheNull`2"/>, though there is a small
              performance and memory overhead in doing so.
            </summary>
            <typeparam name="TKey">
              The type of the key - it is vital that the <see cref="M:System.Object.ToString" /> method returns a unique value for discrimination.
            </typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="F:WebApplications.Utilities.Caching.EnhancedMemoryCache`2._cache">
            <summary>
              We implement the enhanced memory cache using the default memory cache.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Caching.EnhancedMemoryCache`2.#ctor(System.String)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Caching.EnhancedMemoryCache`2" /> class.
            </summary>
            <param name="cacheName">The name of the cache.</param>
        </member>
        <member name="M:WebApplications.Utilities.Caching.EnhancedMemoryCache`2.#ctor(System.TimeSpan,System.TimeSpan,System.String)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Caching.EnhancedMemoryCache`2"/> class.
            </summary>
            <param name="defaultAbsoluteExpiration">
              <para>The default absolute expiration.</para>
              <para>This sets when the cache entry will be expired.</para>
            </param>
            <param name="defaultSlidingExpiration">
              <para>The default sliding expiration.</para>
              <para>This is the duration to wait before expiring the cache (if no requests are made for it during that period).</para>
            </param>
            <param name="cacheName">The name of the cache.</param>
        </member>
        <member name="M:WebApplications.Utilities.Caching.EnhancedMemoryCache`2.ContainsKey(`0)">
            <summary>
              Returns a <see cref="T:System.Boolean"/> value indicating whether the cache contains the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns>
              Returns <see langword="true"/> if the key was found; otherwise returns <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.EnhancedMemoryCache`2.GetOrAdd(`0,`1,System.DateTimeOffset,System.TimeSpan)">
            <summary>
              Inserts a new entry into the cache using the specified key, the factory to create the value, the absolute expiration
              and the sliding expiration (if an entry doesn't already exist otherwise the existing value is returned).
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="value">The value to add to the cache.</param>
            <param name="absoluteExpiration">Sets when the cache entry will be expired.</param>
            <param name="slidingExpiration">
              The duration to wait before expiring the cache (if no requests are made for it during that period).
            </param>
            <returns>
            Either the inserted or retrieved value depending on whether there's already an existing entry with the same key.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.EnhancedMemoryCache`2.AddOrUpdate(`0,`1,System.DateTimeOffset,System.TimeSpan)">
            <summary>
              Inserts a new entry into the cache using the specified key, value, absolute expiration and sliding expiration
              (if an entry doesn't already exist otherwise the existing value is updated).
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="value">The object to either insert or update the existing value with.</param>
            <param name="absoluteExpiration">Sets when the cache entry will be expired.</param>
            <param name="slidingExpiration">
              The duration to wait before expiring the cache (if no requests are made for it during that period).
            </param>
            <returns>
              Either the inserted or updated value depending on whether there's already an existing entry with the same key.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.EnhancedMemoryCache`2.TryGetValue(`0,`1@)">
            <summary>
              Tries to retrieve the value using the specified key.
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="value">The value retrieved.</param>
            <returns>
              Returns <see langword="true"/> if the corresponding <paramref name="key"/> exists and the value was successfully retrieved;
              otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.EnhancedMemoryCache`2.TryRemove(`0,`1@)">
            <summary>
              Tries to remove an entry using the specified key.
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="value">The value removed.</param>
            <returns>
              Returns <see langword="true"/> if the corresponding <paramref name="key"/> exists and the value was successfully removed;
              otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.EnhancedMemoryCache`2.TryAdd(`0,`1,System.DateTimeOffset,System.TimeSpan)">
            <summary>
              Tries to insert an entry into the cache using the specified key and value.
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="value">The object to cache.</param>
            <param name="absoluteExpiration">Sets when the cache entry will be expired.</param>
            <param name="slidingExpiration">
              The duration to wait before expiring the cache (if no requests are made for it during that period).
            </param>
            <returns>
              Returns <see langword="true"/> if the entry was inserted successfully; otherwise returns <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Caching.EnhancedMemoryCache`2.Clear">
            <summary>
              Flushes this instance.
            </summary>
            <exception cref="T:System.NotSupportedException">
              <see cref="P:System.Runtime.Caching.MemoryCache.Default"/> cannot be safely flushed.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Caching.EnhancedMemoryCache`2.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <exception cref="T:System.NotSupportedException">
              <see cref="P:System.Runtime.Caching.MemoryCache.Default"/> cannot be safely disposed.
            </exception>
        </member>
        <member name="F:WebApplications.Utilities.Caching.CachingDictionary.MaxSlidingExpiration">
            <summary>
              The maximum sliding expiration
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Caching.CachingDictionary`2">
            <summary>
              A thread safe dictionary that caches and keeps track of elements in the cache.
              This allows for greater functionality than the <see cref="T:WebApplications.Utilities.Caching.EnhancedMemoryCache`2" />,
              including, key searches, non-string keys, etc.
            </summary>
            <typeparam name="TKey">The type of the keys.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
        </member>
        <member name="F:WebApplications.Utilities.Caching.CachingDictionary`2._cache">
            <summary>
              The cache.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Caching.CachingDictionary`2._keys">
            <summary>
              The keys cache.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionary`2.#ctor(System.String)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Caching.CachingDictionary`2"/> class.
            </summary>
            <param name="cacheName">The name of the cache.</param>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionary`2.#ctor(System.Int32,System.Int32,System.String)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Caching.CachingDictionary`2"/> class.
            </summary>
            <param name="concurrencyLevel">The estimated number of threads that will update the lookup concurrently.</param>
            <param name="capacity">The initial number of elements that the dictionary can contain.</param>
            <param name="cacheName">The name of the cache.</param>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.String)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Caching.CachingDictionary`2"/> class.
            </summary>
            <param name="comparer">The comparer to use when comparing keys.</param>
            <param name="cacheName">The name of the cache.</param>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.String)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Caching.CachingDictionary`2"/> class.
            </summary>
            <param name="collection">The collection to copy into the dictionary.</param>
            <param name="cacheName">The name of the cache.</param>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0},System.String)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Caching.CachingDictionary`2"/> class.
            </summary>
            <param name="collection">The collection to copy into the dictionary.</param>
            <param name="comparer">The comparer to use when comparing keys.</param>
            <param name="cacheName">The name of the cache.</param>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionary`2.#ctor(System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0},System.String)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Caching.CachingDictionary`2"/> class.
            </summary>
            <param name="concurrencyLevel">The estimated number of threads that will update the lookup concurrently.</param>
            <param name="capacity">The initial number of elements that the dictionary can contain.</param>
            <param name="comparer">The comparer to use when comparing keys.</param>
            <param name="cacheName">The name of the cache.</param>
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionary`2.System#Collections#IDictionary#Contains(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionary`2.System#Collections#IDictionary#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionary`2.System#Collections#IDictionary#Remove(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Caching.CachingDictionary`2.System#Collections#IDictionary#IsFixedSize">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Caching.CachingDictionary`2.System#Collections#IDictionary#IsReadOnly">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Caching.CachingDictionary`2.System#Collections#IDictionary#Keys">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Caching.CachingDictionary`2.System#Collections#IDictionary#Values">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Caching.CachingDictionary`2.System#Collections#IDictionary#Item(System.Object)">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Caching.CachingDictionary`2.System#Collections#ICollection#IsSynchronized">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Caching.CachingDictionary`2.System#Collections#ICollection#SyncRoot">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionary`2.ContainsKey(`0)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionary`2.TryGetValue(`0,`1@)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionary`2.Clear">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionary`2.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Caching.CachingDictionary`2.Item(`0)">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Caching.CachingDictionary`2.Count">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Caching.CachingDictionary`2.Keys">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Caching.CachingDictionary`2.Values">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Add(`0,`1)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Remove(`0)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionary`2.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Caching.CachingDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionary`2.TryAdd(`0,`1,System.DateTimeOffset,System.TimeSpan)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionary`2.TryRemove(`0,`1@)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionary`2.GetOrAdd(`0,`1,System.DateTimeOffset,System.TimeSpan)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Caching.CachingDictionary`2.AddOrUpdate(`0,`1,System.DateTimeOffset,System.TimeSpan)">
            <inheritdoc />
        </member>
        <member name="T:WebApplications.Utilities.Caching.CachingDictionary`2.Wrapper">
            <summary>
              A wrapper struct used to prevent <see langword="null"/> being placed in cache.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Caching.ObservableWeakReference`1">
            <summary>
              A potentially observable weak reference that allows notification when a reference is finalized,
              as long as we are not tracking for resurrection and the type implements
              <see cref="T:WebApplications.Utilities.Caching.IObservableFinalize"/>.
            </summary>
            <typeparam name="T">The type of the referenced element.</typeparam>
            <remarks>
              Article explaining object resurrection: (http://blogs.msdn.com/b/clyon/archive/2006/04/25/583698.aspx)
            </remarks>
        </member>
        <member name="F:WebApplications.Utilities.Caching.ObservableWeakReference`1.ObservableFinalize">
            <summary>
              Whether the type is actually observable.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Caching.ObservableWeakReference`1.Disposable">
            <summary>
              Whether the type is disposable.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Caching.ObservableWeakReference`1._handlers">
            <summary>
              Keeps track of added handlers.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Caching.ObservableWeakReference`1.#cctor">
            <summary>
              Initializes the <see cref="T:WebApplications.Utilities.Caching.ObservableWeakReference`1"/> class.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Caching.ObservableWeakReference`1.#ctor(`0,WebApplications.Utilities.Enumerations.TriState,System.EventHandler[])">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Caching.ObservableWeakReference`1"/> class.
            </summary>
            <param name="target">The target, which is the underlying object being referenced.</param>
            <param name="trackResurrection">
              If set to <see langword="true"/> then the weak reference will be long.
              If unset will track resurrection if the type does not support dispose.</param>
            <param name="handlers">Optional event handlers to add to finalized event.</param>
        </member>
        <member name="E:WebApplications.Utilities.Caching.ObservableWeakReference`1.Finalized">
            <summary>
              The event raised when the object is finalized (i.e. when its destructor is called).
            </summary>
            <remarks>
              The event only fires if the object is observable finalize.
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.Caching.ObservableWeakReference`1.Dispose">
            <summary>
              Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:WebApplications.Utilities.Caching.WeakReference`1">
            <summary>
              A type safe weak reference.
            </summary>
            <typeparam name="T">The type of the referenced element.</typeparam>
        </member>
        <member name="F:WebApplications.Utilities.Caching.WeakReference`1._weakReference">
            <summary>
              The underlying weak reference.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakReference`1.#ctor(`0,System.Boolean)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Caching.WeakReference`1"/> class.
            </summary>
            <param name="target">The target, which is the underlying object being referenced.</param>
            <param name="trackResurrection">If set to <see langword="true"/> then the weak reference will be long.</param>
            <remarks>
              <para>If <paramref name="trackResurrection"/> is <see langword="true"/> then a long weak reference is created
              otherwise a short weak reference is created. A long reference is retained after the objects Finalize method is
              called up until it is collected.</para>
              <para>If the object type doesn't offer a Finalize method then short and long references behave the same.</para>
            </remarks>
        </member>
        <member name="P:WebApplications.Utilities.Caching.WeakReference`1.TrackResurrection">
            <summary>
              Returns a <see cref="T:System.Boolean"/> indicating whether or not we're tracking objects until they're collected
              (<see langword="true"/>) or just until they're finalized (<see langword="false"/>).
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Caching.WeakReference`1.IsAlive">
            <summary>
              Gets a <see langword="bool"/> value indicating whether this instance is alive.
            </summary>
            <remarks>
              If this is <see langword="true"/> then the instance has not yet been garbage collected, meaning it's still accessible.
            </remarks>
        </member>
        <member name="P:WebApplications.Utilities.Caching.WeakReference`1.Target">
            <summary>
              Gets or sets the target, which is the underlying object being referenced.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Caching.WeakReference`1.TryGetTarget(`0@)">
            <summary>
              Tries to get the target, which is the underlying object being referenced.
            </summary>
            <param name="target">The weak reference's target.</param>
            <returns>
              Returns <see langword="true"/> if the reference is still alive meaning the target object can be retrieved;
              otherwise returns <see langword="false"/>.
            </returns>
        </member>
        <member name="T:WebApplications.Utilities.CharComparer">
            <summary>
            A <see cref="T:System.Char">character</see> comparer.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.CharComparer.InvariantCulture">
            <summary>
            The invariant culture <see cref="T:WebApplications.Utilities.CharComparer"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.CharComparer.InvariantCultureIgnoreCase">
            <summary>
            The case-insensitive invariant culture <see cref="T:WebApplications.Utilities.CharComparer"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.CharComparer.Ordinal">
            <summary>
            The ordinal <see cref="T:WebApplications.Utilities.CharComparer"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.CharComparer.OrdinalIgnoreCase">
            <summary>
            The case-insensitive ordinal <see cref="T:WebApplications.Utilities.CharComparer"/>.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.CharComparer.CurrentCulture">
            <summary>
            Gets the <see cref="T:WebApplications.Utilities.CharComparer"/> for the current <see cref="T:System.Globalization.CultureInfo">culture</see>.
            </summary>
            <value>A <see cref="T:WebApplications.Utilities.CharComparer"/>.</value>
        </member>
        <member name="P:WebApplications.Utilities.CharComparer.CurrentCultureIgnoreCase">
            <summary>
            Gets the case-insensitive <see cref="T:WebApplications.Utilities.CharComparer"/> for the current <see cref="T:System.Globalization.CultureInfo">culture</see>.
            </summary>
            <value>A <see cref="T:WebApplications.Utilities.CharComparer"/>.</value>
        </member>
        <member name="M:WebApplications.Utilities.CharComparer.Create(System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            Creates a <see cref="T:WebApplications.Utilities.CharComparer"/> based on the specified culture.
            </summary>
            <param name="culture">The culture.</param>
            <param name="ignoreCase">if set to <see langword="true" /> will ignore case..</param>
            <returns>A <see cref="T:WebApplications.Utilities.CharComparer"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="culture" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:WebApplications.Utilities.CharComparer.Create(System.Globalization.CompareInfo,System.Boolean)">
            <summary>
            Creates a <see cref="T:WebApplications.Utilities.CharComparer"/> based on the specified <see cref="T:System.Globalization.CompareInfo"/>.
            </summary>
            <param name="compareInfo">The compare info.</param>
            <param name="ignoreCase">if set to <see langword="true" /> will ignore case..</param>
            <returns>A <see cref="T:WebApplications.Utilities.CharComparer"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="compareInfo"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:WebApplications.Utilities.CharComparer.Create(System.StringComparer)">
            <summary>
            Creates a <see cref="T:WebApplications.Utilities.CharComparer" /> based on the specified <see cref="T:System.StringComparer" />.
            </summary>
            <param name="stringComparer">The comparer.</param>
            <returns>A <see cref="T:WebApplications.Utilities.CharComparer" />.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="stringComparer" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:WebApplications.Utilities.CharComparer.Compare(System.Object,System.Object)">
            <inheritdoc />
            <exception cref="T:System.ArgumentException">The specified parameters are not comparable.</exception>
        </member>
        <member name="M:WebApplications.Utilities.CharComparer.Equals(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.CharComparer.GetHashCode(System.Object)">
            <inheritdoc />
            <exception cref="T:System.ArgumentNullException"><paramref name="obj"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:WebApplications.Utilities.CharComparer.Compare(System.Char,System.Char)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.CharComparer.Equals(System.Char,System.Char)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.CharComparer.GetHashCode(System.Char)">
            <inheritdoc />
        </member>
        <member name="T:WebApplications.Utilities.CharComparer.StringComparer">
            <summary>
            Implements a <see cref="T:WebApplications.Utilities.CharComparer"/> based on a <see cref="T:WebApplications.Utilities.CharComparer.StringComparer"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.CharComparer.StringComparer._stringComparer">
            <summary>
            The string comparer.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.CharComparer.StringComparer.#ctor(System.StringComparer)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.CharComparer"/> class.
            </summary>
            <param name="stringComparer">The string comparer to use.</param>
        </member>
        <member name="M:WebApplications.Utilities.CharComparer.StringComparer.Compare(System.Char,System.Char)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.CharComparer.StringComparer.Equals(System.Char,System.Char)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.CharComparer.StringComparer.GetHashCode(System.Char)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.CharComparer.StringComparer.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.CharComparer.StringComparer.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:WebApplications.Utilities.CharComparer.CultureAwareComparer">
            <summary>
            Implements a <see cref="T:WebApplications.Utilities.CharComparer"/> based on a <see cref="T:System.Globalization.CultureInfo"/> and case-sensitivity.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.CharComparer.CultureAwareComparer._getHashCode">
            <summary>
            Gets hash codes for a given <see cref="T:System.Globalization.CompareInfo"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.CharComparer.CultureAwareComparer._compareInfo">
            <summary>
            The <see cref="T:System.Globalization.CompareInfo"/> is used for actual comparisons.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.CharComparer.CultureAwareComparer._ignoreCase">
            <summary>
            Whether case should be ignored.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.CharComparer.CultureAwareComparer.#ctor(System.Globalization.CompareInfo,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.CharComparer.CultureAwareComparer" /> class.
            </summary>
            <param name="compareInfo">The compare information.</param>
            <param name="ignoreCase">Whether to ignore the case.</param>
        </member>
        <member name="M:WebApplications.Utilities.CharComparer.CultureAwareComparer.Compare(System.Char,System.Char)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.CharComparer.CultureAwareComparer.Equals(System.Char,System.Char)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.CharComparer.CultureAwareComparer.GetHashCode(System.Char)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.CharComparer.CultureAwareComparer.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.CharComparer.CultureAwareComparer.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:WebApplications.Utilities.CharComparer.OrdinalComparer">
            <summary>
            Optimized <see cref="T:WebApplications.Utilities.CharComparer"/> based on ordinal comparisons with case-sensitivity.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.CharComparer.OrdinalComparer._ignoreCase">
            <summary>
            Whether to ignore case.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.CharComparer.OrdinalComparer.Compare(System.Char,System.Char)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.CharComparer.OrdinalComparer.Equals(System.Char,System.Char)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.CharComparer.OrdinalComparer.GetHashCode(System.Char)">
            <inheritdoc />
        </member>
        <member name="F:WebApplications.Utilities.CharComparer.OrdinalComparer._hashCodeBase">
            <summary>
            Start of the hash code calculation for this object.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.CharComparer.OrdinalComparer.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:WebApplications.Utilities.Configuration.ConfigurationElement">
            <summary>
              Represents a configuration element in a configuration file.
            </summary>
            <summary>
              Represents a configuration element in a configuration file.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Configuration.ConfigurationElement._elements">
            <summary>
            Holds unknown elements as strings so that we always get a clean copy and we can detect changes easily. 
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Configuration.ConfigurationElement._isModified">
            <summary>
            Indicates whether we have any changes.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Configuration.ConfigurationElement._children">
            <summary>
            The children.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Configuration.ConfigurationElement._properties">
            <summary>
            The properties, strongly typed!
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElement.Init">
            <summary>
            Initializes this instance.
            </summary>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">Invalid property type.</exception>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationElement.WebApplications#Utilities#Configuration#IInternalConfigurationElement#Parent">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationElement.Parent">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationElement.Section">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationElement.WebApplications#Utilities#Configuration#IInternalConfigurationElement#ConfigurationElementName">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationElement.FullPath">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationElement.ConfigurationElementName">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationElement.Children">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElement.WebApplications#Utilities#Configuration#IInternalConfigurationElement#Initialize">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElement.WebApplications#Utilities#Configuration#IInternalConfigurationElement#OnChanged(System.String)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElement.GetProperty``1(System.String)">
            <summary>
              Gets the configuration property.
            </summary>
            <typeparam name="T">The property type.</typeparam>
            <param name="propertyName">The name of the property to get.</param>
            <returns>The specified property, attribute or child element.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElement.SetProperty``1(System.String,``0)">
            <summary>
              Sets the configuration property to the value specified.
            </summary>
            <typeparam name="T">The property type.</typeparam>
            <param name="propertyName">The name of the property to set.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationElement.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> with the specified property name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>System.Object.</returns>
            <exception cref="T:System.ObjectDisposedException" accessor="get">The current section <see cref="P:WebApplications.Utilities.Configuration.ConfigurationElement.IsDisposed">is disposed</see>.</exception>
            <exception cref="T:System.ObjectDisposedException" accessor="set">The current section <see cref="P:WebApplications.Utilities.Configuration.ConfigurationElement.IsDisposed">is disposed</see>.</exception>
            <exception cref="T:System.ArgumentNullException" accessor="get"><paramref name="propertyName"/> is <see langword="null" /> or empty.</exception>
            <exception cref="T:System.ArgumentNullException" accessor="set"><paramref name="propertyName"/> is <see langword="null" /> or empty.</exception>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationElement.Properties">
            <summary>
            Gets the properties.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationElement.Keys">
            <summary>
            Gets the keys.
            </summary>
            <value>The keys.</value>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationElement.Values">
            <summary>
            Gets the values.
            </summary>
            <value>The values.</value>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationElement.PropertyValues">
            <summary>
            Gets the property values.
            </summary>
            <value>The property values.</value>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElement.GetElement(System.Xml.Linq.XName)">
            <summary>
            Gets this configuration element's child element by name.
            </summary>
            <param name="elementName">Name of the child element to retrieve.</param>
            <returns>The child element; otherwise <see langword="null"/>.</returns>
            <remarks><para>This is a clone of the child element, modifying it will have no effect on the configuration.</para>
            <para>To update the configuration, use <see cref="M:WebApplications.Utilities.Configuration.ConfigurationElement.SetElement(System.Xml.Linq.XName,System.Xml.Linq.XElement)"/></para></remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="elementName"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElement.SetElement(System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Sets the configuration element's child element.
            </summary>
            <param name="elementName">Name of the child element.</param>
            <param name="element">The child element.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="elementName"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="element"/> is <see langword="null" />.</exception>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The <paramref name="element">element's</paramref> <see cref="P:System.Xml.Linq.XElement.Name">name</see> doesn't match the specified <paramref name="elementName">element name</paramref>.</exception>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration is read only.</exception>
            <exception cref="T:System.ObjectDisposedException">The current section <see cref="P:WebApplications.Utilities.Configuration.ConfigurationElement.IsDisposed">is disposed</see>.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElement.WebApplications#Utilities#Configuration#IInternalConfigurationElement#OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <inheritdoc />
            <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Xml.XmlReader" /> is not positioned on a recognized node type.</exception>
            <exception cref="T:System.Xml.XmlException">The underlying <see cref="T:System.Xml.XmlReader" /> throws an exception.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <inheritdoc />
            <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Xml.XmlReader" /> is not positioned on a recognized node type.</exception>
            <exception cref="T:System.Xml.XmlException">The underlying <see cref="T:System.Xml.XmlReader" /> throws an exception.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <inheritdoc />
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The current attribute is locked at a higher configuration level.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElement.IsModified">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElement.ResetModified">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationElement.ElementNames">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationElement.Elements">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationElement.ElementDictionary">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationElement.ElementsClone">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElement.ToString">
            <inheritdoc />
        </member>
        <member name="F:WebApplications.Utilities.Configuration.ConfigurationElement._initializeMethod">
            <summary>
            The <see cref="T:System.Reflection.MethodInfo"/> corresponding to <see cref="M:WebApplications.Utilities.Configuration.IInternalConfigurationElement.Initialize"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Configuration.ConfigurationElement.GetValues">
            <summary>
            The function to efficiently get the values collection from a <see cref="T:System.Configuration.ConfigurationElement"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Configuration.ConfigurationElement._createElements">
            <summary>
            Holds code for creating collection types.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElement.Create(System.Type)">
            <summary>
            Creates the element, if the supplied <paramref name="type"/> implements
            <see cref="T:WebApplications.Utilities.Configuration.IInternalConfigurationElement"/>.
            </summary>
            <param name="type">Type of the element.</param>
            <returns>WebApplications.Utilities.Configuration.IInternalConfigurationElement.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElement.Create``1">
            <summary>
            Creates an element of the specified type.
            </summary>
            <typeparam name="T">The element type.</typeparam>
            <returns>An element of type <typeparamref name="T"/>.</returns>
            <seealso cref="T:WebApplications.Utilities.Configuration.IConfigurationElement" />
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationElement.WebApplications#Utilities#Configuration#IInternalConfigurationElement#Section">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationElement.IsDisposed">
            <inheritdoc />
        </member>
        <member name="T:WebApplications.Utilities.Configuration.IConfigurationElement">
            <summary>
            Interface for exposing configuration hierarchy.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.IConfigurationElement.Section">
            <summary>
            Gets the current section.
            </summary>
            <value>The section.</value>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.IConfigurationElement.Parent">
            <summary>
            Gets or sets the parent.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.IConfigurationElement.ConfigurationElementName">
            <summary>
            Gets the name of the current configuration element.
            </summary>
            <value>The name of the element.</value>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.IConfigurationElement.FullPath">
            <summary>
            Gets the full path to the current element.
            </summary>
            <value>The full path of the element.</value>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.IConfigurationElement.Children">
            <summary>
            Gets the children.
            </summary>
            <value>The descendants.</value>
            <exception cref="T:System.ObjectDisposedException" accessor="get">The current section <see cref="P:WebApplications.Utilities.Configuration.IConfigurationElement.IsDisposed">is disposed</see>.</exception>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.IConfigurationElement.Keys">
            <summary>
            Gets the keys.
            </summary>
            <value>The keys.</value>
            <exception cref="T:System.ObjectDisposedException" accessor="get">The current section <see cref="P:WebApplications.Utilities.Configuration.IConfigurationElement.IsDisposed">is disposed</see>.</exception>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.IConfigurationElement.Values">
            <summary>
            Gets the values.
            </summary>
            <value>The values.</value>
            <exception cref="T:System.ObjectDisposedException" accessor="get">The current section <see cref="P:WebApplications.Utilities.Configuration.IConfigurationElement.IsDisposed">is disposed</see>.</exception>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.IConfigurationElement.PropertyValues">
            <summary>
            Gets the property values.
            </summary>
            <value>The property values.</value>
            <exception cref="T:System.ObjectDisposedException" accessor="get">The current section <see cref="P:WebApplications.Utilities.Configuration.IConfigurationElement.IsDisposed">is disposed</see>.</exception>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.IConfigurationElement.ElementNames">
            <summary>
            Gets the unknown element names.
            </summary>
            <value>The element names.</value>
            <exception cref="T:System.ObjectDisposedException" accessor="get">The current section <see cref="P:WebApplications.Utilities.Configuration.IConfigurationElement.IsDisposed">is disposed</see>.</exception>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.IConfigurationElement.Elements">
            <summary>
            Gets the unknown elements.
            </summary>
            <value>The elements.</value>
            <exception cref="T:System.ObjectDisposedException" accessor="get">The current section <see cref="P:WebApplications.Utilities.Configuration.IConfigurationElement.IsDisposed">is disposed</see>.</exception>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.IConfigurationElement.ElementDictionary">
            <summary>
            Gets the unknown elements as a dictionary, accessible by the <see cref="T:System.Xml.Linq.XName"/>.
            </summary>
            <value>The elements.</value>
            <exception cref="T:System.ObjectDisposedException" accessor="get">The current section <see cref="P:WebApplications.Utilities.Configuration.IConfigurationElement.IsDisposed">is disposed</see>.</exception>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.IConfigurationElement.IsDisposed">
            <summary>
            Gets a value indicating whether this instance is disposed.
            </summary>
            <value><see langword="true" /> if this instance is disposed; otherwise, <see langword="false" />.</value>
        </member>
        <member name="T:WebApplications.Utilities.Configuration.IConfigurationSection">
            <summary>
            Interface for the extended configuration section.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.IConfigurationSection.HasFile">
            <summary>
            Gets a value indicating whether this instance is associated with an underlying configuration file.
            </summary>
            <value><see langword="true"/> if this instance is associated with an underlying configuration file; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.IConfigurationSection.FilePath">
            <summary>
            Gets the configuration file path the section was loaded from (if any); otherwise <see langword="null"/>.
            </summary>
            <value>The file path.</value>
        </member>
        <member name="T:WebApplications.Utilities.Configuration.IInternalConfigurationElement">
            <summary>
            Internal version of interface for exposing configuration hierarchy.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.IInternalConfigurationElement.Parent">
            <summary>
            Gets or sets the parent.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.IInternalConfigurationElement.Section">
            <summary>
            Gets or sets the parent.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.IInternalConfigurationElement.OnChanged(System.String)">
            <summary>
            Called when this element, or a child element is changed.
            </summary>
            <param name="fullPath">The full path.</param>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.IInternalConfigurationElement.Initialize">
            <summary>
            Initializes this instance.
            </summary>
            <remarks>This is a short-cut to calling the protected Init() virtual method.</remarks>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.IInternalConfigurationElement.ElementsClone">
            <summary>
            Gets the elements as a dictionary, accessible by the <see cref="T:System.Xml.Linq.XName"/>.
            </summary>
            <value>The elements.</value>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.IInternalConfigurationElement.ConfigurationElementName">
            <summary>
            Gets or sets the name of the element.
            </summary>
            <value>The name of the element.</value>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.IInternalConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>
            Allows access to the deserialize unrecognized element protected method.
            </summary>
            <param name="elementName">Name of the element.</param>
            <param name="reader">The reader.</param>
            <returns><see langword="true" /> if handled, <see langword="false" /> otherwise.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Configuration.IInternalConfigurationSection">
            <summary>
            Interface IInternalConfigurationSection
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.IInternalConfigurationSection.OnFileChanged(System.String)">
            <summary>
            Called when an associated file is changed for this section.
            </summary>
            <param name="fullPath">The full path.</param>
        </member>
        <member name="T:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2">
            <summary>
              Represents a configuration element in a configuration file.
            </summary>
            <summary>
            Generic version of <see cref="T:System.Configuration.ConfigurationElementCollection" />.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the elements.</typeparam>
        </member>
        <member name="F:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2._elements">
            <summary>
            Holds unknown elements as strings so that we always get a clean copy and we can detect changes easily. 
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2._isModified">
            <summary>
            Indicates whether we have any changes.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2._children">
            <summary>
            The children.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2._properties">
            <summary>
            The properties, strongly typed!
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.Init">
            <summary>
            Initializes this instance.
            </summary>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">Invalid property type.</exception>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.WebApplications#Utilities#Configuration#IInternalConfigurationElement#Parent">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.Parent">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.Section">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.WebApplications#Utilities#Configuration#IInternalConfigurationElement#ConfigurationElementName">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.FullPath">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.ConfigurationElementName">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.Children">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.WebApplications#Utilities#Configuration#IInternalConfigurationElement#Initialize">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.WebApplications#Utilities#Configuration#IInternalConfigurationElement#OnChanged(System.String)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.GetProperty``1(System.String)">
            <summary>
              Gets the configuration property.
            </summary>
            <typeparam name="T">The property type.</typeparam>
            <param name="propertyName">The name of the property to get.</param>
            <returns>The specified property, attribute or child element.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.SetProperty``1(System.String,``0)">
            <summary>
              Sets the configuration property to the value specified.
            </summary>
            <typeparam name="T">The property type.</typeparam>
            <param name="propertyName">The name of the property to set.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> with the specified property name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>System.Object.</returns>
            <exception cref="T:System.ObjectDisposedException" accessor="get">The current section <see cref="P:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.IsDisposed">is disposed</see>.</exception>
            <exception cref="T:System.ObjectDisposedException" accessor="set">The current section <see cref="P:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.IsDisposed">is disposed</see>.</exception>
            <exception cref="T:System.ArgumentNullException" accessor="get"><paramref name="propertyName"/> is <see langword="null" /> or empty.</exception>
            <exception cref="T:System.ArgumentNullException" accessor="set"><paramref name="propertyName"/> is <see langword="null" /> or empty.</exception>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.Properties">
            <summary>
            Gets the properties.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.Keys">
            <summary>
            Gets the keys.
            </summary>
            <value>The keys.</value>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.Values">
            <summary>
            Gets the values.
            </summary>
            <value>The values.</value>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.PropertyValues">
            <summary>
            Gets the property values.
            </summary>
            <value>The property values.</value>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.GetElement(System.Xml.Linq.XName)">
            <summary>
            Gets this configuration element's child element by name.
            </summary>
            <param name="elementName">Name of the child element to retrieve.</param>
            <returns>The child element; otherwise <see langword="null"/>.</returns>
            <remarks><para>This is a clone of the child element, modifying it will have no effect on the configuration.</para>
            <para>To update the configuration, use <see cref="M:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.SetElement(System.Xml.Linq.XName,System.Xml.Linq.XElement)"/></para></remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="elementName"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.SetElement(System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Sets the configuration element's child element.
            </summary>
            <param name="elementName">Name of the child element.</param>
            <param name="element">The child element.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="elementName"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="element"/> is <see langword="null" />.</exception>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The <paramref name="element">element's</paramref> <see cref="P:System.Xml.Linq.XElement.Name">name</see> doesn't match the specified <paramref name="elementName">element name</paramref>.</exception>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration is read only.</exception>
            <exception cref="T:System.ObjectDisposedException">The current section <see cref="P:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.IsDisposed">is disposed</see>.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.WebApplications#Utilities#Configuration#IInternalConfigurationElement#OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <inheritdoc />
            <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Xml.XmlReader" /> is not positioned on a recognized node type.</exception>
            <exception cref="T:System.Xml.XmlException">The underlying <see cref="T:System.Xml.XmlReader" /> throws an exception.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <inheritdoc />
            <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Xml.XmlReader" /> is not positioned on a recognized node type.</exception>
            <exception cref="T:System.Xml.XmlException">The underlying <see cref="T:System.Xml.XmlReader" /> throws an exception.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <inheritdoc />
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The current attribute is locked at a higher configuration level.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.IsModified">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.Reset(System.Configuration.ConfigurationElement)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.ResetModified">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.ElementNames">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.Elements">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.ElementDictionary">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.ElementsClone">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.ToString">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.Item(`0)">
            <summary>
            Gets or sets a property, attribute, or child element of this configuration element.
            </summary>
            <param name="key">The key.</param>
            <returns>The specified property, attribute, or child element</returns>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.Item(System.Int32)">
            <summary>
              Gets or sets a property, attribute, or child element of this configuration element.
            </summary>
            <returns>The specified property, attribute, or child element</returns>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">
              <paramref name="index"/> is read-only or locked.
            </exception>
            <exception cref="T:System.ArgumentNullException" accessor="set"><paramref name="value"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.GetEnumerator">
            <summary>
              Returns an enumerator that iterates through the element collection.
            </summary>
            <returns>
              A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.Add(`1)">
            <summary>
              Adds the specified value to the collection.
            </summary>
            <param name="value">This is the element to add to the collection.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.CopyTo(`1[],System.Int32)">
            <summary>
              Copies the elements in the collection to the provided <see cref="T:System.Array"/>.
            </summary>
            <param name="array">The array to copy the elements to.</param>
            <param name="arrayIndex">
              The zero-based index of the <see cref="T:System.Array"/> where the copy begins.
            </param>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="array"/> is a <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="arrayIndex"/> is less than 0;
            </exception>
            <exception cref="T:System.ArgumentException">
              <para><paramref name="array"/> is multidimensional.</para>
              <para>-or-</para>
              <para>The number of elements is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination array.</para>
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.System#Collections#Generic#ICollection{TValue}#Remove(`1)">
            <summary>
              Removes the first occurrence of a specific object from the collection.
            </summary>
            <param name="item">The element to remove from the collection.</param>
            <returns>
              Returns <see langword="true"/> if the element was successfully removed; otherwise returns <see langword="false"/>.
              This method also returns false if the element is not found.
            </returns>
            <exception cref="T:System.NotSupportedException">
              The collection is read-only.
            </exception>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.System#Collections#Generic#ICollection{TValue}#IsReadOnly">
            <summary>
              Gets a <see cref="T:System.Boolean"/> value indicating whether the collection is
              <see cref="M:System.Configuration.ConfigurationElementCollection.IsReadOnly">read-only</see>.
            </summary>
            <returns>
              Returns <see langword="true"/> collection is read-only; otherwise returns <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.Clear">
            <summary>
              Clears this instance, removing all elements from the collection.
            </summary>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">
              <para>The configuration is read-only.</para>
              <para>-or-</para>
              <para>A collection item has been locked in a higher-level configuration.</para>  
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.Contains(`1)">
            <summary>
              Determines whether the collection contains a specific element.
            </summary>
            <param name="item">The element to locate.</param>
            <returns>
              Returns <see langword="true"/> if <paramref name="item"/> is found in the collection; otherwise returns <see langword="false"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="item"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.BaseAdd(System.Configuration.ConfigurationElement)">
            <summary>
            Overrides the base add method to link parents.
            </summary>
            <param name="element">The element.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="element"/> is <see langword="null" />.</exception>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The element is of the wrong type.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.CreateNewElement">
            <summary>
              When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement"/>.
            </summary>
            <returns>A new <see cref="T:System.Configuration.ConfigurationElement"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
              Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            <param name="element">
              The <see cref="T:System.Configuration.ConfigurationElement"/> to return the key for.
            </param>
            <returns>
              An <see cref="T:System.Object"/> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.GetElementKey(`1)">
            <summary>
              Gets the element key.
            </summary>
            <param name="element">The element whose key we want to retrieve.</param>
            <returns>
              An <see cref="T:System.Object"/> that acts as the key for the specified element.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.Remove(`0)">
            <summary>
              Removes an element by the specified key.
            </summary>
            <param name="key">The key of the element to remove.</param>
            <exception cref="T:System.Exception">
              The element does not exist in the collection, the element has already been removed,
               or the element cannot be removed because the collection type is not
              <see cref="T:System.Configuration.ConfigurationElementCollectionType">AddRemoveClearMap</see>
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.Remove(`1)">
            <summary>
              Removes the specified element by value.
            </summary>
            <param name="value">The element to remove.</param>
            <exception cref="T:System.Exception">
              The element does not exist in the collection, the element has already been removed,
               or the element cannot be removed because the collection type is not
              <see cref="T:System.Configuration.ConfigurationElementCollectionType">AddRemoveClearMap</see>
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.RemoveAt(System.Int32)">
            <summary>
              Removes the element at the specified index.
            </summary>
            <param name="index">The index of the element to remove.</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">
              <para>The configuration is read-only.</para>
              <para>-or-</para>
              <para>The index is less than 0 or greater than the number of elements in the collection.</para>
              <para>-or-</para>
              <para>The element has already been removed.</para>
              <para>-or-</para>
              <para>The element has been locked at a higher level.</para>
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.GetKey(System.Int32)">
            <summary>
              Gets the key for the element at the specified index.
            </summary>
            <param name="index">The index of the element.</param>
            <returns>
              The key for the element at the specified <paramref name="index"/>.
            </returns>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">
              <para><paramref name="index"/> is less than 0.</para>
              <para>-or-</para>
              <para>There is no element at the specified <paramref name="index"/>.</para>
            </exception>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.WebApplications#Utilities#Configuration#IInternalConfigurationElement#Section">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationElementCollection`2.IsDisposed">
            <inheritdoc />
        </member>
        <member name="T:WebApplications.Utilities.Configuration.ConfigurationSection`1">
            <summary>
              Represents a configuration element in a configuration file.
            </summary>
            <summary>
            Provides extended functionality for <see cref="T:System.Configuration.ConfigurationSection" />.
            Allows easy configuration retrieval.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:WebApplications.Utilities.Configuration.ConfigurationSection`1._elements">
            <summary>
            Holds unknown elements as strings so that we always get a clean copy and we can detect changes easily. 
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Configuration.ConfigurationSection`1._isModified">
            <summary>
            Indicates whether we have any changes.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Configuration.ConfigurationSection`1._children">
            <summary>
            The children.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Configuration.ConfigurationSection`1._properties">
            <summary>
            The properties, strongly typed!
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationSection`1.Init">
            <summary>
            Initializes this instance.
            </summary>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">Invalid property type.</exception>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationSection`1.WebApplications#Utilities#Configuration#IInternalConfigurationElement#Parent">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationSection`1.Parent">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationSection`1.Section">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationSection`1.WebApplications#Utilities#Configuration#IInternalConfigurationElement#ConfigurationElementName">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationSection`1.FullPath">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationSection`1.ConfigurationElementName">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationSection`1.Children">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationSection`1.WebApplications#Utilities#Configuration#IInternalConfigurationElement#Initialize">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationSection`1.WebApplications#Utilities#Configuration#IInternalConfigurationElement#OnChanged(System.String)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationSection`1.DoChanged(System.String)">
            <summary>
            Called when the OnChange event is called.
            </summary>
            <param name="fullPath">The full path.</param>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationSection`1.GetProperty``1(System.String)">
            <summary>
              Gets the configuration property.
            </summary>
            <typeparam name="T">The property type.</typeparam>
            <param name="propertyName">The name of the property to get.</param>
            <returns>The specified property, attribute or child element.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationSection`1.SetProperty``1(System.String,``0)">
            <summary>
              Sets the configuration property to the value specified.
            </summary>
            <typeparam name="T">The property type.</typeparam>
            <param name="propertyName">The name of the property to set.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationSection`1.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> with the specified property name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>System.Object.</returns>
            <exception cref="T:System.ObjectDisposedException" accessor="get">The current section <see cref="P:WebApplications.Utilities.Configuration.ConfigurationSection`1.IsDisposed">is disposed</see>.</exception>
            <exception cref="T:System.ObjectDisposedException" accessor="set">The current section <see cref="P:WebApplications.Utilities.Configuration.ConfigurationSection`1.IsDisposed">is disposed</see>.</exception>
            <exception cref="T:System.ArgumentNullException" accessor="get"><paramref name="propertyName"/> is <see langword="null" /> or empty.</exception>
            <exception cref="T:System.ArgumentNullException" accessor="set"><paramref name="propertyName"/> is <see langword="null" /> or empty.</exception>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationSection`1.Properties">
            <summary>
            Gets the properties.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationSection`1.Keys">
            <summary>
            Gets the keys.
            </summary>
            <value>The keys.</value>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationSection`1.Values">
            <summary>
            Gets the values.
            </summary>
            <value>The values.</value>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationSection`1.PropertyValues">
            <summary>
            Gets the property values.
            </summary>
            <value>The property values.</value>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationSection`1.GetElement(System.Xml.Linq.XName)">
            <summary>
            Gets this configuration element's child element by name.
            </summary>
            <param name="elementName">Name of the child element to retrieve.</param>
            <returns>The child element; otherwise <see langword="null"/>.</returns>
            <remarks><para>This is a clone of the child element, modifying it will have no effect on the configuration.</para>
            <para>To update the configuration, use <see cref="M:WebApplications.Utilities.Configuration.ConfigurationSection`1.SetElement(System.Xml.Linq.XName,System.Xml.Linq.XElement)"/></para></remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="elementName"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationSection`1.SetElement(System.Xml.Linq.XName,System.Xml.Linq.XElement)">
            <summary>
            Sets the configuration element's child element.
            </summary>
            <param name="elementName">Name of the child element.</param>
            <param name="element">The child element.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="elementName"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="element"/> is <see langword="null" />.</exception>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The <paramref name="element">element's</paramref> <see cref="P:System.Xml.Linq.XElement.Name">name</see> doesn't match the specified <paramref name="elementName">element name</paramref>.</exception>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The configuration is read only.</exception>
            <exception cref="T:System.ObjectDisposedException">The current section <see cref="P:WebApplications.Utilities.Configuration.ConfigurationSection`1.IsDisposed">is disposed</see>.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationSection`1.WebApplications#Utilities#Configuration#IInternalConfigurationElement#OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <inheritdoc />
            <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Xml.XmlReader" /> is not positioned on a recognized node type.</exception>
            <exception cref="T:System.Xml.XmlException">The underlying <see cref="T:System.Xml.XmlReader" /> throws an exception.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationSection`1.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <inheritdoc />
            <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Xml.XmlReader" /> is not positioned on a recognized node type.</exception>
            <exception cref="T:System.Xml.XmlException">The underlying <see cref="T:System.Xml.XmlReader" /> throws an exception.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationSection`1.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <inheritdoc />
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The current attribute is locked at a higher configuration level.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationSection`1.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationSection`1.IsModified">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationSection`1.Reset(System.Configuration.ConfigurationElement)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationSection`1.ResetModified">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationSection`1.ElementNames">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationSection`1.Elements">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationSection`1.ElementDictionary">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationSection`1.ElementsClone">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationSection`1.ToString">
            <inheritdoc />
        </member>
        <member name="T:WebApplications.Utilities.Configuration.ConfigurationSection`1.ConfigurationChangedEventHandler">
            <summary>
            Handles changes in configuration.
            </summary>
            <param name="sender">The sender (the configuration section).</param>
            <param name="e">The <see cref="T:WebApplications.Utilities.Configuration.ConfigurationSection`1.ConfigurationChangedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:WebApplications.Utilities.Configuration.ConfigurationSection`1.ConfigurationLoadErrorEventHandler">
            <summary>
            Handles load errors.
            </summary>
            <param name="e">The <see cref="T:WebApplications.Utilities.Configuration.ConfigurationSection`1.ConfigurationLoadEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="F:WebApplications.Utilities.Configuration.ConfigurationSection`1._activeChangeAction">
            <summary>
            The change action buffers all changes so that configuration changes don't fire too frequently.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Configuration.ConfigurationSection`1._changeAction">
            <summary>
            The change action buffers all changes so that configuration changes don't fire too frequently.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationSection`1.#cctor">
            <summary>
            Initializes static members of the <see cref="T:WebApplications.Utilities.Configuration.ConfigurationSection`1" /> class.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationSection`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Configuration.ConfigurationSection`1" /> class.
            </summary>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The selected value conflicts with a value that is already defined.</exception>
        </member>
        <member name="F:WebApplications.Utilities.Configuration.ConfigurationSection`1._activeLock">
            <summary>
            Lock for controlling access to the active configuration.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Configuration.ConfigurationSection`1._active">
            <summary>
              Holds the currently active configuration section.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationSection`1.Create">
            <summary>
            Creates an instance of this section, and initializes it properly.
            </summary>
            <returns>A <see cref="T:WebApplications.Utilities.Configuration.ConfigurationSection`1"/> of the correct type.</returns>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">Error during initialization.</exception>
        </member>
        <member name="F:WebApplications.Utilities.Configuration.ConfigurationSection`1.SectionName">
            <summary>
              Gets the name of the configuration section.
            </summary>
            <remarks>
              <para>If you do not explicitly define the section name using the <see cref="T:WebApplications.Utilities.Configuration.ConfigurationSectionAttribute"/>
              then the name is calculated automatically from the type name using the following algorithm:</para>
              <list type="number">
                <item><description>Take the type name.</description></item>
                <item><description>Remove one of the following suffixes if present -
                'ConfigurationSection', 'Configuration', 'Section', 'Config'.</description></item>
                <item><description>Make the first character lower case (camel case).</description></item>
              </list>
              <para>For example: 'MyClassConfigurationSection' will have a name of 'myClass'.</para>
            </remarks>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationSection`1.Active">
            <summary>
              Gets or sets the active configuration.
            </summary>
            <exception cref="T:System.ObjectDisposedException" accessor="set">You cannot set the active configuration section to
            a <see cref="P:WebApplications.Utilities.Configuration.ConfigurationSection`1.IsDisposed">disposed</see> section.</exception>
            <exception cref="T:System.Configuration.ConfigurationErrorsException" accessor="get">Error during initialization.</exception>
            <exception cref="T:System.UnauthorizedAccessException" accessor="get">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.IOException" accessor="get">An I/O error occurs. </exception>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationSection`1.IsActive">
            <summary>
              Gets a <see cref="T:System.Boolean"/> value indicating whether this instance is the active configuration.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationSection`1.Xmlns">
            <summary>
              Gets the XMLNS.
            </summary>
            <remarks>
              This allows a configuration section to reference a specific namespace for Visual Studio intellisense support.
              Without this property, specifying a namespace on a configuration section will cause the configuration section
              to fail to load at runtime.
            </remarks>
        </member>
        <member name="E:WebApplications.Utilities.Configuration.ConfigurationSection`1.ActiveChanged">
            <summary>
              Occurs when the <see cref="P:WebApplications.Utilities.Configuration.ConfigurationSection`1.Active"/> ConfigurationSection is changed on disk.
            </summary>
        </member>
        <member name="E:WebApplications.Utilities.Configuration.ConfigurationSection`1.ConfigurationLoadError">
            <summary>
            Occurs when an error is thrown loading a configuration.
            </summary>
        </member>
        <member name="E:WebApplications.Utilities.Configuration.ConfigurationSection`1.Changed">
            <summary>
              Occurs when the <see cref="P:WebApplications.Utilities.Configuration.ConfigurationSection`1.Active"/> ConfigurationSection is changed on disk.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationSection`1.GetOrAdd(System.Configuration.Configuration)">
            <summary>
            Gets the section from the specified configuration, or adds it.
            </summary>
            <param name="configuration">The configuration.</param>
            <returns>T.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="configuration"/> is <see langword="null" />.</exception>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">Error during initialization.</exception>
            <exception cref="T:System.ObjectDisposedException">The current section <see cref="P:WebApplications.Utilities.Configuration.ConfigurationSection`1.IsDisposed">is disposed</see>.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">The specified path is invalid (for example, it is on an unmapped drive). </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationSection`1.LoadOrCreate(System.String)">
            <summary>
            Loads the configuration section from the specified file.
            </summary>
            <param name="filename">The configuration file path.</param>
            <returns>A new configuration section.</returns>
            <remarks><para>If the file does not exist, it will try to create one.</para></remarks>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">Error during initialization.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">The specified path is invalid (for example, it is on an unmapped drive). </exception>
            <exception cref="T:System.ArgumentException"><paramref name="filename" /> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />. </exception>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationSection`1.Save(System.Configuration.ConfigurationSaveMode,System.Boolean)">
            <summary>
            Saves the section.
            </summary>
            <param name="saveMode">The save mode.</param>
            <param name="forceSaveAll">
              <see langword="true" /> to save even if the configuration was not modified.</param>
            <returns>A new saved configuration section.</returns>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The current section is not associated with a configuration.</exception>
            <remarks>After saving a configuration section it is disposed, so you must use the returned section.</remarks>
            <exception cref="T:System.ObjectDisposedException">The current section <see cref="P:WebApplications.Utilities.Configuration.ConfigurationSection`1.IsDisposed">is disposed</see>.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">The specified path is invalid (for example, it is on an unmapped drive). </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationSection`1.SaveAs(System.String,System.Configuration.ConfigurationSaveMode,System.Boolean)">
            <summary>
            Saves as.
            </summary>
            <param name="filename">The filename.</param>
            <param name="saveMode">The save mode.</param>
            <param name="forceSaveAll">
              <see langword="true" /> to save even if the configuration was not modified.</param>
            <returns>A new saved configuration section.</returns>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The current section is not associated with a configuration.</exception>
            <remarks>After saving a configuration section it is disposed, so you must use the returned section.</remarks>
            <exception cref="T:System.ObjectDisposedException">The current section <see cref="P:WebApplications.Utilities.Configuration.ConfigurationSection`1.IsDisposed">is disposed</see>.</exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">The specified path is invalid (for example, it is on an unmapped drive). </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.ArgumentException"><paramref name="filename" /> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationSection`1.WebApplications#Utilities#Configuration#IInternalConfigurationElement#Section">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationSection`1.WebApplications#Utilities#Configuration#IInternalConfigurationSection#OnFileChanged(System.String)">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationSection`1.HasFile">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationSection`1.FilePath">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationSection`1.IsDisposed">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationSection`1.DeserializeSection(System.Xml.XmlReader)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationSection`1.Dispose">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationSection`1.Dispose(System.Boolean)">
            <summary>
            Disposes the specified instance.
            </summary>
            <param name="disposing">Whether this is disposing or finalizing.</param>
            <remarks>
            <para><paramref name="disposing"/> indicates whether the method was invoked from the 
            <see cref="M:System.IDisposable.Dispose"/> implementation or from the finalizer. The implementation should check the
            parameter before  accessing other reference objects. Such objects should  only be accessed when the method 
            is called from the <see cref="M:System.IDisposable.Dispose"/> implementation (when the <paramref name="disposing"/> 
            parameter is equal to <see langword="true"/>). If the method is invoked from the finalizer
            (disposing is false), other objects should not be accessed. The reason is that objects are finalized in an 
            unpredictable order and so they, or any of their dependencies, might already have been finalized.</para>
            </remarks>
        </member>
        <member name="T:WebApplications.Utilities.Configuration.ConfigurationSection`1.ConfigurationChangedEventArgs">
            <summary>
            Information about the configuration changed event.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Configuration.ConfigurationSection`1.ConfigurationChangedEventArgs.Section">
            <summary>
            The section.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Configuration.ConfigurationSection`1.ConfigurationChangedEventArgs._changes">
            <summary>
            The changes.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationSection`1.ConfigurationChangedEventArgs.#ctor(`0,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Configuration.ConfigurationSection`1.ConfigurationChangedEventArgs" /> class.
            </summary>
            <param name="section">The section.</param>
            <param name="changes">The changes.</param>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationSection`1.ConfigurationChangedEventArgs.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationSection`1.ConfigurationChangedEventArgs.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationSection`1.ConfigurationChangedEventArgs.Contains(System.String)">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationSection`1.ConfigurationChangedEventArgs.Count">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationSection`1.ConfigurationChangedEventArgs.ToString">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationSection`1.ConfigurationChangedEventArgs.WasChanged(System.String)">
            <summary>
            Checks whether the <paramref name="path"/> was affected by a change.
            </summary>
            <param name="path">The path.</param>
            <returns><see langword="true"/> if the <paramref name="path"/> starts with any of the changed paths; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Configuration.ConfigurationSection`1.ConfigurationLoadEventArgs">
            <summary>
            Information about exceptions raised when loading a configuration.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Configuration.ConfigurationSection`1.ConfigurationLoadEventArgs.SectionName">
            <summary>
            The section name.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Configuration.ConfigurationSection`1.ConfigurationLoadEventArgs._exceptionDispatchInfo">
            <summary>
            The exception dispatch information.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationSection`1.ConfigurationLoadEventArgs.#ctor(System.String,System.Runtime.ExceptionServices.ExceptionDispatchInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Configuration.ConfigurationSection`1.ConfigurationLoadEventArgs" /> class.
            </summary>
            <param name="sectionName">Name of the section.</param>
            <param name="exceptionDispatchInfo">The exception dispatch information.</param>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConfigurationSection`1.ConfigurationLoadEventArgs.Exception">
            <summary>
            Gets the exception.
            </summary>
            <value>The exception.</value>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationSection`1.ConfigurationLoadEventArgs.Throw">
            <summary>
            Throws the exception again.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Configuration.ConfigurationFileWatcher">
            <summary>
            Watches for changes to the configuration file for the application.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Configuration.ConfigurationFileWatcher._watchers">
            <summary>
            The file system watchers.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Configuration.ConfigurationFileWatcher._sections">
            <summary>
            The sections interested in the file.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Configuration.ConfigurationFileWatcher._watcher">
            <summary>
            The file system watcher.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Configuration.ConfigurationFileWatcher._eventAction">
            <summary>
            The event action that buffers events.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Configuration.ConfigurationFileWatcher.Path">
            <summary>
            The path being watched.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationFileWatcher.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Configuration.ConfigurationFileWatcher"/> class.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationFileWatcher.WatcherOnChanged(System.Object[][])">
            <summary>
            Fired when a watcher is changed.
            </summary>
            <param name="arguments">The arguments.</param>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationFileWatcher.Watch(WebApplications.Utilities.Configuration.IInternalConfigurationSection)">
            <summary>
            Watches the specified <paramref name="section"/>.
            </summary>
            <param name="section">The section.</param>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationFileWatcher.UnWatch(WebApplications.Utilities.Configuration.IInternalConfigurationSection)">
            <summary>
            Removes any watch on the specified <paramref name="section"/>.
            </summary>
            <param name="section">The section.</param>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationFileWatcher.Dispose">
            <summary>
            Disposes this instance.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationFileWatcher.ToString">
            <inheritdoc />
        </member>
        <member name="T:WebApplications.Utilities.Configuration.Validators.DurationValidator">
            <summary>
            Provides validation of a <see cref="T:NodaTime.Duration"/> object.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.Validators.DurationValidator.#ctor(NodaTime.Duration,NodaTime.Duration,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Configuration.Validators.DurationValidator" /> class.
            </summary>
            <param name="minValue">The minimum duration allowed to pass validation (inclusive).</param>
            <param name="maxValue">The maximum duration allowed to pass validation (exclusive).</param>
            <param name="rangeIsExclusive">If set to <see langword="true" /> the value must be outside the given range.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="minValue" /> is greater than <paramref name="maxValue" />.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.Validators.DurationValidator.CanValidate(System.Type)">
            <summary>
            Determines whether this instance can validate the specified type.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.Validators.DurationValidator.Validate(System.Object)">
            <summary>
            Determines whether the value of an object is valid. 
            </summary>
            <param name="value">The object value.</param>
        </member>
        <member name="T:WebApplications.Utilities.Configuration.Validators.DurationValidatorAttribute">
            <summary>
            Declaratively instructs the .NET Framework to perform duration validation on a configuration property. This class cannot be inherited.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Configuration.Validators.DurationValidatorAttribute.DurationMinValue">
            <summary>
            The duration minimum value as a string.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Configuration.Validators.DurationValidatorAttribute.DurationMaxValue">
            <summary>
            The duration maximum value as a string.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.Validators.DurationValidatorAttribute.MinValue">
            <summary>
            Gets the minimum value.
            </summary>
            <value>
            The minimum value.
            </value>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.Validators.DurationValidatorAttribute.MaxValue">
            <summary>
            Gets the maximum value.
            </summary>
            <value>
            The maximum value.
            </value>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.Validators.DurationValidatorAttribute.MinValueString">
            <summary>
            Gets or sets the minimum value.
            </summary>
            <value>
            The minimum value.
            </value>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.Validators.DurationValidatorAttribute.MaxValueString">
            <summary>
            Gets or sets the maximum value.
            </summary>
            <value>
            The maximum value.
            </value>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.Validators.DurationValidatorAttribute.ExcludeRange">
            <summary>
            Gets or sets a value that indicates whether to include or exclude the values in the range as defined by <see cref="P:WebApplications.Utilities.Configuration.Validators.DurationValidatorAttribute.MinValueString"/> and <see cref="P:WebApplications.Utilities.Configuration.Validators.DurationValidatorAttribute.MaxValueString"/>.
            </summary>
            <value>
              <see langword="true" /> if the value must be excluded; otherwise, <see langword="false" />. The default is <see langword="false" />.
            </value>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.Validators.DurationValidatorAttribute.Parse(System.String)">
            <summary>
            Parses the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.Validators.DurationValidatorAttribute.ValidatorInstance">
            <summary>
            Gets the validator attribute instance.
            </summary>
            <returns>
            The current <see cref="T:System.Configuration.ConfigurationValidatorBase"/>.
            </returns>
        </member>
        <member name="T:WebApplications.Utilities.Configuration.ConfigurationSectionAttribute">
            <summary>
              An attribute that allows additional information to be specified for a Configuration Section.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Configuration.ConfigurationSectionAttribute.Name">
            <summary>
              The configuration section's name.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConfigurationSectionAttribute.#ctor(System.String)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Configuration.ConfigurationSectionAttribute"/> class.
            </summary>
            <param name="name">The name of the configuration section.</param>
        </member>
        <member name="T:WebApplications.Utilities.Configuration.ConstructorConfigurationElement">
            <summary>
              A configuration element that is used for object construction.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConstructorConfigurationElement.Type">
            <summary>
              Gets or sets the type of the element.
            </summary>
            <value>The type of the object to construct.</value>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConstructorConfigurationElement.Parameters">
            <summary>
              Gets or sets the parameters to be passed to the constructor.
            </summary>
            <value>
              The <see cref="T:WebApplications.Utilities.Configuration.ParameterCollection"/>,
              which is all of the child elements within the parameters element in the configuration file.
            </value>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConstructorConfigurationElement.GetInstance``1">
            <summary>
              Gets an instance of the <see cref="T:System.Object"/>.
            </summary>
            <returns>An instance of an object of type <typeparamref name="T"/>.</returns>
            <remarks>
              This should only be called once as it calls the <see cref="M:WebApplications.Utilities.Configuration.ConstructorConfigurationElement.GetConstructor``1"/> method each time.
              Instead you should use <see cref="M:WebApplications.Utilities.Configuration.ConstructorConfigurationElement.GetConstructor``1"/> where possible and store the resultant
              <see cref="T:System.Func`1"/>, which can then be called repeatedly to create new instances.
            </remarks>
            <exception cref="T:System.InvalidOperationException">
              <para>The configuration system found multiple potential constructor matches.</para>
              <para>-or-</para>
              <para>The configuration system couldn't find a constructor with the relevant parameters.</para>
              <para>-or-</para>
              <para>The configuration system cannot assign the created type to the return type.</para>
            </exception>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The required type property is not set.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConstructorConfigurationElement.GetConstructor``1">
            <summary>
              Gets the constructor as an action, which can be used to create instances of the specified object.
            </summary>
            <typeparam name="T">The type to get the constructor for.</typeparam>
            <returns>
              Returns a <see cref="T:System.Func`1"/> that can be used to create an instance of the specified object.
            </returns>
            <remarks>
              This should only be called once as it uses reflection.
              Store the resulting <see cref="T:System.Func`1"/> where possible and use it to repeatedly create new instances.
            </remarks>
            <exception cref="T:System.InvalidOperationException">
              <para>The configuration system found multiple potential constructor matches.</para>
              <para>-or-</para>
              <para>The configuration system couldn't find a constructor with the relevant parameters.</para>
              <para>-or-</para>
              <para>The configuration system cannot assign the created type to the return type.</para>
            </exception>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">The required type property is not set.</exception>
        </member>
        <member name="T:WebApplications.Utilities.Configuration.ConstructorConfigurationElement.PInfo">
            <summary>
              Used to hold information about parameters.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Configuration.ConstructorConfigurationElement.PInfo.IsRequired">
            <summary>
              A <see cref="T:System.Boolean"/> value which indicates whether the parameter is required in the constructor.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Configuration.ConstructorConfigurationElement.PInfo.Name">
            <summary>
              The name of the parameter.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Configuration.ConstructorConfigurationElement.PInfo._converter">
            <summary>
              Gets or sets the type converter.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Configuration.ConstructorConfigurationElement.PInfo._valueStr">
            <summary>
              The <see cref="T:System.String"/> equivalent of the value.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConstructorConfigurationElement.PInfo.#ctor(WebApplications.Utilities.Configuration.ParameterElement)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Configuration.ConstructorConfigurationElement.PInfo"/> class.
            </summary>
            <param name="element">The parameter element.</param>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConstructorConfigurationElement.PInfo.#ctor(System.Configuration.ConfigurationProperty,System.Object)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Configuration.ConstructorConfigurationElement.PInfo"/> class.
            </summary>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConstructorConfigurationElement.PInfo.Type">
            <summary>
              The type (if specified).
            </summary>
            <exception cref="T:System.ArgumentNullException">
              The type being set is a <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
              <para>Cannot create a default type converter for the parameter value specified.</para>
              <para>-or-</para>
              <para>Couldn't convert the <see cref="T:System.String"/> value to the type specified.</para>
              <para>-or-</para>
              <para>The parameter type is not assignable from the type returned by the converter.</para>
              <para>-or-</para>
              <para>The converter returned a <see langword="null"/> value for a non-nullable type.</para>
            </exception>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConstructorConfigurationElement.PInfo.ValueSet">
            <summary>
              Gets or sets a <see cref="T:System.Boolean"/> value indicating whether the value is set.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ConstructorConfigurationElement.PInfo.Value">
            <summary>
              The value parsed from the <see cref="T:System.String"/> equivalent of the value.
            </summary>
            <exception cref="T:System.InvalidOperationException">
              No value has been set for the parameter requested.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ConstructorConfigurationElement.PInfo.ToString">
            <summary>
              Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
              A <see cref="T:System.String"/> representation of this instance.
            </returns>
        </member>
        <member name="T:WebApplications.Utilities.Configuration.ParameterCollection">
            <summary>
              Holds a collection of parameters for object construction.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Configuration.ParameterCollection.GetElementKey(WebApplications.Utilities.Configuration.ParameterElement)">
            <summary>
              Gets the element key, which is taken from the <see cref="P:WebApplications.Utilities.Configuration.ParameterElement.Name">name</see> property.
            </summary>
            <param name="element">The parameter element.</param>
            <returns>
              The key, which is the <see cref="P:WebApplications.Utilities.Configuration.ParameterElement.Name">name</see> of the element.
            </returns>
        </member>
        <member name="T:WebApplications.Utilities.Configuration.ParameterElement">
            <summary>
              Holds a parameter used for object construction.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ParameterElement.Name">
            <summary>
              Gets or sets the parameter's name.
            </summary>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">
              The configuration property is read-only or locked.
            </exception>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ParameterElement.Value">
            <summary>
              Gets or sets the parameter's value.
            </summary>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">
              The configuration property is read-only or locked.
            </exception>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ParameterElement.IsRequired">
            <summary>
              Gets or sets a <see cref="T:System.Boolean"/> value indicating whether this parameter is required.
            </summary>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">
              The configuration property is read-only or locked.
            </exception>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ParameterElement.Type">
            <summary>
              Gets or sets the type of the parameter.
            </summary>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">
              The configuration property is read-only or locked.
            </exception>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.ParameterElement.TypeConverter">
            <summary>
              Gets or sets the type convertor, which is used to convert a textual
              representation of the <see cref="T:System.Object"/> to the actual desired type.
            </summary>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">
              The configuration property is read-only or locked.
            </exception>
        </member>
        <member name="T:WebApplications.Utilities.Configuration.UtilityConfiguration">
            <summary>
            The configuration section for the Utility library.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.UtilityConfiguration.TimeZoneDB">
            <summary>
            Gets or sets the file path for the TimeZone DB.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Configuration.UtilityConfiguration.ISO4217">
            <summary>
            Gets or sets the file path for the ISO 4217 currency information file.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.ConfigurationExtensions">
            <summary>
            Extension methods for <see cref="T:WebApplications.Utilities.Configuration.IConfigurationElement"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.ConfigurationExtensions._configRecordField">
            <summary>
            The <see cref="T:System.Reflection.FieldInfo"/> corresponding to <c>System.Configuration.BaseConfigurationRecord._configRecord</c>.
            </summary>[NotNull]
        </member>
        <member name="F:WebApplications.Utilities.ConfigurationExtensions._getConfigFilePaths">
            <summary>
            Gets the associated configuration file paths.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.ConfigurationExtensions.GetConfigFilePaths(System.Configuration.Configuration)">
            <summary>
            Gets the configuration file paths for a given <see cref="T:System.Configuration.Configuration"/>.
            </summary>
            <param name="configuration">The configuration.</param>
            <returns>The file paths that make up the configuration.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ConfigurationExtensions.#cctor">
            <summary>
            Initializes static members of the <see cref="T:WebApplications.Utilities.Configuration.ConfigurationElement" /> class.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.ConfigurationExtensions.GetFullPath(WebApplications.Utilities.Configuration.IConfigurationElement,System.String)">
            <summary>
            Gets the full path.
            </summary>
            <param name="parent">The parent.</param>
            <param name="configurationElementName">The property.</param>
            <returns>The full path.</returns>
        </member>
        <member name="F:WebApplications.Utilities.ConfigurationExtensions.EventBufferMs">
            <summary>
            The time in milliseconds that events are buffered for.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.ConfigurationExtensions.IsWeb">
            <summary>
            <see langword="true"/> if the library is running in ASP.NET.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Converters.XNamespaceConverter">
            <summary>
             Providers methods for converting types to/from the <see cref="T:NodaTime.Duration"/> type.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Converters.XNamespaceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from. </param>
        </member>
        <member name="M:WebApplications.Utilities.Converters.XNamespaceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture. </param>
            <param name="value">The <see cref="T:System.Object"/> to convert. </param>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="M:WebApplications.Utilities.Converters.XNamespaceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to. </param>
        </member>
        <member name="M:WebApplications.Utilities.Converters.XNamespaceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/>. If null is passed, the current culture is assumed. </param>
            <param name="value">The <see cref="T:System.Object"/> to convert. </param>
            <param name="destinationType">The <see cref="T:System.Type"/> to convert the <paramref name="value"/> parameter to. </param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="destinationType"/> parameter is null. </exception>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="T:WebApplications.Utilities.Converters.DurationConverter">
            <summary>
             Providers methods for converting types to/from the <see cref="T:NodaTime.Duration"/> type.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Converters.DurationConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from. </param>
        </member>
        <member name="M:WebApplications.Utilities.Converters.DurationConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture. </param>
            <param name="value">The <see cref="T:System.Object"/> to convert. </param>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="M:WebApplications.Utilities.Converters.DurationConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to. </param>
        </member>
        <member name="M:WebApplications.Utilities.Converters.DurationConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/>. If null is passed, the current culture is assumed. </param>
            <param name="value">The <see cref="T:System.Object"/> to convert. </param>
            <param name="destinationType">The <see cref="T:System.Type"/> to convert the <paramref name="value"/> parameter to. </param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="destinationType"/> parameter is null. </exception>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="T:WebApplications.Utilities.Converters.InstantConverter">
            <summary>
             Providers methods for converting types to/from the <see cref="T:NodaTime.Instant"/> type.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Converters.InstantConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from. </param>
        </member>
        <member name="M:WebApplications.Utilities.Converters.InstantConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture. </param>
            <param name="value">The <see cref="T:System.Object"/> to convert. </param>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="M:WebApplications.Utilities.Converters.InstantConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to. </param>
        </member>
        <member name="M:WebApplications.Utilities.Converters.InstantConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/>. If null is passed, the current culture is assumed. </param>
            <param name="value">The <see cref="T:System.Object"/> to convert. </param>
            <param name="destinationType">The <see cref="T:System.Type"/> to convert the <paramref name="value"/> parameter to. </param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="destinationType"/> parameter is null. </exception>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="T:WebApplications.Utilities.Converters.LocalDateTimeConverter">
            <summary>
             Providers methods for converting types to/from the <see cref="T:NodaTime.LocalDateTime"/> type.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Converters.LocalDateTimeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from. </param>
        </member>
        <member name="M:WebApplications.Utilities.Converters.LocalDateTimeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture. </param>
            <param name="value">The <see cref="T:System.Object"/> to convert. </param>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="M:WebApplications.Utilities.Converters.LocalDateTimeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to. </param>
        </member>
        <member name="M:WebApplications.Utilities.Converters.LocalDateTimeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/>. If null is passed, the current culture is assumed. </param>
            <param name="value">The <see cref="T:System.Object"/> to convert. </param>
            <param name="destinationType">The <see cref="T:System.Type"/> to convert the <paramref name="value"/> parameter to. </param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="destinationType"/> parameter is null. </exception>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="T:WebApplications.Utilities.Converters.PeriodConverter">
            <summary>
             Providers methods for converting types to/from the <see cref="T:NodaTime.Period"/> type.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Converters.PeriodConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from. </param>
        </member>
        <member name="M:WebApplications.Utilities.Converters.PeriodConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture. </param>
            <param name="value">The <see cref="T:System.Object"/> to convert. </param>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="M:WebApplications.Utilities.Converters.PeriodConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to. </param>
        </member>
        <member name="M:WebApplications.Utilities.Converters.PeriodConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/>. If null is passed, the current culture is assumed. </param>
            <param name="value">The <see cref="T:System.Object"/> to convert. </param>
            <param name="destinationType">The <see cref="T:System.Type"/> to convert the <paramref name="value"/> parameter to. </param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="destinationType"/> parameter is null. </exception>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="T:WebApplications.Utilities.Converters.SimplifiedTypeNameConverter">
            <summary>
            A <see cref="T:System.Configuration.ConfigurationConverterBase"/> that provides simplified type names that are more robust for round-tripping.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Converters.SimplifiedTypeNameConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <inheritdoc />
            <exception cref="T:System.ArgumentException"><paramref name="value"/> must be a <see cref="T:System.Type"/>.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Converters.SimplifiedTypeNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <inheritdoc />
            <exception cref="T:System.ArgumentException"><paramref name="data"/> must be the name of a valid <see cref="T:System.Type"/>.</exception>
        </member>
        <member name="T:WebApplications.Utilities.Converters.ZonedDateTimeConverter">
            <summary>
             Providers methods for converting types to/from the <see cref="T:NodaTime.ZonedDateTime"/> type.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Converters.ZonedDateTimeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from. </param>
        </member>
        <member name="M:WebApplications.Utilities.Converters.ZonedDateTimeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture. </param>
            <param name="value">The <see cref="T:System.Object"/> to convert. </param>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="M:WebApplications.Utilities.Converters.ZonedDateTimeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to. </param>
        </member>
        <member name="M:WebApplications.Utilities.Converters.ZonedDateTimeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/>. If null is passed, the current culture is assumed. </param>
            <param name="value">The <see cref="T:System.Object"/> to convert. </param>
            <param name="destinationType">The <see cref="T:System.Type"/> to convert the <paramref name="value"/> parameter to. </param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="destinationType"/> parameter is null. </exception>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="T:WebApplications.Utilities.Action`17">
            <summary>
            Encapsulates a method that has 17 parameters and does not return a value.
            </summary>
            <typeparam name="T1">The type of parameter 1 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of parameter 2 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of parameter 3 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of parameter 4 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of parameter 5 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of parameter 6 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of parameter 7 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of parameter 8 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of parameter 9 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of parameter 10 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of parameter 11 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of parameter 12 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of parameter 13 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of parameter 14 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of parameter 15 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of parameter 16 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T17">The type of parameter 17 of the method that this delegate encapsulates.</typeparam>
            <param name="arg1">Parameter 1 of the method that this delegate encapsulates.</param>
            <param name="arg2">Parameter 2 of the method that this delegate encapsulates.</param>
            <param name="arg3">Parameter 3 of the method that this delegate encapsulates.</param>
            <param name="arg4">Parameter 4 of the method that this delegate encapsulates.</param>
            <param name="arg5">Parameter 5 of the method that this delegate encapsulates.</param>
            <param name="arg6">Parameter 6 of the method that this delegate encapsulates.</param>
            <param name="arg7">Parameter 7 of the method that this delegate encapsulates.</param>
            <param name="arg8">Parameter 8 of the method that this delegate encapsulates.</param>
            <param name="arg9">Parameter 9 of the method that this delegate encapsulates.</param>
            <param name="arg10">Parameter 10 of the method that this delegate encapsulates.</param>
            <param name="arg11">Parameter 11 of the method that this delegate encapsulates.</param>
            <param name="arg12">Parameter 12 of the method that this delegate encapsulates.</param>
            <param name="arg13">Parameter 13 of the method that this delegate encapsulates.</param>
            <param name="arg14">Parameter 14 of the method that this delegate encapsulates.</param>
            <param name="arg15">Parameter 15 of the method that this delegate encapsulates.</param>
            <param name="arg16">Parameter 16 of the method that this delegate encapsulates.</param>
            <param name="arg17">Parameter 17 of the method that this delegate encapsulates.</param>
        </member>
        <member name="T:WebApplications.Utilities.Action`18">
            <summary>
            Encapsulates a method that has 18 parameters and does not return a value.
            </summary>
            <typeparam name="T1">The type of parameter 1 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of parameter 2 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of parameter 3 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of parameter 4 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of parameter 5 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of parameter 6 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of parameter 7 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of parameter 8 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of parameter 9 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of parameter 10 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of parameter 11 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of parameter 12 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of parameter 13 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of parameter 14 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of parameter 15 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of parameter 16 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T17">The type of parameter 17 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T18">The type of parameter 18 of the method that this delegate encapsulates.</typeparam>
            <param name="arg1">Parameter 1 of the method that this delegate encapsulates.</param>
            <param name="arg2">Parameter 2 of the method that this delegate encapsulates.</param>
            <param name="arg3">Parameter 3 of the method that this delegate encapsulates.</param>
            <param name="arg4">Parameter 4 of the method that this delegate encapsulates.</param>
            <param name="arg5">Parameter 5 of the method that this delegate encapsulates.</param>
            <param name="arg6">Parameter 6 of the method that this delegate encapsulates.</param>
            <param name="arg7">Parameter 7 of the method that this delegate encapsulates.</param>
            <param name="arg8">Parameter 8 of the method that this delegate encapsulates.</param>
            <param name="arg9">Parameter 9 of the method that this delegate encapsulates.</param>
            <param name="arg10">Parameter 10 of the method that this delegate encapsulates.</param>
            <param name="arg11">Parameter 11 of the method that this delegate encapsulates.</param>
            <param name="arg12">Parameter 12 of the method that this delegate encapsulates.</param>
            <param name="arg13">Parameter 13 of the method that this delegate encapsulates.</param>
            <param name="arg14">Parameter 14 of the method that this delegate encapsulates.</param>
            <param name="arg15">Parameter 15 of the method that this delegate encapsulates.</param>
            <param name="arg16">Parameter 16 of the method that this delegate encapsulates.</param>
            <param name="arg17">Parameter 17 of the method that this delegate encapsulates.</param>
            <param name="arg18">Parameter 18 of the method that this delegate encapsulates.</param>
        </member>
        <member name="T:WebApplications.Utilities.Action`19">
            <summary>
            Encapsulates a method that has 19 parameters and does not return a value.
            </summary>
            <typeparam name="T1">The type of parameter 1 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of parameter 2 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of parameter 3 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of parameter 4 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of parameter 5 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of parameter 6 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of parameter 7 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of parameter 8 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of parameter 9 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of parameter 10 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of parameter 11 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of parameter 12 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of parameter 13 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of parameter 14 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of parameter 15 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of parameter 16 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T17">The type of parameter 17 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T18">The type of parameter 18 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T19">The type of parameter 19 of the method that this delegate encapsulates.</typeparam>
            <param name="arg1">Parameter 1 of the method that this delegate encapsulates.</param>
            <param name="arg2">Parameter 2 of the method that this delegate encapsulates.</param>
            <param name="arg3">Parameter 3 of the method that this delegate encapsulates.</param>
            <param name="arg4">Parameter 4 of the method that this delegate encapsulates.</param>
            <param name="arg5">Parameter 5 of the method that this delegate encapsulates.</param>
            <param name="arg6">Parameter 6 of the method that this delegate encapsulates.</param>
            <param name="arg7">Parameter 7 of the method that this delegate encapsulates.</param>
            <param name="arg8">Parameter 8 of the method that this delegate encapsulates.</param>
            <param name="arg9">Parameter 9 of the method that this delegate encapsulates.</param>
            <param name="arg10">Parameter 10 of the method that this delegate encapsulates.</param>
            <param name="arg11">Parameter 11 of the method that this delegate encapsulates.</param>
            <param name="arg12">Parameter 12 of the method that this delegate encapsulates.</param>
            <param name="arg13">Parameter 13 of the method that this delegate encapsulates.</param>
            <param name="arg14">Parameter 14 of the method that this delegate encapsulates.</param>
            <param name="arg15">Parameter 15 of the method that this delegate encapsulates.</param>
            <param name="arg16">Parameter 16 of the method that this delegate encapsulates.</param>
            <param name="arg17">Parameter 17 of the method that this delegate encapsulates.</param>
            <param name="arg18">Parameter 18 of the method that this delegate encapsulates.</param>
            <param name="arg19">Parameter 19 of the method that this delegate encapsulates.</param>
        </member>
        <member name="T:WebApplications.Utilities.Action`20">
            <summary>
            Encapsulates a method that has 20 parameters and does not return a value.
            </summary>
            <typeparam name="T1">The type of parameter 1 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of parameter 2 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of parameter 3 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of parameter 4 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of parameter 5 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of parameter 6 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of parameter 7 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of parameter 8 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of parameter 9 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of parameter 10 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of parameter 11 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of parameter 12 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of parameter 13 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of parameter 14 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of parameter 15 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of parameter 16 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T17">The type of parameter 17 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T18">The type of parameter 18 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T19">The type of parameter 19 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T20">The type of parameter 20 of the method that this delegate encapsulates.</typeparam>
            <param name="arg1">Parameter 1 of the method that this delegate encapsulates.</param>
            <param name="arg2">Parameter 2 of the method that this delegate encapsulates.</param>
            <param name="arg3">Parameter 3 of the method that this delegate encapsulates.</param>
            <param name="arg4">Parameter 4 of the method that this delegate encapsulates.</param>
            <param name="arg5">Parameter 5 of the method that this delegate encapsulates.</param>
            <param name="arg6">Parameter 6 of the method that this delegate encapsulates.</param>
            <param name="arg7">Parameter 7 of the method that this delegate encapsulates.</param>
            <param name="arg8">Parameter 8 of the method that this delegate encapsulates.</param>
            <param name="arg9">Parameter 9 of the method that this delegate encapsulates.</param>
            <param name="arg10">Parameter 10 of the method that this delegate encapsulates.</param>
            <param name="arg11">Parameter 11 of the method that this delegate encapsulates.</param>
            <param name="arg12">Parameter 12 of the method that this delegate encapsulates.</param>
            <param name="arg13">Parameter 13 of the method that this delegate encapsulates.</param>
            <param name="arg14">Parameter 14 of the method that this delegate encapsulates.</param>
            <param name="arg15">Parameter 15 of the method that this delegate encapsulates.</param>
            <param name="arg16">Parameter 16 of the method that this delegate encapsulates.</param>
            <param name="arg17">Parameter 17 of the method that this delegate encapsulates.</param>
            <param name="arg18">Parameter 18 of the method that this delegate encapsulates.</param>
            <param name="arg19">Parameter 19 of the method that this delegate encapsulates.</param>
            <param name="arg20">Parameter 20 of the method that this delegate encapsulates.</param>
        </member>
        <member name="T:WebApplications.Utilities.Action`21">
            <summary>
            Encapsulates a method that has 21 parameters and does not return a value.
            </summary>
            <typeparam name="T1">The type of parameter 1 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of parameter 2 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of parameter 3 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of parameter 4 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of parameter 5 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of parameter 6 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of parameter 7 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of parameter 8 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of parameter 9 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of parameter 10 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of parameter 11 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of parameter 12 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of parameter 13 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of parameter 14 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of parameter 15 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of parameter 16 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T17">The type of parameter 17 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T18">The type of parameter 18 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T19">The type of parameter 19 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T20">The type of parameter 20 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T21">The type of parameter 21 of the method that this delegate encapsulates.</typeparam>
            <param name="arg1">Parameter 1 of the method that this delegate encapsulates.</param>
            <param name="arg2">Parameter 2 of the method that this delegate encapsulates.</param>
            <param name="arg3">Parameter 3 of the method that this delegate encapsulates.</param>
            <param name="arg4">Parameter 4 of the method that this delegate encapsulates.</param>
            <param name="arg5">Parameter 5 of the method that this delegate encapsulates.</param>
            <param name="arg6">Parameter 6 of the method that this delegate encapsulates.</param>
            <param name="arg7">Parameter 7 of the method that this delegate encapsulates.</param>
            <param name="arg8">Parameter 8 of the method that this delegate encapsulates.</param>
            <param name="arg9">Parameter 9 of the method that this delegate encapsulates.</param>
            <param name="arg10">Parameter 10 of the method that this delegate encapsulates.</param>
            <param name="arg11">Parameter 11 of the method that this delegate encapsulates.</param>
            <param name="arg12">Parameter 12 of the method that this delegate encapsulates.</param>
            <param name="arg13">Parameter 13 of the method that this delegate encapsulates.</param>
            <param name="arg14">Parameter 14 of the method that this delegate encapsulates.</param>
            <param name="arg15">Parameter 15 of the method that this delegate encapsulates.</param>
            <param name="arg16">Parameter 16 of the method that this delegate encapsulates.</param>
            <param name="arg17">Parameter 17 of the method that this delegate encapsulates.</param>
            <param name="arg18">Parameter 18 of the method that this delegate encapsulates.</param>
            <param name="arg19">Parameter 19 of the method that this delegate encapsulates.</param>
            <param name="arg20">Parameter 20 of the method that this delegate encapsulates.</param>
            <param name="arg21">Parameter 21 of the method that this delegate encapsulates.</param>
        </member>
        <member name="T:WebApplications.Utilities.Action`22">
            <summary>
            Encapsulates a method that has 22 parameters and does not return a value.
            </summary>
            <typeparam name="T1">The type of parameter 1 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of parameter 2 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of parameter 3 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of parameter 4 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of parameter 5 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of parameter 6 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of parameter 7 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of parameter 8 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of parameter 9 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of parameter 10 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of parameter 11 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of parameter 12 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of parameter 13 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of parameter 14 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of parameter 15 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of parameter 16 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T17">The type of parameter 17 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T18">The type of parameter 18 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T19">The type of parameter 19 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T20">The type of parameter 20 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T21">The type of parameter 21 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T22">The type of parameter 22 of the method that this delegate encapsulates.</typeparam>
            <param name="arg1">Parameter 1 of the method that this delegate encapsulates.</param>
            <param name="arg2">Parameter 2 of the method that this delegate encapsulates.</param>
            <param name="arg3">Parameter 3 of the method that this delegate encapsulates.</param>
            <param name="arg4">Parameter 4 of the method that this delegate encapsulates.</param>
            <param name="arg5">Parameter 5 of the method that this delegate encapsulates.</param>
            <param name="arg6">Parameter 6 of the method that this delegate encapsulates.</param>
            <param name="arg7">Parameter 7 of the method that this delegate encapsulates.</param>
            <param name="arg8">Parameter 8 of the method that this delegate encapsulates.</param>
            <param name="arg9">Parameter 9 of the method that this delegate encapsulates.</param>
            <param name="arg10">Parameter 10 of the method that this delegate encapsulates.</param>
            <param name="arg11">Parameter 11 of the method that this delegate encapsulates.</param>
            <param name="arg12">Parameter 12 of the method that this delegate encapsulates.</param>
            <param name="arg13">Parameter 13 of the method that this delegate encapsulates.</param>
            <param name="arg14">Parameter 14 of the method that this delegate encapsulates.</param>
            <param name="arg15">Parameter 15 of the method that this delegate encapsulates.</param>
            <param name="arg16">Parameter 16 of the method that this delegate encapsulates.</param>
            <param name="arg17">Parameter 17 of the method that this delegate encapsulates.</param>
            <param name="arg18">Parameter 18 of the method that this delegate encapsulates.</param>
            <param name="arg19">Parameter 19 of the method that this delegate encapsulates.</param>
            <param name="arg20">Parameter 20 of the method that this delegate encapsulates.</param>
            <param name="arg21">Parameter 21 of the method that this delegate encapsulates.</param>
            <param name="arg22">Parameter 22 of the method that this delegate encapsulates.</param>
        </member>
        <member name="T:WebApplications.Utilities.Action`23">
            <summary>
            Encapsulates a method that has 23 parameters and does not return a value.
            </summary>
            <typeparam name="T1">The type of parameter 1 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of parameter 2 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of parameter 3 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of parameter 4 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of parameter 5 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of parameter 6 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of parameter 7 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of parameter 8 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of parameter 9 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of parameter 10 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of parameter 11 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of parameter 12 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of parameter 13 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of parameter 14 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of parameter 15 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of parameter 16 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T17">The type of parameter 17 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T18">The type of parameter 18 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T19">The type of parameter 19 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T20">The type of parameter 20 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T21">The type of parameter 21 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T22">The type of parameter 22 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T23">The type of parameter 23 of the method that this delegate encapsulates.</typeparam>
            <param name="arg1">Parameter 1 of the method that this delegate encapsulates.</param>
            <param name="arg2">Parameter 2 of the method that this delegate encapsulates.</param>
            <param name="arg3">Parameter 3 of the method that this delegate encapsulates.</param>
            <param name="arg4">Parameter 4 of the method that this delegate encapsulates.</param>
            <param name="arg5">Parameter 5 of the method that this delegate encapsulates.</param>
            <param name="arg6">Parameter 6 of the method that this delegate encapsulates.</param>
            <param name="arg7">Parameter 7 of the method that this delegate encapsulates.</param>
            <param name="arg8">Parameter 8 of the method that this delegate encapsulates.</param>
            <param name="arg9">Parameter 9 of the method that this delegate encapsulates.</param>
            <param name="arg10">Parameter 10 of the method that this delegate encapsulates.</param>
            <param name="arg11">Parameter 11 of the method that this delegate encapsulates.</param>
            <param name="arg12">Parameter 12 of the method that this delegate encapsulates.</param>
            <param name="arg13">Parameter 13 of the method that this delegate encapsulates.</param>
            <param name="arg14">Parameter 14 of the method that this delegate encapsulates.</param>
            <param name="arg15">Parameter 15 of the method that this delegate encapsulates.</param>
            <param name="arg16">Parameter 16 of the method that this delegate encapsulates.</param>
            <param name="arg17">Parameter 17 of the method that this delegate encapsulates.</param>
            <param name="arg18">Parameter 18 of the method that this delegate encapsulates.</param>
            <param name="arg19">Parameter 19 of the method that this delegate encapsulates.</param>
            <param name="arg20">Parameter 20 of the method that this delegate encapsulates.</param>
            <param name="arg21">Parameter 21 of the method that this delegate encapsulates.</param>
            <param name="arg22">Parameter 22 of the method that this delegate encapsulates.</param>
            <param name="arg23">Parameter 23 of the method that this delegate encapsulates.</param>
        </member>
        <member name="T:WebApplications.Utilities.Action`24">
            <summary>
            Encapsulates a method that has 24 parameters and does not return a value.
            </summary>
            <typeparam name="T1">The type of parameter 1 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of parameter 2 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of parameter 3 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of parameter 4 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of parameter 5 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of parameter 6 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of parameter 7 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of parameter 8 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of parameter 9 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of parameter 10 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of parameter 11 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of parameter 12 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of parameter 13 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of parameter 14 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of parameter 15 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of parameter 16 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T17">The type of parameter 17 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T18">The type of parameter 18 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T19">The type of parameter 19 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T20">The type of parameter 20 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T21">The type of parameter 21 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T22">The type of parameter 22 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T23">The type of parameter 23 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T24">The type of parameter 24 of the method that this delegate encapsulates.</typeparam>
            <param name="arg1">Parameter 1 of the method that this delegate encapsulates.</param>
            <param name="arg2">Parameter 2 of the method that this delegate encapsulates.</param>
            <param name="arg3">Parameter 3 of the method that this delegate encapsulates.</param>
            <param name="arg4">Parameter 4 of the method that this delegate encapsulates.</param>
            <param name="arg5">Parameter 5 of the method that this delegate encapsulates.</param>
            <param name="arg6">Parameter 6 of the method that this delegate encapsulates.</param>
            <param name="arg7">Parameter 7 of the method that this delegate encapsulates.</param>
            <param name="arg8">Parameter 8 of the method that this delegate encapsulates.</param>
            <param name="arg9">Parameter 9 of the method that this delegate encapsulates.</param>
            <param name="arg10">Parameter 10 of the method that this delegate encapsulates.</param>
            <param name="arg11">Parameter 11 of the method that this delegate encapsulates.</param>
            <param name="arg12">Parameter 12 of the method that this delegate encapsulates.</param>
            <param name="arg13">Parameter 13 of the method that this delegate encapsulates.</param>
            <param name="arg14">Parameter 14 of the method that this delegate encapsulates.</param>
            <param name="arg15">Parameter 15 of the method that this delegate encapsulates.</param>
            <param name="arg16">Parameter 16 of the method that this delegate encapsulates.</param>
            <param name="arg17">Parameter 17 of the method that this delegate encapsulates.</param>
            <param name="arg18">Parameter 18 of the method that this delegate encapsulates.</param>
            <param name="arg19">Parameter 19 of the method that this delegate encapsulates.</param>
            <param name="arg20">Parameter 20 of the method that this delegate encapsulates.</param>
            <param name="arg21">Parameter 21 of the method that this delegate encapsulates.</param>
            <param name="arg22">Parameter 22 of the method that this delegate encapsulates.</param>
            <param name="arg23">Parameter 23 of the method that this delegate encapsulates.</param>
            <param name="arg24">Parameter 24 of the method that this delegate encapsulates.</param>
        </member>
        <member name="T:WebApplications.Utilities.Action`25">
            <summary>
            Encapsulates a method that has 25 parameters and does not return a value.
            </summary>
            <typeparam name="T1">The type of parameter 1 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of parameter 2 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of parameter 3 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of parameter 4 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of parameter 5 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of parameter 6 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of parameter 7 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of parameter 8 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of parameter 9 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of parameter 10 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of parameter 11 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of parameter 12 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of parameter 13 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of parameter 14 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of parameter 15 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of parameter 16 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T17">The type of parameter 17 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T18">The type of parameter 18 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T19">The type of parameter 19 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T20">The type of parameter 20 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T21">The type of parameter 21 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T22">The type of parameter 22 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T23">The type of parameter 23 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T24">The type of parameter 24 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T25">The type of parameter 25 of the method that this delegate encapsulates.</typeparam>
            <param name="arg1">Parameter 1 of the method that this delegate encapsulates.</param>
            <param name="arg2">Parameter 2 of the method that this delegate encapsulates.</param>
            <param name="arg3">Parameter 3 of the method that this delegate encapsulates.</param>
            <param name="arg4">Parameter 4 of the method that this delegate encapsulates.</param>
            <param name="arg5">Parameter 5 of the method that this delegate encapsulates.</param>
            <param name="arg6">Parameter 6 of the method that this delegate encapsulates.</param>
            <param name="arg7">Parameter 7 of the method that this delegate encapsulates.</param>
            <param name="arg8">Parameter 8 of the method that this delegate encapsulates.</param>
            <param name="arg9">Parameter 9 of the method that this delegate encapsulates.</param>
            <param name="arg10">Parameter 10 of the method that this delegate encapsulates.</param>
            <param name="arg11">Parameter 11 of the method that this delegate encapsulates.</param>
            <param name="arg12">Parameter 12 of the method that this delegate encapsulates.</param>
            <param name="arg13">Parameter 13 of the method that this delegate encapsulates.</param>
            <param name="arg14">Parameter 14 of the method that this delegate encapsulates.</param>
            <param name="arg15">Parameter 15 of the method that this delegate encapsulates.</param>
            <param name="arg16">Parameter 16 of the method that this delegate encapsulates.</param>
            <param name="arg17">Parameter 17 of the method that this delegate encapsulates.</param>
            <param name="arg18">Parameter 18 of the method that this delegate encapsulates.</param>
            <param name="arg19">Parameter 19 of the method that this delegate encapsulates.</param>
            <param name="arg20">Parameter 20 of the method that this delegate encapsulates.</param>
            <param name="arg21">Parameter 21 of the method that this delegate encapsulates.</param>
            <param name="arg22">Parameter 22 of the method that this delegate encapsulates.</param>
            <param name="arg23">Parameter 23 of the method that this delegate encapsulates.</param>
            <param name="arg24">Parameter 24 of the method that this delegate encapsulates.</param>
            <param name="arg25">Parameter 25 of the method that this delegate encapsulates.</param>
        </member>
        <member name="T:WebApplications.Utilities.Action`26">
            <summary>
            Encapsulates a method that has 26 parameters and does not return a value.
            </summary>
            <typeparam name="T1">The type of parameter 1 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of parameter 2 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of parameter 3 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of parameter 4 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of parameter 5 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of parameter 6 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of parameter 7 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of parameter 8 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of parameter 9 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of parameter 10 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of parameter 11 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of parameter 12 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of parameter 13 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of parameter 14 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of parameter 15 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of parameter 16 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T17">The type of parameter 17 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T18">The type of parameter 18 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T19">The type of parameter 19 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T20">The type of parameter 20 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T21">The type of parameter 21 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T22">The type of parameter 22 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T23">The type of parameter 23 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T24">The type of parameter 24 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T25">The type of parameter 25 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T26">The type of parameter 26 of the method that this delegate encapsulates.</typeparam>
            <param name="arg1">Parameter 1 of the method that this delegate encapsulates.</param>
            <param name="arg2">Parameter 2 of the method that this delegate encapsulates.</param>
            <param name="arg3">Parameter 3 of the method that this delegate encapsulates.</param>
            <param name="arg4">Parameter 4 of the method that this delegate encapsulates.</param>
            <param name="arg5">Parameter 5 of the method that this delegate encapsulates.</param>
            <param name="arg6">Parameter 6 of the method that this delegate encapsulates.</param>
            <param name="arg7">Parameter 7 of the method that this delegate encapsulates.</param>
            <param name="arg8">Parameter 8 of the method that this delegate encapsulates.</param>
            <param name="arg9">Parameter 9 of the method that this delegate encapsulates.</param>
            <param name="arg10">Parameter 10 of the method that this delegate encapsulates.</param>
            <param name="arg11">Parameter 11 of the method that this delegate encapsulates.</param>
            <param name="arg12">Parameter 12 of the method that this delegate encapsulates.</param>
            <param name="arg13">Parameter 13 of the method that this delegate encapsulates.</param>
            <param name="arg14">Parameter 14 of the method that this delegate encapsulates.</param>
            <param name="arg15">Parameter 15 of the method that this delegate encapsulates.</param>
            <param name="arg16">Parameter 16 of the method that this delegate encapsulates.</param>
            <param name="arg17">Parameter 17 of the method that this delegate encapsulates.</param>
            <param name="arg18">Parameter 18 of the method that this delegate encapsulates.</param>
            <param name="arg19">Parameter 19 of the method that this delegate encapsulates.</param>
            <param name="arg20">Parameter 20 of the method that this delegate encapsulates.</param>
            <param name="arg21">Parameter 21 of the method that this delegate encapsulates.</param>
            <param name="arg22">Parameter 22 of the method that this delegate encapsulates.</param>
            <param name="arg23">Parameter 23 of the method that this delegate encapsulates.</param>
            <param name="arg24">Parameter 24 of the method that this delegate encapsulates.</param>
            <param name="arg25">Parameter 25 of the method that this delegate encapsulates.</param>
            <param name="arg26">Parameter 26 of the method that this delegate encapsulates.</param>
        </member>
        <member name="T:WebApplications.Utilities.Action`27">
            <summary>
            Encapsulates a method that has 27 parameters and does not return a value.
            </summary>
            <typeparam name="T1">The type of parameter 1 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of parameter 2 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of parameter 3 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of parameter 4 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of parameter 5 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of parameter 6 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of parameter 7 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of parameter 8 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of parameter 9 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of parameter 10 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of parameter 11 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of parameter 12 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of parameter 13 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of parameter 14 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of parameter 15 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of parameter 16 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T17">The type of parameter 17 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T18">The type of parameter 18 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T19">The type of parameter 19 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T20">The type of parameter 20 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T21">The type of parameter 21 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T22">The type of parameter 22 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T23">The type of parameter 23 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T24">The type of parameter 24 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T25">The type of parameter 25 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T26">The type of parameter 26 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T27">The type of parameter 27 of the method that this delegate encapsulates.</typeparam>
            <param name="arg1">Parameter 1 of the method that this delegate encapsulates.</param>
            <param name="arg2">Parameter 2 of the method that this delegate encapsulates.</param>
            <param name="arg3">Parameter 3 of the method that this delegate encapsulates.</param>
            <param name="arg4">Parameter 4 of the method that this delegate encapsulates.</param>
            <param name="arg5">Parameter 5 of the method that this delegate encapsulates.</param>
            <param name="arg6">Parameter 6 of the method that this delegate encapsulates.</param>
            <param name="arg7">Parameter 7 of the method that this delegate encapsulates.</param>
            <param name="arg8">Parameter 8 of the method that this delegate encapsulates.</param>
            <param name="arg9">Parameter 9 of the method that this delegate encapsulates.</param>
            <param name="arg10">Parameter 10 of the method that this delegate encapsulates.</param>
            <param name="arg11">Parameter 11 of the method that this delegate encapsulates.</param>
            <param name="arg12">Parameter 12 of the method that this delegate encapsulates.</param>
            <param name="arg13">Parameter 13 of the method that this delegate encapsulates.</param>
            <param name="arg14">Parameter 14 of the method that this delegate encapsulates.</param>
            <param name="arg15">Parameter 15 of the method that this delegate encapsulates.</param>
            <param name="arg16">Parameter 16 of the method that this delegate encapsulates.</param>
            <param name="arg17">Parameter 17 of the method that this delegate encapsulates.</param>
            <param name="arg18">Parameter 18 of the method that this delegate encapsulates.</param>
            <param name="arg19">Parameter 19 of the method that this delegate encapsulates.</param>
            <param name="arg20">Parameter 20 of the method that this delegate encapsulates.</param>
            <param name="arg21">Parameter 21 of the method that this delegate encapsulates.</param>
            <param name="arg22">Parameter 22 of the method that this delegate encapsulates.</param>
            <param name="arg23">Parameter 23 of the method that this delegate encapsulates.</param>
            <param name="arg24">Parameter 24 of the method that this delegate encapsulates.</param>
            <param name="arg25">Parameter 25 of the method that this delegate encapsulates.</param>
            <param name="arg26">Parameter 26 of the method that this delegate encapsulates.</param>
            <param name="arg27">Parameter 27 of the method that this delegate encapsulates.</param>
        </member>
        <member name="T:WebApplications.Utilities.Action`28">
            <summary>
            Encapsulates a method that has 28 parameters and does not return a value.
            </summary>
            <typeparam name="T1">The type of parameter 1 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of parameter 2 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of parameter 3 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of parameter 4 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of parameter 5 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of parameter 6 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of parameter 7 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of parameter 8 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of parameter 9 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of parameter 10 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of parameter 11 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of parameter 12 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of parameter 13 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of parameter 14 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of parameter 15 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of parameter 16 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T17">The type of parameter 17 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T18">The type of parameter 18 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T19">The type of parameter 19 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T20">The type of parameter 20 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T21">The type of parameter 21 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T22">The type of parameter 22 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T23">The type of parameter 23 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T24">The type of parameter 24 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T25">The type of parameter 25 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T26">The type of parameter 26 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T27">The type of parameter 27 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T28">The type of parameter 28 of the method that this delegate encapsulates.</typeparam>
            <param name="arg1">Parameter 1 of the method that this delegate encapsulates.</param>
            <param name="arg2">Parameter 2 of the method that this delegate encapsulates.</param>
            <param name="arg3">Parameter 3 of the method that this delegate encapsulates.</param>
            <param name="arg4">Parameter 4 of the method that this delegate encapsulates.</param>
            <param name="arg5">Parameter 5 of the method that this delegate encapsulates.</param>
            <param name="arg6">Parameter 6 of the method that this delegate encapsulates.</param>
            <param name="arg7">Parameter 7 of the method that this delegate encapsulates.</param>
            <param name="arg8">Parameter 8 of the method that this delegate encapsulates.</param>
            <param name="arg9">Parameter 9 of the method that this delegate encapsulates.</param>
            <param name="arg10">Parameter 10 of the method that this delegate encapsulates.</param>
            <param name="arg11">Parameter 11 of the method that this delegate encapsulates.</param>
            <param name="arg12">Parameter 12 of the method that this delegate encapsulates.</param>
            <param name="arg13">Parameter 13 of the method that this delegate encapsulates.</param>
            <param name="arg14">Parameter 14 of the method that this delegate encapsulates.</param>
            <param name="arg15">Parameter 15 of the method that this delegate encapsulates.</param>
            <param name="arg16">Parameter 16 of the method that this delegate encapsulates.</param>
            <param name="arg17">Parameter 17 of the method that this delegate encapsulates.</param>
            <param name="arg18">Parameter 18 of the method that this delegate encapsulates.</param>
            <param name="arg19">Parameter 19 of the method that this delegate encapsulates.</param>
            <param name="arg20">Parameter 20 of the method that this delegate encapsulates.</param>
            <param name="arg21">Parameter 21 of the method that this delegate encapsulates.</param>
            <param name="arg22">Parameter 22 of the method that this delegate encapsulates.</param>
            <param name="arg23">Parameter 23 of the method that this delegate encapsulates.</param>
            <param name="arg24">Parameter 24 of the method that this delegate encapsulates.</param>
            <param name="arg25">Parameter 25 of the method that this delegate encapsulates.</param>
            <param name="arg26">Parameter 26 of the method that this delegate encapsulates.</param>
            <param name="arg27">Parameter 27 of the method that this delegate encapsulates.</param>
            <param name="arg28">Parameter 28 of the method that this delegate encapsulates.</param>
        </member>
        <member name="T:WebApplications.Utilities.Action`29">
            <summary>
            Encapsulates a method that has 29 parameters and does not return a value.
            </summary>
            <typeparam name="T1">The type of parameter 1 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of parameter 2 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of parameter 3 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of parameter 4 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of parameter 5 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of parameter 6 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of parameter 7 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of parameter 8 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of parameter 9 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of parameter 10 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of parameter 11 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of parameter 12 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of parameter 13 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of parameter 14 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of parameter 15 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of parameter 16 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T17">The type of parameter 17 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T18">The type of parameter 18 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T19">The type of parameter 19 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T20">The type of parameter 20 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T21">The type of parameter 21 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T22">The type of parameter 22 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T23">The type of parameter 23 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T24">The type of parameter 24 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T25">The type of parameter 25 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T26">The type of parameter 26 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T27">The type of parameter 27 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T28">The type of parameter 28 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T29">The type of parameter 29 of the method that this delegate encapsulates.</typeparam>
            <param name="arg1">Parameter 1 of the method that this delegate encapsulates.</param>
            <param name="arg2">Parameter 2 of the method that this delegate encapsulates.</param>
            <param name="arg3">Parameter 3 of the method that this delegate encapsulates.</param>
            <param name="arg4">Parameter 4 of the method that this delegate encapsulates.</param>
            <param name="arg5">Parameter 5 of the method that this delegate encapsulates.</param>
            <param name="arg6">Parameter 6 of the method that this delegate encapsulates.</param>
            <param name="arg7">Parameter 7 of the method that this delegate encapsulates.</param>
            <param name="arg8">Parameter 8 of the method that this delegate encapsulates.</param>
            <param name="arg9">Parameter 9 of the method that this delegate encapsulates.</param>
            <param name="arg10">Parameter 10 of the method that this delegate encapsulates.</param>
            <param name="arg11">Parameter 11 of the method that this delegate encapsulates.</param>
            <param name="arg12">Parameter 12 of the method that this delegate encapsulates.</param>
            <param name="arg13">Parameter 13 of the method that this delegate encapsulates.</param>
            <param name="arg14">Parameter 14 of the method that this delegate encapsulates.</param>
            <param name="arg15">Parameter 15 of the method that this delegate encapsulates.</param>
            <param name="arg16">Parameter 16 of the method that this delegate encapsulates.</param>
            <param name="arg17">Parameter 17 of the method that this delegate encapsulates.</param>
            <param name="arg18">Parameter 18 of the method that this delegate encapsulates.</param>
            <param name="arg19">Parameter 19 of the method that this delegate encapsulates.</param>
            <param name="arg20">Parameter 20 of the method that this delegate encapsulates.</param>
            <param name="arg21">Parameter 21 of the method that this delegate encapsulates.</param>
            <param name="arg22">Parameter 22 of the method that this delegate encapsulates.</param>
            <param name="arg23">Parameter 23 of the method that this delegate encapsulates.</param>
            <param name="arg24">Parameter 24 of the method that this delegate encapsulates.</param>
            <param name="arg25">Parameter 25 of the method that this delegate encapsulates.</param>
            <param name="arg26">Parameter 26 of the method that this delegate encapsulates.</param>
            <param name="arg27">Parameter 27 of the method that this delegate encapsulates.</param>
            <param name="arg28">Parameter 28 of the method that this delegate encapsulates.</param>
            <param name="arg29">Parameter 29 of the method that this delegate encapsulates.</param>
        </member>
        <member name="T:WebApplications.Utilities.Action`30">
            <summary>
            Encapsulates a method that has 30 parameters and does not return a value.
            </summary>
            <typeparam name="T1">The type of parameter 1 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of parameter 2 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of parameter 3 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of parameter 4 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of parameter 5 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of parameter 6 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of parameter 7 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of parameter 8 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of parameter 9 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of parameter 10 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of parameter 11 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of parameter 12 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of parameter 13 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of parameter 14 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of parameter 15 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of parameter 16 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T17">The type of parameter 17 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T18">The type of parameter 18 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T19">The type of parameter 19 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T20">The type of parameter 20 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T21">The type of parameter 21 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T22">The type of parameter 22 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T23">The type of parameter 23 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T24">The type of parameter 24 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T25">The type of parameter 25 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T26">The type of parameter 26 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T27">The type of parameter 27 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T28">The type of parameter 28 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T29">The type of parameter 29 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T30">The type of parameter 30 of the method that this delegate encapsulates.</typeparam>
            <param name="arg1">Parameter 1 of the method that this delegate encapsulates.</param>
            <param name="arg2">Parameter 2 of the method that this delegate encapsulates.</param>
            <param name="arg3">Parameter 3 of the method that this delegate encapsulates.</param>
            <param name="arg4">Parameter 4 of the method that this delegate encapsulates.</param>
            <param name="arg5">Parameter 5 of the method that this delegate encapsulates.</param>
            <param name="arg6">Parameter 6 of the method that this delegate encapsulates.</param>
            <param name="arg7">Parameter 7 of the method that this delegate encapsulates.</param>
            <param name="arg8">Parameter 8 of the method that this delegate encapsulates.</param>
            <param name="arg9">Parameter 9 of the method that this delegate encapsulates.</param>
            <param name="arg10">Parameter 10 of the method that this delegate encapsulates.</param>
            <param name="arg11">Parameter 11 of the method that this delegate encapsulates.</param>
            <param name="arg12">Parameter 12 of the method that this delegate encapsulates.</param>
            <param name="arg13">Parameter 13 of the method that this delegate encapsulates.</param>
            <param name="arg14">Parameter 14 of the method that this delegate encapsulates.</param>
            <param name="arg15">Parameter 15 of the method that this delegate encapsulates.</param>
            <param name="arg16">Parameter 16 of the method that this delegate encapsulates.</param>
            <param name="arg17">Parameter 17 of the method that this delegate encapsulates.</param>
            <param name="arg18">Parameter 18 of the method that this delegate encapsulates.</param>
            <param name="arg19">Parameter 19 of the method that this delegate encapsulates.</param>
            <param name="arg20">Parameter 20 of the method that this delegate encapsulates.</param>
            <param name="arg21">Parameter 21 of the method that this delegate encapsulates.</param>
            <param name="arg22">Parameter 22 of the method that this delegate encapsulates.</param>
            <param name="arg23">Parameter 23 of the method that this delegate encapsulates.</param>
            <param name="arg24">Parameter 24 of the method that this delegate encapsulates.</param>
            <param name="arg25">Parameter 25 of the method that this delegate encapsulates.</param>
            <param name="arg26">Parameter 26 of the method that this delegate encapsulates.</param>
            <param name="arg27">Parameter 27 of the method that this delegate encapsulates.</param>
            <param name="arg28">Parameter 28 of the method that this delegate encapsulates.</param>
            <param name="arg29">Parameter 29 of the method that this delegate encapsulates.</param>
            <param name="arg30">Parameter 30 of the method that this delegate encapsulates.</param>
        </member>
        <member name="T:WebApplications.Utilities.Action`31">
            <summary>
            Encapsulates a method that has 31 parameters and does not return a value.
            </summary>
            <typeparam name="T1">The type of parameter 1 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of parameter 2 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of parameter 3 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of parameter 4 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of parameter 5 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of parameter 6 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of parameter 7 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of parameter 8 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of parameter 9 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of parameter 10 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of parameter 11 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of parameter 12 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of parameter 13 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of parameter 14 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of parameter 15 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of parameter 16 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T17">The type of parameter 17 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T18">The type of parameter 18 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T19">The type of parameter 19 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T20">The type of parameter 20 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T21">The type of parameter 21 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T22">The type of parameter 22 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T23">The type of parameter 23 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T24">The type of parameter 24 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T25">The type of parameter 25 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T26">The type of parameter 26 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T27">The type of parameter 27 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T28">The type of parameter 28 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T29">The type of parameter 29 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T30">The type of parameter 30 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T31">The type of parameter 31 of the method that this delegate encapsulates.</typeparam>
            <param name="arg1">Parameter 1 of the method that this delegate encapsulates.</param>
            <param name="arg2">Parameter 2 of the method that this delegate encapsulates.</param>
            <param name="arg3">Parameter 3 of the method that this delegate encapsulates.</param>
            <param name="arg4">Parameter 4 of the method that this delegate encapsulates.</param>
            <param name="arg5">Parameter 5 of the method that this delegate encapsulates.</param>
            <param name="arg6">Parameter 6 of the method that this delegate encapsulates.</param>
            <param name="arg7">Parameter 7 of the method that this delegate encapsulates.</param>
            <param name="arg8">Parameter 8 of the method that this delegate encapsulates.</param>
            <param name="arg9">Parameter 9 of the method that this delegate encapsulates.</param>
            <param name="arg10">Parameter 10 of the method that this delegate encapsulates.</param>
            <param name="arg11">Parameter 11 of the method that this delegate encapsulates.</param>
            <param name="arg12">Parameter 12 of the method that this delegate encapsulates.</param>
            <param name="arg13">Parameter 13 of the method that this delegate encapsulates.</param>
            <param name="arg14">Parameter 14 of the method that this delegate encapsulates.</param>
            <param name="arg15">Parameter 15 of the method that this delegate encapsulates.</param>
            <param name="arg16">Parameter 16 of the method that this delegate encapsulates.</param>
            <param name="arg17">Parameter 17 of the method that this delegate encapsulates.</param>
            <param name="arg18">Parameter 18 of the method that this delegate encapsulates.</param>
            <param name="arg19">Parameter 19 of the method that this delegate encapsulates.</param>
            <param name="arg20">Parameter 20 of the method that this delegate encapsulates.</param>
            <param name="arg21">Parameter 21 of the method that this delegate encapsulates.</param>
            <param name="arg22">Parameter 22 of the method that this delegate encapsulates.</param>
            <param name="arg23">Parameter 23 of the method that this delegate encapsulates.</param>
            <param name="arg24">Parameter 24 of the method that this delegate encapsulates.</param>
            <param name="arg25">Parameter 25 of the method that this delegate encapsulates.</param>
            <param name="arg26">Parameter 26 of the method that this delegate encapsulates.</param>
            <param name="arg27">Parameter 27 of the method that this delegate encapsulates.</param>
            <param name="arg28">Parameter 28 of the method that this delegate encapsulates.</param>
            <param name="arg29">Parameter 29 of the method that this delegate encapsulates.</param>
            <param name="arg30">Parameter 30 of the method that this delegate encapsulates.</param>
            <param name="arg31">Parameter 31 of the method that this delegate encapsulates.</param>
        </member>
        <member name="T:WebApplications.Utilities.Action`32">
            <summary>
            Encapsulates a method that has 32 parameters and does not return a value.
            </summary>
            <typeparam name="T1">The type of parameter 1 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of parameter 2 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of parameter 3 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of parameter 4 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of parameter 5 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of parameter 6 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of parameter 7 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of parameter 8 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of parameter 9 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of parameter 10 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of parameter 11 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of parameter 12 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of parameter 13 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of parameter 14 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of parameter 15 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of parameter 16 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T17">The type of parameter 17 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T18">The type of parameter 18 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T19">The type of parameter 19 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T20">The type of parameter 20 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T21">The type of parameter 21 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T22">The type of parameter 22 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T23">The type of parameter 23 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T24">The type of parameter 24 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T25">The type of parameter 25 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T26">The type of parameter 26 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T27">The type of parameter 27 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T28">The type of parameter 28 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T29">The type of parameter 29 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T30">The type of parameter 30 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T31">The type of parameter 31 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T32">The type of parameter 32 of the method that this delegate encapsulates.</typeparam>
            <param name="arg1">Parameter 1 of the method that this delegate encapsulates.</param>
            <param name="arg2">Parameter 2 of the method that this delegate encapsulates.</param>
            <param name="arg3">Parameter 3 of the method that this delegate encapsulates.</param>
            <param name="arg4">Parameter 4 of the method that this delegate encapsulates.</param>
            <param name="arg5">Parameter 5 of the method that this delegate encapsulates.</param>
            <param name="arg6">Parameter 6 of the method that this delegate encapsulates.</param>
            <param name="arg7">Parameter 7 of the method that this delegate encapsulates.</param>
            <param name="arg8">Parameter 8 of the method that this delegate encapsulates.</param>
            <param name="arg9">Parameter 9 of the method that this delegate encapsulates.</param>
            <param name="arg10">Parameter 10 of the method that this delegate encapsulates.</param>
            <param name="arg11">Parameter 11 of the method that this delegate encapsulates.</param>
            <param name="arg12">Parameter 12 of the method that this delegate encapsulates.</param>
            <param name="arg13">Parameter 13 of the method that this delegate encapsulates.</param>
            <param name="arg14">Parameter 14 of the method that this delegate encapsulates.</param>
            <param name="arg15">Parameter 15 of the method that this delegate encapsulates.</param>
            <param name="arg16">Parameter 16 of the method that this delegate encapsulates.</param>
            <param name="arg17">Parameter 17 of the method that this delegate encapsulates.</param>
            <param name="arg18">Parameter 18 of the method that this delegate encapsulates.</param>
            <param name="arg19">Parameter 19 of the method that this delegate encapsulates.</param>
            <param name="arg20">Parameter 20 of the method that this delegate encapsulates.</param>
            <param name="arg21">Parameter 21 of the method that this delegate encapsulates.</param>
            <param name="arg22">Parameter 22 of the method that this delegate encapsulates.</param>
            <param name="arg23">Parameter 23 of the method that this delegate encapsulates.</param>
            <param name="arg24">Parameter 24 of the method that this delegate encapsulates.</param>
            <param name="arg25">Parameter 25 of the method that this delegate encapsulates.</param>
            <param name="arg26">Parameter 26 of the method that this delegate encapsulates.</param>
            <param name="arg27">Parameter 27 of the method that this delegate encapsulates.</param>
            <param name="arg28">Parameter 28 of the method that this delegate encapsulates.</param>
            <param name="arg29">Parameter 29 of the method that this delegate encapsulates.</param>
            <param name="arg30">Parameter 30 of the method that this delegate encapsulates.</param>
            <param name="arg31">Parameter 31 of the method that this delegate encapsulates.</param>
            <param name="arg32">Parameter 32 of the method that this delegate encapsulates.</param>
        </member>
        <member name="T:WebApplications.Utilities.Difference.Chunk`1">
            <summary>
            Gets a chunk of comparison.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Difference.Chunk`1.AreEqual">
            <summary>
            <see langword="true"/> if <see cref="F:WebApplications.Utilities.Difference.Chunk`1.A"/> and <see cref="F:WebApplications.Utilities.Difference.Chunk`1.B"/> are considered equal.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Difference.Chunk`1.A">
            <summary>
            The "A" list, if any.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Difference.Chunk`1.B">
            <summary>
            The "B" list, if any.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Difference.Chunk`1.#ctor(System.Boolean,WebApplications.Utilities.ReadOnlyWindow{`0},WebApplications.Utilities.ReadOnlyWindow{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Difference.Chunk`1" /> class.
            </summary>
            <param name="areEqual">if set to <see langword="true" /> <paramref name="a"/> and <paramref name="b"/> are considered equal.</param>
            <param name="a">The "A" list.</param>
            <param name="b">The "B" list.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:WebApplications.Utilities.Difference.Chunk`1.WriteTo(System.IO.TextWriter,WebApplications.Utilities.Formatting.FormatBuilder)">
            <summary>
            Writes this instance to a <paramref name="writer"/>.
            </summary>
            <param name="writer">The writer.</param>
            <param name="lineFormat">The format.</param>
        </member>
        <member name="M:WebApplications.Utilities.Difference.Chunk`1.WriteTo(System.IO.TextWriter,WebApplications.Utilities.Formatting.FormatBuilder,WebApplications.Utilities.Formatting.FormatBuilder)">
            <summary>
            Writes this instance to a <paramref name="writer" />.
            </summary>
            <param name="writer">The writer.</param>
            <param name="lineFormat">The format.</param>
            <param name="chunkFormat">The chunk format.</param>
        </member>
        <member name="T:WebApplications.Utilities.Difference.Differences`1">
            <summary>
            All the differences between two collections.
            </summary>
            <typeparam name="T">The items type.</typeparam>
        </member>
        <member name="F:WebApplications.Utilities.Difference.Differences`1.A">
            <summary>
            The 'A' list.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Difference.Differences`1.B">
            <summary>
            The 'B' list.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Difference.Differences`1._chunks">
            <summary>
            The chunks lazy evaluator.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Difference.Differences`1.AreEqual">
            <summary>
            Whether <see cref="F:WebApplications.Utilities.Difference.Differences`1.A"/> and <see cref="F:WebApplications.Utilities.Difference.Differences`1.B"/> are consider equal.
            </summary>
            <value>The are equal.</value>
        </member>
        <member name="M:WebApplications.Utilities.Difference.Differences`1.#ctor(System.Collections.Generic.IReadOnlyList{`0},System.Int32,System.Int32,System.Collections.Generic.IReadOnlyList{`0},System.Int32,System.Int32,System.Func{`0,`0,System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Difference.Differences`1" /> class.
            </summary>
            <param name="a">The "A" list.</param>
            <param name="offsetA">The offset to the start of a window in the first collection.</param>
            <param name="lengthA">The length of the window in the first collection.</param>
            <param name="b">The "B" list.</param>
            <param name="offsetB">The offset to the start of a window in the second collection.</param>
            <param name="lengthB">The length of the window in the second collection.</param>
            <param name="comparer">The comparer to compare items in each collection.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="a" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="b" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="comparer" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offsetA" /> is out of range.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="lengthA" /> is out of range.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offsetB" /> is out of range.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="lengthB" /> is out of range.</exception>
            <exception cref="T:System.Exception">The <paramref name="comparer"/> throws an exception.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Difference.Differences`1.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Difference.Differences`1.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Difference.Differences`1.Count">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Difference.Differences`1.Item(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Difference.Differences`1.WriteTo(System.IO.TextWriter,WebApplications.Utilities.Formatting.FormatBuilder)">
            <summary>
            Writes this instance to a <paramref name="writer" />.
            </summary>
            <param name="writer">The writer.</param>
            <param name="lineFormat">The format.</param>
        </member>
        <member name="M:WebApplications.Utilities.Difference.Differences`1.WriteTo(System.IO.TextWriter,WebApplications.Utilities.Formatting.FormatBuilder,WebApplications.Utilities.Formatting.FormatBuilder)">
            <summary>
            Writes this instance to a <paramref name="writer" />.
            </summary>
            <param name="writer">The writer.</param>
            <param name="lineFormat">The format.</param>
            <param name="chunkFormat">The chunk format.</param>
        </member>
        <member name="T:WebApplications.Utilities.Difference.StringChunk">
            <summary>
            A chunk of a <see cref="T:System.String" />.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Difference.StringChunk.AreEqual">
            <summary>
            <see langword="true"/> if <see cref="F:WebApplications.Utilities.Difference.StringChunk.A"/> and <see cref="F:WebApplications.Utilities.Difference.StringChunk.B"/> are considered equal.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Difference.StringChunk.A">
            <summary>
            The "A" string.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Difference.StringChunk.OffsetA">
            <summary>
            The offset of <see cref="F:WebApplications.Utilities.Difference.StringChunk.A"/> in the original "A" string.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Difference.StringChunk.B">
            <summary>
            The "B" string.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Difference.StringChunk.OffsetB">
            <summary>
            The offset of <see cref="F:WebApplications.Utilities.Difference.StringChunk.B"/> in the original "B" string.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Difference.StringChunk.#ctor(System.Boolean,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Difference.StringChunk" /> class.
            </summary>
            <param name="a">The original A string.</param>
            <param name="offsetA">The offset a.</param>
            <param name="b">The original B string.</param>
            <param name="offsetB">The offset b.</param>
        </member>
        <member name="M:WebApplications.Utilities.Difference.StringChunk.WriteTo(System.IO.TextWriter,WebApplications.Utilities.Formatting.FormatBuilder)">
            <summary>
            Writes this instance to a <paramref name="writer"/>.
            </summary>
            <param name="writer">The writer.</param>
            <param name="lineFormat">The format.</param>
        </member>
        <member name="M:WebApplications.Utilities.Difference.StringChunk.WriteTo(System.IO.TextWriter,WebApplications.Utilities.Formatting.FormatBuilder,WebApplications.Utilities.Formatting.FormatBuilder)">
            <summary>
            Writes this instance to a <paramref name="writer" />.
            </summary>
            <param name="writer">The writer.</param>
            <param name="lineFormat">The format.</param>
            <param name="chunkFormat">The chunk format.</param>
        </member>
        <member name="T:WebApplications.Utilities.Difference.StringDifferences">
            <summary>
            A set of string differences.
            </summary>
            <seealso cref="T:WebApplications.Utilities.Difference.Differences`1"/>
        </member>
        <member name="F:WebApplications.Utilities.Difference.StringDifferences._chunks">
            <summary>
            The chunks.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Difference.StringDifferences.A">
            <summary>
            The 'A' string.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Difference.StringDifferences.B">
            <summary>
            The 'B' string.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Difference.StringDifferences.AreEqual">
            <summary>
            Whether <see cref="F:WebApplications.Utilities.Difference.StringDifferences.A"/> and <see cref="F:WebApplications.Utilities.Difference.StringDifferences.B"/> are consider equal.
            </summary>
            <value>The are equal.</value>
        </member>
        <member name="M:WebApplications.Utilities.Difference.StringDifferences.#ctor(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,WebApplications.Utilities.Difference.TextOptions,System.Func{System.Char,System.Char,System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Difference.StringDifferences" /> class.
            </summary>
            <param name="a">The 'A' string.</param>
            <param name="offsetA">The offset to the start of a window in the first string.</param>
            <param name="lengthA">The length of the window in the first string.</param>
            <param name="b">The 'B' string.</param>
            <param name="offsetB">The offset to the start of a window in the second string.</param>
            <param name="lengthB">The length of the window in the second string.</param>
            <param name="token">The token.</param>
            <param name="textOptions">The text options.</param>
            <param name="comparer">The character comparer.</param>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="a" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="b" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="comparer" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offsetA" /> is out of range.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="lengthA" /> is out of range.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offsetB" /> is out of range.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="lengthB" /> is out of range.</exception>
            <exception cref="T:System.Exception">The <paramref name="comparer" /> throws an exception.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Difference.StringDifferences.#ctor(WebApplications.Utilities.Difference.TextTokenStrategy,System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,WebApplications.Utilities.Difference.TextOptions,System.Func{System.Char,System.Char,System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Difference.StringDifferences" /> class.
            </summary>
            <param name="a">The 'A' string.</param>
            <param name="offsetA">The offset to the start of a window in the first string.</param>
            <param name="lengthA">The length of the window in the first string.</param>
            <param name="b">The 'B' string.</param>
            <param name="offsetB">The offset to the start of a window in the second string.</param>
            <param name="lengthB">The length of the window in the second string.</param>
            <param name="tokenStrategy">The token.</param>
            <param name="textOptions">The text options.</param>
            <param name="comparer">The character comparer.</param>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="a" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="b" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="comparer" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offsetA" /> is out of range.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="lengthA" /> is out of range.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offsetB" /> is out of range.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="lengthB" /> is out of range.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="textOptions" /> cannot be set to 
            <see cref="F:WebApplications.Utilities.Difference.TextOptions.IgnoreWhiteSpace"/> for any text tokenization strategy other than 
            <see cref="F:WebApplications.Utilities.Difference.TextTokenStrategy.Character"/> as it would prevent correct tokenization.</exception>
            <exception cref="T:System.Exception">The <paramref name="comparer" /> throws an exception.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Difference.StringDifferences.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Difference.StringDifferences.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Difference.StringDifferences.Count">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Difference.StringDifferences.Item(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Difference.StringDifferences.WriteTo(System.IO.TextWriter,WebApplications.Utilities.Formatting.FormatBuilder)">
            <summary>
            Writes this instance to a <paramref name="writer" />.
            </summary>
            <param name="writer">The writer.</param>
            <param name="lineFormat">The format.</param>
        </member>
        <member name="M:WebApplications.Utilities.Difference.StringDifferences.WriteTo(System.IO.TextWriter,WebApplications.Utilities.Formatting.FormatBuilder,WebApplications.Utilities.Formatting.FormatBuilder)">
            <summary>
            Writes this instance to a <paramref name="writer" />.
            </summary>
            <param name="writer">The writer.</param>
            <param name="lineFormat">The format.</param>
            <param name="chunkFormat">The chunk format.</param>
        </member>
        <member name="T:WebApplications.Utilities.Difference.TextOptions">
            <summary>
            Options for comparing text.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Difference.TextOptions.None">
            <summary>
            No options.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Difference.TextOptions.Trim">
            <summary>
            Trims white space from the start and end of lines.
            </summary>
            <remarks>Cannot be used with <see cref="F:WebApplications.Utilities.Difference.TextOptions.CollapseWhiteSpace"/>.</remarks>
        </member>
        <member name="F:WebApplications.Utilities.Difference.TextOptions.NormalizeLineEndings">
            <summary>
            Normalizes line endings.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Difference.TextOptions.CollapseWhiteSpace">
            <summary>
            Collapses all white space (so will also <see cref="F:WebApplications.Utilities.Difference.TextOptions.NormalizeLineEndings"/>, word boundaries are still
            considered significant.
            </summary>
            <remarks>Cannot be used with <see cref="F:WebApplications.Utilities.Difference.TextOptions.Trim"/>.</remarks>
        </member>
        <member name="F:WebApplications.Utilities.Difference.TextOptions.IgnoreWhiteSpace">
            <summary>
            Ignores all white space (so will also <see cref="F:WebApplications.Utilities.Difference.TextOptions.CollapseWhiteSpace"/>, <see cref="F:WebApplications.Utilities.Difference.TextOptions.NormalizeLineEndings"/>
            and <see cref="F:WebApplications.Utilities.Difference.TextOptions.Trim"/>), this has the effect of ignoring word boundaries.
            </summary>
            <remarks><para>This option is not valid when used in conjunction with a <see cref="T:WebApplications.Utilities.Difference.TextTokenStrategy"/> other
            than <see cref="F:WebApplications.Utilities.Difference.TextTokenStrategy.Character"/>, as it would prevent correct tokenization.</para></remarks>
        </member>
        <member name="F:WebApplications.Utilities.Difference.TextOptions.Default">
            <summary>
            The default options (equivalent to <see cref="F:WebApplications.Utilities.Difference.TextOptions.NormalizeLineEndings"/>.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Difference.TextTokenStrategy">
            <summary>
            Describes the tokenization strategy for strings used by the difference engine.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Difference.TextTokenStrategy.Character">
            <summary>
            Differences are calculated per character.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Difference.TextTokenStrategy.Word">
            <summary>
            Differences are calculated per word (based on word boundaries).
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Difference.TextTokenStrategy.Sentence">
            <summary>
            Differences are calculated per sentence (split on '.').
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Difference.TextTokenStrategy.Line">
            <summary>
            Differences are calculated per line
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.DifferenceExtensions">
            <summary>
            Extension methods for the difference engine.
            </summary>
            <seealso cref="T:WebApplications.Utilities.Difference.Differences`1"/>
        </member>
        <member name="F:WebApplications.Utilities.DifferenceExtensions.FlagBackgroundColorName">
            <summary>
            The flag background color name.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.DifferenceExtensions.FlagForegroundColorName">
            <summary>
            The flag foreground color name.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.DifferenceExtensions.ChunkABackgroundColorName">
            <summary>
            The chunk a background color name.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.DifferenceExtensions.ChunkAForegroundColorName">
            <summary>
            The chunk a foreground color name.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.DifferenceExtensions.ChunkBBackgroundColorName">
            <summary>
            The chunk b background color name.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.DifferenceExtensions.ChunkBForegroundColorName">
            <summary>
            The chunk b foreground color name.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.DifferenceExtensions.SeparatorTag">
            <summary>
            The separator tag
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.DifferenceExtensions.FlagTag">
            <summary>
            The flag tag.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.DifferenceExtensions.ChunkTag">
            <summary>
            The chunk tag.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.DifferenceExtensions.ChunkATag">
            <summary>
            The chunk a tag.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.DifferenceExtensions.ChunkBTag">
            <summary>
            The chunk b tag.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.DifferenceExtensions.DefaultLineFormat">
            <summary>
            The default line format, used for each line of the chunk.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.DifferenceExtensions.DefaultChunkFormat">
            <summary>
            The default layout for chunks.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.DifferenceExtensions.DefaultStringChunkFormat">
            <summary>
            The default layout for chunks.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.DifferenceExtensions.Diff(System.String,System.String,WebApplications.Utilities.Difference.TextTokenStrategy,WebApplications.Utilities.Difference.TextOptions,System.Collections.Generic.IEqualityComparer{System.Char})">
            <summary>
            Find the differences between two strings.
            </summary>
            <param name="a">The 'A' string.</param>
            <param name="b">The 'B' string.</param>
            <param name="tokenStrategy">The tokenization strategy.</param>
            <param name="textOptions">The text options.</param>
            <param name="comparer">The character comparer.</param>
            <returns>Returns the <see cref="T:WebApplications.Utilities.Difference.StringDifferences" />.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="a" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="b" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="textOptions" /> cannot be set to 
            <see cref="F:WebApplications.Utilities.Difference.TextOptions.IgnoreWhiteSpace"/> for any text tokenization strategy other than 
            <see cref="F:WebApplications.Utilities.Difference.TextTokenStrategy.Character"/> as it would prevent correct tokenization.</exception>
            <remarks>Based on "An O(ND) Difference Algorithm and its Variations" by Eugene Myers
            (http://www.xmailserver.org/diff2.pdf) Algorithmica Vol. 1 No. 2, 1986, p 251.</remarks>
        </member>
        <member name="M:WebApplications.Utilities.DifferenceExtensions.Diff(System.String,System.String,WebApplications.Utilities.Difference.TextTokenStrategy,WebApplications.Utilities.Difference.TextOptions,System.StringComparer)">
            <summary>
            Find the differences between two strings.
            </summary>
            <param name="a">The 'A' string.</param>
            <param name="b">The 'B' string.</param>
            <param name="tokenStrategy">The tokenization strategy.</param>
            <param name="textOptions">The text options.</param>
            <param name="comparer">The character comparer.</param>
            <returns>Returns the <see cref="T:WebApplications.Utilities.Difference.StringDifferences"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="a" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="b" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="comparer" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="textOptions" /> cannot be set to 
            <see cref="F:WebApplications.Utilities.Difference.TextOptions.IgnoreWhiteSpace"/> for any text tokenization strategy other than 
            <see cref="F:WebApplications.Utilities.Difference.TextTokenStrategy.Character"/> as it would prevent correct tokenization.</exception>
            <remarks>
            <para> 
            Based on "An O(ND) Difference Algorithm and its Variations" by Eugene Myers
            (http://www.xmailserver.org/diff2.pdf) Algorithmica Vol. 1 No. 2, 1986, p 251.  
            </para>
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.DifferenceExtensions.Diff(System.String,System.String,WebApplications.Utilities.Difference.TextTokenStrategy,WebApplications.Utilities.Difference.TextOptions,System.Func{System.Char,System.Char,System.Boolean})">
            <summary>
            Find the differences between two strings.
            </summary>
            <param name="a">The 'A' string.</param>
            <param name="b">The 'B' string.</param>
            <param name="tokenStrategy">The tokenization strategy.</param>
            <param name="textOptions">The text options.</param>
            <param name="comparer">The character comparer.</param>
            <returns>Returns the <see cref="T:WebApplications.Utilities.Difference.StringDifferences"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="a" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="b" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="comparer" /> is <see langword="null" />.</exception>
            <exception cref="T:System.Exception">The <paramref name="comparer"/> throws an exception.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="textOptions" /> cannot be set to 
            <see cref="F:WebApplications.Utilities.Difference.TextOptions.IgnoreWhiteSpace"/> for any text tokenization strategy other than 
            <see cref="F:WebApplications.Utilities.Difference.TextTokenStrategy.Character"/> as it would prevent correct tokenization.</exception>
            <remarks>
            <para> 
            Based on "An O(ND) Difference Algorithm and its Variations" by Eugene Myers
            (http://www.xmailserver.org/diff2.pdf) Algorithmica Vol. 1 No. 2, 1986, p 251.  
            </para>
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.DifferenceExtensions.Diff(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,WebApplications.Utilities.Difference.TextTokenStrategy,WebApplications.Utilities.Difference.TextOptions,System.Collections.Generic.IEqualityComparer{System.Char})">
            <summary>
            Find the differences between two strings.
            </summary>
            <param name="a">The 'A' collection.</param>
            <param name="offsetA">The offset to the start of a window in the first collection.</param>
            <param name="lengthA">The length of the window in the first collection.</param>
            <param name="b">The 'B' collection.</param>
            <param name="offsetB">The offset to the start of a window in the second collection.</param>
            <param name="lengthB">The length of the window in the second collection.</param>
            <param name="tokenStrategy">The tokenization strategy.</param>
            <param name="textOptions">The text options.</param>
            <param name="comparer">The comparer to compare items in each collection.</param>
            <returns>Returns the <see cref="T:WebApplications.Utilities.Difference.Differences`1"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="a" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="b" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offsetA" /> is out of range.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="lengthA" /> is out of range.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offsetB" /> is out of range.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="lengthB" /> is out of range.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="textOptions" /> cannot be set to 
            <see cref="F:WebApplications.Utilities.Difference.TextOptions.IgnoreWhiteSpace"/> for any text tokenization strategy other than 
            <see cref="F:WebApplications.Utilities.Difference.TextTokenStrategy.Character"/> as it would prevent correct tokenization.</exception>
            <remarks>
            <para> 
            Based on "An O(ND) Difference Algorithm and its Variations" by Eugene Myers
            (http://www.xmailserver.org/diff2.pdf) Algorithmica Vol. 1 No. 2, 1986, p 251.  
            </para>
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.DifferenceExtensions.Diff(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,WebApplications.Utilities.Difference.TextTokenStrategy,WebApplications.Utilities.Difference.TextOptions,System.StringComparer)">
            <summary>
            Find the differences between two strings.
            </summary>
            <param name="a">The 'A' collection.</param>
            <param name="offsetA">The offset to the start of a window in the first collection.</param>
            <param name="lengthA">The length of the window in the first collection.</param>
            <param name="b">The 'B' collection.</param>
            <param name="offsetB">The offset to the start of a window in the second collection.</param>
            <param name="lengthB">The length of the window in the second collection.</param>
            <param name="tokenStrategy">The tokenization strategy.</param>
            <param name="textOptions">The text options.</param>
            <param name="comparer">The comparer to compare items in each collection.</param>
            <returns>Returns the <see cref="T:WebApplications.Utilities.Difference.Differences`1"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="a" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="b" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offsetA" /> is out of range.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="lengthA" /> is out of range.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offsetB" /> is out of range.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="lengthB" /> is out of range.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="textOptions" /> cannot be set to 
            <see cref="F:WebApplications.Utilities.Difference.TextOptions.IgnoreWhiteSpace"/> for any text tokenization strategy other than 
            <see cref="F:WebApplications.Utilities.Difference.TextTokenStrategy.Character"/> as it would prevent correct tokenization.</exception>
            <remarks>
            <para> 
            Based on "An O(ND) Difference Algorithm and its Variations" by Eugene Myers
            (http://www.xmailserver.org/diff2.pdf) Algorithmica Vol. 1 No. 2, 1986, p 251.  
            </para>
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.DifferenceExtensions.Diff(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,WebApplications.Utilities.Difference.TextTokenStrategy,WebApplications.Utilities.Difference.TextOptions,System.Func{System.Char,System.Char,System.Boolean})">
            <summary>
            Find the differences between two strings.
            </summary>
            <param name="a">The 'A' collection.</param>
            <param name="offsetA">The offset to the start of a window in the first collection.</param>
            <param name="lengthA">The length of the window in the first collection.</param>
            <param name="b">The 'B' collection.</param>
            <param name="offsetB">The offset to the start of a window in the second collection.</param>
            <param name="lengthB">The length of the window in the second collection.</param>
            <param name="tokenStrategy">The tokenization strategy.</param>
            <param name="textOptions">The text options.</param>
            <param name="comparer">The comparer to compare items in each collection.</param>
            <returns>Returns the <see cref="T:WebApplications.Utilities.Difference.Differences`1" />.</returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="a" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="b" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offsetA" /> is out of range.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="lengthA" /> is out of range.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offsetB" /> is out of range.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="lengthB" /> is out of range.</exception>
            <exception cref="T:System.Exception">The <paramref name="comparer" /> throws an exception.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="textOptions" /> cannot be set to 
            <see cref="F:WebApplications.Utilities.Difference.TextOptions.IgnoreWhiteSpace"/> for any text tokenization strategy other than 
            <see cref="F:WebApplications.Utilities.Difference.TextTokenStrategy.Character"/> as it would prevent correct tokenization.</exception>
            <remarks>Based on "An O(ND) Difference Algorithm and its Variations" by Eugene Myers
            (http://www.xmailserver.org/diff2.pdf) Algorithmica Vol. 1 No. 2, 1986, p 251.</remarks>
        </member>
        <member name="M:WebApplications.Utilities.DifferenceExtensions.Diff``1(System.Collections.Generic.IReadOnlyList{``0},System.Collections.Generic.IReadOnlyList{``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Find the differences between two collections.
            </summary>
            <typeparam name="T">The item type.</typeparam>
            <param name="a">The 'A' collection.</param>
            <param name="b">The 'B' collection.</param>
            <param name="comparer">The comparer to compare items in each collection.</param>
            <returns>Returns the <see cref="T:WebApplications.Utilities.Difference.Differences`1"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="a" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="b" /> is <see langword="null" />.</exception>
            <remarks>
            <para> 
            Based on "An O(ND) Difference Algorithm and its Variations" by Eugene Myers
            (http://www.xmailserver.org/diff2.pdf) Algorithmica Vol. 1 No. 2, 1986, p 251.  
            </para>
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.DifferenceExtensions.Diff``1(System.Collections.Generic.IReadOnlyList{``0},System.Collections.Generic.IReadOnlyList{``0},System.Func{``0,``0,System.Boolean})">
            <summary>
            Find the differences between two collections.
            </summary>
            <typeparam name="T">The item type.</typeparam>
            <param name="a">The 'A' collection.</param>
            <param name="b">The 'B' collection.</param>
            <param name="comparer">The comparer to compare items in each collection.</param>
            <returns>Returns the <see cref="T:WebApplications.Utilities.Difference.Differences`1"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="a" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="b" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="comparer" /> is <see langword="null" />.</exception>
            <exception cref="T:System.Exception">The <paramref name="comparer"/> throws an exception.</exception>
            <remarks>
            <para> 
            Based on "An O(ND) Difference Algorithm and its Variations" by Eugene Myers
            (http://www.xmailserver.org/diff2.pdf) Algorithmica Vol. 1 No. 2, 1986, p 251.  
            </para>
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.DifferenceExtensions.Diff``1(System.Collections.Generic.IReadOnlyList{``0},System.Int32,System.Int32,System.Collections.Generic.IReadOnlyList{``0},System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Find the differences between two collections.
            </summary>
            <typeparam name="T">The item type.</typeparam>
            <param name="a">The 'A' collection.</param>
            <param name="offsetA">The offset to the start of a window in the first collection.</param>
            <param name="lengthA">The length of the window in the first collection.</param>
            <param name="b">The 'B' collection.</param>
            <param name="offsetB">The offset to the start of a window in the second collection.</param>
            <param name="lengthB">The length of the window in the second collection.</param>
            <param name="comparer">The comparer to compare items in each collection.</param>
            <returns>Returns the <see cref="T:WebApplications.Utilities.Difference.Differences`1"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="a" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="b" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offsetA" /> is out of range.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="lengthA" /> is out of range.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offsetB" /> is out of range.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="lengthB" /> is out of range.</exception>
            <remarks>
            <para> 
            Based on "An O(ND) Difference Algorithm and its Variations" by Eugene Myers
            (http://www.xmailserver.org/diff2.pdf) Algorithmica Vol. 1 No. 2, 1986, p 251.  
            </para>
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.DifferenceExtensions.Diff``1(System.Collections.Generic.IReadOnlyList{``0},System.Int32,System.Int32,System.Collections.Generic.IReadOnlyList{``0},System.Int32,System.Int32,System.Func{``0,``0,System.Boolean})">
            <summary>
            Find the differences between two collections.
            </summary>
            <typeparam name="T">The item type.</typeparam>
            <param name="a">The 'A' collection.</param>
            <param name="offsetA">The offset to the start of a window in the first collection.</param>
            <param name="lengthA">The length of the window in the first collection.</param>
            <param name="b">The 'B' collection.</param>
            <param name="offsetB">The offset to the start of a window in the second collection.</param>
            <param name="lengthB">The length of the window in the second collection.</param>
            <param name="comparer">The comparer to compare items in each collection.</param>
            <returns>Returns the <see cref="T:WebApplications.Utilities.Difference.Differences`1"/>.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="a" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="b" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offsetA" /> is out of range.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="lengthA" /> is out of range.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offsetB" /> is out of range.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="lengthB" /> is out of range.</exception>
            <exception cref="T:System.Exception">The <paramref name="comparer"/> throws an exception.</exception>
            <remarks>
            <para> 
            Based on "An O(ND) Difference Algorithm and its Variations" by Eugene Myers
            (http://www.xmailserver.org/diff2.pdf) Algorithmica Vol. 1 No. 2, 1986, p 251.  
            </para>
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.DifferenceExtensions.ToMapped(System.String,WebApplications.Utilities.Difference.TextOptions)">
            <summary>
            Converts a string to a <see cref="T:WebApplications.Utilities.ReadOnlyOffsetMap`1"/> of <see cref="T:System.Char">characters</see> by applying
            the specified <paramref name="options"/>.
            </summary>
            <param name="input">The input.</param>
            <param name="options">The options.</param>
            <returns>A <see cref="T:WebApplications.Utilities.ReadOnlyOffsetMap`1"/> of <see cref="T:System.Char">characters</see>.</returns>
        </member>
        <member name="F:WebApplications.Utilities.DifferenceExtensions._wordCategories">
            <summary>
            The word categories.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.DifferenceExtensions.IsWord(System.Char)">
            <summary>
            Determines whether the <paramref name="c">specified character</paramref> is a word character.
            </summary>
            <param name="c">The character.</param>
            <returns><see langword="true"/> if the <paramref name="c">specified character</paramref> is a word 
            character; otherwise <see langword="false"/>.</returns>
            <remarks><para>This method is designed to be directly equivalent to using '\w' in a 
            <see cref="T:System.Text.RegularExpressions.Regex">regular expression</see>, but is faster for checking a single character.</para>
            <para>Despite the specification at https://msdn.microsoft.com/en-us/library/20bw873z(v=vs.110).aspx#WordCharacter,
            The '\w' word character also includes the <see cref="F:System.Globalization.UnicodeCategory.NonSpacingMark">NonSpacingMark</see><see cref="T:System.Globalization.UnicodeCategory">unicode category</see>.
            </para></remarks>
        </member>
        <member name="T:WebApplications.Utilities.Formatting.Writeable">
            <summary>
            Base class for implementing <see cref="T:WebApplications.Utilities.Formatting.IWriteable"/> and <see cref="T:System.IFormattable"/>.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.Writeable.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.Writeable.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <param name="format">The format.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.Writeable.ToString(WebApplications.Utilities.Formatting.FormatBuilder,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <param name="format">The format.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.Writeable.WriteTo(System.IO.TextWriter,System.String)">
            <summary>
            Writes this instance to the <paramref name="writer" />, using the optional <paramref name="format" />.
            </summary>
            <param name="writer">The writer.</param>
            <param name="format">The format.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.Writeable.WriteTo(System.IO.TextWriter,WebApplications.Utilities.Formatting.FormatBuilder)">
            <summary>
            Writes this instance to the <paramref name="writer" />, using the optional <paramref name="lineFormat" />.
            </summary>
            <param name="writer">The writer.</param>
            <param name="lineFormat">The format.</param>
        </member>
        <member name="T:WebApplications.Utilities.Formatting.Alignment">
            <summary>
            Describes <see cref="T:WebApplications.Utilities.Formatting.Layout"/> alignments.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.Alignment.None">
            <summary>
            The none alignment preserves spaces at the start of a line.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.Alignment.Left">
            <summary>
            The left alignment removes spaces at the start of a line.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.Alignment.Centre">
            <summary>
            The centre alignment centres the text on each line.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.Alignment.Right">
            <summary>
            The right alignment removes spaces at the end of a line.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.Alignment.Justify">
            <summary>
            The justify alignment removes spaces at the start and end of each line, and expands space inside the line.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Formatting.ColorHelper">
            <summary>
            Used to manipulate <see cref="T:System.Drawing.Color"/> more easily, and supports custom naming for colors.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.ColorHelper._builtInNamedColors">
            <summary>
            The colors by name.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.ColorHelper._namedColors">
            <summary>
            The colors by name.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.ColorHelper._colorNames">
            <summary>
            The names by color.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.ColorHelper.KnownNames">
            <summary>
            Gets the known color names.
            </summary>
            <value>The known names.</value>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.ColorHelper.NamedColors">
            <summary>
            Gets the named colors.
            </summary>
            <value>The known names.</value>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ColorHelper.SetName(System.Drawing.Color,System.String)">
            <summary>
            Sets a custom name for the color.
            </summary>
            <param name="color">The color.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ColorHelper.RemoveName(System.String)">
            <summary>
            Removes the custom color name.
            </summary>
            <param name="name">The name.</param>
            <returns>The previous <see cref="T:System.Drawing.Color"/>; otherwise <see cref="F:WebApplications.Utilities.Optional`1.Unassigned"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ColorHelper.GetColor(System.String)">
            <summary>
            Gets the color corresponding to the name; otherwise returns <see cref="F:WebApplications.Utilities.Optional`1.Unassigned"/>.
            </summary>
            <param name="name">The name.</param>
            <returns>The <see cref="T:System.Drawing.Color"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ColorHelper.GetName(System.Drawing.Color)">
            <summary>
            Gets the color's name.
            </summary>
            <param name="color">The color.</param>
            <returns>The <see cref="T:System.Drawing.Color" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ColorHelper.ToColor(System.ConsoleColor)">
            <summary>
            Gets the <see cref="T:System.Drawing.Color"/> of a <see cref="T:System.ConsoleColor"/>.
            </summary>
            <param name="color">The color.</param>
            <returns>The equivalent <see cref="T:System.Drawing.Color"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ColorHelper.ToConsoleColor(System.Drawing.Color)">
            <summary>
            Converts a <see cref="T:System.Drawing.Color"/> to the nearest <see cref="T:System.ConsoleColor"/>.
            </summary>
            <param name="color">The color.</param>
            <returns>The closest <see cref="T:System.ConsoleColor"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Formatting.ConsoleTextWriter">
            <summary>
            Implements a <see cref="T:System.IO.TextWriter"/> for writing to the <see cref="T:System.Console"/>, with write calls synchronized.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.ConsoleTextWriter.Default">
            <summary>
            The default <see cref="T:WebApplications.Utilities.Formatting.ConsoleTextWriter"/> (there can be only one).
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ConsoleTextWriter.#ctor(System.IO.TextWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Formatting.SerialTextWriter" /> class.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.ConsoleTextWriter.DefaultForeColor">
            <summary>
            The default foreground color.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.ConsoleTextWriter.DefaultBackColor">
            <summary>
            The default background color.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ConsoleTextWriter.#cctor">
            <summary>
            Initializes static members of the <see cref="T:WebApplications.Utilities.Formatting.ConsoleTextWriter"/> class.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.ConsoleTextWriter.Width">
            <summary>
            Gets the width of the console.
            </summary>
            <value>
            The width of the console.
            </value>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.ConsoleTextWriter.Position">
            <summary>
            Gets or sets the current horizontal position.
            </summary>
            <value>The position.</value>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.ConsoleTextWriter.AutoWraps">
            <summary>
            Gets a value indicating whether the writer automatically wraps on reaching <see cref="P:WebApplications.Utilities.Formatting.ConsoleTextWriter.Width" />.
            </summary>
            <value><see langword="true" /> if the writer automatically wraps; otherwise, <see langword="false" />.</value>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ConsoleTextWriter.ResetColors">
            <summary>
            Resets the foreground and background colors of the writer.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ConsoleTextWriter.ResetForegroundColor">
            <summary>
            Resets the foreground color of the writer.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ConsoleTextWriter.SetForegroundColor(System.Drawing.Color)">
            <summary>
            Sets the foreground color of the writer.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ConsoleTextWriter.ResetBackgroundColor">
            <summary>
            Sets the background color of the writer.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ConsoleTextWriter.SetBackgroundColor(System.Drawing.Color)">
            <summary>
            Sets the background color of the writer.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="T:WebApplications.Utilities.Formatting.FormatWriteContext">
            <summary>
            Holds current context of the format writer during resolution.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatWriteContext.WriterWidth">
            <summary>
            The writer width (if any); otherwise <see cref="F:System.Int32.MaxValue"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatWriteContext.IsColorSupported">
            <summary>
            Whether the underlying writer supports color.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatWriteContext.IsControllableWriter">
            <summary>
            Whether the underlying writer supports custom control characters.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatWriteContext.IsAutoWrapping">
            <summary>
            Whether the underlying writer auto wraps.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatWriteContext.FormatProvider">
            <summary>
            An object that controls formatting.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatWriteContext.Encoding">
            <summary>
            The character encoding in which the output is written.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatWriteContext.NewLine">
            <summary>
            The line terminator string.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.FormatWriteContext.LineType">
            <summary>
            The current <see cref="P:WebApplications.Utilities.Formatting.FormatWriteContext.LineType"/>.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.FormatWriteContext.Layout">
            <summary>
            The layout.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.FormatWriteContext.Position">
            <summary>
            The horizontal position, before any alignment has taken place.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatWriteContext.#ctor(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.IFormatProvider,System.Text.Encoding,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Formatting.FormatWriteContext" /> class.
            </summary>
            <param name="writerWidth">Width of the writer (if any); otherwise <see cref="F:System.Int32.MaxValue"/>.</param>
            <param name="isColorSupported">if set to <see langword="true" /> the underlying writer supports color.</param>
            <param name="isControllableWriter">if set to <see langword="true" /> the underlying writer supports custom control characters.</param>
            <param name="isAutoWrapping">if set to <see langword="true" /> the underlying writer auto wraps.</param>
            <param name="formatProvider">An object that controls formatting.</param>
            <param name="encoding">The character encoding in which the output is written.</param>
            <param name="newLine">The line terminator string.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatWriteContext.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Formatting.LineType">
            <summary>
            Enumerates different types of line, used during layout.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.LineType.None">
            <summary>
            A line started part way through, or not currently being laid out.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.LineType.First">
            <summary>
            The middle line of a paragraph.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.LineType.Middle">
            <summary>
            The middle line of a paragraph.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.LineType.Last">
            <summary>
            The last line of a paragraph.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Formatting.ListResolvable`1">
            <summary>
            A <see cref="T:WebApplications.Utilities.Formatting.Resolvable"/> object that contains a list of values.
            </summary>
            <typeparam name="TValue">The type of the t value.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ListResolvable`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Formatting.ListResolvable`1" /> class.
            </summary>
            <param name="values">The values.</param>
            <param name="resolveOuterTags">if set to <see langword="true" />  outer tags should be resolved automatically in formats.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ListResolvable`1.#ctor(System.Boolean,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Formatting.ListResolvable`1" /> class.
            </summary>
            <param name="resolveOuterTags">if set to <see langword="true" />  outer tags should be resolved automatically in formats.</param>
            <param name="capacity">The initial capacity.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ListResolvable`1.Resolve(WebApplications.Utilities.Formatting.FormatWriteContext,WebApplications.Utilities.Formatting.FormatChunk)">
            <summary>
            Resolves the specified tag.
            </summary>
            <param name="context">The context.</param>
            <param name="chunk">The chunk.</param>
            <returns>A <see cref="T:WebApplications.Utilities.Formatting.Resolution" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ListResolvable`1.Add(`0)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ListResolvable`1.Remove(`0)">
            <summary>
            Removes the specified tag.
            </summary>
            <param name="value">The value.</param>
            <returns><see langword="true" /> if value removed, <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ListResolvable`1.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ListResolvable`1.Contains(`0)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ListResolvable`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param><param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param><exception cref="T:System.ArgumentNullException"><paramref name="array"/> is null.</exception><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex"/> is less than 0.</exception><exception cref="T:System.ArgumentException">The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"/> is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.</exception>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.ListResolvable`1.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <value>The count.</value>
            <returns>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.ListResolvable`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
            <value><see langword="true" /> if this instance is read only; otherwise, <see langword="false" />.</value>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ListResolvable`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ListResolvable`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Formatting.ListResolvable">
            <summary>
            A <see cref="T:WebApplications.Utilities.Formatting.Resolvable" /> object that contains a set of dictionary values.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ListResolvable.#ctor(System.Collections.IEnumerable,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Formatting.ListResolvable`1" /> class.
            </summary>
            <param name="values">The values.</param>
            <param name="resolveOuterTags">if set to <see langword="true" />  outer tags should be resolved automatically in formats.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ListResolvable.#ctor(System.Boolean,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Formatting.ListResolvable`1" /> class.
            </summary>
            <param name="resolveOuterTags">if set to <see langword="true" />  outer tags should be resolved automatically in formats.</param>
            <param name="capacity">The initial capacity.</param>
        </member>
        <member name="T:WebApplications.Utilities.Formatting.DictionaryResolvable`1">
            <summary>
            A <see cref="T:WebApplications.Utilities.Formatting.Resolvable"/> object that contains a set of dictionary values.
            </summary>
            <typeparam name="TValue">The type of the t value.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.DictionaryResolvable`1.#ctor(System.Collections.Generic.IReadOnlyDictionary{System.String,`0},System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Formatting.DictionaryResolvable`1" /> class.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <param name="isCaseSensitive">if set to <see langword="true" /> then tags are case sensitive.</param>
            <param name="resolveOuterTags">if set to <see langword="true" />  outer tags should be resolved automatically in formats.</param>
            <param name="resolveControls">if set to <see langword="true" /> then controls will passed to the resolvable.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.DictionaryResolvable`1.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Formatting.DictionaryResolvable`1"/> class.
            </summary>
            <param name="isCaseSensitive">if set to <see langword="true" /> then tags are case sensitive.</param>
            <param name="resolveOuterTags">if set to <see langword="true" />  outer tags should be resolved automatically in formats.</param>
            <param name="resolveControls">if set to <see langword="true" /> then controls will passed to the resolvable.</param>
            <param name="capacity">The initial capacity.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.DictionaryResolvable`1.Add(System.String,`0)">
            <summary>
            Adds the specified tag.
            </summary>
            <param name="tag">The tag.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.DictionaryResolvable`1.Remove(System.String)">
            <summary>
            Removes the specified tag.
            </summary>
            <param name="tag">The tag.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.DictionaryResolvable`1.Resolve(WebApplications.Utilities.Formatting.FormatWriteContext,WebApplications.Utilities.Formatting.FormatChunk)">
            <summary>
            Resolves the specified tag.
            </summary>
            <param name="context">The context.</param>
            <param name="chunk">The chunk.</param>
            <returns>A <see cref="T:WebApplications.Utilities.Formatting.Resolution" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.DictionaryResolvable`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.DictionaryResolvable`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.DictionaryResolvable`1.Add(System.Collections.Generic.KeyValuePair{System.String,`0})">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.DictionaryResolvable`1.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.DictionaryResolvable`1.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,TValue}}#Contains(System.Collections.Generic.KeyValuePair{System.String,`0})">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.DictionaryResolvable`1.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,`0}[],System.Int32)">
            <summary>
            Copies to.
            </summary>
            <param name="array">The array.</param>
            <param name="arrayIndex">Index of the array.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.DictionaryResolvable`1.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,TValue}}#Remove(System.Collections.Generic.KeyValuePair{System.String,`0})">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.DictionaryResolvable`1.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <value>The count.</value>
            <returns>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.DictionaryResolvable`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
            <value><see langword="true" /> if this instance is read only; otherwise, <see langword="false" />.</value>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Formatting.DictionaryResolvable">
            <summary>
            A <see cref="T:WebApplications.Utilities.Formatting.Resolvable" /> object that contains a set of dictionary values.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.DictionaryResolvable.#ctor(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Formatting.DictionaryResolvable`1" /> class.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <param name="isCaseSensitive">if set to <see langword="true" /> then tags are case sensitive.</param>
            <param name="resolveOuterTags">if set to <see langword="true" />  outer tags should be resolved automatically in formats.</param>
            <param name="resolveControls">if set to <see langword="true" /> then controls will passed to the resolvable.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.DictionaryResolvable.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Formatting.DictionaryResolvable`1"/> class.
            </summary>
            <param name="isCaseSensitive">if set to <see langword="true" /> then tags are case sensitive.</param>
            <param name="resolveOuterTags">if set to <see langword="true" />  outer tags should be resolved automatically in formats.</param>
            <param name="resolveControls">if set to <see langword="true" /> then controls will passed to the resolvable.</param>
            <param name="capacity">The initial capacity.</param>
        </member>
        <member name="T:WebApplications.Utilities.Formatting.FormatBuilder">
            <summary>
            Build a formatted string, which can be used to enumerate FormatChunks
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Formatting.FormatBuilder.Resolutions">
            <summary>
            Holds resolved values for a given resolver, in a stack.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatBuilder.Resolutions.Parent">
            <summary>
            The parent resolutions.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatBuilder.Resolutions._resolver">
            <summary>
            The resolver.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatBuilder.Resolutions._values">
            <summary>
            Any resolved values.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.Resolutions.#ctor(WebApplications.Utilities.Formatting.FormatBuilder.Resolutions,WebApplications.Utilities.Formatting.IResolvable)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Formatting.FormatBuilder.Resolutions" /> class.
            </summary>
            <param name="parent">The parent.</param>
            <param name="resolvable">The resolvable.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.Resolutions.#ctor(WebApplications.Utilities.Formatting.FormatBuilder.Resolutions,WebApplications.Utilities.Formatting.ResolveDelegate,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Formatting.FormatBuilder.Resolutions" /> class.
            </summary>
            <param name="parent">The parent.</param>
            <param name="resolver">The resolver.</param>
            <param name="isCaseSensitive">if set to <see langword="true" /> then tags are case sensitive.</param>
            <param name="resolveOuterTags">if set to <see langword="true" />  outer tags should be resolved automatically in formats.</param>
            <param name="resolveControls">if set to <see langword="true" /> then controls will passed to the resolvable.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.Resolutions.Resolve(WebApplications.Utilities.Formatting.FormatWriteContext,WebApplications.Utilities.Formatting.FormatChunk)">
            <summary>
            Resolves the specified tag.
            </summary>
            <param name="context">The context.</param>
            <param name="chunk">The chunk.</param>
            <returns>A <see cref="T:WebApplications.Utilities.Formatting.Resolution" />.</returns>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatBuilder.OpenChar">
            <summary>
            The first character of a fill point.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatBuilder.CloseChar">
            <summary>
            The last character of a fill point.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatBuilder.ControlChar">
            <summary>
            The control character precedes a tag to indicate it is a control chunk.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatBuilder.AlignmentChar">
            <summary>
            The alignment character separates the tag from an alignment
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatBuilder.FormatChar">
            <summary>
            The splitter character separates the tag/alignment from the format.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatBuilder.RootChunk">
            <summary>
            The root chunk.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatBuilder._isReadOnly">
            <summary>
            Whether this builder is read only
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.FormatBuilder.InitialLayout">
            <summary>
            Gets the initial layout to use when resetting the layout.
            </summary>
            <value>
            The initial layout.
            </value>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Formatting.FormatBuilder"/> class.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Formatting.FormatBuilder" /> class.
            </summary>
            <param name="format">The format.</param>
            <param name="isReadOnly">if set to <see langword="true" /> is read only.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.#ctor(WebApplications.Utilities.Formatting.Layout,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Formatting.FormatBuilder" /> class.
            </summary>
            <param name="layout">The layout.</param>
            <param name="isReadOnly">if set to <see langword="true" /> is read only.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.#ctor(WebApplications.Utilities.Formatting.Layout,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Formatting.FormatBuilder" /> class.
            </summary>
            <param name="layout">The layout.</param>
            <param name="format">The format.</param>
            <param name="isReadOnly">if set to <see langword="true" /> is read only.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.#ctor(WebApplications.Utilities.Optional{System.Int32},WebApplications.Utilities.Optional{System.Int32},WebApplications.Utilities.Optional{System.Int32},WebApplications.Utilities.Optional{System.Char},WebApplications.Utilities.Optional{System.Int32},WebApplications.Utilities.Optional{System.Collections.Generic.IEnumerable{System.Int32}},WebApplications.Utilities.Optional{System.Byte},WebApplications.Utilities.Optional{System.Char},WebApplications.Utilities.Optional{WebApplications.Utilities.Formatting.Alignment},WebApplications.Utilities.Optional{System.Byte},WebApplications.Utilities.Optional{System.Boolean},WebApplications.Utilities.Optional{System.Char},WebApplications.Utilities.Optional{WebApplications.Utilities.Formatting.LayoutWrapMode},System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Formatting.FormatBuilder" /> class.
            </summary>
            <param name="format">The format.</param>
            <param name="width">The width.</param>
            <param name="indentSize">Size of the indent.</param>
            <param name="rightMarginSize">Size of the right margin.</param>
            <param name="indentChar">The indent character.</param>
            <param name="firstLineIndentSize">First size of the line indent.</param>
            <param name="tabStops">The tab stops.</param>
            <param name="tabSize">Size of the tab.</param>
            <param name="tabChar">The tab character.</param>
            <param name="alignment">The alignment.</param>
            <param name="splitLength">The split length.</param>
            <param name="hyphenate">The hyphenate.</param>
            <param name="hyphenChar">The hyphen character.</param>
            <param name="wrapMode">The wrap mode.</param>
            <param name="isReadOnly">if set to <see langword="true" /> is read only.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.FormatBuilder.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value><see langword="true" /> if this instance is empty; otherwise, <see langword="false" />.</value>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.FormatBuilder.IsReadOnly">
            <summary>
            Gets a value indicating whether this builder is read only.
            </summary>
            <value>
            <see langword="true" /> if this builder is read only; otherwise, <see langword="false" />.
            </value>
            <remarks>A read only builder cannot have any more chunks appended, but fill points can still be resolved.</remarks>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.MakeReadOnly">
            <summary>
            Makes this builder read only.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.Clone(System.Boolean)">
            <summary>
            Clones this instance.
            </summary>
            <param name="readOnly">If set to <see langword="true" />, the returned builder will be read only.</param>
            <returns>
            A shallow copy of this builder.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.Append(System.Boolean)">
            <summary>
            Appends the value.
            </summary>
            <param name="value">The value.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.Append(System.SByte)">
            <summary>
            Appends the value.
            </summary>
            <param name="value">The value.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.Append(System.Byte)">
            <summary>
            Appends the value.
            </summary>
            <param name="value">The value.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.Append(System.Char)">
            <summary>
            Appends the value.
            </summary>
            <param name="value">The value.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.Append(System.Int16)">
            <summary>
            Appends the value.
            </summary>
            <param name="value">The value.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.Append(System.Int32)">
            <summary>
            Appends the value.
            </summary>
            <param name="value">The value.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.Append(System.Int64)">
            <summary>
            Appends the value.
            </summary>
            <param name="value">The value.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.Append(System.Single)">
            <summary>
            Appends the value.
            </summary>
            <param name="value">The value.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.Append(System.Double)">
            <summary>
            Appends the value.
            </summary>
            <param name="value">The value.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.Append(System.Decimal)">
            <summary>
            Appends the value.
            </summary>
            <param name="value">The value.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.Append(System.UInt16)">
            <summary>
            Appends the value.
            </summary>
            <param name="value">The value.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.Append(System.UInt32)">
            <summary>
            Appends the value.
            </summary>
            <param name="value">The value.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.Append(System.UInt64)">
            <summary>
            Appends the value.
            </summary>
            <param name="value">The value.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.Append(System.Object)">
            <summary>
            Appends the value.
            </summary>
            <param name="value">The value.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.Append(System.Char[])">
            <summary>
            Appends the value.
            </summary>
            <param name="value">The value.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.Append(System.Char[],System.Int32,System.Int32)">
            <summary>
            Appends the value.
            </summary>
            <param name="value">The value.</param>
            <param name="startIndex">The start index.</param>
            <param name="charCount">The character count.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.Append(System.Char,System.Int32)">
            <summary>
            Appends the value.
            </summary>
            <param name="value">The value.</param>
            <param name="repeatCount">The repeat count.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.Append(System.String)">
            <summary>
            Appends the string, without additional formatting.
            </summary>
            <param name="value">The value.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.Append(WebApplications.Utilities.Formatting.FormatChunk)">
            <summary>
            Appends the chunks.
            </summary>
            <param name="chunk">The chunk.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.Append(System.Collections.Generic.IEnumerable{WebApplications.Utilities.Formatting.FormatChunk})">
            <summary>
            Appends the chunks.
            </summary>
            <param name="chunks">The chunks.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.Append(WebApplications.Utilities.Formatting.FormatBuilder)">
            <summary>
            Appends the builder.
            </summary>
            <param name="builder">The builder.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendLine">
            <summary>
            Appends a line.
            </summary>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendLine(System.Boolean)">
            <summary>
            Appends the value.
            </summary>
            <param name="value">The value.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendLine(System.SByte)">
            <summary>
            Appends the value.
            </summary>
            <param name="value">The value.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendLine(System.Byte)">
            <summary>
            Appends the value.
            </summary>
            <param name="value">The value.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendLine(System.Char)">
            <summary>
            Appends the value.
            </summary>
            <param name="value">The value.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendLine(System.Int16)">
            <summary>
            Appends the value.
            </summary>
            <param name="value">The value.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendLine(System.Int32)">
            <summary>
            Appends the value.
            </summary>
            <param name="value">The value.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendLine(System.Int64)">
            <summary>
            Appends the value.
            </summary>
            <param name="value">The value.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendLine(System.Single)">
            <summary>
            Appends the value.
            </summary>
            <param name="value">The value.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendLine(System.Double)">
            <summary>
            Appends the value.
            </summary>
            <param name="value">The value.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendLine(System.Decimal)">
            <summary>
            Appends the value.
            </summary>
            <param name="value">The value.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendLine(System.UInt16)">
            <summary>
            Appends the value.
            </summary>
            <param name="value">The value.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendLine(System.UInt32)">
            <summary>
            Appends the value.
            </summary>
            <param name="value">The value.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendLine(System.UInt64)">
            <summary>
            Appends the value.
            </summary>
            <param name="value">The value.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendLine(System.Object)">
            <summary>
            Appends the value.
            </summary>
            <param name="value">The value.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendLine(System.Char[])">
            <summary>
            Appends the value.
            </summary>
            <param name="value">The value.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendLine(System.Char[],System.Int32,System.Int32)">
            <summary>
            Appends the value.
            </summary>
            <param name="value">The value.</param>
            <param name="startIndex">The start index.</param>
            <param name="charCount">The character count.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendLine(System.Char,System.Int32)">
            <summary>
            Appends the value.
            </summary>
            <param name="value">The value.</param>
            <param name="repeatCount">The repeat count.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendLine(System.String)">
            <summary>
            Appends the string, without additional formatting.
            </summary>
            <param name="value">The value.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendLine(WebApplications.Utilities.Formatting.FormatChunk)">
            <summary>
            Appends the chunks.
            </summary>
            <param name="chunk">The chunk.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendLine(System.Collections.Generic.IEnumerable{WebApplications.Utilities.Formatting.FormatChunk})">
            <summary>
            Appends the chunks.
            </summary>
            <param name="chunks">The chunks.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendLine(WebApplications.Utilities.Formatting.FormatBuilder)">
            <summary>
            Appends the builder.
            </summary>
            <param name="builder">The builder.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendFormat(System.String,System.Object[])">
            <summary>
            Appends the specified format string, replacing any integer tags with the matching arguments.
            </summary>
            <param name="format">The format.</param>
            <param name="args">The arguments.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendFormatInstance``1(System.String,``0)">
            <summary>
            Appends the specified format string, replacing any tags with the matching properties or fields from the instance.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="format">The format.</param>
            <param name="instance">The instance.</param>
            <returns>This instance.</returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendFormat(System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean)">
            <summary>
            Appends the specified format string, replacing any integer tags with the matching arguments.
            </summary>
            <param name="format">The format.</param>
            <param name="values">The values.</param>
            <param name="isCaseSensitive">if set to <see langword="true" /> the keys are case sensitive.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendFormat(System.String,WebApplications.Utilities.Formatting.ResolveDelegate,System.Boolean)">
            <summary>
            Appends the specified format string, replacing any integer tags with the matching arguments (overriding pre-specified replacements).
            </summary>
            <param name="format">The format.</param>
            <param name="resolver">The resolver.</param>
            <param name="isCaseSensitive">if set to <see langword="true" /> then tags are case sensitive.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendFormatLine">
            <summary>
            Appends a new line.
            </summary>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendFormatLine(System.String,System.Object[])">
            <summary>
            Appends the specified format string, replacing any integer tags with the matching arguments (overriding pre-specified replacements).
            </summary>
            <param name="format">The format.</param>
            <param name="args">The arguments.</param>
            <returns>This instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendFormatLineInstance``1(System.String,``0)">
            <summary>
            Appends the specified format string, replacing any tags with the matching properties or fields from the instance.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="format">The format.</param>
            <param name="instance">The instance.</param>
            <returns>This instance.</returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendFormatLine(System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean)">
            <summary>
            Appends the specified format string, replacing any integer tags with the matching arguments (overriding pre-specified replacements).
            </summary>
            <param name="format">The format.</param>
            <param name="values">The values.</param>
            <param name="isCaseSensitive">if set to <see langword="true" /> the keys are case sensitive.</param>
            <returns>This instance.</returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendFormatLine(System.String,WebApplications.Utilities.Formatting.ResolveDelegate,System.Boolean)">
            <summary>
            Appends the specified format string, replacing any integer tags with the matching arguments (overriding pre-specified replacements).
            </summary>
            <param name="format">The format.</param>
            <param name="resolver">The resolver.</param>
            <param name="isCaseSensitive">if set to <see langword="true" /> then tags are case sensitive.</param>
            <returns>
            This instance.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendControl(System.String,System.Int32,System.String,WebApplications.Utilities.Optional{System.Object})">
            <summary>
            Appends the control object for controlling formatting.
            </summary>
            <param name="tag">The tag.</param>
            <param name="alignment">The alignment.</param>
            <param name="format">The format.</param>
            <param name="value">The value.</param>
            <returns>This instance.</returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatBuilder._initialResolutions">
            <summary>
            The initial resolutions
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.ResolveInstance``1(``0)">
            <summary>
            Resolves any tags.
            </summary>
            <typeparam name="T">The instance type</typeparam>
            <param name="instance">The instance.</param>
            <returns>This instance.</returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.Resolve(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean)">
            <summary>
            Resolves any tags.
            </summary>
            <param name="values">The values.</param>
            <param name="isCaseSensitive">if set to <see langword="true" /> tag resolution is case sensitive.</param>
            <returns>This instance.</returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.Resolve(WebApplications.Utilities.Formatting.ResolveDelegate,System.Boolean,System.Boolean)">
            <summary>
            Resolves any tags.
            </summary>
            <param name="resolver">The resolver.</param>
            <param name="isCaseSensitive">if set to <see langword="true" /> then tags are case sensitive.</param>
            <returns>This instance.</returns>
            <param name="resolveControls">if set to <see langword="true" /> then controls will passed to the resolvable.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.ToStringInstance``1(``0)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="instance">The instance.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.ToString(WebApplications.Utilities.Formatting.Layout,System.Int32@)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="layout">The layout is applied to the original <see cref="P:WebApplications.Utilities.Formatting.FormatBuilder.InitialLayout" />.</param>
            <param name="position">The position.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.ToStringInstance``1(WebApplications.Utilities.Formatting.Layout,System.Int32@,``0)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="layout">The layout is applied to the original <see cref="P:WebApplications.Utilities.Formatting.FormatBuilder.InitialLayout"/>.</param>
            <param name="position">The position.</param>
            <param name="instance">The istance.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.ToString(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Boolean)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="values">The values.</param>
            <param name="isCaseSensitive">if set to <see langword="true" /> then tags are case sensitive.</param>
            <param name="resolveControls">if set to <see langword="true" /> then controls will passed to the resolvable.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.ToString(WebApplications.Utilities.Formatting.Layout,System.Int32@,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Boolean)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="layout">The layout is applied to the original <see cref="P:WebApplications.Utilities.Formatting.FormatBuilder.InitialLayout"/>.</param>
            <param name="position">The position.</param>
            <param name="values">The values.</param>
            <param name="isCaseSensitive">if set to <see langword="true" /> then tags are case sensitive.</param>
            <param name="resolveControls">if set to <see langword="true" /> then controls will passed to the resolvable.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.ToString(WebApplications.Utilities.Formatting.ResolveDelegate,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="resolver">The values.</param>
            <param name="isCaseSensitive">if set to <see langword="true" /> then tags are case sensitive.</param>
            <param name="resolveOuterTags">if set to <see langword="true" />  outer tags should be resolved automatically in formats.</param>
            <param name="resolveControls">if set to <see langword="true" /> then controls will passed to the resolvable.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.ToString(WebApplications.Utilities.Formatting.IResolvable)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="resolver">The values.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.ToString(WebApplications.Utilities.Formatting.Layout,System.Int32@,WebApplications.Utilities.Formatting.ResolveDelegate,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="layout">The layout is applied to the original <see cref="P:WebApplications.Utilities.Formatting.FormatBuilder.InitialLayout"/>.</param>
            <param name="position">The position.</param>
            <param name="resolver">The values.</param>
            <param name="isCaseSensitive">if set to <see langword="true" /> then tags are case sensitive.</param>
            <param name="resolveOuterTags">if set to <see langword="true" />  outer tags should be resolved automatically in formats.</param>
            <param name="resolveControls">if set to <see langword="true" /> then controls will passed to the resolvable.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.ToString(WebApplications.Utilities.Formatting.Layout,System.Int32@,WebApplications.Utilities.Formatting.IResolvable)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="layout">The layout is applied to the original <see cref="P:WebApplications.Utilities.Formatting.FormatBuilder.InitialLayout" />.</param>
            <param name="position">The position.</param>
            <param name="resolver">The values.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.ToStringInstance``1(System.IFormatProvider,``0)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="formatProvider">The format provider.</param>
            <param name="instance">The istance.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.ToStringInstance``1(WebApplications.Utilities.Formatting.Layout,System.Int32@,System.IFormatProvider,``0)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="layout">The layout is applied to the original <see cref="P:WebApplications.Utilities.Formatting.FormatBuilder.InitialLayout"/>.</param>
            <param name="position">The position.</param>
            <param name="formatProvider">The format provider.</param>
            <param name="instance">The values.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.ToString(System.IFormatProvider,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Boolean)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="formatProvider">The format provider.</param>
            <param name="values">The values.</param>
            <param name="isCaseSensitive">if set to <see langword="true" /> then tags are case sensitive.</param>
            <param name="resolveControls">if set to <see langword="true" /> then controls will passed to the resolvable.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.ToString(WebApplications.Utilities.Formatting.Layout,System.Int32@,System.IFormatProvider,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Boolean)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="layout">The layout is applied to the original <see cref="P:WebApplications.Utilities.Formatting.FormatBuilder.InitialLayout"/>.</param>
            <param name="position">The position.</param>
            <param name="formatProvider">The format provider.</param>
            <param name="values">The values.</param>
            <param name="isCaseSensitive">if set to <see langword="true" /> then tags are case sensitive.</param>
            <param name="resolveControls">if set to <see langword="true" /> then controls will passed to the resolvable.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.ToString(System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="formatProvider">The format provider.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.ToString(System.IFormatProvider,WebApplications.Utilities.Formatting.ResolveDelegate,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="formatProvider">The format provider.</param>
            <param name="resolver">The values.</param>
            <param name="isCaseSensitive">if set to <see langword="true" /> then tags are case sensitive.</param>
            <param name="resolveOuterTags">if set to <see langword="true" />  outer tags should be resolved automatically in formats.</param>
            <param name="resolveControls">if set to <see langword="true" /> then controls will passed to the resolvable.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.ToString(System.IFormatProvider,WebApplications.Utilities.Formatting.IResolvable)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="formatProvider">The format provider.</param>
            <param name="resolver">The values.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.ToString(WebApplications.Utilities.Formatting.Layout,System.Int32@,System.IFormatProvider,WebApplications.Utilities.Formatting.ResolveDelegate,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="layout">The layout is applied to the original <see cref="P:WebApplications.Utilities.Formatting.FormatBuilder.InitialLayout"/>.</param>
            <param name="position">The position.</param>
            <param name="formatProvider">The format provider.</param>
            <param name="resolver">The values.</param>
            <param name="isCaseSensitive">if set to <see langword="true" /> then tags are case sensitive.</param>
            <param name="resolveOuterTags">if set to <see langword="true" />  outer tags should be resolved automatically in formats.</param>
            <param name="resolveControls">if set to <see langword="true" /> then controls will passed to the resolvable.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.ToString(WebApplications.Utilities.Formatting.Layout,System.Int32@,System.IFormatProvider,WebApplications.Utilities.Formatting.IResolvable)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="layout">The layout is applied to the original <see cref="P:WebApplications.Utilities.Formatting.FormatBuilder.InitialLayout" />.</param>
            <param name="position">The position.</param>
            <param name="formatProvider">The format provider.</param>
            <param name="resolver">The values.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <param name="format">The format. 
            <list type="table">
                <listheader> <term>Format string</term> <description>Description</description> </listheader>
                <item> <term>G/g/null</term> <description>Any unresolved fill points will have their tags output. Control chunks are ignored.</description> </item>
                <item> <term>F/f</term> <description>All control and fill point chunks will have their tags output.</description> </item>
                <item> <term>S/s</term> <description>Any unresolved fill points will be treated as an empty string. Control chunks are ignored.</description> </item>
            </list></param>
            <param name="formatProvider">The format provider.</param>
            <returns>A <see cref="T:System.String"/> that represents this instance. </returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.ToString(WebApplications.Utilities.Formatting.Layout,System.Int32@,System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="layout">The layout is applied to the original <see cref="P:WebApplications.Utilities.Formatting.FormatBuilder.InitialLayout" />.</param>
            <param name="position">The position.</param>
            <param name="format">The format.
            <list type="table"><listheader><term>Format string</term><description>Description</description></listheader><item><term>G/g/null</term><description>Any unresolved fill points will have their tags output. Control chunks are ignored.</description></item><item><term>F/f</term><description>All control and fill point chunks will have their tags output.</description></item><item><term>S/s</term><description>Any unresolved fill points will be treated as an empty string. Control chunks are ignored.</description></item></list></param>
            <param name="formatProvider">The format provider.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.ToStringInstance``1(System.String,System.IFormatProvider,``0)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format.
            <list type="table"><listheader><term>Format string</term><description>Description</description></listheader><item><term>G/g/null</term><description>Any unresolved fill points will have their tags output. Control chunks are ignored.</description></item><item><term>F/f</term><description>All control and fill point chunks will have their tags output.</description></item><item><term>S/s</term><description>Any unresolved fill points will be treated as an empty string. Control chunks are ignored.</description></item></list></param>
            <param name="formatProvider">The format provider.</param>
            <param name="values">The values.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.ToStringInstance``1(WebApplications.Utilities.Formatting.Layout,System.Int32@,System.String,System.IFormatProvider,``0)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="layout">The layout is applied to the original <see cref="P:WebApplications.Utilities.Formatting.FormatBuilder.InitialLayout"/>.</param>
            <param name="position">The position.</param>
            <param name="format">The format.
            <list type="table"><listheader><term>Format string</term><description>Description</description></listheader><item><term>G/g/null</term><description>Any unresolved fill points will have their tags output. Control chunks are ignored.</description></item><item><term>F/f</term><description>All control and fill point chunks will have their tags output.</description></item><item><term>S/s</term><description>Any unresolved fill points will be treated as an empty string. Control chunks are ignored.</description></item></list></param>
            <param name="formatProvider">The format provider.</param>
            <param name="instance">The values.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.ToString(System.String,System.IFormatProvider,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Boolean)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format. 
            <list type="table">
                <listheader> <term>Format string</term> <description>Description</description> </listheader>
                <item> <term>G/g/null</term> <description>Any unresolved fill points will have their tags output. Control chunks are ignored.</description> </item>
                <item> <term>F/f</term> <description>All control and fill point chunks will have their tags output.</description> </item>
                <item> <term>S/s</term> <description>Any unresolved fill points will be treated as an empty string. Control chunks are ignored.</description> </item>
            </list></param>
            <param name="formatProvider">The format provider.</param>
            <param name="values">The values.</param>
            <param name="isCaseSensitive">if set to <see langword="true" /> then tags are case sensitive.</param>
            <param name="resolveControls">if set to <see langword="true" /> then controls will passed to the resolvable.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.ToString(WebApplications.Utilities.Formatting.Layout,System.Int32@,System.String,System.IFormatProvider,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Boolean)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="layout">The layout is applied to the original <see cref="P:WebApplications.Utilities.Formatting.FormatBuilder.InitialLayout"/>.</param>
            <param name="position">The position.</param>
            <param name="format">The format.
            <list type="table"><listheader><term>Format string</term><description>Description</description></listheader><item><term>G/g/null</term><description>Any unresolved fill points will have their tags output. Control chunks are ignored.</description></item><item><term>F/f</term><description>All control and fill point chunks will have their tags output.</description></item><item><term>S/s</term><description>Any unresolved fill points will be treated as an empty string. Control chunks are ignored.</description></item></list></param>
            <param name="formatProvider">The format provider.</param>
            <param name="values">The values.</param>
            <param name="isCaseSensitive">if set to <see langword="true" /> then tags are case sensitive.</param>
            <param name="resolveControls">if set to <see langword="true" /> then controls will passed to the resolvable.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.ToString(System.String,System.IFormatProvider,WebApplications.Utilities.Formatting.ResolveDelegate,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format.
            <list type="table">
            <listheader> <term>Format string</term> <description>Description</description> </listheader>
            <item> <term>G/g/null</term> <description>Any unresolved fill points will have their tags output. Control chunks are ignored.</description> </item>
            <item> <term>F/f</term> <description>All control and fill point chunks will have their tags output.</description> </item>
            <item> <term>S/s</term> <description>Any unresolved fill points will be treated as an empty string. Control chunks are ignored.</description> </item>
            </list></param>
            <param name="formatProvider">The format provider.</param>
            <param name="resolver">The resolver.</param>
            <param name="isCaseSensitive">if set to <see langword="true" /> then tags are case sensitive.</param>
            <param name="resolveOuterTags">if set to <see langword="true" />  outer tags should be resolved automatically in formats.</param>
            <param name="resolveControls">if set to <see langword="true" /> then controls will passed to the resolvable.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.ToString(System.String,System.IFormatProvider,WebApplications.Utilities.Formatting.IResolvable)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format.
            <list type="table"><listheader><term>Format string</term><description>Description</description></listheader><item><term>G/g/null</term><description>Any unresolved fill points will have their tags output. Control chunks are ignored.</description></item><item><term>F/f</term><description>All control and fill point chunks will have their tags output.</description></item><item><term>S/s</term><description>Any unresolved fill points will be treated as an empty string. Control chunks are ignored.</description></item></list></param>
            <param name="formatProvider">The format provider.</param>
            <param name="resolver">The resolver.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.ToString(WebApplications.Utilities.Formatting.Layout,System.Int32@,System.String,System.IFormatProvider,WebApplications.Utilities.Formatting.ResolveDelegate,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="layout">The layout is applied to the original <see cref="P:WebApplications.Utilities.Formatting.FormatBuilder.InitialLayout"/>.</param>
            <param name="position">The position.</param>
            <param name="format">The format.
            <list type="table"><listheader><term>Format string</term><description>Description</description></listheader><item><term>G/g/null</term><description>Any unresolved fill points will have their tags output. Control chunks are ignored.</description></item><item><term>F/f</term><description>All control and fill point chunks will have their tags output.</description></item><item><term>S/s</term><description>Any unresolved fill points will be treated as an empty string. Control chunks are ignored.</description></item></list></param>
            <param name="formatProvider">The format provider.</param>
            <param name="resolver">The resolver.</param>
            <param name="isCaseSensitive">if set to <see langword="true" /> then tags are case sensitive.</param>
            <param name="resolveOuterTags">if set to <see langword="true" />  outer tags should be resolved automatically in formats.</param>
            <param name="resolveControls">if set to <see langword="true" /> then controls will passed to the resolvable.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.ToString(WebApplications.Utilities.Formatting.Layout,System.Int32@,System.String,System.IFormatProvider,WebApplications.Utilities.Formatting.IResolvable)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="layout">The layout is applied to the original <see cref="P:WebApplications.Utilities.Formatting.FormatBuilder.InitialLayout" />.</param>
            <param name="position">The position.</param>
            <param name="format">The format.
            <list type="table"><listheader><term>Format string</term><description>Description</description></listheader><item><term>G/g/null</term><description>Any unresolved fill points will have their tags output. Control chunks are ignored.</description></item><item><term>F/f</term><description>All control and fill point chunks will have their tags output.</description></item><item><term>S/s</term><description>Any unresolved fill points will be treated as an empty string. Control chunks are ignored.</description></item></list></param>
            <param name="formatProvider">The format provider.</param>
            <param name="resolver">The resolver.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.WriteToConsole">
            <summary>
            Writes the builder to the console.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.WriteToConsoleInstance``1(System.String,``0)">
            <summary>
            Writes the builder to the console.
            </summary>
            <param name="format">The format.</param>
            <param name="values">The values.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.WriteToConsoleInstance``1(``0)">
            <summary>
            Writes the builder to the console.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.WriteToConsole(System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Boolean)">
            <summary>
            Writes the builder to the console.
            </summary>
            <param name="format">The format.</param>
            <param name="values">The values.</param>
            <param name="isCaseSensitive">if set to <see langword="true" /> [is case sensitive].</param>
            <param name="resolveControls">if set to <see langword="true" /> then controls will passed to the resolvable.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.WriteToConsole(System.String,WebApplications.Utilities.Formatting.ResolveDelegate,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Writes the builder to the console.
            </summary>
            <param name="format">The format.</param>
            <param name="resolver">The resolver.</param>
            <param name="isCaseSensitive">if set to <see langword="true" /> then tags are case sensitive.</param>
            <param name="resolveOuterTags">if set to <see langword="true" />  outer tags should be resolved automatically in formats.</param>
            <param name="resolveControls">if set to <see langword="true" /> then controls will passed to the resolvable.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.WriteToConsole(System.String,WebApplications.Utilities.Formatting.IResolvable)">
            <summary>
            Writes the builder to the console.
            </summary>
            <param name="format">The format.</param>
            <param name="resolver">The resolver.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.WriteToConsole(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Boolean)">
            <summary>
            Writes the builder to the console.
            </summary>
            <param name="values">The values.</param>
            <param name="isCaseSensitive">if set to <see langword="true" /> [is case sensitive].</param>
            <param name="resolveControls">if set to <see langword="true" /> then controls will passed to the resolvable.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.WriteToConsole(WebApplications.Utilities.Formatting.ResolveDelegate,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Writes the builder to the console.
            </summary>
            <param name="resolver">The resolver.</param>
            <param name="isCaseSensitive">if set to <see langword="true" /> then tags are case sensitive.</param>
            <param name="resolveOuterTags">if set to <see langword="true" />  outer tags should be resolved automatically in formats.</param>
            <param name="resolveControls">if set to <see langword="true" /> then controls will passed to the resolvable.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.WriteToConsole(WebApplications.Utilities.Formatting.IResolvable)">
            <summary>
            Writes the builder to the console.
            </summary>
            <param name="resolver">The resolver.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.WriteToTrace">
            <summary>
            Writes the builder to the trace.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.WriteToTraceInstance``1(System.String,``0)">
            <summary>
            Writes the builder to the trace.
            </summary>
            <param name="format">The format.</param>
            <param name="values">The values.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.WriteToTraceInstance``1(``0)">
            <summary>
            Writes the builder to the trace.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.WriteToTrace(System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Boolean)">
            <summary>
            Writes the builder to the trace.
            </summary>
            <param name="format">The format.</param>
            <param name="values">The values.</param>
            <param name="isCaseSensitive">if set to <see langword="true" /> [is case sensitive].</param>
            <param name="resolveControls">if set to <see langword="true" /> then controls will passed to the resolvable.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.WriteToTrace(System.String,WebApplications.Utilities.Formatting.ResolveDelegate,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Writes the builder to the trace.
            </summary>
            <param name="format">The format.</param>
            <param name="resolver">The resolver.</param>
            <param name="isCaseSensitive">if set to <see langword="true" /> then tags are case sensitive.</param>
            <param name="resolveOuterTags">if set to <see langword="true" />  outer tags should be resolved automatically in formats.</param>
            <param name="resolveControls">if set to <see langword="true" /> then controls will passed to the resolvable.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.WriteToTrace(System.String,WebApplications.Utilities.Formatting.IResolvable)">
            <summary>
            Writes the builder to the trace.
            </summary>
            <param name="format">The format.</param>
            <param name="resolver">The resolver.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.WriteToTrace(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Boolean)">
            <summary>
            Writes the builder to the trace.
            </summary>
            <param name="values">The values.</param>
            <param name="isCaseSensitive">if set to <see langword="true" /> [is case sensitive].</param>
            <param name="resolveControls">if set to <see langword="true" /> then controls will passed to the resolvable.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.WriteToTrace(WebApplications.Utilities.Formatting.ResolveDelegate,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Writes the builder to the trace.
            </summary>
            <param name="resolver">The resolver.</param>
            <param name="isCaseSensitive">if set to <see langword="true" /> then tags are case sensitive.</param>
            <param name="resolveOuterTags">if set to <see langword="true" />  outer tags should be resolved automatically in formats.</param>
            <param name="resolveControls">if set to <see langword="true" /> then controls will passed to the resolvable.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.WriteToTrace(WebApplications.Utilities.Formatting.IResolvable)">
            <summary>
            Writes the builder to the trace.
            </summary>
            <param name="resolver">The resolver.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.WriteTo(System.IO.TextWriter,WebApplications.Utilities.Formatting.Layout,System.Int32)">
            <summary>
            Writes the builder to the specified <see cref="T:System.IO.TextWriter" />.
            </summary>
            <param name="writer">The writer.</param>
            <param name="position">The start position.</param>
            <param name="layout">The layout is applied to the original <see cref="P:WebApplications.Utilities.Formatting.FormatBuilder.InitialLayout"/>.</param>
            <returns>The end position.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.WriteTo(System.IO.TextWriter,System.String)">
            <summary>
            Writes the builder to the specified <see cref="T:System.IO.TextWriter" />.
            </summary>
            <param name="writer">The writer.</param>
            <param name="format">The format.</param>
            <returns>The end position.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.WriteToInstance``1(System.IO.TextWriter,System.String,``0)">
            <summary>
            Writes the builder to the specified <see cref="T:System.IO.TextWriter" />.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="writer">The writer.</param>
            <param name="format">The format.</param>
            <param name="instance">The instance.</param>
            <returns>The end position.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.WriteTo(System.IO.TextWriter,WebApplications.Utilities.Formatting.Layout,System.Int32,System.String)">
            <summary>
            Writes the builder to the specified <see cref="T:System.IO.TextWriter" />.
            </summary>
            <param name="writer">The writer.</param>
            <param name="layout">The layout is applied to the original <see cref="P:WebApplications.Utilities.Formatting.FormatBuilder.InitialLayout" />.</param>
            <param name="position">The start position.</param>
            <param name="format">The format.</param>
            <returns>The end position.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.WriteToInstance``1(System.IO.TextWriter,WebApplications.Utilities.Formatting.Layout,System.Int32,System.String,``0)">
            <summary>
            Writes the builder to the specified <see cref="T:System.IO.TextWriter" />.
            </summary>
            <param name="writer">The writer.</param>
            <param name="layout">The layout is applied to the original <see cref="P:WebApplications.Utilities.Formatting.FormatBuilder.InitialLayout"/>.</param>
            <param name="position">The start position.</param>
            <param name="format">The format.</param>
            <param name="instance">The values.</param>
            <returns>The end position.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.WriteTo(System.IO.TextWriter,System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Boolean)">
            <summary>
            Writes the builder to the specified <see cref="T:System.IO.TextWriter" />.
            </summary>
            <param name="writer">The writer.</param>
            <param name="format">The format.</param>
            <param name="values">The values.</param>
            <param name="isCaseSensitive">if set to <see langword="true" /> tag resolution is case sensitive.</param>
            <param name="resolveControls">if set to <see langword="true" /> then controls will passed to the resolvable.</param>
            <returns>The end position.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.WriteTo(System.IO.TextWriter,WebApplications.Utilities.Formatting.Layout,System.Int32,System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Boolean)">
            <summary>
            Writes the builder to the specified <see cref="T:System.IO.TextWriter" />.
            </summary>
            <param name="writer">The writer.</param>
            <param name="layout">The layout is applied to the original <see cref="P:WebApplications.Utilities.Formatting.FormatBuilder.InitialLayout" />.</param>
            <param name="position">The start position.</param>
            <param name="format">The format.</param>
            <param name="values">The values.</param>
            <param name="isCaseSensitive">if set to <see langword="true" /> tag resolution is case sensitive.</param>
            <param name="resolveControls">if set to <see langword="true" /> then controls will passed to the resolvable.</param>
            <returns>The end position.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.WriteTo(System.IO.TextWriter,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Boolean)">
            <summary>
            Writes the builder to the specified <see cref="T:System.IO.TextWriter" />.
            </summary>
            <param name="writer">The writer.</param>
            <param name="values">The values.</param>
            <param name="isCaseSensitive">if set to <see langword="true" /> tag resolution is case sensitive.</param>
            <param name="resolveControls">if set to <see langword="true" /> then controls will passed to the resolvable.</param>
            <returns>The end position.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.WriteTo(System.IO.TextWriter,WebApplications.Utilities.Formatting.Layout,System.Int32,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Boolean)">
            <summary>
            Writes the builder to the specified <see cref="T:System.IO.TextWriter" />.
            </summary>
            <param name="writer">The writer.</param>
            <param name="layout">The layout is applied to the original <see cref="P:WebApplications.Utilities.Formatting.FormatBuilder.InitialLayout" />.</param>
            <param name="position">The start position.</param>
            <param name="values">The values.</param>
            <param name="isCaseSensitive">if set to <see langword="true" /> tag resolution is case sensitive.</param>
            <param name="resolveControls">if set to <see langword="true" /> then controls will passed to the resolvable.</param>
            <returns>The end position.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.WriteTo(System.IO.TextWriter,System.String,WebApplications.Utilities.Formatting.ResolveDelegate,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Writes the builder to the specified <see cref="T:System.IO.TextWriter" />.
            </summary>
            <param name="writer">The writer.</param>
            <param name="format">The format.</param>
            <param name="resolver">The resolver.</param>
            <param name="isCaseSensitive">if set to <see langword="true" /> then tags are case sensitive.</param>
            <param name="resolveOuterTags">if set to <see langword="true" />  outer tags should be resolved automatically in formats.</param>
            <param name="resolveControls">if set to <see langword="true" /> then controls will passed to the resolvable.</param>
            <returns>The end position.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.WriteTo(System.IO.TextWriter,System.String,WebApplications.Utilities.Formatting.IResolvable)">
            <summary>
            Writes the builder to the specified <see cref="T:System.IO.TextWriter" />.
            </summary>
            <param name="writer">The writer.</param>
            <param name="format">The format.</param>
            <param name="resolver">The resolver.</param>
            <returns>The end position.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.WriteTo(System.IO.TextWriter,WebApplications.Utilities.Formatting.Layout,System.Int32,System.String,WebApplications.Utilities.Formatting.ResolveDelegate,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Writes the builder to the specified <see cref="T:System.IO.TextWriter" />.
            </summary>
            <param name="writer">The writer.</param>
            <param name="layout">The layout is applied to the original <see cref="P:WebApplications.Utilities.Formatting.FormatBuilder.InitialLayout" />.</param>
            <param name="position">The start position.</param>
            <param name="format">The format.</param>
            <param name="resolver">The resolver.</param>
            <param name="isCaseSensitive">if set to <see langword="true" /> then tags are case sensitive.</param>
            <param name="resolveOuterTags">if set to <see langword="true" />  outer tags should be resolved automatically in formats.</param>
            <param name="resolveControls">if set to <see langword="true" /> then controls will passed to the resolvable.</param>
            <returns>The end position.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.WriteTo(System.IO.TextWriter,WebApplications.Utilities.Formatting.Layout,System.Int32,System.String,WebApplications.Utilities.Formatting.IResolvable)">
            <summary>
            Writes the builder to the specified <see cref="T:System.IO.TextWriter" />.
            </summary>
            <param name="writer">The writer.</param>
            <param name="layout">The layout is applied to the original <see cref="P:WebApplications.Utilities.Formatting.FormatBuilder.InitialLayout" />.</param>
            <param name="position">The start position.</param>
            <param name="format">The format.</param>
            <param name="resolver">The resolver.</param>
            <returns>The end position.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.WriteTo(System.IO.TextWriter,WebApplications.Utilities.Formatting.ResolveDelegate,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Writes the builder to the specified <see cref="T:System.IO.TextWriter" />.
            </summary>
            <param name="writer">The writer.</param>
            <param name="resolver">The resolver.</param>
            <param name="isCaseSensitive">if set to <see langword="true" /> then tags are case sensitive.</param>
            <param name="resolveOuterTags">if set to <see langword="true" />  outer tags should be resolved automatically in formats.</param>
            <param name="resolveControls">if set to <see langword="true" /> then controls will passed to the resolvable.</param>
            <returns>The end position.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.WriteTo(System.IO.TextWriter,WebApplications.Utilities.Formatting.IResolvable)">
            <summary>
            Writes the builder to the specified <see cref="T:System.IO.TextWriter" />.
            </summary>
            <param name="writer">The writer.</param>
            <param name="resolver">The resolver.</param>
            <returns>The end position.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.WriteTo(System.IO.TextWriter,WebApplications.Utilities.Formatting.Layout,System.Int32,WebApplications.Utilities.Formatting.ResolveDelegate,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Writes the builder to the specified <see cref="T:System.IO.TextWriter" />.
            </summary>
            <param name="writer">The writer.</param>
            <param name="layout">The layout is applied to the original <see cref="P:WebApplications.Utilities.Formatting.FormatBuilder.InitialLayout" />.</param>
            <param name="position">The start position.</param>
            <param name="resolver">The resolver.</param>
            <param name="isCaseSensitive">if set to <see langword="true" /> then tags are case sensitive.</param>
            <param name="resolveOuterTags">if set to <see langword="true" />  outer tags should be resolved automatically in formats.</param>
            <param name="resolveControls">if set to <see langword="true" /> then controls will passed to the resolvable.</param>
            <returns>The end position.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.WriteTo(System.IO.TextWriter,WebApplications.Utilities.Formatting.Layout,System.Int32,WebApplications.Utilities.Formatting.IResolvable)">
            <summary>
            Writes the builder to the specified <see cref="T:System.IO.TextWriter" />.
            </summary>
            <param name="writer">The writer.</param>
            <param name="layout">The layout is applied to the original <see cref="P:WebApplications.Utilities.Formatting.FormatBuilder.InitialLayout" />.</param>
            <param name="position">The start position.</param>
            <param name="resolver">The resolver.</param>
            <returns>The end position.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.WriteTo(WebApplications.Utilities.Formatting.FormatChunk,System.IO.TextWriter,WebApplications.Utilities.Formatting.FormatBuilder.Resolutions,WebApplications.Utilities.Formatting.IResolvable,WebApplications.Utilities.Formatting.Layout,System.String,System.Int32)">
            <summary>
            Writes the builder to the specified <see cref="T:System.IO.TextWriter" />.
            </summary>
            <param name="rootChunk"></param>
            <param name="writer">The writer.</param>
            <param name="initialResolutions"></param>
            <param name="resolver"></param>
            <param name="initialLayout">The initial layout.</param>
            <param name="format">The format.</param>
            <param name="position">The position.</param>
            <returns>The final position.</returns>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatBuilder.ItemsTag">
            <summary>
            The items tag.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatBuilder.ItemTag">
            <summary>
            The item tag.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatBuilder.IndexTag">
            <summary>
            The index tag.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatBuilder.JoinTag">
            <summary>
            The join tag.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatBuilder._newLineChars">
            <summary>
            The new line characters.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.GetChunkString(System.Object,System.Int32,System.String,System.IFormatProvider)">
            <summary>
            Gets the chunk as a string.
            </summary>
            <param name="value">The value.</param>
            <param name="alignment">The alignment.</param>
            <param name="format">The format.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.HandleLayoutChunk(WebApplications.Utilities.Formatting.FormatChunk,System.Collections.Generic.Stack{WebApplications.Utilities.Formatting.Layout},System.Int32)">
            <summary>
            Handles a layout control chunk.
            </summary>
            <param name="chunk">The chunk.</param>
            <param name="layoutStack">The layout stack.</param>
            <param name="writerWidth">Width of the writer.</param>
            <returns><see langword="true" /> if layout has changed, <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.HandleColor(WebApplications.Utilities.Formatting.FormatChunk,WebApplications.Utilities.Formatting.IColoredTextWriter)">
            <summary>
            Handles the control chunk.
            </summary>
            <param name="chunk">The chunk.</param>
            <param name="coloredTextWriter">The colored text writer.</param>
            <returns><see langword="true" /> if color control, <see langword="false" /> otherwise.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Formatting.FormatBuilder.CharType">
            <summary>
            Character types.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatBuilder.CharType.None">
            <summary>
            No character.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatBuilder.CharType.WhiteSpace">
            <summary>
            A white space character
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatBuilder.CharType.Apostrophe">
            <summary>
            Symbol character.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatBuilder.CharType.Symbol">
            <summary>
            Symbol character.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatBuilder.CharType.Alphanumeric">
            <summary>
            Alphanumeric character
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.DoWrite(WebApplications.Utilities.Formatting.FormatChunk,System.IO.TextWriter,System.IO.TextWriter,WebApplications.Utilities.Formatting.FormatBuilder.Resolutions,WebApplications.Utilities.Formatting.IResolvable,WebApplications.Utilities.Formatting.Layout,System.String,System.Int32)">
            <summary>
            Writes the builder to the specified <see cref="T:System.IO.TextWriter" />.
            </summary>
            <param name="rootChunk">The root chunk.</param>
            <param name="writer">The writer.</param>
            <param name="serialWriter">The serial writer.</param>
            <param name="initialResolutions">The initial resolutions.</param>
            <param name="resolver">The resolver.</param>
            <param name="initialLayout">The initial layout.</param>
            <param name="format">The format.</param>
            <param name="position">The position.</param>
            <returns>The final position.</returns>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatBuilder.ResetColorsTag">
            <summary>
            The reset colors control tag.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatBuilder.ResetColorsChunk">
            <summary>
            The reset colors chunk.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatBuilder.ForegroundColorTag">
            <summary>
            The foreground color control tag.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatBuilder.BackgroundColorTag">
            <summary>
            The background color control tag.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatBuilder.ResetForegroundColorChunk">
            <summary>
            The reset foreground color chunk.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatBuilder.ResetBackgroundColorChunk">
            <summary>
            The reset background color chunk.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendResetColors">
            <summary>
            Adds a control to reset the foreground and background colors
            </summary>
            <returns>FormatBuilder.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendResetForegroundColor">
            <summary>
            Adds a control to reset the foreground color.
            </summary>
            <returns>FormatBuilder.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendResetBackgroundColor">
            <summary>
            Adds a control to reset the background color.
            </summary>
            <returns>FormatBuilder.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendForegroundColor(System.ConsoleColor)">
            <summary>
            Adds a control to set the foreground color.
            </summary>
            <param name="color">The color.</param>
            <returns>FormatBuilder.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendForegroundColor(System.Drawing.Color)">
            <summary>
            Adds a control to set the foreground color.
            </summary>
            <param name="color">The color.</param>
            <returns>FormatBuilder.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendForegroundColor(System.String)">
            <summary>
            Adds a control to set the foreground color.
            </summary>
            <param name="color">The color.</param>
            <returns>FormatBuilder.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendBackgroundColor(System.ConsoleColor)">
            <summary>
            Adds a control to set the background color.
            </summary>
            <param name="color">The color.</param>
            <returns>FormatBuilder.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendBackgroundColor(System.Drawing.Color)">
            <summary>
            Adds a control to set the background color.
            </summary>
            <param name="color">The color.</param>
            <returns>FormatBuilder.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendBackgroundColor(System.String)">
            <summary>
            Adds a control to set the console's background color.
            </summary>
            <param name="color">The color.</param>
            <returns>FormatBuilder.</returns>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatBuilder.LayoutTag">
            <summary>
            The layout control tag.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatBuilder.PopLayoutChunk">
            <summary>
            The pop layout chunk.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatBuilder.NewLineChunk">
            <summary>
            The new line chunk
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendPopLayout">
            <summary>
            Pops the layout off the stack.
            </summary>
            <returns>FormatBuilder.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendLayout(WebApplications.Utilities.Formatting.Layout)">
            <summary>
            Sets the layout (if outputting to a layout writer).
            </summary>
            <param name="layout">The layout.</param>
            <returns>FormatBuilder.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.AppendLayout(WebApplications.Utilities.Optional{System.Int32},WebApplications.Utilities.Optional{System.Int32},WebApplications.Utilities.Optional{System.Int32},WebApplications.Utilities.Optional{System.Char},WebApplications.Utilities.Optional{System.Int32},WebApplications.Utilities.Optional{System.Collections.Generic.IEnumerable{System.Int32}},WebApplications.Utilities.Optional{System.Byte},WebApplications.Utilities.Optional{System.Char},WebApplications.Utilities.Optional{WebApplications.Utilities.Formatting.Alignment},WebApplications.Utilities.Optional{System.Byte},WebApplications.Utilities.Optional{System.Boolean},WebApplications.Utilities.Optional{System.Char},WebApplications.Utilities.Optional{WebApplications.Utilities.Formatting.LayoutWrapMode})">
            <summary>
            Sets the layout (if outputting to a layout writer).
            </summary>
            <param name="width">The width.</param>
            <param name="indentSize">Size of the indent.</param>
            <param name="rightMarginSize">Size of the right margin.</param>
            <param name="indentChar">The indent character.</param>
            <param name="firstLineIndentSize">First size of the line indent.</param>
            <param name="tabStops">The tab stops.</param>
            <param name="tabSize">Size of the tab.</param>
            <param name="tabChar">The tab character.</param>
            <param name="alignment">The alignment.</param>
            <param name="splitLength">if set to <see langword="true" /> then words will split across lines.</param>
            <param name="hyphenate">if set to <see langword="true" /> [hyphenate].</param>
            <param name="hyphenChar">The hyphenation character.</param>
            <param name="wrapMode">The line wrap mode.</param>
            <returns>FormatBuilder.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.op_Implicit(System.String)~WebApplications.Utilities.Formatting.FormatBuilder">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String"/> to <see cref="T:WebApplications.Utilities.Formatting.FormatBuilder"/>.
            </summary>
            <param name="format">The format.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.op_Implicit(WebApplications.Utilities.Formatting.FormatBuilder)~System.String">
            <summary>
            Performs an implicit conversion from <see cref="T:WebApplications.Utilities.Formatting.FormatBuilder"/> to <see cref="T:System.String"/>.
            </summary>
            <param name="format">The format.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><see langword="true" /> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.Equals(WebApplications.Utilities.Formatting.FormatBuilder)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.op_Equality(WebApplications.Utilities.Formatting.FormatBuilder,WebApplications.Utilities.Formatting.FormatBuilder)">
            <summary>
            Implements the ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.op_Inequality(WebApplications.Utilities.Formatting.FormatBuilder,WebApplications.Utilities.Formatting.FormatBuilder)">
            <summary>
            Implements the !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilder.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Formatting.FormatBuilderConverter">
            <summary>
            Can be used to convert <see cref="T:WebApplications.Utilities.Formatting.FormatBuilder"/> to/from <see cref="T:System.String"/> in configurations.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilderConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts to.
            </summary>
            <param name="ctx">The CTX.</param>
            <param name="ci">The ci.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatBuilderConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from.
            </summary>
            <param name="ctx">The CTX.</param>
            <param name="ci">The ci.</param>
            <param name="data">The data.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Formatting.FormatChunk">
            <summary>
            A format chunk, holds information about a chunk of formatted Value.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Formatting.FormatChunk.ParserState">
            <summary>
            Used during parsing of chunks, to indicate the current parser state.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatChunk.Resolver">
            <summary>
            Any resolver that should be used to resolve this chunk (and any nested chunks).
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatChunk.IsControl">
            <summary>
            Control chunks are never written out when you call <see cref="M:WebApplications.Utilities.Formatting.FormatChunk.ToString"/>, but can be used by consumers of a <see cref="T:WebApplications.Utilities.Formatting.FormatBuilder"/> to
            extend functionality.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatChunk.Tag">
            <summary>
            The tag, if this is a formatting chunk, if any; otherwise <see langword="null"/>. (e.g. '0' for '{0,-3:G}')
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatChunk.Alignment">
            <summary>
            The alignment, if any; otherwise 0. (e.g. -3 for '{0,-3:G}'
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatChunk.Format">
            <summary>
            The format, if this is a formatting chunk and a format was specified, if any; otherwise <see langword="null"/>. (e.g. 'G' for '{0,-3:G}')
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatChunk.Value">
            <summary>
            The chunk Value, if any (will always be <see langword="null"/> if <see cref="F:WebApplications.Utilities.Formatting.FormatChunk.IsResolved"/> is <see langword="true"/>).
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatChunk.IsResolved">
            <summary>
            Gets a value indicating whether this instance is resolved.
            </summary>
            <value><see langword="true" /> if this instance is resolved; otherwise, <see langword="false" />.</value>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatChunk.ChildrenInternal">
            <summary>
            The child chunks.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.FormatChunk.Children">
            <summary>
            Gets the children (if any).
            </summary>
            <value>The children.</value>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatChunk.#ctor(WebApplications.Utilities.Formatting.IResolvable,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Formatting.FormatChunk" /> class.
            </summary>
            <param name="resolver">The resolver.</param>
            <param name="tag">The tag.</param>
            <param name="alignment">The alignment.</param>
            <param name="format">The format.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatChunk.#ctor(WebApplications.Utilities.Formatting.IResolvable,System.String,System.Int32,System.String,WebApplications.Utilities.Optional{System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Formatting.FormatChunk" /> class.
            </summary>
            <param name="resolver">The resolver.</param>
            <param name="tag">The tag.</param>
            <param name="alignment">The alignment.</param>
            <param name="format">The format.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatChunk.#ctor(WebApplications.Utilities.Optional{System.Object})">
            <summary>
            Creates a non-fill point chunk.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatChunk.#ctor(WebApplications.Utilities.Formatting.FormatChunk,WebApplications.Utilities.Optional{System.Object})">
            <summary>
            Creates a clone of the <see cref="T:WebApplications.Utilities.Formatting.FormatChunk" />, changing the resolved value.
            </summary>
            <param name="chunk">The chunk.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatChunk.#ctor(WebApplications.Utilities.Formatting.IResolvable,System.String,System.Int32,System.String,System.Boolean,System.Object,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Formatting.FormatChunk"/> class.
            </summary>
            <param name="resolver">The resolver.</param>
            <param name="tag">The tag.</param>
            <param name="alignment">The alignment.</param>
            <param name="format">The format.</param>
            <param name="isResolved">if set to <see langword="true" /> [is resolved].</param>
            <param name="value">The value.</param>
            <param name="isControl">if set to <see langword="true" /> [is control].</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatChunk.DeepCopyChunks(WebApplications.Utilities.Formatting.FormatChunk,WebApplications.Utilities.Formatting.FormatChunk)">
            <summary>
            Performs a deep copy of the child chunks from <paramref name="source"/> to <paramref name="destination"/>.
            </summary>
            <param name="source">The source.</param>
            <param name="destination">The destination.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatChunk.Parse(System.String,WebApplications.Utilities.Formatting.IResolvable)">
            <summary>
            Parses a string into an enumeartion of <see cref="T:WebApplications.Utilities.Formatting.FormatChunk"/>.
            </summary>
            <param name="value">The value.</param>
            <param name="resolver">The resolver.</param>
            <returns>An enumeration of <see cref="T:WebApplications.Utilities.Formatting.FormatChunk"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatChunk.Append(System.String,WebApplications.Utilities.Formatting.IResolvable)">
            <summary>
            Appends the specified value, using the supplied resolver (if any).
            </summary>
            <param name="value">The value.</param>
            <param name="resolver">The resolver.</param>
            <returns>FormatChunk.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatChunk.AppendChunk(WebApplications.Utilities.Formatting.FormatChunk)">
            <summary>
            Appends the specified chunk.
            </summary>
            <param name="chunk">The chunk.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatChunk.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatChunk.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <param name="format">The format.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatChunk.WriteTo(System.IO.TextWriter,System.String)">
            <summary>
            Writes this instance to the
            <paramref name="writer" />, using the optional
            <paramref name="format" />.
            </summary>
            <param name="writer">The writer.</param>
            <param name="format">The format.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.FormatChunk.AllChildren">
            <summary>
            Returns all children of this <see cref="T:WebApplications.Utilities.Formatting.FormatChunk"/>.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Formatting.FormatExtensions">
            <summary>
            Formattign extension methods.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatExtensions.SafeFormat(System.String,System.Object[])">
            <summary>
            A safe <see cref="T:System.String" /> format.
            </summary>
            <param name="format">The format string.</param>
            <param name="parameters">The values used in the format string.</param>
            <returns>
            Returns the formatted <see cref="T:System.String" /> if successful; otherwise returns the <paramref name="format" /> string.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatExtensions.SafeFormat(System.String,System.IFormatProvider,System.Object[])">
            <summary>
            A safe <see cref="T:System.String" /> format.
            </summary>
            <param name="format">The format string.</param>
            <param name="formatProvider">The format provider.</param>
            <param name="parameters">The values used in the format string.</param>
            <returns>
            Returns the formatted <see cref="T:System.String" /> if successful; otherwise returns the <paramref name="format" /> string.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatExtensions.SafeFormat(System.String,System.String,System.IFormatProvider,System.Object[])">
            <summary>
            A safe <see cref="T:System.String" /> format.
            </summary>
            <param name="format">The format string.</param>
            <param name="formatOptions">The format options string. <seealso cref="M:WebApplications.Utilities.Formatting.FormatBuilder.ToString(System.String,System.IFormatProvider)"/></param>
            <param name="formatProvider">The format provider.</param>
            <param name="parameters">The values used in the format string.</param>
            <returns>Returns the formatted <see cref="T:System.String" /> if successful; otherwise returns the <paramref name="format" /> string.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatExtensions.TryFormat(System.String,System.IFormatProvider,System.Object[])">
            <summary>
            Attempts to replace the format item in a specified string with the string representation of a corresponding object in a specified array.
            </summary>
            <param name="format">A composite format string.</param>
            <param name="provider">The provider.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <returns>
            A copy of <paramref name="format" /> in which the format items have been replaced by the string representation of the corresponding objects in <paramref name="args" />,
            or <see langword="null"/> if the format string was invalid.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatExtensions.Serialize(System.IO.TextWriter)">
            <summary>
            Produces a serialized version of the specified writer, using <see cref="T:WebApplications.Utilities.Threading.SerializingSynchronizationContext" />, that
            will write output serially.
            </summary>
            <param name="writer">The writer.</param>
            <returns>A synchronized TextWriter.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatExtensions.Format(System.IO.TextWriter,WebApplications.Utilities.Formatting.Layout,System.UInt16)">
            <summary>
            Produces a formatted version of the specified writer, using <see cref="T:WebApplications.Utilities.Formatting.FormatTextWriter" />.
            </summary>
            <param name="writer">The writer.</param>
            <param name="layout">The layout.</param>
            <param name="startPosition">The start position.</param>
            <returns>A laid out TextWriter.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatExtensions.Format(System.IO.TextWriter,WebApplications.Utilities.Optional{System.Int32},WebApplications.Utilities.Optional{System.Int32},WebApplications.Utilities.Optional{System.Int32},WebApplications.Utilities.Optional{System.Char},WebApplications.Utilities.Optional{System.Int32},WebApplications.Utilities.Optional{System.Collections.Generic.IEnumerable{System.Int32}},WebApplications.Utilities.Optional{System.Byte},WebApplications.Utilities.Optional{System.Char},WebApplications.Utilities.Optional{WebApplications.Utilities.Formatting.Alignment},WebApplications.Utilities.Optional{System.Byte},WebApplications.Utilities.Optional{System.Boolean},WebApplications.Utilities.Optional{System.Char},WebApplications.Utilities.Optional{WebApplications.Utilities.Formatting.LayoutWrapMode},System.UInt16)">
            <summary>
            Produces a formatted version of the specified writer, using <see cref="T:WebApplications.Utilities.Formatting.FormatTextWriter" />.
            </summary>
            <param name="writer">The writer.</param>
            <param name="width">The width.</param>
            <param name="indentSize">Size of the indent.</param>
            <param name="rightMarginSize">Size of the right margin.</param>
            <param name="indentChar">The indent character.</param>
            <param name="firstLineIndentSize">First size of the line indent.</param>
            <param name="tabStops">The tab stops.</param>
            <param name="tabSize">Size of the tab.</param>
            <param name="tabChar">The tab character.</param>
            <param name="alignment">The alignment.</param>
            <param name="splitLength">The split length.</param>
            <param name="hyphenate">The hyphenate.</param>
            <param name="hyphenChar">The hyphen character.</param>
            <param name="wrapMode">The wrap mode.</param>
            <param name="startPosition">The start position.</param>
            <returns>A laid out TextWriter.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Formatting.FormatOutput">
            <summary>
            Implements <see cref="T:WebApplications.Utilities.Formatting.IWriteable"/> to produce an object that, when written, ouputs it's specified format.
            For example, ToString("My format") => "My format".
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatOutput.Default">
            <summary>
            The default instance.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatOutput.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:WebApplications.Utilities.Formatting.FormatOutput"/> class from being created.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatOutput.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatOutput.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <param name="format">The format.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatOutput.ToString(WebApplications.Utilities.Formatting.FormatBuilder,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <param name="format">The format.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatOutput.WriteTo(System.IO.TextWriter,System.String)">
            <summary>
            Writes this instance to the <paramref name="writer" />, using the optional <paramref name="format" />.
            </summary>
            <param name="writer">The writer.</param>
            <param name="format">The format.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:WebApplications.Utilities.Formatting.FormattedStringWriter">
            <summary>
            Implements a <see cref="T:System.IO.TextWriter"/> that works like a <see cref="T:System.IO.StringWriter"/> but uses a <see cref="T:WebApplications.Utilities.Formatting.FormatBuilder" /> for efficiently writing chunks of complicated text.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormattedStringWriter._encoding">
            <summary>
            The encoding.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormattedStringWriter._isOpen">
            <summary>
            Whether this instance is currently open.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormattedStringWriter._builder">
            <summary>
            The underlying writer.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.#ctor(WebApplications.Utilities.Formatting.FormatBuilder,System.IFormatProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Formatting.FormattedStringWriter" /> class.
            </summary>
            <param name="builder">The builder.</param>
            <param name="formatProvider">The format provider.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.Close">
            <summary>
            Closes the current writer and releases any system resources associated with the writer.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.FormattedStringWriter.Encoding">
            <summary>
            Gets the encoding.
            </summary>
            <value>The encoding.</value>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.Write(System.Boolean)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.Write(System.Char)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.Write(System.Char[])">
            <summary>
            Writes the specified buffer.
            </summary>
            <param name="buffer">The buffer.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.Write(System.Decimal)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.Write(System.Double)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.Write(System.Single)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.Write(System.Int32)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.Write(System.Int64)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.Write(System.Object)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.Write(System.String)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.Write(System.UInt32)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.Write(System.UInt64)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.Write(System.String,System.Object)">
            <summary>
            Writes the specified format.
            </summary>
            <param name="format">The format.</param>
            <param name="arg0">The arg0.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.Write(System.String,System.Object[])">
            <summary>
            Writes the specified format.
            </summary>
            <param name="format">The format.</param>
            <param name="arg">The argument.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.Write(System.Char[],System.Int32,System.Int32)">
            <summary>
            Writes the specified buffer.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="index">The index.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.Write(System.String,System.Object,System.Object)">
            <summary>
            Writes the specified format.
            </summary>
            <param name="format">The format.</param>
            <param name="arg0">The arg0.</param>
            <param name="arg1">The arg1.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.Write(System.String,System.Object,System.Object,System.Object)">
            <summary>
            Writes the specified format.
            </summary>
            <param name="format">The format.</param>
            <param name="arg0">The arg0.</param>
            <param name="arg1">The arg1.</param>
            <param name="arg2">The arg2.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.WriteLine">
            <summary>
            Writes the line.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.WriteLine(System.Boolean)">
            <summary>
            Writes the line.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.WriteLine(System.Char)">
            <summary>
            Writes the line.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.WriteLine(System.Char[])">
            <summary>
            Writes the line.
            </summary>
            <param name="buffer">The buffer.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.WriteLine(System.Decimal)">
            <summary>
            Writes the line.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.WriteLine(System.Double)">
            <summary>
            Writes the line.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.WriteLine(System.Single)">
            <summary>
            Writes the line.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.WriteLine(System.Int32)">
            <summary>
            Writes the line.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.WriteLine(System.Int64)">
            <summary>
            Writes the line.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.WriteLine(System.Object)">
            <summary>
            Writes the line.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.WriteLine(System.String)">
            <summary>
            Writes the line.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.WriteLine(System.UInt32)">
            <summary>
            Writes the line.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.WriteLine(System.UInt64)">
            <summary>
            Writes the line.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.WriteLine(System.String,System.Object)">
            <summary>
            Writes the line.
            </summary>
            <param name="format">The format.</param>
            <param name="arg0">The arg0.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.WriteLine(System.String,System.Object[])">
            <summary>
            Writes the line.
            </summary>
            <param name="format">The format.</param>
            <param name="arg">The argument.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
            <summary>
            Writes the line.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="index">The index.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.WriteLine(System.String,System.Object,System.Object)">
            <summary>
            Writes the line.
            </summary>
            <param name="format">The format.</param>
            <param name="arg0">The arg0.</param>
            <param name="arg1">The arg1.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
            <summary>
            Writes the line.
            </summary>
            <param name="format">The format.</param>
            <param name="arg0">The arg0.</param>
            <param name="arg1">The arg1.</param>
            <param name="arg2">The arg2.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.Write(WebApplications.Utilities.Formatting.FormatBuilder)">
            <summary>
            Writes the specified builder.
            </summary>
            <param name="builder">The builder.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.WriteAsync(WebApplications.Utilities.Formatting.FormatBuilder)">
            <summary>
            Writes the specified builder.
            </summary>
            <param name="builder">The builder.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.ToString(System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <param name="formatProvider">The format provider.</param>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormattedStringWriter.ToString(System.String,System.IFormatProvider)">
            <summary>
            To the string.
            </summary>
            <param name="format">The format.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Formatting.FuncResolvable">
            <summary>
            Wraps a lambda expression in a concrete <see cref="T:WebApplications.Utilities.Formatting.IResolvable" /> object.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FuncResolvable._resolver">
            <summary>
            The resolver
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FuncResolvable.#ctor(WebApplications.Utilities.Formatting.ResolveDelegate,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Formatting.Resolvable"/> class.
            </summary>
            <param name="resolver">The resolver.</param>
            <param name="isCaseSensitive">if set to <see langword="true"/> then tags are case sensitive.</param>
            <param name="resolveOuterTags">if set to <see langword="true"/>  outer tags should be resolved automatically in formats.</param>
            <param name="resolveControls">if set to <see langword="true" /> then controls will passed to the resolvable.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FuncResolvable.Resolve(WebApplications.Utilities.Formatting.FormatWriteContext,WebApplications.Utilities.Formatting.FormatChunk)">
            <summary>
            Resolves the specified tag.
            </summary>
            <param name="context">The context.</param>
            <param name="chunk">The chunk.</param>
            <returns>A <see cref="T:WebApplications.Utilities.Formatting.Resolution" />.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Formatting.IColoredTextWriter">
            <summary>
            Interface that indicates a <see cref="T:System.IO.TextWriter"/> supports color.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.IColoredTextWriter.ResetColors">
            <summary>
            Resets the foreground and background colors of the writer.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.IColoredTextWriter.ResetForegroundColor">
            <summary>
            Resets the foreground color of the writer.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.IColoredTextWriter.SetForegroundColor(System.Drawing.Color)">
            <summary>
            Sets the foreground color of the writer.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.IColoredTextWriter.ResetBackgroundColor">
            <summary>
            Sets the background color of the writer.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.IColoredTextWriter.SetBackgroundColor(System.Drawing.Color)">
            <summary>
            Sets the background color of the writer.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="T:WebApplications.Utilities.Formatting.IControllableTextWriter">
            <summary>
            Indicates a <see cref="T:System.IO.TextWriter"/> that supports control codes.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.IControllableTextWriter.OnControlChunk(WebApplications.Utilities.Formatting.FormatChunk)">
            <summary>
            Called when a control chunk is encountered.
            </summary>
            <param name="chunk">The chunk.</param>
        </member>
        <member name="T:WebApplications.Utilities.Formatting.IResolvable">
            <summary>
            Indicates the object supports writing to a <see cref="T:System.IO.TextWriter"/> using an optional <see cref="T:WebApplications.Utilities.Formatting.FormatBuilder"/> to specify the format.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.IResolvable.IsCaseSensitive">
            <summary>
            Gets a value indicating whether this instance uses case sensitive tag resolution caching.
            </summary>
            <value><see langword="true" /> if this instance is case sensitive; otherwise, <see langword="false" />.</value>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.IResolvable.ResolveOuterTags">
            <summary>
            Gets a value indicating whether outer tags should be resolved automatically in formats.
            </summary>
            <value><see langword="true" /> if the <see cref="T:WebApplications.Utilities.Formatting.FormatBuilder"/> should allow outer tags when resolving formats for this instance; otherwise, <see langword="false" />.</value>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.IResolvable.ResolveControls">
            <summary>
            Gets a value indicating whether control tags should be based to the resolver.
            </summary>
            <value><see langword="true" /> if the <see cref="T:WebApplications.Utilities.Formatting.FormatBuilder"/> should allow outer tags when resolving formats for this instance; otherwise, <see langword="false" />.</value>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.IResolvable.Resolve(WebApplications.Utilities.Formatting.FormatWriteContext,WebApplications.Utilities.Formatting.FormatChunk)">
            <summary>
            Resolves the specified tag.
            </summary>
            <param name="context">The context.</param>
            <param name="chunk">The chunk.</param>
            <returns>An object that will be cached unless it is a <see cref="T:WebApplications.Utilities.Formatting.Resolution" />.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Formatting.ILayoutTextWriter">
            <summary>
            Indicates a <see cref="T:System.IO.TextWriter"/> provides positional information for a <see cref="T:WebApplications.Utilities.Formatting.FormatBuilder"/>.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.ILayoutTextWriter.Width">
            <summary>
            Gets the width of the console.
            </summary>
            <value>
            The width of the console.
            </value>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.ILayoutTextWriter.Position">
            <summary>
            Gets or sets the current horizontal position.
            </summary>
            <value>The position.</value>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.ILayoutTextWriter.AutoWraps">
            <summary>
            Gets a value indicating whether the writer automatically wraps on reaching <see cref="P:WebApplications.Utilities.Formatting.ILayoutTextWriter.Width"/>.
            </summary>
            <value><see langword="true" /> if the writer automatically wraps; otherwise, <see langword="false" />.</value>
        </member>
        <member name="T:WebApplications.Utilities.Formatting.ISerialTextWriter">
            <summary>
            Indicates the <see cref="T:System.IO.TextWriter"/> is synchronized with a <see cref="T:WebApplications.Utilities.Threading.SerializingSynchronizationContext"/>, making it easier to group multiple writes in
            a block that won't be interrupted from another thread.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.ISerialTextWriter.Context">
            <summary>
            The serializing synchronization context.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.ISerialTextWriter.Writer">
            <summary>
            Gets the un-serialized underlying writer, which should only be used if you have already synchronized using the <see cref="P:WebApplications.Utilities.Formatting.ISerialTextWriter.Context"/>.
            </summary>
            <value>The writer.</value>
        </member>
        <member name="T:WebApplications.Utilities.Formatting.ITextWriter">
            <summary>
            Interface ITextWriter defines all the methods that inheritors of <see cref="T:System.IO.TextWriter"/> implement.
            </summary>
            <remarks>
            Unfortunately, <see cref="T:System.IO.TextWriter"/> does not implement this interface, but it helps us ensure that our extension interfaces are only added
            to types that look like <see cref="T:System.IO.TextWriter"/>
            </remarks>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.ITextWriter.Encoding">
            <summary>
            When overridden in a derived class, returns the character encoding in which the output is written.
            </summary>
            <value>The encoding.</value>
            <returns>The character encoding in which the output is written.</returns>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.ITextWriter.FormatProvider">
            <summary>
            Gets an object that controls formatting.
            </summary>
            <value>The format provider.</value>
            <returns>An <see cref="T:System.IFormatProvider" /> object for a specific culture, or the formatting of the current culture if no other culture is specified.</returns>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.ITextWriter.NewLine">
            <summary>
            Gets or sets the line terminator string used by the current TextWriter.
            </summary>
            <value>The new line.</value>
            <returns>The line terminator string for the current TextWriter.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.Close">
            <summary>
            Closes the current writer and releases any system resources associated with the writer.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.Flush">
            <summary>
            Clears all buffers for the current writer and causes any buffered data to be written to the underlying device.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.Write(System.Char)">
            <summary>
            Writes a character to the text string or stream.
            </summary>
            <param name="value">The character to write to the text stream.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.Write(System.Char[])">
            <summary>
            Writes a character array to the text string or stream.
            </summary>
            <param name="buffer">The character array to write to the text stream.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.Write(System.Char[],System.Int32,System.Int32)">
            <summary>
            Writes a subarray of characters to the text string or stream.
            </summary>
            <param name="buffer">The character array to write data from.</param>
            <param name="index">The character position in the buffer at which to start retrieving data.</param>
            <param name="count">The number of characters to write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.Write(System.Boolean)">
            <summary>
            Writes the text representation of a Boolean value to the text string or stream.
            </summary>
            <param name="value">The Boolean value to write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.Write(System.Int32)">
            <summary>
            Writes the text representation of a 4-byte signed integer to the text string or stream.
            </summary>
            <param name="value">The 4-byte signed integer to write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.Write(System.UInt32)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.Write(System.Int64)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.Write(System.UInt64)">
            <summary>
            Writes the text representation of an 8-byte unsigned integer to the text string or stream.
            </summary>
            <param name="value">The 8-byte unsigned integer to write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.Write(System.Single)">
            <summary>
            Writes the text representation of a 4-byte floating-point value to the text string or stream.
            </summary>
            <param name="value">The 4-byte floating-point value to write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.Write(System.Double)">
            <summary>
            Writes the text representation of an 8-byte floating-point value to the text string or stream.
            </summary>
            <param name="value">The 8-byte floating-point value to write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.Write(System.Decimal)">
            <summary>
            Writes the text representation of a decimal value to the text string or stream.
            </summary>
            <param name="value">The decimal value to write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.Write(System.String)">
            <summary>
            Writes a string to the text string or stream.
            </summary>
            <param name="value">The string to write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.Write(System.Object)">
            <summary>
            Writes the text representation of an object to the text string or stream by calling the ToString method on that object.
            </summary>
            <param name="value">The object to write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.Write(System.String,System.Object)">
            <summary>
            Writes a formatted string to the text string or stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object)" /> method.
            </summary>
            <param name="format">A composite format string (see Remarks).</param>
            <param name="arg0">The object to format and write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.Write(System.String,System.Object,System.Object)">
            <summary>
            Writes a formatted string to the text string or stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object,System.Object)" /> method.
            </summary>
            <param name="format">A composite format string (see Remarks).</param>
            <param name="arg0">The first object to format and write.</param>
            <param name="arg1">The second object to format and write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.Write(System.String,System.Object,System.Object,System.Object)">
            <summary>
            Writes a formatted string to the text string or stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object,System.Object,System.Object)" /> method.
            </summary>
            <param name="format">A composite format string (see Remarks).</param>
            <param name="arg0">The first object to format and write.</param>
            <param name="arg1">The second object to format and write.</param>
            <param name="arg2">The third object to format and write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.Write(System.String,System.Object[])">
            <summary>
            Writes a formatted string to the text string or stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object[])" /> method.
            </summary>
            <param name="format">A composite format string (see Remarks).</param>
            <param name="arg">An object array that contains zero or more objects to format and write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.WriteLine">
            <summary>
            Writes a line terminator to the text string or stream.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.WriteLine(System.Char)">
            <summary>
            Writes a character followed by a line terminator to the text string or stream.
            </summary>
            <param name="value">The character to write to the text stream.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.WriteLine(System.Decimal)">
            <summary>
            Writes the text representation of a decimal value followed by a line terminator to the text string or stream.
            </summary>
            <param name="value">The decimal value to write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.WriteLine(System.Char[])">
            <summary>
            Writes an array of characters followed by a line terminator to the text string or stream.
            </summary>
            <param name="buffer">The character array from which data is read.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
            <summary>
            Writes a subarray of characters followed by a line terminator to the text string or stream.
            </summary>
            <param name="buffer">The character array from which data is read.</param>
            <param name="index">The character position in <paramref name="buffer" /> at which to start reading data.</param>
            <param name="count">The maximum number of characters to write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.WriteLine(System.Boolean)">
            <summary>
            Writes the text representation of a Boolean value followed by a line terminator to the text string or stream.
            </summary>
            <param name="value">The Boolean value to write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.WriteLine(System.Int32)">
            <summary>
            Writes the text representation of a 4-byte signed integer followed by a line terminator to the text string or stream.
            </summary>
            <param name="value">The 4-byte signed integer to write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.WriteLine(System.UInt32)">
            <summary>
            Writes the text representation of a 4-byte unsigned integer followed by a line terminator to the text string or stream.
            </summary>
            <param name="value">The 4-byte unsigned integer to write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.WriteLine(System.Int64)">
            <summary>
            Writes the text representation of an 8-byte signed integer followed by a line terminator to the text string or stream.
            </summary>
            <param name="value">The 8-byte signed integer to write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.WriteLine(System.UInt64)">
            <summary>
            Writes the text representation of an 8-byte unsigned integer followed by a line terminator to the text string or stream.
            </summary>
            <param name="value">The 8-byte unsigned integer to write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.WriteLine(System.Single)">
            <summary>
            Writes the text representation of a 4-byte floating-point value followed by a line terminator to the text string or stream.
            </summary>
            <param name="value">The 4-byte floating-point value to write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.WriteLine(System.Double)">
            <summary>
            Writes the text representation of a 8-byte floating-point value followed by a line terminator to the text string or stream.
            </summary>
            <param name="value">The 8-byte floating-point value to write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.WriteLine(System.String)">
            <summary>
            Writes a string followed by a line terminator to the text string or stream.
            </summary>
            <param name="value">The string to write. If <paramref name="value" /> is null, only the line terminator is written.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.WriteLine(System.Object)">
            <summary>
            Writes the text representation of an object by calling the ToString method on that object, followed by a line terminator to the text string or stream.
            </summary>
            <param name="value">The object to write. If <paramref name="value" /> is null, only the line terminator is written.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.WriteLine(System.String,System.Object)">
            <summary>
            Writes a formatted string and a new line to the text string or stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object)" /> method.
            </summary>
            <param name="format">A composite format string (see Remarks).</param>
            <param name="arg0">The object to format and write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.WriteLine(System.String,System.Object,System.Object)">
            <summary>
            Writes a formatted string and a new line to the text string or stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object,System.Object)" /> method.
            </summary>
            <param name="format">A composite format string (see Remarks).</param>
            <param name="arg0">The first object to format and write.</param>
            <param name="arg1">The second object to format and write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
            <summary>
            Writes out a formatted string and a new line, using the same semantics as <see cref="M:System.String.Format(System.String,System.Object)" />.
            </summary>
            <param name="format">A composite format string (see Remarks).</param>
            <param name="arg0">The first object to format and write.</param>
            <param name="arg1">The second object to format and write.</param>
            <param name="arg2">The third object to format and write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.WriteLine(System.String,System.Object[])">
            <summary>
            Writes out a formatted string and a new line, using the same semantics as <see cref="M:System.String.Format(System.String,System.Object)" />.
            </summary>
            <param name="format">A composite format string (see Remarks).</param>
            <param name="arg">An object array that contains zero or more objects to format and write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.WriteAsync(System.Char)">
            <summary>
            Writes a character to the text string or stream asynchronously.
            </summary>
            <param name="value">The character to write to the text stream.</param>
            <returns>A task that represents the asynchronous write operation.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.WriteAsync(System.String)">
            <summary>
            Writes a string to the text string or stream asynchronously.
            </summary>
            <param name="value">The string to write. If <paramref name="value" /> is null, nothing is written to the text stream.</param>
            <returns>A task that represents the asynchronous write operation.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
            <summary>
            Writes a subarray of characters to the text string or stream asynchronously.
            </summary>
            <param name="buffer">The character array to write data from.</param>
            <param name="index">The character position in the buffer at which to start retrieving data.</param>
            <param name="count">The number of characters to write.</param>
            <returns>A task that represents the asynchronous write operation.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.WriteLineAsync(System.Char)">
            <summary>
            Writes a character followed by a line terminator asynchronously to the text string or stream.
            </summary>
            <param name="value">The character to write to the text stream.</param>
            <returns>A task that represents the asynchronous write operation.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.WriteLineAsync(System.String)">
            <summary>
            Writes a string followed by a line terminator asynchronously to the text string or stream.
            </summary>
            <param name="value">The string to write. If the value is null, only a line terminator is written.</param>
            <returns>A task that represents the asynchronous write operation.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
            <summary>
            Writes a subarray of characters followed by a line terminator asynchronously to the text string or stream.
            </summary>
            <param name="buffer">The character array to write data from.</param>
            <param name="index">The character position in the buffer at which to start retrieving data.</param>
            <param name="count">The number of characters to write.</param>
            <returns>A task that represents the asynchronous write operation.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.FlushAsync">
            <summary>
            Asynchronously clears all buffers for the current writer and causes any buffered data to be written to the underlying device.
            </summary>
            <returns>A task that represents the asynchronous flush operation.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ITextWriter.WriteLineAsync">
            <summary>
            Writes a line terminator asynchronously to the text string or stream.
            </summary>
            <returns>
            A task that represents the asynchronous write operation.
            </returns>
        </member>
        <member name="T:WebApplications.Utilities.Formatting.IWriteable">
            <summary>
            Indicates the object supports writing to a <see cref="T:System.IO.TextWriter"/>.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.IWriteable.WriteTo(System.IO.TextWriter,System.String)">
            <summary>
            Writes this instance to the <paramref name="writer"/>, using the optional <paramref name="format"/>.
            </summary>
            <param name="writer">The writer.</param>
            <param name="format">The format.</param>
        </member>
        <member name="T:WebApplications.Utilities.Formatting.Layout">
            <summary>
            Defines a layout for use with a <see cref="T:WebApplications.Utilities.Formatting.FormatBuilder"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.Layout.Default">
            <summary>
            The default layout (as specified by the current layout writer).
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.Layout.Empty">
            <summary>
            The empty layout makes no changes.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.Layout.Width">
            <summary>
            The layout width.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.Layout.IndentSize">
            <summary>
            The indent size.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.Layout.RightMarginSize">
            <summary>
            The size of any right margin.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.Layout.IndentChar">
            <summary>
            The indent character (is repeated <see cref="F:WebApplications.Utilities.Formatting.Layout.IndentSize"/> times).
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.Layout.FirstLineIndentSize">
            <summary>
            The first line indent size.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.Layout.TabStops">
            <summary>
            The tab stops, only valid for <see cref="T:AlignmentChar.Left"/> and <see cref="T:AlignmentChar.None"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.Layout.TabSize">
            <summary>
            The tab size, used to produce tabs when the layout doesn't support tab stops.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.Layout.TabChar">
            <summary>
            The tab character is used to fill to next tab stop.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.Layout.Alignment">
            <summary>
            The alignment.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.Layout.SplitLength">
            <summary>
            If this value is zero then words will only be split if they are longer than an entire line; otherwise the word will 
            only be split at a point that has at least this number of character's on either side of the split (recommended value is 3,
            to handle splitting of words with apostrophes).
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.Layout.Hyphenate">
            <summary>
            Whether to add a hyphen when splitting words.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.Layout.HyphenChar">
            <summary>
            The hyphenation character is used to split words.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.Layout.WrapMode">
            <summary>
            The line wrap mode
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.Layout.IsFull">
            <summary>
            Gets a value indicating whether this <see cref="T:WebApplications.Utilities.Formatting.Layout"/> is complete.
            </summary>
            <value><see langword="true" /> if full; otherwise, <see langword="false" />.</value>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.Layout.IsEmpty">
            <summary>
            Gets a value indicating whether this <see cref="T:WebApplications.Utilities.Formatting.Layout"/> is totally incomplete.
            </summary>
            <value><see langword="true" /> if empty; otherwise, <see langword="false" />.</value>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.Layout.#ctor(WebApplications.Utilities.Optional{System.Int32},WebApplications.Utilities.Optional{System.Int32},WebApplications.Utilities.Optional{System.Int32},WebApplications.Utilities.Optional{System.Char},WebApplications.Utilities.Optional{System.Int32},WebApplications.Utilities.Optional{System.Collections.Generic.IEnumerable{System.Int32}},WebApplications.Utilities.Optional{System.Byte},WebApplications.Utilities.Optional{System.Char},WebApplications.Utilities.Optional{WebApplications.Utilities.Formatting.Alignment},WebApplications.Utilities.Optional{System.Byte},WebApplications.Utilities.Optional{System.Boolean},WebApplications.Utilities.Optional{System.Char},WebApplications.Utilities.Optional{WebApplications.Utilities.Formatting.LayoutWrapMode})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Formatting.Layout" /> class.
            </summary>
            <param name="width">The width.</param>
            <param name="indentSize">Size of the indent.</param>
            <param name="rightMarginSize">Size of the right margin.</param>
            <param name="indentChar">The indent character.</param>
            <param name="firstLineIndentSize">First size of the line indent.</param>
            <param name="tabStops">The tab stops.</param>
            <param name="tabSize">Size of the tab.</param>
            <param name="tabChar">The tab character.</param>
            <param name="alignment">The alignment.</param>
            <param name="splitLength">if set to <see langword="true" /> then words will split across lines.</param>
            <param name="hyphenate">if set to <see langword="true" /> [hyphenate].</param>
            <param name="hyphenChar">The hyphenation character.</param>
            <param name="wrapMode">The line wrap mode.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.Layout.Apply(WebApplications.Utilities.Optional{System.Int32},WebApplications.Utilities.Optional{System.Int32},WebApplications.Utilities.Optional{System.Int32},WebApplications.Utilities.Optional{System.Char},WebApplications.Utilities.Optional{System.Int32},WebApplications.Utilities.Optional{System.Collections.Generic.IEnumerable{System.Int32}},WebApplications.Utilities.Optional{System.Byte},WebApplications.Utilities.Optional{System.Char},WebApplications.Utilities.Optional{WebApplications.Utilities.Formatting.Alignment},WebApplications.Utilities.Optional{System.Byte},WebApplications.Utilities.Optional{System.Boolean},WebApplications.Utilities.Optional{System.Char},WebApplications.Utilities.Optional{WebApplications.Utilities.Formatting.LayoutWrapMode})">
            <summary>
            Applies the specified layout to this layout returning a new, combined layout.
            </summary>
            <param name="width">The width.</param>
            <param name="indentSize">Size of the indent.</param>
            <param name="rightMarginSize">Size of the right margin.</param>
            <param name="indentChar">The indent character.</param>
            <param name="firstLineIndentSize">First size of the line indent.</param>
            <param name="tabStops">The tab stops.</param>
            <param name="tabSize">Size of the tab.</param>
            <param name="tabChar">The tab character.</param>
            <param name="alignment">The alignment.</param>
            <param name="splitLength">The split length.</param>
            <param name="hyphenate">The hyphenate.</param>
            <param name="hyphenChar">The hyphen character.</param>
            <param name="wrapMode">The line wrap mode.</param>
            <returns>
            Layout.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.Layout.Apply(WebApplications.Utilities.Formatting.Layout)">
            <summary>
            Applies the specified layout to this layout returning a new, combined layout.
            </summary>
            <param name="layout">The layout.</param>
            <returns>Layout.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.Layout.Parse(System.String)">
            <summary>
            Parses the specified input.
            </summary>
            <param name="input">The input.</param>
            <returns>A <see cref="T:WebApplications.Utilities.Formatting.Layout"/> if valid; otherwise <see langword="null"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.Layout.TryParse(System.String,WebApplications.Utilities.Formatting.Layout@)">
            <summary>
            Tries to parse the string into a valid <see cref="T:WebApplications.Utilities.Formatting.Layout"/>.
            </summary>
            <param name="input">The input.</param>
            <param name="layout">A <see cref="T:WebApplications.Utilities.Formatting.Layout" /> if valid; otherwise <see langword="null" />.</param>
            <returns><see langword="true" /> if parse succeeded, <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.Layout.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><see langword="true" /> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.Layout.ToString">
            <summary>
            To the string.
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.Layout.ToString(System.String)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.Layout.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format to use.-or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
            <param name="formatProvider">The provider to use to format the value.-or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.Layout.Equals(WebApplications.Utilities.Formatting.Layout)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.Layout.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.Layout.op_Equality(WebApplications.Utilities.Formatting.Layout,WebApplications.Utilities.Formatting.Layout)">
            <summary>
            Implements the ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.Layout.op_Inequality(WebApplications.Utilities.Formatting.Layout,WebApplications.Utilities.Formatting.Layout)">
            <summary>
            Implements the !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Formatting.LayoutWrapMode">
            <summary>
            Describes the <see cref="T:WebApplications.Utilities.Formatting.Layout" /> line wrapping modes.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.LayoutWrapMode.NewLine">
            <summary>
            Always adds a new line when wrapping lines, unless as the width of the writer.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.LayoutWrapMode.NewLineOnShort">
            <summary>
            Only adds a new line if the line length is less than <see cref="F:WebApplications.Utilities.Formatting.Layout.Width"/>, 
            otherwise it assumes that the writer/display wraps if you reach the width.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.LayoutWrapMode.PadToWrap">
            <summary>
            Adds indent characters to the end of each line till <see cref="F:WebApplications.Utilities.Formatting.Layout.Width"/> is reached and lets the display handle wrapping.
            </summary>
            <remarks>This should be used when writing to the <see cref="T:System.Console"/> as this wraps when if a line length is equal to the width.
            This would cause extra blank lines when using a <see cref="F:WebApplications.Utilities.Formatting.Alignment.Justify">justified</see> <see cref="T:WebApplications.Utilities.Formatting.Layout"/> with no right margin.</remarks>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.LayoutWrapMode.PadToNewLine">
            <summary>
            Adds indent characters to the end of each line till <see cref="F:WebApplications.Utilities.Formatting.Layout.Width"/> is reached and then adds a new line, if necessary.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Formatting.FormatTextWriter">
            <summary>
            Wraps a <see cref="T:System.IO.TextWriter"/>, providing position tracking and synchronized writing with a <see cref="P:WebApplications.Utilities.Formatting.FormatTextWriter.Layout"/>.
            </summary>
            <remarks>
            This is not inherently thread safe, to make thread safe use a synchronization wrapper.
            </remarks>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatTextWriter._writer">
            <summary>
            The underlying writer.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.FormatTextWriter.Width">
            <summary>
            Gets the width of the console.
            </summary>
            <value>The width of the console.</value>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.FormatTextWriter.Position">
            <summary>
            Gets or sets the current horizontal position.
            </summary>
            <value>The position.</value>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.FormatTextWriter.AutoWraps">
            <summary>
            Gets a value indicating whether the writer automatically wraps on reaching <see cref="P:WebApplications.Utilities.Formatting.FormatTextWriter.Width" />.
            </summary>
            <value><see langword="true" /> if the writer automatically wraps; otherwise, <see langword="false" />.</value>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.FormatTextWriter.Layout">
            <summary>
            Gets the current Layout.
            </summary>
            <value>The Layout.</value>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.#ctor(System.IO.TextWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Formatting.FormatTextWriter" /> class.
            </summary>
            <param name="writer">The out writer.</param>
            <exception cref="T:System.InvalidOperationException">Cannot wrap an ILayoutTextWriter in a FormatTextWriter as this can cause issues with position tracking.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.#ctor(System.IO.TextWriter,WebApplications.Utilities.Formatting.Layout,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Formatting.FormatTextWriter" /> class.
            </summary>
            <param name="writer">The out writer.</param>
            <param name="defaultLayout">The default layout.</param>
            <param name="startPosition">The starting horizontal position.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.#ctor(System.IO.TextWriter,WebApplications.Utilities.Optional{System.Int32},WebApplications.Utilities.Optional{System.Int32},WebApplications.Utilities.Optional{System.Int32},WebApplications.Utilities.Optional{System.Char},WebApplications.Utilities.Optional{System.Int32},WebApplications.Utilities.Optional{System.Collections.Generic.IEnumerable{System.Int32}},WebApplications.Utilities.Optional{System.Byte},WebApplications.Utilities.Optional{System.Char},WebApplications.Utilities.Optional{WebApplications.Utilities.Formatting.Alignment},WebApplications.Utilities.Optional{System.Byte},WebApplications.Utilities.Optional{System.Boolean},WebApplications.Utilities.Optional{System.Char},WebApplications.Utilities.Optional{WebApplications.Utilities.Formatting.LayoutWrapMode},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Formatting.FormatTextWriter" /> class.
            </summary>
            <param name="writer">The out writer.</param>
            <param name="width">The width.</param>
            <param name="indentSize">Size of the indent.</param>
            <param name="rightMarginSize">Size of the right margin.</param>
            <param name="indentChar">The indent character.</param>
            <param name="firstLineIndentSize">First size of the line indent.</param>
            <param name="tabStops">The tab stops.</param>
            <param name="tabSize">Size of the tab.</param>
            <param name="tabChar">The tab character.</param>
            <param name="alignment">The alignment.</param>
            <param name="splitLength">The split length.</param>
            <param name="hyphenate">The hyphenate.</param>
            <param name="hyphenChar">The hyphen character.</param>
            <param name="wrapMode">The wrap mode.</param>
            <param name="startPosition">The starting horizontal position.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.ApplyLayout(WebApplications.Utilities.Formatting.Layout)">
            <summary>
            Sets the layout.
            </summary>
            <param name="newLayout">The new layout.</param>
            <returns>An awaitable task that returns the existing layout.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.ApplyLayout(WebApplications.Utilities.Optional{System.Int32},WebApplications.Utilities.Optional{System.Int32},WebApplications.Utilities.Optional{System.Int32},WebApplications.Utilities.Optional{System.Char},WebApplications.Utilities.Optional{System.Int32},WebApplications.Utilities.Optional{System.Collections.Generic.IEnumerable{System.Int32}},WebApplications.Utilities.Optional{System.Byte},WebApplications.Utilities.Optional{System.Char},WebApplications.Utilities.Optional{WebApplications.Utilities.Formatting.Alignment},WebApplications.Utilities.Optional{System.Byte},WebApplications.Utilities.Optional{System.Boolean},WebApplications.Utilities.Optional{System.Char},WebApplications.Utilities.Optional{WebApplications.Utilities.Formatting.LayoutWrapMode})">
            <summary>
            Sets the layout (if outputting to a layout writer).
            </summary>
            <param name="width">The width.</param>
            <param name="indentSize">Size of the indent.</param>
            <param name="rightMarginSize">Size of the right margin.</param>
            <param name="indentChar">The indent character.</param>
            <param name="firstLineIndentSize">First size of the line indent.</param>
            <param name="tabStops">The tab stops.</param>
            <param name="tabSize">Size of the tab.</param>
            <param name="tabChar">The tab character.</param>
            <param name="alignment">The alignment.</param>
            <param name="splitLength">if set to <see langword="true" /> then words will split across lines.</param>
            <param name="hyphenate">if set to <see langword="true" /> [hyphenate].</param>
            <param name="hyphenChar">The hyphenation character.</param>
            <param name="wrapMode">The line wrap mode.</param>
            <returns>An awaitable task that returns the existing layout.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter">
            <summary>
            Wraps a <see cref="T:System.IO.TextWriter"/>, providing position tracking and synchronized writing with a <see cref="P:WebApplications.Utilities.Formatting.FormatTextWriter.Layout"/>.
            </summary>
            <remarks>
            This is not inherently thread safe, to make thread safe use a synchronization wrapper.
            </remarks>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter._writer">
            <summary>
            The underlying writer
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.Builder">
            <summary>
            The builder
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.Width">
            <summary>
            Gets the width of the console.
            </summary>
            <value>The width of the console.</value>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.Position">
            <summary>
            Gets or sets the current horizontal position.
            </summary>
            <value>The position.</value>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.AutoWraps">
            <summary>
            Gets a value indicating whether the writer automatically wraps on reaching <see cref="P:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.Width" />.
            </summary>
            <value><see langword="true" /> if the writer automatically wraps; otherwise, <see langword="false" />.</value>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.#ctor(System.IO.TextWriter,WebApplications.Utilities.Formatting.FormatBuilder,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter" /> class.
            </summary>
            <param name="writer">The writer.</param>
            <param name="builder">The builder.</param>
            <param name="startPosition">The start position.</param>
            <exception cref="T:System.InvalidOperationException">Cannot wrap an ILayoutTextWriter in a FormatTextWriter as this can cause issues with position tracking.</exception>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.Encoding">
            <summary>
            Gets the encoding.
            </summary>
            <value>The encoding.</value>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.FormatProvider">
            <summary>
            Gets an object that controls formatting.
            </summary>
            <returns>An <see cref="T:System.IFormatProvider" /> object for a specific culture, or the formatting of the current culture if no other culture is specified.</returns>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.NewLine">
            <summary>
            Gets or sets the line terminator string used by the current TextWriter.
            </summary>
            <returns>The line terminator string for the current TextWriter.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.Flush">
            <summary>
            Flushes this instance.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.FlushAsync">
            <summary>
            Asynchronously clears all buffers for the current writer and causes any buffered data to be written to the underlying device.
            </summary>
            <returns>
            A task that represents the asynchronous flush operation.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.Write(System.Boolean)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.Write(System.Char)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.Write(System.Char[])">
            <summary>
            Writes the specified buffer.
            </summary>
            <param name="buffer">The buffer.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.Write(System.Decimal)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.Write(System.Double)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.Write(System.Single)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.Write(System.Int32)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.Write(System.Int64)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.Write(System.Object)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.Write(System.String)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.Write(System.UInt32)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.Write(System.UInt64)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.Write(System.String,System.Object)">
            <summary>
            Writes the specified format.
            </summary>
            <param name="format">The format.</param>
            <param name="arg0">The arg0.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.Write(System.String,System.Object[])">
            <summary>
            Writes the specified format.
            </summary>
            <param name="format">The format.</param>
            <param name="arg">The argument.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.Write(System.Char[],System.Int32,System.Int32)">
            <summary>
            Writes the specified buffer.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="index">The index.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.Write(System.String,System.Object,System.Object)">
            <summary>
            Writes the specified format.
            </summary>
            <param name="format">The format.</param>
            <param name="arg0">The arg0.</param>
            <param name="arg1">The arg1.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.Write(System.String,System.Object,System.Object,System.Object)">
            <summary>
            Writes the specified format.
            </summary>
            <param name="format">The format.</param>
            <param name="arg0">The arg0.</param>
            <param name="arg1">The arg1.</param>
            <param name="arg2">The arg2.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.WriteLine">
            <summary>
            Writes the line.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.WriteLine(System.Boolean)">
            <summary>
            Writes the line.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.WriteLine(System.Char)">
            <summary>
            Writes the line.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.WriteLine(System.Char[])">
            <summary>
            Writes the line.
            </summary>
            <param name="buffer">The buffer.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.WriteLine(System.Decimal)">
            <summary>
            Writes the line.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.WriteLine(System.Double)">
            <summary>
            Writes the line.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.WriteLine(System.Single)">
            <summary>
            Writes the line.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.WriteLine(System.Int32)">
            <summary>
            Writes the line.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.WriteLine(System.Int64)">
            <summary>
            Writes the line.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.WriteLine(System.Object)">
            <summary>
            Writes the line.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.WriteLine(System.String)">
            <summary>
            Writes the line.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.WriteLine(System.UInt32)">
            <summary>
            Writes the line.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.WriteLine(System.UInt64)">
            <summary>
            Writes the line.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.WriteLine(System.String,System.Object)">
            <summary>
            Writes the line.
            </summary>
            <param name="format">The format.</param>
            <param name="arg0">The arg0.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.WriteLine(System.String,System.Object[])">
            <summary>
            Writes the line.
            </summary>
            <param name="format">The format.</param>
            <param name="arg">The argument.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
            <summary>
            Writes the line.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="index">The index.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.WriteLine(System.String,System.Object,System.Object)">
            <summary>
            Writes the line.
            </summary>
            <param name="format">The format.</param>
            <param name="arg0">The arg0.</param>
            <param name="arg1">The arg1.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
            <summary>
            Writes the line.
            </summary>
            <param name="format">The format.</param>
            <param name="arg0">The arg0.</param>
            <param name="arg1">The arg1.</param>
            <param name="arg2">The arg2.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.WriteAsync(System.Char)">
            <summary>
            Writes a character to the text string or stream asynchronously.
            </summary>
            <param name="value">The character to write to the text stream.</param>
            <returns>
            A task that represents the asynchronous write operation.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
            <summary>
            Writes a subarray of characters to the text string or stream asynchronously.
            </summary>
            <param name="buffer">The character array to write data from.</param>
            <param name="index">The character position in the buffer at which to start retrieving data.</param>
            <param name="count">The number of characters to write.</param>
            <returns>
            A task that represents the asynchronous write operation.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.WriteAsync(System.String)">
            <summary>
            Writes a string to the text string or stream asynchronously.
            </summary>
            <param name="value">The string to write. If <paramref name="value" /> is null, nothing is written to the text stream.</param>
            <returns>
            A task that represents the asynchronous write operation.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.WriteLineAsync">
            <summary>
            Writes a line terminator asynchronously to the text string or stream.
            </summary>
            <returns>
            A task that represents the asynchronous write operation.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.WriteLineAsync(System.Char)">
            <summary>
            Writes a character followed by a line terminator asynchronously to the text string or stream.
            </summary>
            <param name="value">The character to write to the text stream.</param>
            <returns>
            A task that represents the asynchronous write operation.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
            <summary>
            Writes a subarray of characters followed by a line terminator asynchronously to the text string or stream.
            </summary>
            <param name="buffer">The character array to write data from.</param>
            <param name="index">The character position in the buffer at which to start retrieving data.</param>
            <param name="count">The number of characters to write.</param>
            <returns>
            A task that represents the asynchronous write operation.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.FormatTextWriter.UnderlyingFormatTextWriter.WriteLineAsync(System.String)">
            <summary>
            Writes a string followed by a line terminator asynchronously to the text string or stream.
            </summary>
            <param name="value">The string to write. If the value is null, only a line terminator is written.</param>
            <returns>
            A task that represents the asynchronous write operation.
            </returns>
        </member>
        <member name="T:WebApplications.Utilities.Formatting.Resolution">
            <summary>
            A resolution, is used to resolve tags in a <see cref="T:WebApplications.Utilities.Formatting.FormatBuilder"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.Resolution.Unknown">
            <summary>
            The tag is unknown (cached).
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.Resolution.UnknownYet">
            <summary>
            The tag is not yet known (not cached).
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.Resolution.Null">
            <summary>
            The tag's value is Null.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.Resolution.CurrentlyNull">
            <summary>
            The tag's value is currently null, but may change.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.Resolution.Empty">
            <summary>
            The tag's value is <see cref="F:System.String.Empty"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.Resolution.CurrentlyEmpty">
            <summary>
            The tag's value is currently <see cref="F:System.String.Empty"/>, but may change.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.Resolution.NoCache">
            <summary>
            Whether this resolution should be cached.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.Resolution.IsResolved">
            <summary>
            <see langword="true"/> is the value represents a resolution; otherwise <see langword="false"/> to indicate the original tag was unknown.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.Resolution.Value">
            <summary>
            The resolved value if <see cref="F:WebApplications.Utilities.Formatting.Resolution.IsResolved"/> is <see langword="true"/>.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.Resolution.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Formatting.Resolution" /> struct.
            </summary>
            <param name="isResolved">if set to <see langword="true" /> [is resolved].</param>
            <param name="noCache">if set to <see langword="true" /> then this resolution is not cached.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.Resolution.#ctor(System.Object,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Formatting.Resolution" /> struct.
            </summary>
            <param name="value">The resolved value.</param>
            <param name="noCache">if set to <see langword="true" /> then this resolution is not cached.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.Resolution.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.Resolution.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format to use.-or- A null reference (Nothing in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</param>
            <param name="formatProvider">The provider to use to format the value.-or- A null reference (Nothing in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</param>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:WebApplications.Utilities.Formatting.Resolvable">
            <summary>
            Base implementation for a class that implements <see cref="T:WebApplications.Utilities.Formatting.IResolvable"/>.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.Resolvable.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Formatting.Resolvable" /> class.
            </summary>
            <param name="isCaseSensitive">if set to <see langword="true" /> then tags are case sensitive.</param>
            <param name="resolveOuterTags">if set to <see langword="true" /> outer tags should be resolved automatically in formats.</param>
            <param name="resolveControls">if set to <see langword="true" /> then controls will passed to the resolvable.</param>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.Resolvable.IsCaseSensitive">
            <summary>
            Gets a value indicating whether this instance uses case sensitive tag resolution caching.
            </summary>
            <value><see langword="true" /> if this instance is case sensitive; otherwise, <see langword="false" />.</value>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.Resolvable.ResolveOuterTags">
            <summary>
            Gets a value indicating whether outer tags should be resolved automatically in formats.
            </summary>
            <value><see langword="true" /> if the <see cref="T:WebApplications.Utilities.Formatting.FormatBuilder" /> should allow outer tags when resolving formats for this instance; otherwise, <see langword="false" />.</value>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.Resolvable.ResolveControls">
            <summary>
            Gets a value indicating whether control tags should be based to the resolver.
            </summary>
            <value><see langword="true" /> if the <see cref="T:WebApplications.Utilities.Formatting.FormatBuilder" /> should allow outer tags when resolving formats for this instance; otherwise, <see langword="false" />.</value>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.Resolvable.Resolve(WebApplications.Utilities.Formatting.FormatWriteContext,WebApplications.Utilities.Formatting.FormatChunk)">
            <summary>
            Resolves the specified tag.
            </summary>
            <param name="context">The context.</param>
            <param name="chunk">The chunk.</param>
            <returns>An object that will be cached unless it is a <see cref="T:WebApplications.Utilities.Formatting.Resolution" />.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Formatting.ResolvableWriteable">
            <summary>
            Base class for creating a resolvable writer for use with <see cref="T:WebApplications.Utilities.Formatting.FormatBuilder"/>.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.ResolvableWriteable.DefaultFormat">
            <summary>
            Gets the default format.
            </summary>
            <value>The default format.</value>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ResolvableWriteable.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Formatting.Resolvable"/> class.
            </summary>
            <param name="isCaseSensitive">if set to <see langword="true" /> then tags are case sensitive.</param>
            <param name="resolveOuterTags">if set to <see langword="true" />  outer tags should be resolved automatically in formats.</param>
            <param name="resolveControls">if set to <see langword="true" /> then controls will passed to the resolvable.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ResolvableWriteable.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ResolvableWriteable.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <param name="format">The format.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ResolvableWriteable.ToString(WebApplications.Utilities.Formatting.FormatBuilder,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <param name="format">The format.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>A <see cref="T:System.String"/> that represents this instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ResolvableWriteable.WriteTo(System.IO.TextWriter,System.String)">
            <summary>
            Writes this instance to the <paramref name="writer" />, using the optional <paramref name="format" />.
            </summary>
            <param name="writer">The writer.</param>
            <param name="format">The format.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.ResolvableWriteable.WriteTo(System.IO.TextWriter,WebApplications.Utilities.Formatting.FormatBuilder)">
            <summary>
            Writes this instance to the <paramref name="writer" />, using the optional <paramref name="format" />.
            </summary>
            <param name="writer">The writer.</param>
            <param name="format">The format.</param>
        </member>
        <member name="T:WebApplications.Utilities.Formatting.ResolveDelegate">
            <summary>
            Delegate definition for a resolver which can be used to resolve the values of tags, whilst writing out a <see cref="T:WebApplications.Utilities.Formatting.FormatBuilder" />.
            </summary>
            <param name="context">The context.</param>
            <param name="chunk">The chunk.</param>
            <returns>An object that will be cached unless it is a <see cref="T:WebApplications.Utilities.Formatting.Resolution" />.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Formatting.SerialTextWriter">
            <summary>
            Wraps a text writer so that is is synchronized by a <see cref="T:System.Threading.SynchronizationContext"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.SerialTextWriter._writer">
            <summary>
            The underlying writer.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.SerialTextWriter._context">
            <summary>
            The synchronization context.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.#ctor(System.IO.TextWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Formatting.SerialTextWriter" /> class.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.SerialTextWriter.Writer">
            <summary>
            Gets the un-serialized underlying writer, which should only be used if you have already synchronized using the <see cref="P:WebApplications.Utilities.Formatting.SerialTextWriter.Context" />.
            </summary>
            <value>The writer.</value>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.SerialTextWriter.Context">
            <summary>
            The synchronization context.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.SerialTextWriter.Encoding">
            <summary>
            When overridden in a derived class, returns the character encoding in which the output is written.
            </summary>
            <value>The encoding.</value>
            <returns>The character encoding in which the output is written.</returns>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.SerialTextWriter.FormatProvider">
            <summary>
            Gets an object that controls formatting.
            </summary>
            <value>The format provider.</value>
            <returns>An <see cref="T:System.IFormatProvider" /> object for a specific culture, or the formatting of the current culture if no other culture is specified.</returns>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.SerialTextWriter.NewLine">
            <summary>
            Gets or sets the line terminator string used by the current TextWriter.
            </summary>
            <value>The new line.</value>
            <returns>The line terminator string for the current TextWriter.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.Close">
            <summary>
            Closes the current writer and releases any system resources associated with the writer.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.IO.TextWriter" /> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.Flush">
            <summary>
            Clears all buffers for the current writer and causes any buffered data to be written to the underlying device.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.Write(System.Char)">
            <summary>
            Writes a character to the text string or stream.
            </summary>
            <param name="value">The character to write to the text stream.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.Write(System.Char[])">
            <summary>
            Writes a character array to the text string or stream.
            </summary>
            <param name="buffer">The character array to write to the text stream.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.Write(System.Char[],System.Int32,System.Int32)">
            <summary>
            Writes a subarray of characters to the text string or stream.
            </summary>
            <param name="buffer">The character array to write data from.</param>
            <param name="index">The character position in the buffer at which to start retrieving data.</param>
            <param name="count">The number of characters to write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.Write(System.Boolean)">
            <summary>
            Writes the text representation of a Boolean value to the text string or stream.
            </summary>
            <param name="value">The Boolean value to write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.Write(System.Int32)">
            <summary>
            Writes the text representation of a 4-byte signed integer to the text string or stream.
            </summary>
            <param name="value">The 4-byte signed integer to write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.Write(System.UInt32)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.Write(System.Int64)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.Write(System.UInt64)">
            <summary>
            Writes the text representation of an 8-byte unsigned integer to the text string or stream.
            </summary>
            <param name="value">The 8-byte unsigned integer to write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.Write(System.Single)">
            <summary>
            Writes the text representation of a 4-byte floating-point value to the text string or stream.
            </summary>
            <param name="value">The 4-byte floating-point value to write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.Write(System.Double)">
            <summary>
            Writes the text representation of an 8-byte floating-point value to the text string or stream.
            </summary>
            <param name="value">The 8-byte floating-point value to write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.Write(System.Decimal)">
            <summary>
            Writes the text representation of a decimal value to the text string or stream.
            </summary>
            <param name="value">The decimal value to write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.Write(System.String)">
            <summary>
            Writes a string to the text string or stream.
            </summary>
            <param name="value">The string to write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.Write(System.Object)">
            <summary>
            Writes the text representation of an object to the text string or stream by calling the ToString method on that object.
            </summary>
            <param name="value">The object to write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.Write(System.String,System.Object)">
            <summary>
            Writes a formatted string to the text string or stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object)" /> method.
            </summary>
            <param name="format">A composite format string (see Remarks).</param>
            <param name="arg0">The object to format and write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.Write(System.String,System.Object,System.Object)">
            <summary>
            Writes a formatted string to the text string or stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object,System.Object)" /> method.
            </summary>
            <param name="format">A composite format string (see Remarks).</param>
            <param name="arg0">The first object to format and write.</param>
            <param name="arg1">The second object to format and write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.Write(System.String,System.Object,System.Object,System.Object)">
            <summary>
            Writes a formatted string to the text string or stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object,System.Object,System.Object)" /> method.
            </summary>
            <param name="format">A composite format string (see Remarks).</param>
            <param name="arg0">The first object to format and write.</param>
            <param name="arg1">The second object to format and write.</param>
            <param name="arg2">The third object to format and write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.Write(System.String,System.Object[])">
            <summary>
            Writes a formatted string to the text string or stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object[])" /> method.
            </summary>
            <param name="format">A composite format string (see Remarks).</param>
            <param name="arg">An object array that contains zero or more objects to format and write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.WriteLine">
            <summary>
            Writes a line terminator to the text string or stream.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.WriteLine(System.Char)">
            <summary>
            Writes a character followed by a line terminator to the text string or stream.
            </summary>
            <param name="value">The character to write to the text stream.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.WriteLine(System.Decimal)">
            <summary>
            Writes the text representation of a decimal value followed by a line terminator to the text string or stream.
            </summary>
            <param name="value">The decimal value to write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.WriteLine(System.Char[])">
            <summary>
            Writes an array of characters followed by a line terminator to the text string or stream.
            </summary>
            <param name="buffer">The character array from which data is read.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
            <summary>
            Writes a subarray of characters followed by a line terminator to the text string or stream.
            </summary>
            <param name="buffer">The character array from which data is read.</param>
            <param name="index">The character position in <paramref name="buffer" /> at which to start reading data.</param>
            <param name="count">The maximum number of characters to write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.WriteLine(System.Boolean)">
            <summary>
            Writes the text representation of a Boolean value followed by a line terminator to the text string or stream.
            </summary>
            <param name="value">The Boolean value to write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.WriteLine(System.Int32)">
            <summary>
            Writes the text representation of a 4-byte signed integer followed by a line terminator to the text string or stream.
            </summary>
            <param name="value">The 4-byte signed integer to write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.WriteLine(System.UInt32)">
            <summary>
            Writes the text representation of a 4-byte unsigned integer followed by a line terminator to the text string or stream.
            </summary>
            <param name="value">The 4-byte unsigned integer to write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.WriteLine(System.Int64)">
            <summary>
            Writes the text representation of an 8-byte signed integer followed by a line terminator to the text string or stream.
            </summary>
            <param name="value">The 8-byte signed integer to write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.WriteLine(System.UInt64)">
            <summary>
            Writes the text representation of an 8-byte unsigned integer followed by a line terminator to the text string or stream.
            </summary>
            <param name="value">The 8-byte unsigned integer to write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.WriteLine(System.Single)">
            <summary>
            Writes the text representation of a 4-byte floating-point value followed by a line terminator to the text string or stream.
            </summary>
            <param name="value">The 4-byte floating-point value to write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.WriteLine(System.Double)">
            <summary>
            Writes the text representation of a 8-byte floating-point value followed by a line terminator to the text string or stream.
            </summary>
            <param name="value">The 8-byte floating-point value to write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.WriteLine(System.String)">
            <summary>
            Writes a string followed by a line terminator to the text string or stream.
            </summary>
            <param name="value">The string to write. If <paramref name="value" /> is null, only the line terminator is written.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.WriteLine(System.Object)">
            <summary>
            Writes the text representation of an object by calling the ToString method on that object, followed by a line terminator to the text string or stream.
            </summary>
            <param name="value">The object to write. If <paramref name="value" /> is null, only the line terminator is written.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.WriteLine(System.String,System.Object)">
            <summary>
            Writes a formatted string and a new line to the text string or stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object)" /> method.
            </summary>
            <param name="format">A composite format string (see Remarks).</param>
            <param name="arg0">The object to format and write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.WriteLine(System.String,System.Object,System.Object)">
            <summary>
            Writes a formatted string and a new line to the text string or stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object,System.Object)" /> method.
            </summary>
            <param name="format">A composite format string (see Remarks).</param>
            <param name="arg0">The first object to format and write.</param>
            <param name="arg1">The second object to format and write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
            <summary>
            Writes out a formatted string and a new line, using the same semantics as <see cref="M:System.String.Format(System.String,System.Object)" />.
            </summary>
            <param name="format">A composite format string (see Remarks).</param>
            <param name="arg0">The first object to format and write.</param>
            <param name="arg1">The second object to format and write.</param>
            <param name="arg2">The third object to format and write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.WriteLine(System.String,System.Object[])">
            <summary>
            Writes out a formatted string and a new line, using the same semantics as <see cref="M:System.String.Format(System.String,System.Object)" />.
            </summary>
            <param name="format">A composite format string (see Remarks).</param>
            <param name="arg">An object array that contains zero or more objects to format and write.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.WriteAsync(System.Char)">
            <summary>
            Writes a character to the text string or stream asynchronously.
            </summary>
            <param name="value">The character to write to the text stream.</param>
            <returns>A task that represents the asynchronous write operation.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.WriteAsync(System.String)">
            <summary>
            Writes a string to the text string or stream asynchronously.
            </summary>
            <param name="value">The string to write. If <paramref name="value" /> is null, nothing is written to the text stream.</param>
            <returns>A task that represents the asynchronous write operation.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
            <summary>
            Writes a subarray of characters to the text string or stream asynchronously.
            </summary>
            <param name="buffer">The character array to write data from.</param>
            <param name="index">The character position in the buffer at which to start retrieving data.</param>
            <param name="count">The number of characters to write.</param>
            <returns>A task that represents the asynchronous write operation.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.WriteLineAsync(System.Char)">
            <summary>
            Writes a character followed by a line terminator asynchronously to the text string or stream.
            </summary>
            <param name="value">The character to write to the text stream.</param>
            <returns>A task that represents the asynchronous write operation.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.WriteLineAsync(System.String)">
            <summary>
            Writes a string followed by a line terminator asynchronously to the text string or stream.
            </summary>
            <param name="value">The string to write. If the value is null, only a line terminator is written.</param>
            <returns>A task that represents the asynchronous write operation.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
            <summary>
            Writes a subarray of characters followed by a line terminator asynchronously to the text string or stream.
            </summary>
            <param name="buffer">The character array to write data from.</param>
            <param name="index">The character position in the buffer at which to start retrieving data.</param>
            <param name="count">The number of characters to write.</param>
            <returns>A task that represents the asynchronous write operation.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.SerialTextWriter.FlushAsync">
            <summary>
            Asynchronously clears all buffers for the current writer and causes any buffered data to be written to the underlying device.
            </summary>
            <returns>A task that represents the asynchronous flush operation.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Formatting.TraceTextWriter">
            <summary>
            Implements a <see cref="T:System.IO.TextWriter"/> for tracing.  You cannot get an instance directly, but use <see cref="F:WebApplications.Utilities.Formatting.TraceTextWriter.Default"/> to access a <see cref="T:WebApplications.Utilities.Formatting.TraceTextWriter"/>
            that is wrapped by a <see cref="T:WebApplications.Utilities.Formatting.FormatTextWriter"/> to provide synchronization and formatting support.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Formatting.TraceTextWriter.Default">
            <summary>
            The default, synchronized, laid out Trace writer.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.TraceTextWriter.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:WebApplications.Utilities.Formatting.TraceTextWriter"/> class from being created.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Formatting.TraceTextWriter.Encoding">
            <summary>
            Gets the encoding.
            </summary>
            <value>The encoding.</value>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.TraceTextWriter.Flush">
            <summary>
            Flushes this instance.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.TraceTextWriter.Write(System.Boolean)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.TraceTextWriter.Write(System.Char)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.TraceTextWriter.Write(System.Char[])">
            <summary>
            Writes the specified buffer.
            </summary>
            <param name="buffer">The buffer.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.TraceTextWriter.Write(System.Decimal)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.TraceTextWriter.Write(System.Double)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.TraceTextWriter.Write(System.Single)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.TraceTextWriter.Write(System.Int32)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.TraceTextWriter.Write(System.Int64)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.TraceTextWriter.Write(System.Object)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.TraceTextWriter.Write(System.String)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.TraceTextWriter.Write(System.UInt32)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.TraceTextWriter.Write(System.UInt64)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.TraceTextWriter.Write(System.String,System.Object)">
            <summary>
            Writes the specified format.
            </summary>
            <param name="format">The format.</param>
            <param name="arg0">The arg0.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.TraceTextWriter.Write(System.String,System.Object[])">
            <summary>
            Writes the specified format.
            </summary>
            <param name="format">The format.</param>
            <param name="arg">The argument.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.TraceTextWriter.Write(System.Char[],System.Int32,System.Int32)">
            <summary>
            Writes the specified buffer.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="index">The index.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.TraceTextWriter.Write(System.String,System.Object,System.Object)">
            <summary>
            Writes the specified format.
            </summary>
            <param name="format">The format.</param>
            <param name="arg0">The arg0.</param>
            <param name="arg1">The arg1.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.TraceTextWriter.Write(System.String,System.Object,System.Object,System.Object)">
            <summary>
            Writes the specified format.
            </summary>
            <param name="format">The format.</param>
            <param name="arg0">The arg0.</param>
            <param name="arg1">The arg1.</param>
            <param name="arg2">The arg2.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.TraceTextWriter.WriteLine">
            <summary>
            Writes the line.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.TraceTextWriter.WriteLine(System.Boolean)">
            <summary>
            Writes the line.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.TraceTextWriter.WriteLine(System.Char)">
            <summary>
            Writes the line.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.TraceTextWriter.WriteLine(System.Char[])">
            <summary>
            Writes the line.
            </summary>
            <param name="buffer">The buffer.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.TraceTextWriter.WriteLine(System.Decimal)">
            <summary>
            Writes the line.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.TraceTextWriter.WriteLine(System.Double)">
            <summary>
            Writes the line.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.TraceTextWriter.WriteLine(System.Single)">
            <summary>
            Writes the line.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.TraceTextWriter.WriteLine(System.Int32)">
            <summary>
            Writes the line.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.TraceTextWriter.WriteLine(System.Int64)">
            <summary>
            Writes the line.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.TraceTextWriter.WriteLine(System.Object)">
            <summary>
            Writes the line.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.TraceTextWriter.WriteLine(System.String)">
            <summary>
            Writes the line.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.TraceTextWriter.WriteLine(System.UInt32)">
            <summary>
            Writes the line.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.TraceTextWriter.WriteLine(System.UInt64)">
            <summary>
            Writes the line.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.TraceTextWriter.WriteLine(System.String,System.Object)">
            <summary>
            Writes the line.
            </summary>
            <param name="format">The format.</param>
            <param name="arg0">The arg0.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.TraceTextWriter.WriteLine(System.String,System.Object[])">
            <summary>
            Writes the line.
            </summary>
            <param name="format">The format.</param>
            <param name="arg">The argument.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.TraceTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
            <summary>
            Writes the line.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="index">The index.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.TraceTextWriter.WriteLine(System.String,System.Object,System.Object)">
            <summary>
            Writes the line.
            </summary>
            <param name="format">The format.</param>
            <param name="arg0">The arg0.</param>
            <param name="arg1">The arg1.</param>
        </member>
        <member name="M:WebApplications.Utilities.Formatting.TraceTextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
            <summary>
            Writes the line.
            </summary>
            <param name="format">The format.</param>
            <param name="arg0">The arg0.</param>
            <param name="arg1">The arg1.</param>
            <param name="arg2">The arg2.</param>
        </member>
        <member name="T:WebApplications.Utilities.Func`18">
            <summary>
            Encapsulates a method that has 17 parameters and returns a value of the type specified by the <typeparamref name="TResult" /> parameter.
            </summary>
            <typeparam name="T1">The type of parameter 1 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of parameter 2 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of parameter 3 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of parameter 4 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of parameter 5 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of parameter 6 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of parameter 7 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of parameter 8 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of parameter 9 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of parameter 10 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of parameter 11 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of parameter 12 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of parameter 13 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of parameter 14 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of parameter 15 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of parameter 16 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T17">The type of parameter 17 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TResult">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="arg1">Parameter 1 of the method that this delegate encapsulates.</param>
            <param name="arg2">Parameter 2 of the method that this delegate encapsulates.</param>
            <param name="arg3">Parameter 3 of the method that this delegate encapsulates.</param>
            <param name="arg4">Parameter 4 of the method that this delegate encapsulates.</param>
            <param name="arg5">Parameter 5 of the method that this delegate encapsulates.</param>
            <param name="arg6">Parameter 6 of the method that this delegate encapsulates.</param>
            <param name="arg7">Parameter 7 of the method that this delegate encapsulates.</param>
            <param name="arg8">Parameter 8 of the method that this delegate encapsulates.</param>
            <param name="arg9">Parameter 9 of the method that this delegate encapsulates.</param>
            <param name="arg10">Parameter 10 of the method that this delegate encapsulates.</param>
            <param name="arg11">Parameter 11 of the method that this delegate encapsulates.</param>
            <param name="arg12">Parameter 12 of the method that this delegate encapsulates.</param>
            <param name="arg13">Parameter 13 of the method that this delegate encapsulates.</param>
            <param name="arg14">Parameter 14 of the method that this delegate encapsulates.</param>
            <param name="arg15">Parameter 15 of the method that this delegate encapsulates.</param>
            <param name="arg16">Parameter 16 of the method that this delegate encapsulates.</param>
            <param name="arg17">Parameter 17 of the method that this delegate encapsulates.</param>
            <returns>The return value of the method that this delegate encapsulates.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Func`19">
            <summary>
            Encapsulates a method that has 18 parameters and returns a value of the type specified by the <typeparamref name="TResult" /> parameter.
            </summary>
            <typeparam name="T1">The type of parameter 1 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of parameter 2 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of parameter 3 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of parameter 4 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of parameter 5 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of parameter 6 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of parameter 7 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of parameter 8 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of parameter 9 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of parameter 10 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of parameter 11 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of parameter 12 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of parameter 13 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of parameter 14 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of parameter 15 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of parameter 16 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T17">The type of parameter 17 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T18">The type of parameter 18 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TResult">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="arg1">Parameter 1 of the method that this delegate encapsulates.</param>
            <param name="arg2">Parameter 2 of the method that this delegate encapsulates.</param>
            <param name="arg3">Parameter 3 of the method that this delegate encapsulates.</param>
            <param name="arg4">Parameter 4 of the method that this delegate encapsulates.</param>
            <param name="arg5">Parameter 5 of the method that this delegate encapsulates.</param>
            <param name="arg6">Parameter 6 of the method that this delegate encapsulates.</param>
            <param name="arg7">Parameter 7 of the method that this delegate encapsulates.</param>
            <param name="arg8">Parameter 8 of the method that this delegate encapsulates.</param>
            <param name="arg9">Parameter 9 of the method that this delegate encapsulates.</param>
            <param name="arg10">Parameter 10 of the method that this delegate encapsulates.</param>
            <param name="arg11">Parameter 11 of the method that this delegate encapsulates.</param>
            <param name="arg12">Parameter 12 of the method that this delegate encapsulates.</param>
            <param name="arg13">Parameter 13 of the method that this delegate encapsulates.</param>
            <param name="arg14">Parameter 14 of the method that this delegate encapsulates.</param>
            <param name="arg15">Parameter 15 of the method that this delegate encapsulates.</param>
            <param name="arg16">Parameter 16 of the method that this delegate encapsulates.</param>
            <param name="arg17">Parameter 17 of the method that this delegate encapsulates.</param>
            <param name="arg18">Parameter 18 of the method that this delegate encapsulates.</param>
            <returns>The return value of the method that this delegate encapsulates.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Func`20">
            <summary>
            Encapsulates a method that has 19 parameters and returns a value of the type specified by the <typeparamref name="TResult" /> parameter.
            </summary>
            <typeparam name="T1">The type of parameter 1 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of parameter 2 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of parameter 3 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of parameter 4 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of parameter 5 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of parameter 6 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of parameter 7 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of parameter 8 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of parameter 9 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of parameter 10 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of parameter 11 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of parameter 12 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of parameter 13 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of parameter 14 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of parameter 15 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of parameter 16 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T17">The type of parameter 17 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T18">The type of parameter 18 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T19">The type of parameter 19 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TResult">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="arg1">Parameter 1 of the method that this delegate encapsulates.</param>
            <param name="arg2">Parameter 2 of the method that this delegate encapsulates.</param>
            <param name="arg3">Parameter 3 of the method that this delegate encapsulates.</param>
            <param name="arg4">Parameter 4 of the method that this delegate encapsulates.</param>
            <param name="arg5">Parameter 5 of the method that this delegate encapsulates.</param>
            <param name="arg6">Parameter 6 of the method that this delegate encapsulates.</param>
            <param name="arg7">Parameter 7 of the method that this delegate encapsulates.</param>
            <param name="arg8">Parameter 8 of the method that this delegate encapsulates.</param>
            <param name="arg9">Parameter 9 of the method that this delegate encapsulates.</param>
            <param name="arg10">Parameter 10 of the method that this delegate encapsulates.</param>
            <param name="arg11">Parameter 11 of the method that this delegate encapsulates.</param>
            <param name="arg12">Parameter 12 of the method that this delegate encapsulates.</param>
            <param name="arg13">Parameter 13 of the method that this delegate encapsulates.</param>
            <param name="arg14">Parameter 14 of the method that this delegate encapsulates.</param>
            <param name="arg15">Parameter 15 of the method that this delegate encapsulates.</param>
            <param name="arg16">Parameter 16 of the method that this delegate encapsulates.</param>
            <param name="arg17">Parameter 17 of the method that this delegate encapsulates.</param>
            <param name="arg18">Parameter 18 of the method that this delegate encapsulates.</param>
            <param name="arg19">Parameter 19 of the method that this delegate encapsulates.</param>
            <returns>The return value of the method that this delegate encapsulates.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Func`21">
            <summary>
            Encapsulates a method that has 20 parameters and returns a value of the type specified by the <typeparamref name="TResult" /> parameter.
            </summary>
            <typeparam name="T1">The type of parameter 1 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of parameter 2 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of parameter 3 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of parameter 4 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of parameter 5 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of parameter 6 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of parameter 7 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of parameter 8 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of parameter 9 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of parameter 10 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of parameter 11 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of parameter 12 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of parameter 13 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of parameter 14 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of parameter 15 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of parameter 16 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T17">The type of parameter 17 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T18">The type of parameter 18 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T19">The type of parameter 19 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T20">The type of parameter 20 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TResult">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="arg1">Parameter 1 of the method that this delegate encapsulates.</param>
            <param name="arg2">Parameter 2 of the method that this delegate encapsulates.</param>
            <param name="arg3">Parameter 3 of the method that this delegate encapsulates.</param>
            <param name="arg4">Parameter 4 of the method that this delegate encapsulates.</param>
            <param name="arg5">Parameter 5 of the method that this delegate encapsulates.</param>
            <param name="arg6">Parameter 6 of the method that this delegate encapsulates.</param>
            <param name="arg7">Parameter 7 of the method that this delegate encapsulates.</param>
            <param name="arg8">Parameter 8 of the method that this delegate encapsulates.</param>
            <param name="arg9">Parameter 9 of the method that this delegate encapsulates.</param>
            <param name="arg10">Parameter 10 of the method that this delegate encapsulates.</param>
            <param name="arg11">Parameter 11 of the method that this delegate encapsulates.</param>
            <param name="arg12">Parameter 12 of the method that this delegate encapsulates.</param>
            <param name="arg13">Parameter 13 of the method that this delegate encapsulates.</param>
            <param name="arg14">Parameter 14 of the method that this delegate encapsulates.</param>
            <param name="arg15">Parameter 15 of the method that this delegate encapsulates.</param>
            <param name="arg16">Parameter 16 of the method that this delegate encapsulates.</param>
            <param name="arg17">Parameter 17 of the method that this delegate encapsulates.</param>
            <param name="arg18">Parameter 18 of the method that this delegate encapsulates.</param>
            <param name="arg19">Parameter 19 of the method that this delegate encapsulates.</param>
            <param name="arg20">Parameter 20 of the method that this delegate encapsulates.</param>
            <returns>The return value of the method that this delegate encapsulates.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Func`22">
            <summary>
            Encapsulates a method that has 21 parameters and returns a value of the type specified by the <typeparamref name="TResult" /> parameter.
            </summary>
            <typeparam name="T1">The type of parameter 1 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of parameter 2 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of parameter 3 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of parameter 4 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of parameter 5 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of parameter 6 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of parameter 7 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of parameter 8 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of parameter 9 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of parameter 10 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of parameter 11 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of parameter 12 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of parameter 13 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of parameter 14 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of parameter 15 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of parameter 16 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T17">The type of parameter 17 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T18">The type of parameter 18 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T19">The type of parameter 19 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T20">The type of parameter 20 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T21">The type of parameter 21 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TResult">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="arg1">Parameter 1 of the method that this delegate encapsulates.</param>
            <param name="arg2">Parameter 2 of the method that this delegate encapsulates.</param>
            <param name="arg3">Parameter 3 of the method that this delegate encapsulates.</param>
            <param name="arg4">Parameter 4 of the method that this delegate encapsulates.</param>
            <param name="arg5">Parameter 5 of the method that this delegate encapsulates.</param>
            <param name="arg6">Parameter 6 of the method that this delegate encapsulates.</param>
            <param name="arg7">Parameter 7 of the method that this delegate encapsulates.</param>
            <param name="arg8">Parameter 8 of the method that this delegate encapsulates.</param>
            <param name="arg9">Parameter 9 of the method that this delegate encapsulates.</param>
            <param name="arg10">Parameter 10 of the method that this delegate encapsulates.</param>
            <param name="arg11">Parameter 11 of the method that this delegate encapsulates.</param>
            <param name="arg12">Parameter 12 of the method that this delegate encapsulates.</param>
            <param name="arg13">Parameter 13 of the method that this delegate encapsulates.</param>
            <param name="arg14">Parameter 14 of the method that this delegate encapsulates.</param>
            <param name="arg15">Parameter 15 of the method that this delegate encapsulates.</param>
            <param name="arg16">Parameter 16 of the method that this delegate encapsulates.</param>
            <param name="arg17">Parameter 17 of the method that this delegate encapsulates.</param>
            <param name="arg18">Parameter 18 of the method that this delegate encapsulates.</param>
            <param name="arg19">Parameter 19 of the method that this delegate encapsulates.</param>
            <param name="arg20">Parameter 20 of the method that this delegate encapsulates.</param>
            <param name="arg21">Parameter 21 of the method that this delegate encapsulates.</param>
            <returns>The return value of the method that this delegate encapsulates.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Func`23">
            <summary>
            Encapsulates a method that has 22 parameters and returns a value of the type specified by the <typeparamref name="TResult" /> parameter.
            </summary>
            <typeparam name="T1">The type of parameter 1 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of parameter 2 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of parameter 3 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of parameter 4 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of parameter 5 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of parameter 6 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of parameter 7 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of parameter 8 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of parameter 9 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of parameter 10 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of parameter 11 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of parameter 12 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of parameter 13 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of parameter 14 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of parameter 15 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of parameter 16 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T17">The type of parameter 17 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T18">The type of parameter 18 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T19">The type of parameter 19 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T20">The type of parameter 20 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T21">The type of parameter 21 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T22">The type of parameter 22 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TResult">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="arg1">Parameter 1 of the method that this delegate encapsulates.</param>
            <param name="arg2">Parameter 2 of the method that this delegate encapsulates.</param>
            <param name="arg3">Parameter 3 of the method that this delegate encapsulates.</param>
            <param name="arg4">Parameter 4 of the method that this delegate encapsulates.</param>
            <param name="arg5">Parameter 5 of the method that this delegate encapsulates.</param>
            <param name="arg6">Parameter 6 of the method that this delegate encapsulates.</param>
            <param name="arg7">Parameter 7 of the method that this delegate encapsulates.</param>
            <param name="arg8">Parameter 8 of the method that this delegate encapsulates.</param>
            <param name="arg9">Parameter 9 of the method that this delegate encapsulates.</param>
            <param name="arg10">Parameter 10 of the method that this delegate encapsulates.</param>
            <param name="arg11">Parameter 11 of the method that this delegate encapsulates.</param>
            <param name="arg12">Parameter 12 of the method that this delegate encapsulates.</param>
            <param name="arg13">Parameter 13 of the method that this delegate encapsulates.</param>
            <param name="arg14">Parameter 14 of the method that this delegate encapsulates.</param>
            <param name="arg15">Parameter 15 of the method that this delegate encapsulates.</param>
            <param name="arg16">Parameter 16 of the method that this delegate encapsulates.</param>
            <param name="arg17">Parameter 17 of the method that this delegate encapsulates.</param>
            <param name="arg18">Parameter 18 of the method that this delegate encapsulates.</param>
            <param name="arg19">Parameter 19 of the method that this delegate encapsulates.</param>
            <param name="arg20">Parameter 20 of the method that this delegate encapsulates.</param>
            <param name="arg21">Parameter 21 of the method that this delegate encapsulates.</param>
            <param name="arg22">Parameter 22 of the method that this delegate encapsulates.</param>
            <returns>The return value of the method that this delegate encapsulates.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Func`24">
            <summary>
            Encapsulates a method that has 23 parameters and returns a value of the type specified by the <typeparamref name="TResult" /> parameter.
            </summary>
            <typeparam name="T1">The type of parameter 1 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of parameter 2 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of parameter 3 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of parameter 4 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of parameter 5 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of parameter 6 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of parameter 7 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of parameter 8 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of parameter 9 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of parameter 10 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of parameter 11 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of parameter 12 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of parameter 13 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of parameter 14 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of parameter 15 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of parameter 16 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T17">The type of parameter 17 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T18">The type of parameter 18 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T19">The type of parameter 19 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T20">The type of parameter 20 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T21">The type of parameter 21 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T22">The type of parameter 22 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T23">The type of parameter 23 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TResult">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="arg1">Parameter 1 of the method that this delegate encapsulates.</param>
            <param name="arg2">Parameter 2 of the method that this delegate encapsulates.</param>
            <param name="arg3">Parameter 3 of the method that this delegate encapsulates.</param>
            <param name="arg4">Parameter 4 of the method that this delegate encapsulates.</param>
            <param name="arg5">Parameter 5 of the method that this delegate encapsulates.</param>
            <param name="arg6">Parameter 6 of the method that this delegate encapsulates.</param>
            <param name="arg7">Parameter 7 of the method that this delegate encapsulates.</param>
            <param name="arg8">Parameter 8 of the method that this delegate encapsulates.</param>
            <param name="arg9">Parameter 9 of the method that this delegate encapsulates.</param>
            <param name="arg10">Parameter 10 of the method that this delegate encapsulates.</param>
            <param name="arg11">Parameter 11 of the method that this delegate encapsulates.</param>
            <param name="arg12">Parameter 12 of the method that this delegate encapsulates.</param>
            <param name="arg13">Parameter 13 of the method that this delegate encapsulates.</param>
            <param name="arg14">Parameter 14 of the method that this delegate encapsulates.</param>
            <param name="arg15">Parameter 15 of the method that this delegate encapsulates.</param>
            <param name="arg16">Parameter 16 of the method that this delegate encapsulates.</param>
            <param name="arg17">Parameter 17 of the method that this delegate encapsulates.</param>
            <param name="arg18">Parameter 18 of the method that this delegate encapsulates.</param>
            <param name="arg19">Parameter 19 of the method that this delegate encapsulates.</param>
            <param name="arg20">Parameter 20 of the method that this delegate encapsulates.</param>
            <param name="arg21">Parameter 21 of the method that this delegate encapsulates.</param>
            <param name="arg22">Parameter 22 of the method that this delegate encapsulates.</param>
            <param name="arg23">Parameter 23 of the method that this delegate encapsulates.</param>
            <returns>The return value of the method that this delegate encapsulates.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Func`25">
            <summary>
            Encapsulates a method that has 24 parameters and returns a value of the type specified by the <typeparamref name="TResult" /> parameter.
            </summary>
            <typeparam name="T1">The type of parameter 1 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of parameter 2 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of parameter 3 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of parameter 4 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of parameter 5 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of parameter 6 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of parameter 7 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of parameter 8 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of parameter 9 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of parameter 10 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of parameter 11 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of parameter 12 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of parameter 13 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of parameter 14 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of parameter 15 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of parameter 16 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T17">The type of parameter 17 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T18">The type of parameter 18 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T19">The type of parameter 19 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T20">The type of parameter 20 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T21">The type of parameter 21 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T22">The type of parameter 22 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T23">The type of parameter 23 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T24">The type of parameter 24 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TResult">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="arg1">Parameter 1 of the method that this delegate encapsulates.</param>
            <param name="arg2">Parameter 2 of the method that this delegate encapsulates.</param>
            <param name="arg3">Parameter 3 of the method that this delegate encapsulates.</param>
            <param name="arg4">Parameter 4 of the method that this delegate encapsulates.</param>
            <param name="arg5">Parameter 5 of the method that this delegate encapsulates.</param>
            <param name="arg6">Parameter 6 of the method that this delegate encapsulates.</param>
            <param name="arg7">Parameter 7 of the method that this delegate encapsulates.</param>
            <param name="arg8">Parameter 8 of the method that this delegate encapsulates.</param>
            <param name="arg9">Parameter 9 of the method that this delegate encapsulates.</param>
            <param name="arg10">Parameter 10 of the method that this delegate encapsulates.</param>
            <param name="arg11">Parameter 11 of the method that this delegate encapsulates.</param>
            <param name="arg12">Parameter 12 of the method that this delegate encapsulates.</param>
            <param name="arg13">Parameter 13 of the method that this delegate encapsulates.</param>
            <param name="arg14">Parameter 14 of the method that this delegate encapsulates.</param>
            <param name="arg15">Parameter 15 of the method that this delegate encapsulates.</param>
            <param name="arg16">Parameter 16 of the method that this delegate encapsulates.</param>
            <param name="arg17">Parameter 17 of the method that this delegate encapsulates.</param>
            <param name="arg18">Parameter 18 of the method that this delegate encapsulates.</param>
            <param name="arg19">Parameter 19 of the method that this delegate encapsulates.</param>
            <param name="arg20">Parameter 20 of the method that this delegate encapsulates.</param>
            <param name="arg21">Parameter 21 of the method that this delegate encapsulates.</param>
            <param name="arg22">Parameter 22 of the method that this delegate encapsulates.</param>
            <param name="arg23">Parameter 23 of the method that this delegate encapsulates.</param>
            <param name="arg24">Parameter 24 of the method that this delegate encapsulates.</param>
            <returns>The return value of the method that this delegate encapsulates.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Func`26">
            <summary>
            Encapsulates a method that has 25 parameters and returns a value of the type specified by the <typeparamref name="TResult" /> parameter.
            </summary>
            <typeparam name="T1">The type of parameter 1 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of parameter 2 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of parameter 3 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of parameter 4 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of parameter 5 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of parameter 6 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of parameter 7 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of parameter 8 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of parameter 9 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of parameter 10 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of parameter 11 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of parameter 12 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of parameter 13 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of parameter 14 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of parameter 15 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of parameter 16 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T17">The type of parameter 17 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T18">The type of parameter 18 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T19">The type of parameter 19 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T20">The type of parameter 20 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T21">The type of parameter 21 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T22">The type of parameter 22 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T23">The type of parameter 23 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T24">The type of parameter 24 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T25">The type of parameter 25 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TResult">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="arg1">Parameter 1 of the method that this delegate encapsulates.</param>
            <param name="arg2">Parameter 2 of the method that this delegate encapsulates.</param>
            <param name="arg3">Parameter 3 of the method that this delegate encapsulates.</param>
            <param name="arg4">Parameter 4 of the method that this delegate encapsulates.</param>
            <param name="arg5">Parameter 5 of the method that this delegate encapsulates.</param>
            <param name="arg6">Parameter 6 of the method that this delegate encapsulates.</param>
            <param name="arg7">Parameter 7 of the method that this delegate encapsulates.</param>
            <param name="arg8">Parameter 8 of the method that this delegate encapsulates.</param>
            <param name="arg9">Parameter 9 of the method that this delegate encapsulates.</param>
            <param name="arg10">Parameter 10 of the method that this delegate encapsulates.</param>
            <param name="arg11">Parameter 11 of the method that this delegate encapsulates.</param>
            <param name="arg12">Parameter 12 of the method that this delegate encapsulates.</param>
            <param name="arg13">Parameter 13 of the method that this delegate encapsulates.</param>
            <param name="arg14">Parameter 14 of the method that this delegate encapsulates.</param>
            <param name="arg15">Parameter 15 of the method that this delegate encapsulates.</param>
            <param name="arg16">Parameter 16 of the method that this delegate encapsulates.</param>
            <param name="arg17">Parameter 17 of the method that this delegate encapsulates.</param>
            <param name="arg18">Parameter 18 of the method that this delegate encapsulates.</param>
            <param name="arg19">Parameter 19 of the method that this delegate encapsulates.</param>
            <param name="arg20">Parameter 20 of the method that this delegate encapsulates.</param>
            <param name="arg21">Parameter 21 of the method that this delegate encapsulates.</param>
            <param name="arg22">Parameter 22 of the method that this delegate encapsulates.</param>
            <param name="arg23">Parameter 23 of the method that this delegate encapsulates.</param>
            <param name="arg24">Parameter 24 of the method that this delegate encapsulates.</param>
            <param name="arg25">Parameter 25 of the method that this delegate encapsulates.</param>
            <returns>The return value of the method that this delegate encapsulates.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Func`27">
            <summary>
            Encapsulates a method that has 26 parameters and returns a value of the type specified by the <typeparamref name="TResult" /> parameter.
            </summary>
            <typeparam name="T1">The type of parameter 1 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of parameter 2 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of parameter 3 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of parameter 4 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of parameter 5 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of parameter 6 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of parameter 7 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of parameter 8 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of parameter 9 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of parameter 10 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of parameter 11 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of parameter 12 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of parameter 13 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of parameter 14 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of parameter 15 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of parameter 16 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T17">The type of parameter 17 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T18">The type of parameter 18 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T19">The type of parameter 19 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T20">The type of parameter 20 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T21">The type of parameter 21 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T22">The type of parameter 22 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T23">The type of parameter 23 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T24">The type of parameter 24 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T25">The type of parameter 25 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T26">The type of parameter 26 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TResult">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="arg1">Parameter 1 of the method that this delegate encapsulates.</param>
            <param name="arg2">Parameter 2 of the method that this delegate encapsulates.</param>
            <param name="arg3">Parameter 3 of the method that this delegate encapsulates.</param>
            <param name="arg4">Parameter 4 of the method that this delegate encapsulates.</param>
            <param name="arg5">Parameter 5 of the method that this delegate encapsulates.</param>
            <param name="arg6">Parameter 6 of the method that this delegate encapsulates.</param>
            <param name="arg7">Parameter 7 of the method that this delegate encapsulates.</param>
            <param name="arg8">Parameter 8 of the method that this delegate encapsulates.</param>
            <param name="arg9">Parameter 9 of the method that this delegate encapsulates.</param>
            <param name="arg10">Parameter 10 of the method that this delegate encapsulates.</param>
            <param name="arg11">Parameter 11 of the method that this delegate encapsulates.</param>
            <param name="arg12">Parameter 12 of the method that this delegate encapsulates.</param>
            <param name="arg13">Parameter 13 of the method that this delegate encapsulates.</param>
            <param name="arg14">Parameter 14 of the method that this delegate encapsulates.</param>
            <param name="arg15">Parameter 15 of the method that this delegate encapsulates.</param>
            <param name="arg16">Parameter 16 of the method that this delegate encapsulates.</param>
            <param name="arg17">Parameter 17 of the method that this delegate encapsulates.</param>
            <param name="arg18">Parameter 18 of the method that this delegate encapsulates.</param>
            <param name="arg19">Parameter 19 of the method that this delegate encapsulates.</param>
            <param name="arg20">Parameter 20 of the method that this delegate encapsulates.</param>
            <param name="arg21">Parameter 21 of the method that this delegate encapsulates.</param>
            <param name="arg22">Parameter 22 of the method that this delegate encapsulates.</param>
            <param name="arg23">Parameter 23 of the method that this delegate encapsulates.</param>
            <param name="arg24">Parameter 24 of the method that this delegate encapsulates.</param>
            <param name="arg25">Parameter 25 of the method that this delegate encapsulates.</param>
            <param name="arg26">Parameter 26 of the method that this delegate encapsulates.</param>
            <returns>The return value of the method that this delegate encapsulates.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Func`28">
            <summary>
            Encapsulates a method that has 27 parameters and returns a value of the type specified by the <typeparamref name="TResult" /> parameter.
            </summary>
            <typeparam name="T1">The type of parameter 1 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of parameter 2 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of parameter 3 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of parameter 4 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of parameter 5 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of parameter 6 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of parameter 7 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of parameter 8 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of parameter 9 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of parameter 10 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of parameter 11 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of parameter 12 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of parameter 13 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of parameter 14 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of parameter 15 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of parameter 16 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T17">The type of parameter 17 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T18">The type of parameter 18 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T19">The type of parameter 19 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T20">The type of parameter 20 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T21">The type of parameter 21 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T22">The type of parameter 22 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T23">The type of parameter 23 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T24">The type of parameter 24 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T25">The type of parameter 25 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T26">The type of parameter 26 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T27">The type of parameter 27 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TResult">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="arg1">Parameter 1 of the method that this delegate encapsulates.</param>
            <param name="arg2">Parameter 2 of the method that this delegate encapsulates.</param>
            <param name="arg3">Parameter 3 of the method that this delegate encapsulates.</param>
            <param name="arg4">Parameter 4 of the method that this delegate encapsulates.</param>
            <param name="arg5">Parameter 5 of the method that this delegate encapsulates.</param>
            <param name="arg6">Parameter 6 of the method that this delegate encapsulates.</param>
            <param name="arg7">Parameter 7 of the method that this delegate encapsulates.</param>
            <param name="arg8">Parameter 8 of the method that this delegate encapsulates.</param>
            <param name="arg9">Parameter 9 of the method that this delegate encapsulates.</param>
            <param name="arg10">Parameter 10 of the method that this delegate encapsulates.</param>
            <param name="arg11">Parameter 11 of the method that this delegate encapsulates.</param>
            <param name="arg12">Parameter 12 of the method that this delegate encapsulates.</param>
            <param name="arg13">Parameter 13 of the method that this delegate encapsulates.</param>
            <param name="arg14">Parameter 14 of the method that this delegate encapsulates.</param>
            <param name="arg15">Parameter 15 of the method that this delegate encapsulates.</param>
            <param name="arg16">Parameter 16 of the method that this delegate encapsulates.</param>
            <param name="arg17">Parameter 17 of the method that this delegate encapsulates.</param>
            <param name="arg18">Parameter 18 of the method that this delegate encapsulates.</param>
            <param name="arg19">Parameter 19 of the method that this delegate encapsulates.</param>
            <param name="arg20">Parameter 20 of the method that this delegate encapsulates.</param>
            <param name="arg21">Parameter 21 of the method that this delegate encapsulates.</param>
            <param name="arg22">Parameter 22 of the method that this delegate encapsulates.</param>
            <param name="arg23">Parameter 23 of the method that this delegate encapsulates.</param>
            <param name="arg24">Parameter 24 of the method that this delegate encapsulates.</param>
            <param name="arg25">Parameter 25 of the method that this delegate encapsulates.</param>
            <param name="arg26">Parameter 26 of the method that this delegate encapsulates.</param>
            <param name="arg27">Parameter 27 of the method that this delegate encapsulates.</param>
            <returns>The return value of the method that this delegate encapsulates.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Func`29">
            <summary>
            Encapsulates a method that has 28 parameters and returns a value of the type specified by the <typeparamref name="TResult" /> parameter.
            </summary>
            <typeparam name="T1">The type of parameter 1 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of parameter 2 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of parameter 3 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of parameter 4 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of parameter 5 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of parameter 6 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of parameter 7 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of parameter 8 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of parameter 9 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of parameter 10 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of parameter 11 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of parameter 12 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of parameter 13 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of parameter 14 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of parameter 15 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of parameter 16 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T17">The type of parameter 17 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T18">The type of parameter 18 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T19">The type of parameter 19 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T20">The type of parameter 20 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T21">The type of parameter 21 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T22">The type of parameter 22 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T23">The type of parameter 23 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T24">The type of parameter 24 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T25">The type of parameter 25 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T26">The type of parameter 26 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T27">The type of parameter 27 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T28">The type of parameter 28 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TResult">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="arg1">Parameter 1 of the method that this delegate encapsulates.</param>
            <param name="arg2">Parameter 2 of the method that this delegate encapsulates.</param>
            <param name="arg3">Parameter 3 of the method that this delegate encapsulates.</param>
            <param name="arg4">Parameter 4 of the method that this delegate encapsulates.</param>
            <param name="arg5">Parameter 5 of the method that this delegate encapsulates.</param>
            <param name="arg6">Parameter 6 of the method that this delegate encapsulates.</param>
            <param name="arg7">Parameter 7 of the method that this delegate encapsulates.</param>
            <param name="arg8">Parameter 8 of the method that this delegate encapsulates.</param>
            <param name="arg9">Parameter 9 of the method that this delegate encapsulates.</param>
            <param name="arg10">Parameter 10 of the method that this delegate encapsulates.</param>
            <param name="arg11">Parameter 11 of the method that this delegate encapsulates.</param>
            <param name="arg12">Parameter 12 of the method that this delegate encapsulates.</param>
            <param name="arg13">Parameter 13 of the method that this delegate encapsulates.</param>
            <param name="arg14">Parameter 14 of the method that this delegate encapsulates.</param>
            <param name="arg15">Parameter 15 of the method that this delegate encapsulates.</param>
            <param name="arg16">Parameter 16 of the method that this delegate encapsulates.</param>
            <param name="arg17">Parameter 17 of the method that this delegate encapsulates.</param>
            <param name="arg18">Parameter 18 of the method that this delegate encapsulates.</param>
            <param name="arg19">Parameter 19 of the method that this delegate encapsulates.</param>
            <param name="arg20">Parameter 20 of the method that this delegate encapsulates.</param>
            <param name="arg21">Parameter 21 of the method that this delegate encapsulates.</param>
            <param name="arg22">Parameter 22 of the method that this delegate encapsulates.</param>
            <param name="arg23">Parameter 23 of the method that this delegate encapsulates.</param>
            <param name="arg24">Parameter 24 of the method that this delegate encapsulates.</param>
            <param name="arg25">Parameter 25 of the method that this delegate encapsulates.</param>
            <param name="arg26">Parameter 26 of the method that this delegate encapsulates.</param>
            <param name="arg27">Parameter 27 of the method that this delegate encapsulates.</param>
            <param name="arg28">Parameter 28 of the method that this delegate encapsulates.</param>
            <returns>The return value of the method that this delegate encapsulates.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Func`30">
            <summary>
            Encapsulates a method that has 29 parameters and returns a value of the type specified by the <typeparamref name="TResult" /> parameter.
            </summary>
            <typeparam name="T1">The type of parameter 1 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of parameter 2 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of parameter 3 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of parameter 4 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of parameter 5 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of parameter 6 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of parameter 7 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of parameter 8 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of parameter 9 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of parameter 10 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of parameter 11 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of parameter 12 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of parameter 13 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of parameter 14 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of parameter 15 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of parameter 16 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T17">The type of parameter 17 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T18">The type of parameter 18 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T19">The type of parameter 19 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T20">The type of parameter 20 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T21">The type of parameter 21 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T22">The type of parameter 22 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T23">The type of parameter 23 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T24">The type of parameter 24 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T25">The type of parameter 25 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T26">The type of parameter 26 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T27">The type of parameter 27 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T28">The type of parameter 28 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T29">The type of parameter 29 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TResult">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="arg1">Parameter 1 of the method that this delegate encapsulates.</param>
            <param name="arg2">Parameter 2 of the method that this delegate encapsulates.</param>
            <param name="arg3">Parameter 3 of the method that this delegate encapsulates.</param>
            <param name="arg4">Parameter 4 of the method that this delegate encapsulates.</param>
            <param name="arg5">Parameter 5 of the method that this delegate encapsulates.</param>
            <param name="arg6">Parameter 6 of the method that this delegate encapsulates.</param>
            <param name="arg7">Parameter 7 of the method that this delegate encapsulates.</param>
            <param name="arg8">Parameter 8 of the method that this delegate encapsulates.</param>
            <param name="arg9">Parameter 9 of the method that this delegate encapsulates.</param>
            <param name="arg10">Parameter 10 of the method that this delegate encapsulates.</param>
            <param name="arg11">Parameter 11 of the method that this delegate encapsulates.</param>
            <param name="arg12">Parameter 12 of the method that this delegate encapsulates.</param>
            <param name="arg13">Parameter 13 of the method that this delegate encapsulates.</param>
            <param name="arg14">Parameter 14 of the method that this delegate encapsulates.</param>
            <param name="arg15">Parameter 15 of the method that this delegate encapsulates.</param>
            <param name="arg16">Parameter 16 of the method that this delegate encapsulates.</param>
            <param name="arg17">Parameter 17 of the method that this delegate encapsulates.</param>
            <param name="arg18">Parameter 18 of the method that this delegate encapsulates.</param>
            <param name="arg19">Parameter 19 of the method that this delegate encapsulates.</param>
            <param name="arg20">Parameter 20 of the method that this delegate encapsulates.</param>
            <param name="arg21">Parameter 21 of the method that this delegate encapsulates.</param>
            <param name="arg22">Parameter 22 of the method that this delegate encapsulates.</param>
            <param name="arg23">Parameter 23 of the method that this delegate encapsulates.</param>
            <param name="arg24">Parameter 24 of the method that this delegate encapsulates.</param>
            <param name="arg25">Parameter 25 of the method that this delegate encapsulates.</param>
            <param name="arg26">Parameter 26 of the method that this delegate encapsulates.</param>
            <param name="arg27">Parameter 27 of the method that this delegate encapsulates.</param>
            <param name="arg28">Parameter 28 of the method that this delegate encapsulates.</param>
            <param name="arg29">Parameter 29 of the method that this delegate encapsulates.</param>
            <returns>The return value of the method that this delegate encapsulates.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Func`31">
            <summary>
            Encapsulates a method that has 30 parameters and returns a value of the type specified by the <typeparamref name="TResult" /> parameter.
            </summary>
            <typeparam name="T1">The type of parameter 1 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of parameter 2 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of parameter 3 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of parameter 4 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of parameter 5 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of parameter 6 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of parameter 7 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of parameter 8 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of parameter 9 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of parameter 10 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of parameter 11 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of parameter 12 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of parameter 13 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of parameter 14 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of parameter 15 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of parameter 16 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T17">The type of parameter 17 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T18">The type of parameter 18 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T19">The type of parameter 19 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T20">The type of parameter 20 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T21">The type of parameter 21 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T22">The type of parameter 22 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T23">The type of parameter 23 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T24">The type of parameter 24 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T25">The type of parameter 25 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T26">The type of parameter 26 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T27">The type of parameter 27 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T28">The type of parameter 28 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T29">The type of parameter 29 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T30">The type of parameter 30 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TResult">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="arg1">Parameter 1 of the method that this delegate encapsulates.</param>
            <param name="arg2">Parameter 2 of the method that this delegate encapsulates.</param>
            <param name="arg3">Parameter 3 of the method that this delegate encapsulates.</param>
            <param name="arg4">Parameter 4 of the method that this delegate encapsulates.</param>
            <param name="arg5">Parameter 5 of the method that this delegate encapsulates.</param>
            <param name="arg6">Parameter 6 of the method that this delegate encapsulates.</param>
            <param name="arg7">Parameter 7 of the method that this delegate encapsulates.</param>
            <param name="arg8">Parameter 8 of the method that this delegate encapsulates.</param>
            <param name="arg9">Parameter 9 of the method that this delegate encapsulates.</param>
            <param name="arg10">Parameter 10 of the method that this delegate encapsulates.</param>
            <param name="arg11">Parameter 11 of the method that this delegate encapsulates.</param>
            <param name="arg12">Parameter 12 of the method that this delegate encapsulates.</param>
            <param name="arg13">Parameter 13 of the method that this delegate encapsulates.</param>
            <param name="arg14">Parameter 14 of the method that this delegate encapsulates.</param>
            <param name="arg15">Parameter 15 of the method that this delegate encapsulates.</param>
            <param name="arg16">Parameter 16 of the method that this delegate encapsulates.</param>
            <param name="arg17">Parameter 17 of the method that this delegate encapsulates.</param>
            <param name="arg18">Parameter 18 of the method that this delegate encapsulates.</param>
            <param name="arg19">Parameter 19 of the method that this delegate encapsulates.</param>
            <param name="arg20">Parameter 20 of the method that this delegate encapsulates.</param>
            <param name="arg21">Parameter 21 of the method that this delegate encapsulates.</param>
            <param name="arg22">Parameter 22 of the method that this delegate encapsulates.</param>
            <param name="arg23">Parameter 23 of the method that this delegate encapsulates.</param>
            <param name="arg24">Parameter 24 of the method that this delegate encapsulates.</param>
            <param name="arg25">Parameter 25 of the method that this delegate encapsulates.</param>
            <param name="arg26">Parameter 26 of the method that this delegate encapsulates.</param>
            <param name="arg27">Parameter 27 of the method that this delegate encapsulates.</param>
            <param name="arg28">Parameter 28 of the method that this delegate encapsulates.</param>
            <param name="arg29">Parameter 29 of the method that this delegate encapsulates.</param>
            <param name="arg30">Parameter 30 of the method that this delegate encapsulates.</param>
            <returns>The return value of the method that this delegate encapsulates.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Func`32">
            <summary>
            Encapsulates a method that has 31 parameters and returns a value of the type specified by the <typeparamref name="TResult" /> parameter.
            </summary>
            <typeparam name="T1">The type of parameter 1 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of parameter 2 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of parameter 3 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of parameter 4 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of parameter 5 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of parameter 6 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of parameter 7 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of parameter 8 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of parameter 9 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of parameter 10 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of parameter 11 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of parameter 12 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of parameter 13 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of parameter 14 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of parameter 15 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of parameter 16 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T17">The type of parameter 17 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T18">The type of parameter 18 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T19">The type of parameter 19 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T20">The type of parameter 20 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T21">The type of parameter 21 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T22">The type of parameter 22 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T23">The type of parameter 23 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T24">The type of parameter 24 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T25">The type of parameter 25 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T26">The type of parameter 26 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T27">The type of parameter 27 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T28">The type of parameter 28 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T29">The type of parameter 29 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T30">The type of parameter 30 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T31">The type of parameter 31 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TResult">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="arg1">Parameter 1 of the method that this delegate encapsulates.</param>
            <param name="arg2">Parameter 2 of the method that this delegate encapsulates.</param>
            <param name="arg3">Parameter 3 of the method that this delegate encapsulates.</param>
            <param name="arg4">Parameter 4 of the method that this delegate encapsulates.</param>
            <param name="arg5">Parameter 5 of the method that this delegate encapsulates.</param>
            <param name="arg6">Parameter 6 of the method that this delegate encapsulates.</param>
            <param name="arg7">Parameter 7 of the method that this delegate encapsulates.</param>
            <param name="arg8">Parameter 8 of the method that this delegate encapsulates.</param>
            <param name="arg9">Parameter 9 of the method that this delegate encapsulates.</param>
            <param name="arg10">Parameter 10 of the method that this delegate encapsulates.</param>
            <param name="arg11">Parameter 11 of the method that this delegate encapsulates.</param>
            <param name="arg12">Parameter 12 of the method that this delegate encapsulates.</param>
            <param name="arg13">Parameter 13 of the method that this delegate encapsulates.</param>
            <param name="arg14">Parameter 14 of the method that this delegate encapsulates.</param>
            <param name="arg15">Parameter 15 of the method that this delegate encapsulates.</param>
            <param name="arg16">Parameter 16 of the method that this delegate encapsulates.</param>
            <param name="arg17">Parameter 17 of the method that this delegate encapsulates.</param>
            <param name="arg18">Parameter 18 of the method that this delegate encapsulates.</param>
            <param name="arg19">Parameter 19 of the method that this delegate encapsulates.</param>
            <param name="arg20">Parameter 20 of the method that this delegate encapsulates.</param>
            <param name="arg21">Parameter 21 of the method that this delegate encapsulates.</param>
            <param name="arg22">Parameter 22 of the method that this delegate encapsulates.</param>
            <param name="arg23">Parameter 23 of the method that this delegate encapsulates.</param>
            <param name="arg24">Parameter 24 of the method that this delegate encapsulates.</param>
            <param name="arg25">Parameter 25 of the method that this delegate encapsulates.</param>
            <param name="arg26">Parameter 26 of the method that this delegate encapsulates.</param>
            <param name="arg27">Parameter 27 of the method that this delegate encapsulates.</param>
            <param name="arg28">Parameter 28 of the method that this delegate encapsulates.</param>
            <param name="arg29">Parameter 29 of the method that this delegate encapsulates.</param>
            <param name="arg30">Parameter 30 of the method that this delegate encapsulates.</param>
            <param name="arg31">Parameter 31 of the method that this delegate encapsulates.</param>
            <returns>The return value of the method that this delegate encapsulates.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Func`33">
            <summary>
            Encapsulates a method that has 32 parameters and returns a value of the type specified by the <typeparamref name="TResult" /> parameter.
            </summary>
            <typeparam name="T1">The type of parameter 1 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of parameter 2 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of parameter 3 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of parameter 4 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of parameter 5 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of parameter 6 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of parameter 7 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of parameter 8 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of parameter 9 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of parameter 10 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of parameter 11 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of parameter 12 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of parameter 13 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of parameter 14 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of parameter 15 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of parameter 16 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T17">The type of parameter 17 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T18">The type of parameter 18 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T19">The type of parameter 19 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T20">The type of parameter 20 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T21">The type of parameter 21 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T22">The type of parameter 22 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T23">The type of parameter 23 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T24">The type of parameter 24 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T25">The type of parameter 25 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T26">The type of parameter 26 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T27">The type of parameter 27 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T28">The type of parameter 28 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T29">The type of parameter 29 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T30">The type of parameter 30 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T31">The type of parameter 31 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T32">The type of parameter 32 of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TResult">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="arg1">Parameter 1 of the method that this delegate encapsulates.</param>
            <param name="arg2">Parameter 2 of the method that this delegate encapsulates.</param>
            <param name="arg3">Parameter 3 of the method that this delegate encapsulates.</param>
            <param name="arg4">Parameter 4 of the method that this delegate encapsulates.</param>
            <param name="arg5">Parameter 5 of the method that this delegate encapsulates.</param>
            <param name="arg6">Parameter 6 of the method that this delegate encapsulates.</param>
            <param name="arg7">Parameter 7 of the method that this delegate encapsulates.</param>
            <param name="arg8">Parameter 8 of the method that this delegate encapsulates.</param>
            <param name="arg9">Parameter 9 of the method that this delegate encapsulates.</param>
            <param name="arg10">Parameter 10 of the method that this delegate encapsulates.</param>
            <param name="arg11">Parameter 11 of the method that this delegate encapsulates.</param>
            <param name="arg12">Parameter 12 of the method that this delegate encapsulates.</param>
            <param name="arg13">Parameter 13 of the method that this delegate encapsulates.</param>
            <param name="arg14">Parameter 14 of the method that this delegate encapsulates.</param>
            <param name="arg15">Parameter 15 of the method that this delegate encapsulates.</param>
            <param name="arg16">Parameter 16 of the method that this delegate encapsulates.</param>
            <param name="arg17">Parameter 17 of the method that this delegate encapsulates.</param>
            <param name="arg18">Parameter 18 of the method that this delegate encapsulates.</param>
            <param name="arg19">Parameter 19 of the method that this delegate encapsulates.</param>
            <param name="arg20">Parameter 20 of the method that this delegate encapsulates.</param>
            <param name="arg21">Parameter 21 of the method that this delegate encapsulates.</param>
            <param name="arg22">Parameter 22 of the method that this delegate encapsulates.</param>
            <param name="arg23">Parameter 23 of the method that this delegate encapsulates.</param>
            <param name="arg24">Parameter 24 of the method that this delegate encapsulates.</param>
            <param name="arg25">Parameter 25 of the method that this delegate encapsulates.</param>
            <param name="arg26">Parameter 26 of the method that this delegate encapsulates.</param>
            <param name="arg27">Parameter 27 of the method that this delegate encapsulates.</param>
            <param name="arg28">Parameter 28 of the method that this delegate encapsulates.</param>
            <param name="arg29">Parameter 29 of the method that this delegate encapsulates.</param>
            <param name="arg30">Parameter 30 of the method that this delegate encapsulates.</param>
            <param name="arg31">Parameter 31 of the method that this delegate encapsulates.</param>
            <param name="arg32">Parameter 32 of the method that this delegate encapsulates.</param>
            <returns>The return value of the method that this delegate encapsulates.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Globalization.BclCultureInfoProvider">
            <summary>
            The <see cref="T:WebApplications.Utilities.Globalization.CultureInfoProvider"/> for BCL cultures.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.BclCultureInfoProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Globalization.BclCultureInfoProvider"/> class.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Globalization.CultureInfoProvider">
            <summary>
            Provides <see cref="T:System.Globalization.CultureInfo" />.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Globalization.CultureInfoProvider.EmptyCultureInfoProvider">
            <summary>
            A <see cref="T:WebApplications.Utilities.Globalization.ICurrencyInfoProvider" /> with no currencies!
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CultureInfoProvider.EmptyCultureInfoProvider.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Globalization.CultureInfoProvider.EmptyCultureInfoProvider"/> class.
            </summary>
            <param name="published">The published.</param>
        </member>
        <member name="P:WebApplications.Utilities.Globalization.CultureInfoProvider.EmptyCultureInfoProvider.Published">
            <summary>
            The date this provider was published.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Globalization.CultureInfoProvider.EmptyCultureInfoProvider.All">
            <summary>
            The cultures in the provider.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Globalization.CultureInfoProvider.EmptyCultureInfoProvider.Count">
            <summary>
            Gets the number of cultures specified in the provider.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CultureInfoProvider.EmptyCultureInfoProvider.Get(System.String)">
            <summary>
            Retrieves an <see cref="T:WebApplications.Utilities.Globalization.ExtendedCultureInfo" /> with the ISO Code specified.
            </summary>
            <param name="cultureName">The ISO Code.</param>
            <returns>
            The 
            <see cref="T:System.Globalization.CultureInfo" /> that corresponds to the 
            <paramref name="cultureName" /> specified (if any);
              otherwise the default value for the type is returned.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CultureInfoProvider.EmptyCultureInfoProvider.Get(System.Int32)">
            <summary>
            Retrieves an <see cref="T:WebApplications.Utilities.Globalization.ExtendedCultureInfo" /> with the name specified <see cref="P:System.Globalization.CultureInfo.LCID" />.
            </summary>
            <param name="lcid">The lcid.</param>
            <returns>
            The <see cref="T:WebApplications.Utilities.Globalization.ExtendedCultureInfo" /> that corresponds to the <paramref name="lcid" /> specified (if any);
            otherwise <see langword="null" />.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CultureInfoProvider.EmptyCultureInfoProvider.Get(System.Globalization.CultureInfo)">
            <summary>
            Retrieves an <see cref="T:WebApplications.Utilities.Globalization.ExtendedCultureInfo" /> equivalent to the specified (see <see cref="T:System.Globalization.CultureInfo" />).
            </summary>
            <param name="cultureInfo">The culture info.</param>
            <returns>
            The 
            <see cref="T:System.Globalization.CultureInfo" /> that corresponds to the 
            <paramref name="cultureInfo" /> specified (if any);
              otherwise the default value for the type is returned.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CultureInfoProvider.EmptyCultureInfoProvider.FindByCurrency(WebApplications.Utilities.Globalization.CurrencyInfo)">
            <summary>
            Finds the cultures that use a specific currency.
            </summary>
            <param name="currencyInfo">The currency information.</param>
            <returns>
            The cultures that us the specified currency.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CultureInfoProvider.EmptyCultureInfoProvider.GetChildren(System.Globalization.CultureInfo)">
            <summary>
            Gets the child cultures of the specified culture.
            </summary>
            <param name="cultureInfo">The culture to get the children of.</param>
            <returns>The child cultures of the specified culture.</returns>
        </member>
        <member name="F:WebApplications.Utilities.Globalization.CultureInfoProvider.Empty">
            <summary>
            The empty culture info provider has no cultures.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Globalization.CultureInfoProvider.Bcl">
            <summary>
            The provider that supplies the BCL <see cref="T:System.Globalization.CultureInfo">cultures</see>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Globalization.CultureInfoProvider._current">
            <summary>
            The current provider.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Globalization.CultureInfoProvider.Current">
            <summary>
            Gets or sets the current provider.
            </summary>
            <value>
            The current.
            </value>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CultureInfoProvider.#cctor">
            <summary>
            Initializes the <see cref="T:WebApplications.Utilities.Globalization.CultureInfoProvider"/> class.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Globalization.CultureInfoProvider._cultureInfos">
            <summary>
            Stores culture info (by name).
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Globalization.CultureInfoProvider._cultureInfosByLCID">
            <summary>
            Stores culture info (by LCID).
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Globalization.CultureInfoProvider._currencyCultureInfos">
            <summary>
            The cultures by currency code.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Globalization.CultureInfoProvider._childCultures">
            <summary>
            The child cultures of each culture.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CultureInfoProvider.#ctor(System.DateTime,System.Collections.Generic.IEnumerable{WebApplications.Utilities.Globalization.ExtendedCultureInfo})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Globalization.CultureInfoProvider" /> class.
            </summary>
            <param name="published">The published date time.</param>
            <param name="cultures">The cultures.</param>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CultureInfoProvider.GetDepth(WebApplications.Utilities.Globalization.ExtendedCultureInfo)">
            <summary>
            Gets the depth of the given culture info.
            </summary>
            <param name="info">The information.</param>
            <returns></returns>
        </member>
        <member name="P:WebApplications.Utilities.Globalization.CultureInfoProvider.Published">
            <summary>
            The date this provider was published.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Globalization.CultureInfoProvider.All">
            <summary>
            The cultures in the provider.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Globalization.CultureInfoProvider.Count">
            <summary>
            Gets the number of cultures specified in the provider.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CultureInfoProvider.Get(System.String)">
            <summary>
            Retrieves an <see cref="T:WebApplications.Utilities.Globalization.ExtendedCultureInfo" /> with the name specified <see cref="P:System.Globalization.CultureInfo.Name" />.
            </summary>
            <param name="cultureName">The ISO Code.</param>
            <returns>
            The <see cref="T:WebApplications.Utilities.Globalization.ExtendedCultureInfo" /> that corresponds to the <paramref name="cultureName" /> specified (if any);
            otherwise <see langword="null" />.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="cultureName" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CultureInfoProvider.Get(System.Int32)">
            <summary>
            Retrieves an <see cref="T:WebApplications.Utilities.Globalization.ExtendedCultureInfo" /> with the name specified <see cref="P:System.Globalization.CultureInfo.LCID" />.
            </summary>
            <param name="lcid">The lcid.</param>
            <returns>
            The <see cref="T:WebApplications.Utilities.Globalization.ExtendedCultureInfo" /> that corresponds to the <paramref name="lcid" /> specified (if any);
            otherwise <see langword="null" />.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CultureInfoProvider.Get(System.Globalization.CultureInfo)">
            <summary>
            Retrieves an <see cref="T:WebApplications.Utilities.Globalization.ExtendedCultureInfo" /> equivalent to the <see cref="T:System.Globalization.CultureInfo" />.
            </summary>
            <param name="cultureInfo">The culture info.</param>
            <returns>
            The <see cref="T:System.Globalization.CultureInfo" /> that corresponds to the <paramref name="cultureInfo" /> specified (if any);
            otherwise <see langword="null" />.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="cultureInfo" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CultureInfoProvider.FindByCurrency(WebApplications.Utilities.Globalization.CurrencyInfo)">
            <summary>
            Finds the cultures that use a specific currency.
            </summary>
            <param name="currencyInfo">The currency information.</param>
            <returns>
            The cultures that us the specified currency.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CultureInfoProvider.GetChildren(System.Globalization.CultureInfo)">
            <summary>
            Gets the child cultures of the specified culture.
            </summary>
            <param name="cultureInfo">The culture to get the children of.</param>
            <returns>The child cultures of the specified culture.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Globalization.GlobalizationExtensions">
            <summary>
            Provides extension methods for <see cref="T:WebApplications.Utilities.Globalization.CurrencyInfo"/>.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.GlobalizationExtensions.ToBinary(WebApplications.Utilities.Globalization.ICurrencyInfoProvider,System.IO.Stream,System.Boolean)">
            <summary>
            Converts this <see cref="T:WebApplications.Utilities.Globalization.CurrencyInfoProvider" /> to binary.
            </summary>
            <param name="currencyInfoProvider">The currency information provider.</param>
            <param name="stream">The binary stream to save to.</param>
            <param name="leaveOpen">if set to <see langword="true" /> the <paramref name="stream" /> will be left open.</param>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.GlobalizationExtensions.ToXml(WebApplications.Utilities.Globalization.ICurrencyInfoProvider)">
            <summary>
            Converts this <see cref="T:WebApplications.Utilities.Globalization.CurrencyInfoProvider"/> to XML.
            </summary>
            <returns>An XML string containing the contents of this <see cref="T:WebApplications.Utilities.Globalization.CurrencyInfoProvider"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.GlobalizationExtensions.Merge(WebApplications.Utilities.Globalization.ICurrencyInfoProvider,WebApplications.Utilities.Globalization.ICurrencyInfoProvider)">
            <summary>
            Merges a provider with another provider. If the same currency is in both, the one in the latest published provider will be used.
            Currencies that only appeared in the oldest provider will be marked as out of date.
            </summary>
            <param name="first">The first provider.</param>
            <param name="second">The second provider.</param>
            <returns></returns>
        </member>
        <member name="T:WebApplications.Utilities.Globalization.CurrencyInfoProvider">
            <summary>
            Provides methods for reading and writing currency information to/from binary and XML files.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Globalization.CurrencyInfoProvider.EmptyCurrencyInfoProvider">
            <summary>
            A <see cref="T:WebApplications.Utilities.Globalization.ICurrencyInfoProvider"/> with no currencies!
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CurrencyInfoProvider.EmptyCurrencyInfoProvider.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Globalization.CurrencyInfoProvider.EmptyCurrencyInfoProvider"/> class.
            </summary>
            <param name="published">The published.</param>
        </member>
        <member name="P:WebApplications.Utilities.Globalization.CurrencyInfoProvider.EmptyCurrencyInfoProvider.Published">
            <summary>
            The date this provider was published.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Globalization.CurrencyInfoProvider.EmptyCurrencyInfoProvider.All">
            <summary>
            The currencies in the provider.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Globalization.CurrencyInfoProvider.EmptyCurrencyInfoProvider.Count">
            <summary>
            Gets the number of currencies specified in the provider.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CurrencyInfoProvider.EmptyCurrencyInfoProvider.Get(System.String)">
            <summary>
            Retrieves a <see cref="T:WebApplications.Utilities.Globalization.CurrencyInfo" /> with the ISO Code specified.
            </summary>
            <param name="currencyCode">The ISO Code.</param>
            <returns>
            The <see cref="T:WebApplications.Utilities.Globalization.CurrencyInfo" /> that corresponds to the <paramref name="currencyCode" /> specified (if any);
            otherwise the default value for the type is returned.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CurrencyInfoProvider.EmptyCurrencyInfoProvider.Get(System.Globalization.RegionInfo)">
            <summary>
            Gets the <see cref="T:WebApplications.Utilities.Globalization.CurrencyInfo" /> from the specified region information.
            </summary>
            <param name="regionInfo">The region information.</param>
            <returns>
            The associated <see cref="T:WebApplications.Utilities.Globalization.CurrencyInfo" /> if found; otherwise <see langword="null" />.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CurrencyInfoProvider.EmptyCurrencyInfoProvider.Get(System.Globalization.CultureInfo)">
            <summary>
            Gets the <see cref="T:WebApplications.Utilities.Globalization.CurrencyInfo" /> from the specified culture information.
            </summary>
            <param name="cultureInfo">The culture information.</param>
            <returns>
            The associated <see cref="T:WebApplications.Utilities.Globalization.CurrencyInfo" /> if found; otherwise <see langword="null" />.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CurrencyInfoProvider.EmptyCurrencyInfoProvider.Get(WebApplications.Utilities.Globalization.ExtendedCultureInfo)">
            <summary>
            Gets the <see cref="T:WebApplications.Utilities.Globalization.CurrencyInfo" /> from the specified extended culture information.
            </summary>
            <param name="cultureInfo">The culture information.</param>
            <returns>
            The associated <see cref="T:WebApplications.Utilities.Globalization.CurrencyInfo" /> if found; otherwise <see langword="null" />.
            </returns>
        </member>
        <member name="F:WebApplications.Utilities.Globalization.CurrencyInfoProvider.Empty">
            <summary>
            The empty currency provider has no currencies.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Globalization.CurrencyInfoProvider._current">
            <summary>
            The current provider.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Globalization.CurrencyInfoProvider._isFromConfig">
            <summary>
            Whether <see cref="F:WebApplications.Utilities.Globalization.CurrencyInfoProvider._current"/> was loaded from the config.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Globalization.CurrencyInfoProvider.Current">
            <summary>
            Gets or sets the current global <see cref="T:WebApplications.Utilities.Globalization.CurrencyInfoProvider">provider</see>.
            </summary>
            <value>
            The provider.
            </value>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CurrencyInfoProvider.#cctor">
            <summary>
            Initializes the <see cref="T:WebApplications.Utilities.Globalization.CurrencyInfoProvider"/> class.
            </summary>
            <exception cref="T:System.IO.FileNotFoundException">The ISO 4217 file specified in the configuration file was not found.</exception>
            <exception cref="T:System.IO.InvalidDataException">The data in the ISO 4217 file was invalid.</exception>
            <exception cref="T:System.IO.FileLoadException">An exception was thrown while loading the currency information from the ISO 4217 file.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CurrencyInfoProvider.OnActiveUtilityConfigurationChanged(WebApplications.Utilities.Configuration.UtilityConfiguration,WebApplications.Utilities.Configuration.ConfigurationSection{WebApplications.Utilities.Configuration.UtilityConfiguration}.ConfigurationChangedEventArgs)">
            <summary>
            Called when the utility configuration changes. If the <see cref="P:WebApplications.Utilities.Configuration.UtilityConfiguration.ISO4217"/> property changes, the data_stream will be reloaded.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:WebApplications.Utilities.Configuration.ConfigurationSection`1.ConfigurationChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CurrencyInfoProvider.SetCurrentProvider(System.String)">
            <summary>
            Sets the current provider.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CurrencyInfoProvider.LoadCurrencies(System.String)">
            <summary>
            Loads the currency info provider from the path given.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
            <exception cref="T:System.IO.FileNotFoundException">The ISO 4217 file specified was not found.</exception>
            <exception cref="T:System.IO.FileLoadException">An exception was thrown while loading the currency information from the ISO 4217 file.</exception>
            <exception cref="T:System.IO.InvalidDataException">The data in the ISO 4217 file was invalid.</exception>
        </member>
        <member name="F:WebApplications.Utilities.Globalization.CurrencyInfoProvider.BinaryHeader">
            <summary>
            The first four bytes expected in binary currency info files.
            Equivalent to the string '$CCY'.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Globalization.CurrencyInfoProvider._currencyInfos">
            <summary>
            Stores currency info (by code).
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Globalization.CurrencyInfoProvider.Published">
            <summary>
            The date this file was published.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Globalization.CurrencyInfoProvider.All">
            <summary>
            The currencies in the file.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Globalization.CurrencyInfoProvider.Count">
            <summary>
            Gets the number of currencies specified in the provider.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CurrencyInfoProvider.#ctor(System.DateTime,System.Collections.Generic.IEnumerable{WebApplications.Utilities.Globalization.CurrencyInfo})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Globalization.CurrencyInfoProvider" /> class.
            </summary>
            <param name="published">The date this file was published.</param>
            <param name="currencies">The currencies in the file.</param>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CurrencyInfoProvider.LoadFromFile(System.String)">
            <summary>
            Loads the provider from a file. If the path ends in the extension .xml the provider will be loaded from XML; 
            otherwise the contents of the file will be used to determine the format.
            </summary>
            <param name="path">The path to the file.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CurrencyInfoProvider.Load(System.IO.Stream,System.Boolean)">
            <summary>
            Loads the currencies from the given stream, determining the format of the data based on the contents of the stream.
            </summary>
            <param name="stream">The stream.</param>
            <param name="leaveOpen">if set to <see langword="true" /> the <paramref name="stream"/> will be left open.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CurrencyInfoProvider.LoadFromXml(System.String)">
            <summary>
            Loads the currencies from XML.
            </summary>
            <param name="xml">The XML.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CurrencyInfoProvider.LoadFromXml(System.IO.TextReader)">
            <summary>
            Loads the currencies from XML.
            </summary>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CurrencyInfoProvider.LoadFromBinary(System.IO.Stream,System.Boolean)">
            <summary>
            Loads the currencies from binary.
            </summary>
            <param name="stream">The binary stream to load from.</param>
            <param name="leaveOpen">if set to <see langword="true" /> the <paramref name="stream"/> will be left open.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CurrencyInfoProvider.Get(System.String)">
            <summary>
              Retrieves a <see cref="T:WebApplications.Utilities.Globalization.CurrencyInfo"/> with the ISO Code specified.
            </summary>
            <param name="currencyCode">The ISO Code.</param>
            <returns>
              The <see cref="T:WebApplications.Utilities.Globalization.CurrencyInfo"/> that corresponds to the <paramref name="currencyCode"/> specified (if any);
              otherwise the default value for the type is returned.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="currencyCode"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CurrencyInfoProvider.Get(System.Globalization.RegionInfo)">
            <summary>
            Gets the <see cref="T:WebApplications.Utilities.Globalization.CurrencyInfo" /> from the specified region information.
            </summary>
            <param name="regionInfo">The region information.</param>
            <returns>
            The associated <see cref="T:WebApplications.Utilities.Globalization.CurrencyInfo" /> if found; otherwise <see langword="null" />.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="regionInfo"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CurrencyInfoProvider.Get(System.Globalization.CultureInfo)">
            <summary>
            Gets the <see cref="T:WebApplications.Utilities.Globalization.CurrencyInfo" /> from the specified culture information.
            </summary>
            <param name="cultureInfo">The culture information.</param>
            <returns>
            The associated <see cref="T:WebApplications.Utilities.Globalization.CurrencyInfo" /> if found; otherwise <see langword="null" />.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CurrencyInfoProvider.Get(WebApplications.Utilities.Globalization.ExtendedCultureInfo)">
            <summary>
            Gets the specified culture information.
            </summary>
            <param name="cultureInfo">The culture information.</param>
            <returns></returns>
        </member>
        <member name="T:WebApplications.Utilities.Globalization.ExtendedCultureInfo">
            <summary>
            Provides extended information about a specific culture.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Globalization.ExtendedCultureInfo.RegionInfo">
            <summary>
            Gets the associated region information.
            </summary>
            <value>
            The region information.
            </value>
        </member>
        <member name="P:WebApplications.Utilities.Globalization.ExtendedCultureInfo.IsInvariant">
            <summary>
            Gets a value indicating whether this culture is invariant.
            </summary>
            <value>
              <see langword="true" /> if this culture is invariant; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:WebApplications.Utilities.Globalization.ExtendedCultureInfo.Parent">
            <summary>
            Gets the <see cref="T:WebApplications.Utilities.Globalization.ExtendedCultureInfo"/> that represents the parent culture of the current <see cref="T:WebApplications.Utilities.Globalization.ExtendedCultureInfo"/>.
            </summary>
            <returns>
            The <see cref="T:WebApplications.Utilities.Globalization.ExtendedCultureInfo"/> that represents the parent culture of the current <see cref="T:WebApplications.Utilities.Globalization.ExtendedCultureInfo"/>.
            </returns>
        </member>
        <member name="P:WebApplications.Utilities.Globalization.ExtendedCultureInfo.ISOCurrencySymbol">
            <summary>
            Gets the three-character ISO 4217 currency symbol associated with the cultures region, 
            or <see langword="null"/> if the culture does not have a region.
            </summary>
            <value>
            The three-character ISO 4217 currency symbol associated with the cultures region,
            or <see langword="null"/> if the culture does not have a region.
            </value>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.ExtendedCultureInfo.#ctor(System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Globalization.ExtendedCultureInfo" /> class.
            </summary>
            <param name="cultureInfo">The culture information.</param>
        </member>
        <member name="T:WebApplications.Utilities.Globalization.ICultureInfoProvider">
            <summary>
            Interface to an object that provides <see cref="T:System.Globalization.CultureInfo"/>.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Globalization.ICultureInfoProvider.Published">
            <summary>
            The date this provider was published.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Globalization.ICultureInfoProvider.All">
            <summary>
            The cultures in the provider.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Globalization.ICultureInfoProvider.Count">
            <summary>
            Gets the number of cultures specified in the provider.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.ICultureInfoProvider.Get(System.String)">
            <summary>
            Retrieves an <see cref="T:WebApplications.Utilities.Globalization.ExtendedCultureInfo" /> with the name specified <see cref="P:System.Globalization.CultureInfo.Name" />.
            </summary>
            <param name="cultureName">The ISO Code.</param>
            <returns>
            The <see cref="T:WebApplications.Utilities.Globalization.ExtendedCultureInfo" /> that corresponds to the <paramref name="cultureName" /> specified (if any);
            otherwise <see langword="null" />.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="cultureName" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.ICultureInfoProvider.Get(System.Int32)">
            <summary>
            Retrieves an <see cref="T:WebApplications.Utilities.Globalization.ExtendedCultureInfo" /> with the name specified <see cref="P:System.Globalization.CultureInfo.LCID" />.
            </summary>
            <param name="lcid">The lcid.</param>
            <returns>
            The <see cref="T:WebApplications.Utilities.Globalization.ExtendedCultureInfo" /> that corresponds to the <paramref name="lcid" /> specified (if any);
            otherwise <see langword="null" />.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.ICultureInfoProvider.Get(System.Globalization.CultureInfo)">
            <summary>
            Retrieves an <see cref="T:WebApplications.Utilities.Globalization.ExtendedCultureInfo" /> equivalent to the <see cref="T:System.Globalization.CultureInfo" />.
            </summary>
            <param name="cultureInfo">The culture info.</param>
            <returns>
            The <see cref="T:System.Globalization.CultureInfo" /> that corresponds to the <paramref name="cultureInfo" /> specified (if any);
            otherwise <see langword="null" />.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="cultureInfo" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.ICultureInfoProvider.FindByCurrency(WebApplications.Utilities.Globalization.CurrencyInfo)">
            <summary>
            Finds the cultures that use a specific currency.
            </summary>
            <param name="currencyInfo">The currency information.</param>
            <returns>The cultures that us the specified currency.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.ICultureInfoProvider.GetChildren(System.Globalization.CultureInfo)">
            <summary>
            Gets the child cultures of the specified culture.
            </summary>
            <param name="cultureInfo">The culture to get the children of.</param>
            <returns>The child cultures of the specified culture.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Globalization.ICurrencyInfoProvider">
            <summary>
            Interface to an object that provides <see cref="T:WebApplications.Utilities.Globalization.CurrencyInfo"/>.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Globalization.ICurrencyInfoProvider.Published">
            <summary>
            The date this provider was published.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Globalization.ICurrencyInfoProvider.All">
            <summary>
            The currencies in the provider.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Globalization.ICurrencyInfoProvider.Count">
            <summary>
            Gets the number of currencies specified in the provider.
            </summary>
            <value>
            The count.
            </value>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.ICurrencyInfoProvider.Get(System.String)">
            <summary>
              Retrieves a <see cref="T:WebApplications.Utilities.Globalization.CurrencyInfo"/> with the ISO Code specified.
            </summary>
            <param name="currencyCode">The ISO Code.</param>
            <returns>
              The <see cref="T:WebApplications.Utilities.Globalization.CurrencyInfo"/> that corresponds to the <paramref name="currencyCode"/> specified (if any);
              otherwise the default value for the type is returned.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="currencyCode"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.ICurrencyInfoProvider.Get(System.Globalization.RegionInfo)">
            <summary>
            Gets the <see cref="T:WebApplications.Utilities.Globalization.CurrencyInfo"/> from the specified region information.
            </summary>
            <param name="regionInfo">The region information.</param>
            <returns>The associated <see cref="T:WebApplications.Utilities.Globalization.CurrencyInfo"/> if found; otherwise <see langword="null"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.ICurrencyInfoProvider.Get(System.Globalization.CultureInfo)">
            <summary>
            Gets the <see cref="T:WebApplications.Utilities.Globalization.CurrencyInfo" /> from the specified culture information.
            </summary>
            <param name="cultureInfo">The culture information.</param>
            <returns>
            The associated <see cref="T:WebApplications.Utilities.Globalization.CurrencyInfo" /> if found; otherwise <see langword="null" />.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.ICurrencyInfoProvider.Get(WebApplications.Utilities.Globalization.ExtendedCultureInfo)">
            <summary>
            Gets the <see cref="T:WebApplications.Utilities.Globalization.CurrencyInfo" /> from the specified extended culture information.
            </summary>
            <param name="cultureInfo">The culture information.</param>
            <returns>
            The associated <see cref="T:WebApplications.Utilities.Globalization.CurrencyInfo" /> if found; otherwise <see langword="null" />.
            </returns>
        </member>
        <member name="T:WebApplications.Utilities.Globalization.CultureHelper">
            <summary>
              Helps map cultures, regions and currencies.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Globalization.CultureHelper._currencyCultureInfo">
            <summary>
              A lookup of <see cref="T:System.Globalization.CultureInfo"/>s and <see cref="T:System.Globalization.RegionInfo"/>s
              by currency ISO code (e.g. USD, GBP, JPY).
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Globalization.CultureHelper._regionNames">
            <summary>
              A lookup of regions by their English name.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Globalization.CultureHelper._cultureNames">
            <summary>
              All the specified culture names.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Globalization.CultureHelper.InvariantLCID">
            <summary>
              The invariant culture LCID.
            </summary>
            <seealso cref="P:System.Globalization.CultureInfo.InvariantCulture"/>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CultureHelper.#cctor">
            <summary>
              Gets the cultures (both specific and neutral) as well as the currency and
              <see cref="T:System.Globalization.RegionInfo"/>.
            </summary>
            <seealso cref="T:WebApplications.Utilities.Globalization.CurrencyInfo"/>
        </member>
        <member name="P:WebApplications.Utilities.Globalization.CultureHelper.CultureNames">
            <summary>
              Gets the culture names (specific and neutral cultures).
            </summary>
            <remarks>
              This is particularly useful when looking for culture specific directories (e.g. for resource files).
            </remarks>
        </member>
        <member name="P:WebApplications.Utilities.Globalization.CultureHelper.RegionNames">
            <summary>
              Gets the region names.
            </summary>
            <remarks>
              This is particularly useful when looking for culture specific directories (e.g. for resource files).
            </remarks>
        </member>
        <member name="P:WebApplications.Utilities.Globalization.CultureHelper.CurrencyNames">
            <summary>
              Gets the region names.
            </summary>
            <remarks>
              This is particularly useful when looking for culture specific directories (e.g. for resource files).
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CultureHelper.GetCultureInfo(System.String)">
            <summary>
            Tries to get the culture info with the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns><see langword="true" /> if found, otherwise <see langword="false" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CultureHelper.GetRegionInfo(System.String)">
            <summary>
            Tries to get the culture info with the specified name.
            </summary>
            <param name="name">The name.</param>
            <returns><see langword="true" /> if found, otherwise <see langword="false" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CultureHelper.RegionInfo(System.Globalization.CultureInfo)">
            <summary>
              Gets the <see cref="T:System.Globalization.RegionInfo"/> for the specified
              <see cref="T:System.Globalization.CultureInfo">culture</see>.
            </summary>
            <param name="cultureInfo">The specific culture information.</param>
            <returns>
              The corresponding <see cref="T:System.Globalization.RegionInfo"/> for the
              <paramref name="cultureInfo"/> specified.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="cultureInfo"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CultureHelper.CurrencyInfo(System.Globalization.RegionInfo)">
            <summary>
              Gets the currency info for the specified region (if any).
            </summary>
            <param name="regionInfo">The region information.</param>
            <returns>
              The corresponding currency info for the <paramref name="regionInfo"/> specified.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="regionInfo"/> is <see langword="null"/>.
            </exception>
            <seealso cref="T:WebApplications.Utilities.Globalization.CurrencyInfo"/>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CultureHelper.CurrencyInfo(System.Globalization.CultureInfo)">
            <summary>
              Gets the <see cref="T:WebApplications.Utilities.Globalization.CurrencyInfo">currency info</see> for the specified culture (if any).
            </summary>
            <param name="cultureInfo">The specific culture information.</param>
            <returns>
              The corresponding currency info for the <paramref name="cultureInfo"/> specified.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="cultureInfo"/> is <see langword="null"/>.
            </exception>
            <seealso cref="T:WebApplications.Utilities.Globalization.CurrencyInfo"/>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CultureHelper.CultureInfoFromCurrencyISO(System.String)">
            <summary>
              Lookup a <see cref="T:System.Globalization.CultureInfo"/> by the specified currency ISO code.
            </summary>
            <param name="isoCode">The ISO Code.</param>
            <returns>
              A list of <see cref="T:System.Globalization.CultureInfo"/>s that have the specified currency <paramref name="isoCode"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="isoCode"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CultureHelper.RegionInfoFromCurrencyISO(System.String)">
            <summary>
              Lookup <see cref="T:System.Globalization.RegionInfo">region information</see> by the currency ISO code.
            </summary>
            <param name="isoCode">The ISO Code.</param>
            <returns>
              A list of <see cref="T:System.Globalization.RegionInfo"/>s that have the specified currency.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="isoCode"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CultureHelper.FormatCurrency(System.Decimal,System.String,System.String)">
            <summary>
              Format a <see cref="T:System.Decimal"/> value to a <see cref="T:System.String"/> using the currency format specified.
              If the specified currency ISO Code doesn't match a <see cref="T:System.Globalization.CultureInfo">culture</see> then there
              will be no currency symbol and the <paramref name="currencyISO"/> Code will be the prefix.
            </summary>
            <param name="amount">The numerical amount to format.</param>
            <param name="currencyISO">The currency ISO Code.</param>
            <param name="countryISO">The country ISO Code.</param>
            <returns>
              A formatted <see cref="T:System.String"/> in the correct currency format.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="currencyISO"/> is <see langword="null"/>.
            </exception>
            <seealso cref="T:System.Globalization.CultureInfo"/>
            <seealso cref="T:System.Globalization.RegionInfo"/>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CultureHelper.FormatCurrency(System.Decimal,System.Globalization.CultureInfo)">
            <summary>
              Format a <see cref="T:System.Decimal"/> value to a <see cref="T:System.String"/> using the specified <see cref="T:System.Globalization.CultureInfo"/>.
            </summary>
            <param name="amount">The numerical amount to format.</param>
            <param name="cultureInfo">
              <para>The culture info.</para>
              <para>If this is a null value then the thread's <see cref="P:System.Threading.Thread.CurrentUICulture">current
              UI culture</see> is used.</para>
            </param>
            <returns>
              A formatted <see cref="T:System.String"/> in the correct currency format.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CultureHelper.FindRegionFromName(System.String)">
            <summary>
              Retrieves the <see cref="T:System.Globalization.RegionInfo"/> using the
              <see cref="P:System.Globalization.RegionInfo.DisplayName">display name</see> specified.
            </summary>
              <param name="name">The display name (the country's name in the current culture).</param>
            <returns>
              The <see cref="T:System.Globalization.RegionInfo"/> that corresponds to the <paramref name="name"/> specified.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="name"/> is <see langword="null"/>.
            </exception>
            <seealso cref="T:System.Globalization.CultureInfo"/>
            <seealso cref="P:System.Globalization.RegionInfo.DisplayName"/>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CultureHelper.FindRegion(System.String)">
            <summary>
              Retrieves the <see cref="T:System.Globalization.RegionInfo"/> using the display name specified.
            </summary>
            <param name="name">The display name (the country's name in the current culture).</param>
            <returns>
              The <see cref="T:System.Globalization.RegionInfo"/> that corresponds to the <paramref name="name"/> specified.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="name"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CultureHelper.IsInvariant(System.Globalization.CultureInfo)">
            <summary>
              Determines whether or not the <see cref="T:System.Globalization.CultureInfo"/> is the invariant culture.
              (http://msdn.microsoft.com/en-us/library/4c5zdc6a.aspx)
            </summary>
            <param name="cultureInfo">The culture info.</param>
            <returns>
              Returns <see langword="true"/> if the specified <paramref name="cultureInfo"/> is invariant; otherwise returns <see langword="false"/>.
            </returns>
            <remarks>
              The invariant culture is culture-insensitive, it is useful for when culture-specific presentation isn't required/needed.
            </remarks>
            <seealso cref="P:System.Globalization.CultureInfo.InvariantCulture"/>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CultureHelper.GetChildren(System.Globalization.CultureInfo)">
            <summary>
            Gets the child cultures of the specified culture.
            </summary>
            <param name="culture">The culture to get the children of.</param>
            <returns>The child cultures of the specified culture.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CultureHelper.GetFallBack(System.Globalization.CultureInfo)">
            <summary>
            Gets the fall back cultures for the specified culture, in order of preference, from the <see cref="P:WebApplications.Utilities.Globalization.CurrencyInfoProvider.Current"/> provider.
            </summary>
            <param name="culture">The culture.</param>
            <returns>
            The fall back cultures for the specified culture, in order of preference. The first element will always be the given culture.
            If the invariant culture is given, all cultures will be returned.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="culture"/> was null.</exception>
            <exception cref="T:System.ArgumentException">$The <see cref="P:WebApplications.Utilities.Globalization.CultureInfoProvider.Current"/> provider does not contain the <paramref name="culture"/> given.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CultureHelper.GetFallBack(WebApplications.Utilities.Globalization.ICultureInfoProvider,System.Globalization.CultureInfo)">
            <summary>
            Gets the fall back cultures for the specified culture, in order of preference, from the specified <see cref="T:WebApplications.Utilities.Globalization.ICultureInfoProvider"/>.
            </summary>
            <param name="provider">The provider.</param>
            <param name="culture">The culture.</param>
            <returns>
            The fall back cultures for the specified culture, in order of preference. The first element will always be the given culture.
            If the invariant culture is given, all cultures will be returned.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="provider"/> was null.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="culture"/> was null.</exception>
            <exception cref="T:System.ArgumentException">$The <paramref name="provider"/> does not contain the <paramref name="culture"/> given.</exception>
        </member>
        <member name="T:WebApplications.Utilities.Globalization.CurrencyInfo">
            <summary>
              Holds extended information about currencies.
            </summary>
            <remarks>
              <see cref="T:WebApplications.Utilities.Globalization.CurrencyInfo"/> contains:
              <list type="bullet">
                <item><description>The currency ISO Code. (http://www.xe.com/iso4217.php)</description></item>
                <item><description>The currency ISO Number. (http://www.xe.com/iso4217.php)</description></item>
                <item><description>The exponent, which is the number of decimals available in the currency.</description></item>
                <item><description>The currency's full name.</description></item>
                <item><description>Associated <see cref="T:System.Globalization.RegionInfo">regions</see>.</description></item>
                <item><description>Associated <see cref="T:System.Globalization.CultureInfo">cultures</see>.</description></item>
              </list>
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CurrencyInfo.#ctor(System.String,System.Int32,System.Nullable{System.Int32},System.String,System.Boolean)">
            <summary>
            Initialize a new instance of <see cref="T:WebApplications.Utilities.Globalization.CurrencyInfo" />.
            </summary>
            <param name="code">The ISO Code.</param>
            <param name="isoNumber">The ISO Number.</param>
            <param name="exponent">The exponent, which is the number of decimals available in the currency.</param>
            <param name="fullName">The currency's full name.</param>
            <param name="isLatest">if set to <see langword="true" /> the currency appears in the latest official ISO 4217 list.</param>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CurrencyInfo.GetOutOfDate">
            <summary>
            Gets the out of date equivalent of this <see cref="T:WebApplications.Utilities.Globalization.CurrencyInfo"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="F:WebApplications.Utilities.Globalization.CurrencyInfo.Code">
            <summary>
              Gets the ISO Code.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Globalization.CurrencyInfo.ISONumber">
            <summary>
              Gets the ISO Number.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Globalization.CurrencyInfo.Exponent">
            <summary>
              Gets the exponent, which is the number of decimals available in the currency.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Globalization.CurrencyInfo.FullName">
            <summary>
              Gets the currency's full name.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Globalization.CurrencyInfo.IsLatest">
            <summary>
            Indicates that this currency appears in the latest official ISO 4217 list.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Globalization.CurrencyInfo.ToString">
            <summary>
              Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
              A <see cref="T:System.String"/> representation of this instance. The format string can be changed in the 
              Resources.resx resource file at the key 'CurrencyInfoToString'.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              The format string was a <see langword="null"/>.
            </exception>
            <exception cref="T:System.FormatException">
              An index from the format string is either less than zero or greater than or equal to the number of arguments.
            </exception>
        </member>
        <member name="T:WebApplications.Utilities.BigArray`1">
            <summary>
            Allows creation of arrays that take > 2GB of memory.
            </summary>
            <typeparam name="T">The array contents.</typeparam>
            <remarks>
            Use with caution, this will deliberately eat up a lot of memory.
            </remarks>
        </member>
        <member name="F:WebApplications.Utilities.BigArray`1.BlockSize">
            <summary>
            The block size, if creating arrays smaller than the block size, consider using
            standard arrays.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.BigArray`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.BigArray`1"/> class.
            </summary>
            <param name="size">The size.</param>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.BigArray`1.#ctor(System.UInt64)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.BigArray`1"/> class.
            </summary>
            <param name="size">The size.</param>
            <remarks></remarks>
        </member>
        <member name="P:WebApplications.Utilities.BigArray`1.Length">
            <summary>
            Gets the length.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:WebApplications.Utilities.BigArray`1.Item(System.UInt64)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <returns>The element at the specified index.</returns>
              
            <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.IList"/>. </exception>
              
            <exception cref="T:System.NotSupportedException">The property is set and the <see cref="T:System.Collections.IList"/> is read-only. </exception>
            <remarks></remarks>
        </member>
        <member name="P:WebApplications.Utilities.BigArray`1.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <returns>The element at the specified index.</returns>
              
            <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.IList"/>. </exception>
              
            <exception cref="T:System.NotSupportedException">The property is set and the <see cref="T:System.Collections.IList"/> is read-only. </exception>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.BigArray`1.Clone">
            <inheritdoc/>
        </member>
        <member name="M:WebApplications.Utilities.BigArray`1.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:WebApplications.Utilities.BigArray`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="P:WebApplications.Utilities.BigArray`1.Count">
            <inheritdoc/>
        </member>
        <member name="P:WebApplications.Utilities.BigArray`1.SyncRoot">
            <inheritdoc/>
        </member>
        <member name="P:WebApplications.Utilities.BigArray`1.IsSynchronized">
            <inheritdoc/>
        </member>
        <member name="M:WebApplications.Utilities.BigArray`1.System#Collections#IList#Add(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:WebApplications.Utilities.BigArray`1.Contains(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:WebApplications.Utilities.BigArray`1.Clear">
            <inheritdoc/>
        </member>
        <member name="M:WebApplications.Utilities.BigArray`1.IndexOf(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:WebApplications.Utilities.BigArray`1.System#Collections#IList#Insert(System.Int32,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:WebApplications.Utilities.BigArray`1.System#Collections#IList#Remove(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:WebApplications.Utilities.BigArray`1.System#Collections#IList#RemoveAt(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="P:WebApplications.Utilities.BigArray`1.System#Collections#IList#Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="P:WebApplications.Utilities.BigArray`1.IsReadOnly">
            <inheritdoc/>
        </member>
        <member name="P:WebApplications.Utilities.BigArray`1.IsFixedSize">
            <inheritdoc/>
        </member>
        <member name="M:WebApplications.Utilities.BigArray`1.CompareTo(System.Object,System.Collections.IComparer)">
            <inheritdoc/>
        </member>
        <member name="M:WebApplications.Utilities.BigArray`1.Equals(System.Object,System.Collections.IEqualityComparer)">
            <inheritdoc/>
        </member>
        <member name="M:WebApplications.Utilities.BigArray`1.GetHashCode(System.Collections.IEqualityComparer)">
            <inheritdoc/>
        </member>
        <member name="M:WebApplications.Utilities.BigArray`1.LongIndexOf(`0)">
            <summary>
            Get the long index of the value; otherwise <see cref="F:System.UInt64.MaxValue"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The long index of the value; otherwise <see cref="F:System.UInt64.MaxValue"/>.</returns>
            <remarks></remarks>
        </member>
        <member name="T:WebApplications.Utilities.CombGuid">
            <summary>
              A <see cref="F:WebApplications.Utilities.CombGuid.Guid"/> that encodes its creation date and can be used with SQL Server to create efficient inserts and indexes.
            </summary>
            <remarks>
              The encoded date is accurate to ~3.4ms (or ~8ms from SQL) depending on the source.
            </remarks>
        </member>
        <member name="F:WebApplications.Utilities.CombGuid.Empty">
            <summary>
              The empty <see cref="T:WebApplications.Utilities.CombGuid"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.CombGuid.Guid">
            <summary>
              The <see cref="T:System.Guid"/> component of the <see cref="T:WebApplications.Utilities.CombGuid"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.CombGuid._baseDate">
            <summary>
              The base UTC date time used during new <see cref="T:System.DateTime"/> calculations.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.CombGuid.Created">
            <summary>
              The UTC <see cref="T:System.DateTime"/> encoded into the <see cref="T:WebApplications.Utilities.CombGuid"/>.
            </summary>
            <remarks>This is accurate to ~3.4ms (or ~8ms from SQL) depending on the source.</remarks>
        </member>
        <member name="M:WebApplications.Utilities.CombGuid.#ctor(System.Byte[])">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.CombGuid"/> struct.
            </summary>
            <param name="b">A 16-element byte array containing values with which to initialize the Guid.</param>
            <seealso cref="T:System.Guid"/>
        </member>
        <member name="M:WebApplications.Utilities.CombGuid.#ctor(System.UInt32,System.UInt16,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.CombGuid"/> struct.
            </summary>
            <param name="a">The first 4 bytes of the Guid.</param>
            <param name="b">The next 2 bytes of the Guid.</param>
            <param name="c">The next 2 bytes of the Guid.</param>
            <param name="d">The next byte of the Guid.</param>
            <param name="e">The next byte of the Guid.</param>
            <param name="f">The next byte of the Guid.</param>
            <param name="g">The next byte of the Guid.</param>
            <param name="h">The next byte of the Guid.</param>
            <param name="i">The next byte of the Guid.</param>
            <param name="j">The next byte of the Guid.</param>
            <param name="k">The final byte of the Guid.</param>
            <remarks>
              Specifying the bytes in this manner can be used to circumvent byte order restrictions on certain computers (endianness).
            </remarks>
            <seealso cref="T:System.Guid"/>
        </member>
        <member name="M:WebApplications.Utilities.CombGuid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte[])">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.CombGuid"/> struct.
            </summary>
            <param name="a">The first 4 bytes of the Guid.</param>
            <param name="b">The next 2 bytes of the Guid.</param>
            <param name="c">The next 2 bytes of the Guid.</param>
            <param name="d">The final 8 bytes of the Guid.</param>
            <seealso cref="T:System.Guid"/>
        </member>
        <member name="M:WebApplications.Utilities.CombGuid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.CombGuid"/> struct.
            </summary>
            <param name="a">The first 4 bytes of the Guid.</param>
            <param name="b">The next 2 bytes of the Guid.</param>
            <param name="c">The next 2 bytes of the Guid.</param>
            <param name="d">The next byte of the Guid.</param>
            <param name="e">The next byte of the Guid.</param>
            <param name="f">The next byte of the Guid.</param>
            <param name="g">The next byte of the Guid.</param>
            <param name="h">The next byte of the Guid.</param>
            <param name="i">The next byte of the Guid.</param>
            <param name="j">The next byte of the Guid.</param>
            <param name="k">The final byte of the Guid.</param>
            <remarks>
              Specifying the bytes in this manner can be used to circumvent byte order restrictions on certain computers (endianness).
            </remarks>
            <seealso cref="T:System.Guid"/>
        </member>
        <member name="M:WebApplications.Utilities.CombGuid.#ctor(System.String)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.CombGuid"/> using the <see cref="T:System.String"/> specified. 
            </summary>
            <param name="g">
              <para>The string containing a Guid. The format can be one of the following (d represents a hex digit):</para>
              <para>32 continuous digits: dddddddddddddddddddddddddddddddd.</para>
              <para>-or-</para>
              <para>Groups of 8, 4, 4, 4 and 12 digits: dddddddd-dddd-dddd-dddd-dddddddddddd</para>
              <para>(The entire GUID can be enclosed in either braces or parenthesis.)</para>
              <para>-or-</para>
              <para>Groups of 8, 4, and 4 digits, then a subset of 8 groups of 2 digits. Each group is prefixed by "0x" or "0X"
              and is separated by commas. The entire GUID, as well as the subset, is enclosed in matching braces:
              {0xdddddddd, 0xdddd, 0xdddd,{0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd}}</para>
              <para>Embedded spaces and leading zeros are ignored as well as leading zeros in a group.</para>
            </param>
            <exception cref="T:System.ArgumentNullException"><paramref name="g"/> is a <see langword="null"/>.</exception>
            <exception cref="T:System.FormatException">The format of <paramref name="g"/> is invalid.</exception>
            <exception cref="T:System.OverflowException">The format of <paramref name="g"/> is invalid.</exception>
        </member>
        <member name="M:WebApplications.Utilities.CombGuid.#ctor(System.Guid)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.CombGuid"/> struct.
            </summary>
            <param name="g">The Guid.</param>
            <seealso cref="T:System.Guid"/>
        </member>
        <member name="M:WebApplications.Utilities.CombGuid.Parse(System.String)">
            <summary>
              Parses the specified <see cref="T:System.String"/> into a <see cref="T:WebApplications.Utilities.CombGuid"/> equivalent.
            </summary>
            <param name="input">The Guid to parse.</param>
            <returns>
              A <see cref="T:WebApplications.Utilities.CombGuid"/> containing the parsed <paramref name="input"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="input"/> is a <see langword="null"/>.
            </exception>
            <exception cref="T:System.FormatException">
              <paramref name="input"/> is not in a recognised format.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.CombGuid.TryParse(System.String,WebApplications.Utilities.CombGuid@)">
            <summary>
              Tries to parse the specified <see cref="T:System.String"/> into a <see cref="T:WebApplications.Utilities.CombGuid"/> equivalent.
            </summary>
            <param name="input">The Guid to parse.</param>
            <param name="result">
              If the <paramref name="input"/> is parsed successfully, a <see cref="T:WebApplications.Utilities.CombGuid"/> containing the parsed value
              is output; otherwise an empty <see cref="T:WebApplications.Utilities.CombGuid"/>.
            </param>
            <returns>
              Returns <see langword="true"/> if the parse was successful; otherwise returns <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CombGuid.ParseExact(System.String,System.String)">
            <summary>
              Parses the <see cref="T:System.String"/> input into the equivalent <see cref="T:WebApplications.Utilities.CombGuid"/> (with the format specified).
            </summary>
            <param name="input">The Guid to parse.</param>
            <param name="format">The format specifier.</param>
            <returns>
              A <see cref="T:WebApplications.Utilities.CombGuid"/> containing the parsed <paramref name="input"/>, which is in the specified <paramref name="format"/>.
            </returns>
            <remarks>
              The <paramref name="format"/> can be:
              <list type="bullet">
                <item><description>"N" - 32 digits.</description></item>
                <item><description>"D" - 32 digits separated by hyphens.</description></item>
                <item><description>"B" - 32 digits separated by hyphens (enclosed in braces).</description></item>
                <item><description>"P" - 32 digits separated by hyphens (enclosed in parenthesis).</description></item>
                <item><description>"X" - Four hex values (enclosed in braces) where the fourth value is a subset of eight hex values (also enclosed in braces).
                ({0x00000000,0x0000,0x0000,{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}</description></item>
              </list>
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="format"/> is a <see langword="null"/>.</exception>
            <exception cref="T:System.FormatException">
              The value of <paramref name="format"/> is not one of the following:
              <list type="bullet">
                <item><description>"N"</description></item>
                <item><description>"D"</description></item>
                <item><description>"B"</description></item>
                <item><description>"P"</description></item>
                <item><description>"X"</description></item>
              </list>
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.CombGuid.TryParseExact(System.String,System.String,WebApplications.Utilities.CombGuid@)">
            <summary>
              Parses the <see cref="T:System.String"/> input into the equivalent <see cref="T:WebApplications.Utilities.CombGuid"/> (with the format specified).
            </summary>
            <param name="input">The Guid to parse.</param>
            <param name="format">The format string.</param>
            <param name="result">
              If the <paramref name="input"/> is parsed successfully, a <see cref="T:WebApplications.Utilities.CombGuid"/> containing the parsed
              value is output; otherwise an empty <see cref="T:WebApplications.Utilities.CombGuid"/>.
            </param>
            <returns>
              Returns <see langword="true"/> if the <paramref name="input"/> was parsed successfully; otherwise returns <see langword="false"/>.
            </returns>
            <remarks>
              <para>The <paramref name="format"/> can be:</para>
              <list type="bullet">
                <item><description>"N" - 32 digits.</description></item>
                <item><description>"D" - 32 digits separated by hyphens.</description></item>
                <item><description>"B" - 32 digits separated by hyphens (enclosed in braces).</description></item>
                <item><description>"P" - 32 digits separated by hyphens (enclosed in parenthesis).</description></item>
                <item><description>"X" - Four hex values (enclosed in braces) where the fourth value is a subset of eight hex values (also enclosed in braces).
                ({0x00000000,0x0000,0x0000,{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}</description></item>
              </list>
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.CombGuid.ToByteArray">
            <summary>
              Returns an unsigned byte <see cref="T:System.Array">array</see> containing the <see cref="T:WebApplications.Utilities.CombGuid"/>.
            </summary>
            <returns>
              An unsigned 16-element byte <see cref="T:System.Array">array</see> containing the <see cref="T:WebApplications.Utilities.CombGuid"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CombGuid.ToString">
            <summary>
              Returns a <see cref="T:System.String"/> that represents this instance in "registry" format. 
            </summary>
            <returns>
              <para>A <see cref="T:System.String"/> representation of this instance.</para>
              <para><b>Output Format:</b> dddddddd-dddd-dddd-dddd-dddddddddddd (d represents a hex digit).</para>
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CombGuid.GetHashCode">
            <summary>
              Returns a hash code for this instance.
            </summary>
            <returns>The hash code for this instance.</returns>
            <remarks>This is suitable for use in hashing algorithms and data structures like a hash table.</remarks>
        </member>
        <member name="M:WebApplications.Utilities.CombGuid.Equals(System.Object)">
            <summary>
              Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="o">The object to compare with this instance.</param>
            <returns>
              Returns <see langword="true"/> if the specified <see cref="T:System.Object"/> is equal to this instance;
              otherwise returns <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CombGuid.Equals(WebApplications.Utilities.CombGuid)">
            <summary>
              Determines whether the specified <see cref="T:WebApplications.Utilities.CombGuid"/> is equal to this instance.
            </summary>
            <param name="g">
              The <see cref="T:WebApplications.Utilities.CombGuid"/> to compare with this instance.
            </param>
            <returns>
              Returns <see langword="true"/> if the specified <see cref="T:WebApplications.Utilities.CombGuid"/> (<paramref name="g"/>) is equal to this instance;
              otherwise returns <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CombGuid.Equals(System.Guid)">
            <summary>
              Determines whether the specified <see cref="N:System"/> is equal to this instance.
            </summary>
            <param name="other">The <see cref="T:System.Guid"/> to compare with this instance.</param>
            <returns>
              Returns <see langword="true"/> if the <paramref name="other"/> <see cref="T:System.Guid"/> is equal to this instance;
              otherwise returns <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CombGuid.CompareTo(System.Object)">
            <summary>
              Compares this instance to the specified <see cref="T:System.Object"/>.
            </summary>
            <param name="value">The object to compare to this instance.</param>
            <returns>
              A signed number indicating the the relative value between <paramref name="value"/> and this instance.
              <list type="bullet">
                <item><description>A negative integer: The instance is less than <paramref name="value"/>.</description></item>
                <item><description>Zero: The instance equal to <paramref name="value"/>.</description></item>
                <item><description>A positive integer: The instance is greater than <paramref name="value"/> or <paramref name="value"/>
                is <see langword="null">null</see>.</description></item>
              </list>
            </returns>
            <exception cref="T:System.ArgumentException">
              <paramref name="value"/> was not a <see cref="T:System.Guid"/>/<see cref="T:WebApplications.Utilities.CombGuid"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.CombGuid.CompareTo(WebApplications.Utilities.CombGuid)">
            <summary>
              Compares this instance to the specified <see cref="T:WebApplications.Utilities.CombGuid"/>.
            </summary>
            <param name="value">The <see cref="T:WebApplications.Utilities.CombGuid"/> to compare to this instance.</param>
            <returns>
              <para>A signed number indicating the relative value between <paramref name="value"/> and this instance.</para>
              <list type="bullet">
                <item><description>A negative integer: The instance is less than <paramref name="value"/>.</description></item>
                <item><description>Zero: The instance equal to <paramref name="value"/>.</description></item>
                <item><description>A positive integer: The instance is greater than <paramref name="value"/>.</description></item>
              </list>
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CombGuid.CompareTo(System.Guid)">
            <summary>
              Compares this instance to the specified <see cref="T:System.Guid"/>.
            </summary>
            <returns>
              <para>A signed number indicating the relative value between <paramref name="other"/> and this instance.</para>
              <list type="bullet">
                <item><description>A negative integer: The instance is less than <paramref name="other"/>.</description></item>
                <item><description>Zero: The instance equal to <paramref name="other"/>.</description></item>
                <item><description>A positive integer: The instance is greater than <paramref name="other"/>.</description></item>
              </list>
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CombGuid.op_Equality(WebApplications.Utilities.CombGuid,WebApplications.Utilities.CombGuid)">
            <summary>
              Implements the operator ==.
            </summary>
            <param name="a">The first <see cref="T:WebApplications.Utilities.CombGuid"/> to compare.</param>
            <param name="b">The second <see cref="T:WebApplications.Utilities.CombGuid"/> to compare.</param>
        </member>
        <member name="M:WebApplications.Utilities.CombGuid.op_Inequality(WebApplications.Utilities.CombGuid,WebApplications.Utilities.CombGuid)">
            <summary>
              Implements the operator !=.
            </summary>
            <param name="a">The first <see cref="T:WebApplications.Utilities.CombGuid"/> to compare.</param>
            <param name="b">The second <see cref="T:WebApplications.Utilities.CombGuid"/> to compare.</param>
        </member>
        <member name="M:WebApplications.Utilities.CombGuid.op_GreaterThan(WebApplications.Utilities.CombGuid,WebApplications.Utilities.CombGuid)">
            <summary>
              Implements the operator &gt;.
            </summary>
            <param name="a">The first <see cref="T:WebApplications.Utilities.CombGuid"/> to compare.</param>
            <param name="b">The second <see cref="T:WebApplications.Utilities.CombGuid"/> to compare.</param>
        </member>
        <member name="M:WebApplications.Utilities.CombGuid.op_LessThan(WebApplications.Utilities.CombGuid,WebApplications.Utilities.CombGuid)">
            <summary>
              Implements the operator &lt;.
            </summary>
            <param name="a">The first <see cref="T:WebApplications.Utilities.CombGuid"/> to compare.</param>
            <param name="b">The second <see cref="T:WebApplications.Utilities.CombGuid"/> to compare.</param>
        </member>
        <member name="M:WebApplications.Utilities.CombGuid.op_GreaterThanOrEqual(WebApplications.Utilities.CombGuid,WebApplications.Utilities.CombGuid)">
            <summary>
              Implements the operator &gt;=.
            </summary>
            <param name="a">The first <see cref="T:WebApplications.Utilities.CombGuid"/> to compare.</param>
            <param name="b">The second <see cref="T:WebApplications.Utilities.CombGuid"/> to compare.</param>
        </member>
        <member name="M:WebApplications.Utilities.CombGuid.op_LessThanOrEqual(WebApplications.Utilities.CombGuid,WebApplications.Utilities.CombGuid)">
            <summary>
              Implements the operator &lt;=.
            </summary>
            <param name="a">The first <see cref="T:WebApplications.Utilities.CombGuid"/> to compare.</param>
            <param name="b">The second <see cref="T:WebApplications.Utilities.CombGuid"/> to compare.</param>
        </member>
        <member name="M:WebApplications.Utilities.CombGuid.op_Implicit(WebApplications.Utilities.CombGuid)~System.Guid">
            <summary>
              Performs an implicit conversion from <see cref="T:WebApplications.Utilities.CombGuid"/> to <see cref="T:System.Guid"/>.
            </summary>
            <param name="combGuid">The <see cref="T:WebApplications.Utilities.CombGuid"/> to convert.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:WebApplications.Utilities.CombGuid.op_Implicit(System.Guid)~WebApplications.Utilities.CombGuid">
            <summary>
              Performs an implicit conversion from <see cref="T:System.Guid"/> to <see cref="T:WebApplications.Utilities.CombGuid"/>.
            </summary>
            <param name="guid">The <see cref="T:System.Guid"/> to convert.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:WebApplications.Utilities.CombGuid.NewCombGuid">
            <summary>
              Creates a new <see cref="T:WebApplications.Utilities.CombGuid"/> with the current <see cref="P:System.DateTime.Now"/> embedded
              as its creation date.
            </summary>
            <returns>A new <see cref="T:WebApplications.Utilities.CombGuid"/> instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.CombGuid.NewCombGuid(System.DateTimeOffset)">
            <summary>
              Creates a new <see cref="T:WebApplications.Utilities.CombGuid"/> based on the <see cref="T:System.DateTimeOffset">date time</see> specified.
            </summary>
            <param name="dateTime">The date time.</param>
            <returns>A new <see cref="T:WebApplications.Utilities.CombGuid"/> instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.CombGuid.NewCombGuid(NodaTime.Instant)">
            <summary>
              Creates a new <see cref="T:WebApplications.Utilities.CombGuid"/> based on the <see cref="T:NodaTime.Instant">instant</see> specified.
            </summary>
            <param name="instant">The instant.</param>
            <returns>A new <see cref="T:WebApplications.Utilities.CombGuid"/> instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.CombGuid.NewCombGuid(System.DateTime)">
            <summary>
              Creates a new <see cref="T:WebApplications.Utilities.CombGuid"/> based on the <see cref="T:System.DateTime">date time</see> specified.
            </summary>
            <param name="dateTime">The date time.</param>
            <returns>A new <see cref="T:WebApplications.Utilities.CombGuid"/> instance.</returns>
        </member>
        <member name="M:WebApplications.Utilities.CombGuid.GetDateTime(System.Guid)">
            <summary>
              Gets the <see cref="T:System.Guid"/>'s creation date (if it's a <see cref="T:WebApplications.Utilities.CombGuid"/>).
            </summary>
            <param name="guid">The Guid.</param>
            <returns>
              The <see cref="T:System.Guid"/>'s creation <see cref="T:System.DateTime"/> (always UTC).
            </returns>
            <remarks>
              The creation date is stored in the last 6 bytes of the <see cref="T:System.Guid"/>.
              A group of 4 bytes for the msecs and a group of 2 bytes for the days.
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.CombGuid.GetInstant(System.Guid)">
            <summary>
              Gets the <see cref="T:System.Guid"/>'s creation date (if it's a <see cref="T:WebApplications.Utilities.CombGuid"/>).
            </summary>
            <param name="guid">The Guid.</param>
            <returns>
              The <see cref="T:System.Guid"/>'s creation <see cref="T:NodaTime.Instant"/> (always UTC).
            </returns>
            <remarks>
              The creation date is stored in the last 6 bytes of the <see cref="T:System.Guid"/>.
              A group of 4 bytes for the msecs and a group of 2 bytes for the days.
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.CombGuid.GetDateTime(WebApplications.Utilities.CombGuid)">
            <summary>
              Gets the creation <see cref="T:System.DateTime">date time</see> for the specified <see cref="T:WebApplications.Utilities.CombGuid"/>.
            </summary>
            <param name="guid">The <see cref="T:WebApplications.Utilities.CombGuid"/>.</param>
            <returns>The value of the <see cref="T:WebApplications.Utilities.CombGuid"/>'s <see cref="F:WebApplications.Utilities.CombGuid.Created"/> member.</returns>
        </member>
        <member name="M:WebApplications.Utilities.CombGuid.GetInstant(WebApplications.Utilities.CombGuid)">
            <summary>
              Gets the creation <see cref="T:NodaTime.Instant">instant</see> for the specified <see cref="T:WebApplications.Utilities.CombGuid"/>.
            </summary>
            <param name="guid">The <see cref="T:WebApplications.Utilities.CombGuid"/>.</param>
            <returns>An <see cref="T:NodaTime.Instant"/> value equivalent to the <see cref="T:WebApplications.Utilities.CombGuid"/>'s <see cref="F:WebApplications.Utilities.CombGuid.Created"/> member.</returns>
        </member>
        <member name="M:WebApplications.Utilities.CombGuid.GetDateTime">
            <summary>
              Gets the <see cref="T:WebApplications.Utilities.CombGuid"/>'s creation <see cref="T:System.DateTime">date time</see>.
            </summary>
            <returns>The value of the <see cref="F:WebApplications.Utilities.CombGuid.Created"/> member.</returns>
        </member>
        <member name="M:WebApplications.Utilities.CombGuid.GetInstant">
            <summary>
              Gets the <see cref="T:WebApplications.Utilities.CombGuid"/>'s creation <see cref="T:NodaTime.Instant">instant</see>.
            </summary>
            <returns>An <see cref="T:NodaTime.Instant"/> value equivalent to the <see cref="F:WebApplications.Utilities.CombGuid.Created"/> member.</returns>
        </member>
        <member name="M:WebApplications.Utilities.CombGuid.ToString(System.String)">
            <summary>
              Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <param name="format">The format specifier.</param>
            <returns>A <see cref="T:System.String"/> representation of this instance.</returns>
            <remarks>
              <para>The <paramref name="format"/> can be:</para>
              <list type="bullet">
                <item><description>"N" - 32 digits.</description></item>
                <item><description>"D" - 32 digits separated by hyphens.</description></item>
                <item><description>"B" - 32 digits separated by hyphens (enclosed in braces).</description></item>
                <item><description>"P" - 32 digits separated by hyphens (enclosed in parenthesis).</description></item>
                <item><description>"X" - Four hex values (enclosed in braces) where the fourth value is a subset of
                eight hex values (also enclosed in braces).</description></item>
              </list>
              <para>If the format is a <see langword="null"/> or an empty string then "D" is used.</para>
            </remarks>
            <exception cref="T:System.FormatException">
              <para>The value of <paramref name="format"/> is not one of the following:</para>
              <list type="bullet">
                <item><description><see langword="null">null</see></description></item>
                <item><description>An empty string ("")</description></item>
                <item><description>"N"</description></item>
                <item><description>"D"</description></item>
                <item><description>"B"</description></item>
                <item><description>"P"</description></item>
                <item><description>"X"</description></item>
              </list>
            </exception>
            <seealso cref="M:System.Guid.ToString">Guid.ToString</seealso>
            <seealso cref="T:System.IFormatProvider"/>
        </member>
        <member name="M:WebApplications.Utilities.CombGuid.ToString(System.String,System.IFormatProvider)">
            <summary>
              Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <param name="format">The format specifier.</param>
            <param name="provider">Controls culture specific formatting.</param>
            <returns>A <see cref="T:System.String"/> representation of this instance.</returns>
            <remarks>
              <para>The <paramref name="format"/> can be:</para>
              <list type="bullet">
                <item><description>"N" - 32 digits.</description></item>
                <item><description>"D" - 32 digits separated by hyphens.</description></item>
                <item><description>"B" - 32 digits separated by hyphens (enclosed in braces).</description></item>
                <item><description>"P" - 32 digits separated by hyphens (enclosed in parenthesis).</description></item>
                <item><description>"X" - Four hex values (enclosed in braces) where the fourth value is a subset of eight hex values 
                (also enclosed in braces). {0x00000000,0x0000,0x0000,{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}</description></item>
              </list>
              <para>If the format is a <see langword="null"/> or an empty string then "D" is used.</para>
            </remarks>
            <exception cref="T:System.FormatException">
              <para>The value of <paramref name="format"/> is not one of the following:</para>
              <list type="bullet">
                <item><description><see langword="null">null</see></description></item>
                <item><description>An empty string ("")</description></item>
                <item><description>"N"</description></item>
                <item><description>"D"</description></item>
                <item><description>"B"</description></item>
                <item><description>"P"</description></item>
                <item><description>"X"</description></item>
              </list>
            </exception>
            <seealso cref="M:System.Guid.ToString">Guid.ToString</seealso>
            <seealso cref="T:System.IFormatProvider"/>
        </member>
        <member name="T:WebApplications.Utilities.ComparerBuilder`1">
            <summary>
              Allows you to define generic comparers using lambda functions.
              (http://msdn.microsoft.com/en-us/library/bb397687.aspx)
            </summary>
            <typeparam name="T">The type to compare.</typeparam>
            <seealso cref="T:System.Collections.Generic.IComparer`1"/>
        </member>
        <member name="F:WebApplications.Utilities.ComparerBuilder`1.CompareFunction">
            <summary>
              The function used to provide comparisons.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.ComparerBuilder`1.#ctor(System.Func{`0,`0,System.Int32},System.Func{`0,`0,System.Boolean},System.Func{`0,System.Int32})">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.ComparerBuilder`1"/> class.
            </summary>
            <param name="comparer">The comparer.</param>
            <param name="equalityComparer">
              <para>The equality comparer.</para>
              <para>By default it will use the <paramref name="comparer"/> and check to see if the result is 0.</para>
            </param>
            <param name="hashCodeGenerator">
              <para>The hash code generator.</para>
              <para>By default <see cref="M:System.Object.GetHashCode"/> will be used.</para>
            </param>
            <exception cref="T:System.ArgumentNullException"><paramref name="comparer"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:WebApplications.Utilities.ComparerBuilder`1.Compare(`0,`0)">
            <inheritdoc/>
        </member>
        <member name="T:WebApplications.Utilities.ComparerBuilder`2">
            <summary>
            Allows you to define generic comparers using lambda functions.
            (http://msdn.microsoft.com/en-us/library/bb397687.aspx)
            </summary>
            <typeparam name="T1">The type of the first operand.</typeparam>
            <typeparam name="T2">The type of the second operand.</typeparam>
            <seealso cref="T:System.Collections.IComparer" />
        </member>
        <member name="F:WebApplications.Utilities.ComparerBuilder`2.CompareFunction">
            <summary>
              The function used to provide comparisons.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.ComparerBuilder`2.#ctor(System.Func{`0,`1,System.Int32},System.Func{`0,`1,System.Boolean},System.Func{`0,System.Int32},System.Func{`1,System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.ComparerBuilder`2"/> class.
            </summary>
            <param name="comparer">The comparer.</param>
            <param name="equalityComparer">The equality comparer.</param>
            <param name="hashCodeGenerator1">The hash code generator1.</param>
            <param name="hashCodeGenerator2">The hash code generator2.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="comparer"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:WebApplications.Utilities.ComparerBuilder`2.Compare(System.Object,System.Object)">
            <inheritdoc/>
            <exception cref="T:System.InvalidOperationException">The objects cannot be compared.</exception>
        </member>
        <member name="T:WebApplications.Utilities.ConsoleHelper">
            <summary>
            Helpful functions for initializing and using a console safely.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.ConsoleHelper.IsConsole">
            <summary>
            Whether the current application is running in a console.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.ConsoleHelper.AttachConsole(System.UInt32)">
            <summary>
            Attaches to a parent console.
            </summary>
            <param name="dwProcessId">The dw process identifier.</param>
            <returns><see langword="true" /> if succeeds, <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ConsoleHelper.ShowWindow(System.IntPtr,System.Int32)">
            <summary>
            Shows the window.
            </summary>
            <param name="hWnd">The window handle.</param>
            <param name="cmdShow">The command id.</param>
            <returns><see langword="true" /> if successful, <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ConsoleHelper.GetConsoleScreenBufferInfoEx(System.IntPtr,WebApplications.Utilities.ConsoleHelper.ConsoleScreenBufferInfoEx@)">
            <summary>
            Gets the console screen buffer information.
            </summary>
            <param name="hConsoleOutput">The h console output.</param>
            <param name="csbe">The console screen buffer info.</param>
            <returns><see langword="true" /> if successful, <see langword="false" /> otherwise.</returns>
        </member>
        <member name="F:WebApplications.Utilities.ConsoleHelper.StdOutputHandle">
            <summary>
            The handle for the standard output (see WinBase.h).
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.ConsoleHelper._invalidHandleValue">
            <summary>
            An invalid handle (see WinBase.h).
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.ConsoleHelper.GetStdHandle(System.Int32)">
            <summary>
            Gets the standard handle.
            </summary>
            <param name="stdHandle">The standard handle.</param>
            <returns>IntPtr.</returns>
        </member>
        <member name="F:WebApplications.Utilities.ConsoleHelper._passwordFilter">
            <summary>
            Invalid characters when reading a password line.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.ConsoleHelper.Coord">
            <summary>
            Represents a coordinate
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.ConsoleHelper.SmallRect">
            <summary>
            Represents a small rectangle.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.ConsoleHelper.ColorRef">
            <summary>
            Represents an RGB color
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.ConsoleHelper.ConsoleScreenBufferInfoEx">
            <summary>
            Holds information about the Console's screen buffer.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.ConsoleHelper.Maximise">
            <summary>
            Maximises the console window.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.ConsoleHelper.#cctor">
            <summary>
            Initializes static members of the <see cref="T:WebApplications.Utilities.ConsoleHelper"/> class.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.ConsoleHelper._defaultConsoleColors">
            <summary>
            The default console colors
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.ConsoleHelper._consoleColors">
            <summary>
            The console's actual colours.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.ConsoleHelper._consoleColorsReverse">
            <summary>
            Maps <see cref="T:System.Drawing.Color"/> to <see cref="T:System.ConsoleColor"/> for exact matches.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.ConsoleHelper._consoleColorReverseCache">
            <summary>
            The console color cache.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.ConsoleHelper.ToColor(System.ConsoleColor)">
            <summary>
            Get's the <see cref="T:System.Drawing.Color"/> of a <see cref="T:System.ConsoleColor"/>.
            </summary>
            <param name="color">The color.</param>
            <returns>The equivalent <see cref="T:System.Drawing.Color"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ConsoleHelper.ToConsoleColor(System.Drawing.Color)">
            <summary>
            Converts a <see cref="T:System.Drawing.Color"/> to the nearest <see cref="T:System.ConsoleColor"/>.
            </summary>
            <param name="color">The color.</param>
            <returns>The closest <see cref="T:System.ConsoleColor"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ConsoleHelper.Distance(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Gets the square of the euclidean distance between two <see cref="T:System.Drawing.Color">Colors</see>.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ConsoleHelper.ReadPassword(System.Char)">
            <summary>
            Like System.Console.ReadLine(), only with a mask.
            </summary>
            <param name="mask">a <c>char</c> representing your choice of console mask</param>
            <returns>the string the user typed in</returns>
        </member>
        <member name="T:WebApplications.Utilities.CSharpExpressionWriter">
            <summary>
            Writes an <see cref="T:System.Linq.Expressions.Expression"/> tree to C# like code.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.ToString(System.Linq.Expressions.Expression,System.Boolean)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents the <paramref name="expression"/> given.
            </summary>
            <param name="expression">The expression.</param>
            <param name="fullTypeNames">if set to <see langword="true" /> type names will be fully qualified.</param>
            <returns>
            A <see cref="T:System.String" /> that represents the <paramref name="expression"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.#ctor(WebApplications.Utilities.CSharpExpressionWriter.PreVisitor,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.CSharpExpressionWriter"/> class.
            </summary>
            <param name="preVisitor">The pre visitor.</param>
            <param name="rootIsLambda">if set to <see langword="true" /> [root is lambda].</param>
        </member>
        <member name="T:WebApplications.Utilities.CSharpExpressionWriter.PreVisitor">
            <summary>
            Visitor that gets the names of all the labels, parameters and lambdas, as well as all the types used by an expression.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.CSharpExpressionWriter.PreVisitor.FullTypeNames">
            <summary>
            Whether namespace qualified names will be used instead of shortened ones.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.PreVisitor.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.CSharpExpressionWriter.PreVisitor"/> class.
            </summary>
            <param name="fullTypeNames">if set to <see langword="true" /> [full type names].</param>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.PreVisitor.AddType(System.Type)">
            <summary>
            Adds the type to the collection.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.PreVisitor.AddTypes(System.Type[])">
            <summary>
            Adds the types to the collection.
            </summary>
            <param name="types">The types.</param>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.PreVisitor.GetTypeNames">
            <summary>
            Gets the type names.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.PreVisitor.Visit(System.Linq.Expressions.Expression)">
            <summary>
            Dispatches the expression to one of the more specialized visit methods in this class.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.PreVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>
            Visits the <see cref="T:System.Linq.Expressions.ConstantExpression" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.PreVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)">
            <summary>
            Visits the <see cref="T:System.Linq.Expressions.LabelTarget" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.PreVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})">
            <summary>
            Visits the children of the <see cref="T:System.Linq.Expressions.Expression`1" />.
            </summary>
            <typeparam name="T">The type of the delegate.</typeparam>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.PreVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>
            Visits the <see cref="T:System.Linq.Expressions.ParameterExpression" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.PreVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)">
            <summary>
            Visits the children of the <see cref="T:System.Linq.Expressions.DynamicExpression" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.PreVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)">
            <summary>
            Visits the children of the <see cref="T:System.Linq.Expressions.TypeBinaryExpression" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.PreVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)">
            <summary>
            Visits the children of the <see cref="T:System.Linq.Expressions.CatchBlock" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.PreVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
            Visits the children of the <see cref="T:System.Linq.Expressions.MethodCallExpression" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.PreVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)">
            <summary>
            Visits the children of the <see cref="T:System.Linq.Expressions.NewArrayExpression" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.PreVisitor.VisitNew(System.Linq.Expressions.NewExpression)">
            <summary>
            Visits the children of the <see cref="T:System.Linq.Expressions.NewExpression" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.PreVisitor.VisitMember(System.Linq.Expressions.MemberExpression)">
            <summary>
            Visits the children of the <see cref="T:System.Linq.Expressions.MemberExpression" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.PreVisitor.GetLabelName(System.Linq.Expressions.LabelTarget)">
            <summary>
            Gets the name of the label.
            </summary>
            <param name="label">The label.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.PreVisitor.GetLambdaName(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Gets the name of the lambda.
            </summary>
            <param name="lambda">The lambda.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.PreVisitor.GetParameterName(System.Linq.Expressions.ParameterExpression)">
            <summary>
            Gets the name of the parameter.
            </summary>
            <param name="parameter">The parameter.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.PreVisitor.GetTypeName(System.Type)">
            <summary>
            Gets the name of the type.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.GetLabelName(System.Linq.Expressions.LabelTarget)">
            <summary>
            Gets the name of the label.
            </summary>
            <param name="label">The label.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.GetLambdaName(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Gets the name of the lambda.
            </summary>
            <param name="lambda">The lambda.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.GetParameterName(System.Linq.Expressions.ParameterExpression)">
            <summary>
            Gets the name of the parameter.
            </summary>
            <param name="parameter">The parameter.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.GetTypeName(System.Type)">
            <summary>
            Gets the name of the type.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.Indent">
            <summary>
            Indents the output.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.Deindent">
            <summary>
            Deindents this output.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.Out(System.String)">
            <summary>
            Outputs a string to the string builder.
            </summary>
            <param name="s">The s.</param>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.OutLine(System.String)">
            <summary>
            Outputs a string followed by a new line to the string builder.
            </summary>
            <param name="s">The string.</param>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.NewLine">
            <summary>
            Outputs a new line to the string builder.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
            Visits the children of the <see cref="T:System.Linq.Expressions.BinaryExpression" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.VisitBlock(System.Linq.Expressions.BlockExpression)">
            <summary>
            Visits the children of the <see cref="T:System.Linq.Expressions.BlockExpression" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.VisitStatements(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})">
            <summary>
            Visits the statements of a block.
            </summary>
            <param name="expressions">The expressions.</param>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.VisitStatement(System.Linq.Expressions.Expression)">
            <summary>
            Visits a statement inside a block.
            </summary>
            <param name="node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
            <summary>
            Visits the children of the <see cref="T:System.Linq.Expressions.ConditionalExpression" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>
            Visits the <see cref="T:System.Linq.Expressions.ConstantExpression" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)">
            <summary>
            Visits the <see cref="T:System.Linq.Expressions.DebugInfoExpression" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.VisitDynamic(System.Linq.Expressions.DynamicExpression)">
            <summary>
            Visits the children of the <see cref="T:System.Linq.Expressions.DynamicExpression" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.VisitDefault(System.Linq.Expressions.DefaultExpression)">
            <summary>
            Visits the <see cref="T:System.Linq.Expressions.DefaultExpression" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.VisitExtension(System.Linq.Expressions.Expression)">
            <summary>
            Visits the children of the extension expression.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.VisitGoto(System.Linq.Expressions.GotoExpression)">
            <summary>
            Visits the children of the <see cref="T:System.Linq.Expressions.GotoExpression" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.VisitInvocation(System.Linq.Expressions.InvocationExpression)">
            <summary>
            Visits the children of the <see cref="T:System.Linq.Expressions.InvocationExpression" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.VisitLabel(System.Linq.Expressions.LabelExpression)">
            <summary>
            Visits the children of the <see cref="T:System.Linq.Expressions.LabelExpression" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.VisitLambda``1(System.Linq.Expressions.Expression{``0})">
            <summary>
            Visits the children of the <see cref="T:System.Linq.Expressions.Expression`1" />.
            </summary>
            <typeparam name="T">The type of the delegate.</typeparam>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.VisitLoop(System.Linq.Expressions.LoopExpression)">
            <summary>
            Visits the children of the <see cref="T:System.Linq.Expressions.LoopExpression" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.VisitMember(System.Linq.Expressions.MemberExpression)">
            <summary>
            Visits the children of the <see cref="T:System.Linq.Expressions.MemberExpression" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.VisitIndex(System.Linq.Expressions.IndexExpression)">
            <summary>
            Visits the children of the <see cref="T:System.Linq.Expressions.IndexExpression" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
            Visits the children of the <see cref="T:System.Linq.Expressions.MethodCallExpression" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.VisitMethod(System.String,System.Collections.Generic.IReadOnlyCollection{System.Type},System.Collections.Generic.IReadOnlyList{System.Linq.Expressions.Expression},System.String,System.String,System.Collections.Generic.IReadOnlyList{System.Reflection.ParameterInfo})">
            <summary>
            Visits the method.
            </summary>
            <param name="name">The name.</param>
            <param name="typeArgs">The type arguments.</param>
            <param name="args">The arguments.</param>
            <param name="openBracket">The open bracket.</param>
            <param name="closeBracket">The close bracket.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.VisitNewArray(System.Linq.Expressions.NewArrayExpression)">
            <summary>
            Visits the children of the <see cref="T:System.Linq.Expressions.NewArrayExpression" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.VisitNew(System.Linq.Expressions.NewExpression)">
            <summary>
            Visits the children of the <see cref="T:System.Linq.Expressions.NewExpression" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>
            Visits the <see cref="T:System.Linq.Expressions.ParameterExpression" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)">
            <summary>
            Visits the children of the <see cref="T:System.Linq.Expressions.RuntimeVariablesExpression" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.VisitSwitchCase(System.Linq.Expressions.SwitchCase)">
            <summary>
            Visits the children of the <see cref="T:System.Linq.Expressions.SwitchCase" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.VisitSwitch(System.Linq.Expressions.SwitchExpression)">
            <summary>
            Visits the children of the <see cref="T:System.Linq.Expressions.SwitchExpression" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.VisitTry(System.Linq.Expressions.TryExpression)">
            <summary>
            Visits the children of the <see cref="T:System.Linq.Expressions.TryExpression" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.VisitCatchBlock(System.Linq.Expressions.CatchBlock)">
            <summary>
            Visits the children of the <see cref="T:System.Linq.Expressions.CatchBlock" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)">
            <summary>
            Visits the children of the <see cref="T:System.Linq.Expressions.TypeBinaryExpression" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>
            Visits the children of the <see cref="T:System.Linq.Expressions.UnaryExpression" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)">
            <summary>
            Visits the children of the <see cref="T:System.Linq.Expressions.MemberInitExpression" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.VisitListInit(System.Linq.Expressions.ListInitExpression)">
            <summary>
            Visits the children of the <see cref="T:System.Linq.Expressions.ListInitExpression" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.VisitElementInit(System.Linq.Expressions.ElementInit)">
            <summary>
            Visits the children of the <see cref="T:System.Linq.Expressions.ElementInit" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)">
            <summary>
            Visits the children of the <see cref="T:System.Linq.Expressions.MemberAssignment" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)">
            <summary>
            Visits the children of the <see cref="T:System.Linq.Expressions.MemberMemberBinding" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)">
            <summary>
            Visits the children of the <see cref="T:System.Linq.Expressions.MemberListBinding" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.ConstantString(System.Object)">
            <summary>
            Gets the constant string for a value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.ConstantString(System.Linq.Expressions.LambdaExpression,System.Type)">
            <summary>
            Gets the constant string for a <see cref="T:System.Linq.Expressions.LambdaExpression" />.
            </summary>
            <param name="node">The node.</param>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.ConstantString(System.Delegate,System.Type)">
            <summary>
            Gets the constant string for a <see cref="T:System.Delegate" />.
            </summary>
            <param name="delegate">The delegate.</param>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.NeedsParentheses(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Determines whether the <paramref name="child"/> needs parantheses.
            </summary>
            <param name="parent">The parent.</param>
            <param name="child">The child.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.CSharpExpressionWriter.GetOperatorPrecedence(System.Linq.Expressions.Expression)">
            <summary>
            Gets the operator precedence for the node given.
            </summary>
            <param name="node">The node.</param>
            <returns></returns>
        </member>
        <member name="T:WebApplications.Utilities.CyclicQueue`1">
            <summary>
            Represents a first-in, first-out collection of objects. As the size exceeds <see cref="P:WebApplications.Utilities.CyclicQueue`1.Capacity"/> the queue automatically throws away head items.
            </summary>
            <typeparam name="T">Specifies the type of elements in the queue.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.CyclicQueue`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.CyclicQueue`1"/> class.
            </summary>
            <param name="size">The size.</param>
        </member>
        <member name="P:WebApplications.Utilities.CyclicQueue`1.Capacity">
            <summary>
            Gets the maximum number of elements in the collection.
            </summary>
            <returns>The maximum number of elements in the collection. </returns>
        </member>
        <member name="P:WebApplications.Utilities.CyclicQueue`1.Count">
            <summary>
            Gets the number of elements in the collection.
            </summary>
            <returns>The number of elements in the collection. </returns>
        </member>
        <member name="M:WebApplications.Utilities.CyclicQueue`1.Clear">
            <summary>
            Removes all objects from the <see cref="T:WebApplications.Utilities.CyclicQueue`1" />.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.CyclicQueue`1.Enqueue(`0)">
            <summary>
            Adds an object to the end of the <see cref="T:WebApplications.Utilities.CyclicQueue`1" />.
            </summary>
            <param name="item">The object to add to the <see cref="T:WebApplications.Utilities.CyclicQueue`1" />.</param>
        </member>
        <member name="M:WebApplications.Utilities.CyclicQueue`1.Dequeue">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.CyclicQueue`1" />.
            </summary>
            <returns>
            The object that is removed from the beginning of the <see cref="T:WebApplications.Utilities.CyclicQueue`1" />.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CyclicQueue`1.Peek">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.CyclicQueue`1" /> without removing it.
            </summary>
            <returns>
            The object at the beginning of the <see cref="T:WebApplications.Utilities.CyclicQueue`1" />.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CyclicQueue`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.CyclicQueue`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:WebApplications.Utilities.DependencyGraph`1">
            <summary>
            Represents graph of dependencies between objects.
            </summary>
            <typeparam name="T">The type of the object in the graph.</typeparam>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="F:WebApplications.Utilities.DependencyGraph`1._dependencies">
            <summary>
            Contains objects and the objects that depend on them.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.DependencyGraph`1._dependsOn">
            <summary>
            Contains objects and the objects they depend on.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.DependencyGraph`1._all">
            <summary>
            Contains all the objects in the graph.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.DependencyGraph`1._comparer">
            <summary>
            The comparer to use when comparing objects in the graph.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.DependencyGraph`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.DependencyGraph`1"/> class, using the default <see cref="T:System.Collections.Generic.IEqualityComparer`1"/>.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.DependencyGraph`1.All">
            <summary>
            Gets all the objects in the graph, unordered.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.DependencyGraph`1.AllTopDown">
            <summary>
            Gets all the objects in the graph, top down.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.DependencyGraph`1.AllBottomUp">
            <summary>
            Gets all the objects in the graph, bottom up.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.DependencyGraph`1.Count">
            <summary>
            Gets the number of objects in the graph.
            </summary>
            <value>
            The number of objects in the graph.
            </value>
        </member>
        <member name="M:WebApplications.Utilities.DependencyGraph`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.DependencyGraph`1"/> class.
            </summary>
            <param name="comparer">The comparer to use when comparing objects in the graph.</param>
        </member>
        <member name="P:WebApplications.Utilities.DependencyGraph`1.TopLeaves">
            <summary>
            Gets the leaf vertices that do not depend on anything.
            </summary>
            <value>
            The leaf vertices that do not depend on anything.
            </value>
        </member>
        <member name="P:WebApplications.Utilities.DependencyGraph`1.BottomLeaves">
            <summary>
            Gets the leaf vertices that do not have any dependencies.
            </summary>
            <value>
            The leaf vertices that do not have any dependencies.
            </value>
        </member>
        <member name="M:WebApplications.Utilities.DependencyGraph`1.Add(`0)">
            <summary>
            Adds an object with no dependencies to the dependency graph.
            </summary>
            <param name="obj">The object to add.</param>
            <returns><see langword="true"/> if the object was added; <see langword="false"/> if the graph already contained the object.</returns>
        </member>
        <member name="M:WebApplications.Utilities.DependencyGraph`1.Add(`0,`0)">
            <summary>
            Adds a dependency from <paramref name="a" /> to <paramref name="b" />.
            </summary>
            <param name="a">The object that has a dependency.</param>
            <param name="b">The object that <paramref name="a" /> depends on.</param>
            <exception cref="T:System.InvalidOperationException">Cannot add the dependency as this would cause a cycle</exception>
        </member>
        <member name="M:WebApplications.Utilities.DependencyGraph`1.Contains(`0)">
            <summary>
            Determines whether the graph contains the specified object.
            </summary>
            <param name="obj">The object.</param>
            <returns><see langword="true"/> if the graph contains the specified object; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.DependencyGraph`1.GetDependencies(`0)">
            <summary>
            Gets the immediate dependencies of the object given.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException">value;The value given is not in the graph</exception>
        </member>
        <member name="M:WebApplications.Utilities.DependencyGraph`1.GetAllDependencies(`0)">
            <summary>
            Gets all the dependencies of the object given, 'recursively'.
            </summary>
            <param name="obj">The value.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException">value;The value given is not in the graph</exception>
        </member>
        <member name="M:WebApplications.Utilities.DependencyGraph`1.TraverseTopDown(System.Action{`0,System.Collections.Generic.IEnumerable{`0}})">
            <summary>
            Traverses the graph from the top down, calling an <paramref name="action"/> on each object in the graph.
            </summary>
            <param name="action">The action that is called for each object. The action is passed the current object and all the objects that it depends on.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.DependencyGraph`1.TraverseBottomUp(System.Action{`0,System.Collections.Generic.IEnumerable{`0}})">
            <summary>
            Traverses the graph from the bottom up, calling an <paramref name="action"/> on each object in the graph.
            </summary>
            <param name="action">The action that is called for each object. The action is passed the current object and all the objects that depend on it.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.DependencyGraph`1.TraverseInternal(System.Action{`0,System.Collections.Generic.IEnumerable{`0}},System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`0}},System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`0}})">
            <summary>
            Traverses the graph from <paramref name="top"/> to <paramref name="bottom"/>.
            </summary>
            <param name="action">The action.</param>
            <param name="top">The top leaves.</param>
            <param name="bottom">The bottom leaves.</param>
            <param name="up">The next values up the graph (towards <paramref name="top"/>) from each value.</param>
            <param name="down">The next values down the graph (towards <paramref name="bottom"/>) from each value.</param>
            <returns><paramref name="bottom"/></returns>
        </member>
        <member name="M:WebApplications.Utilities.DependencyGraph`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.DependencyGraph`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:WebApplications.Utilities.Dictionary">
            <summary>
            Dictionary extension and helper methods.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Dictionary._nameObjectEntryType">
            <summary>
            The name object entry type (this is an internal framework type).
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Dictionary._getEntriesFunc">
            <summary>
            The function to efficiently get the entries array from a <see cref="T:System.Collections.Specialized.NameObjectCollectionBase"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Dictionary._getNameObjectEntryKeyFunc">
            <summary>
            Gets the key from a NameObjectEntry. 
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Dictionary._getNameObjectEntryValueFunc">
            <summary>
            Gets the value from a NameObjectEntry. 
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Dictionary.Keys(System.Collections.Specialized.NameObjectCollectionBase)">
            <summary>
            Gets a collection of keys from any <see cref="T:System.Collections.Specialized.NameObjectCollectionBase"/> descendant.
            </summary>
            <param name="nameObjectCollection">The name object collection.</param>
            <returns>A read only collection of keys.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="nameObjectCollection"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Dictionary.Values(System.Collections.Specialized.NameObjectCollectionBase)">
            <summary>
            Gets a collection of values from any <see cref="T:System.Collections.Specialized.NameObjectCollectionBase"/> descendant.
            </summary>
            <param name="nameObjectCollection">The name object collection.</param>
            <returns>A read only collection of keys.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="nameObjectCollection"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Dictionary.ToDictionary(System.Collections.Specialized.NameObjectCollectionBase)">
            <summary>
            Converts any <see cref="T:System.Collections.Specialized.NameObjectCollectionBase"/> descendant to a dictionary.
            </summary>
            <param name="nameObjectCollection">The name object collection.</param>
            <returns>A read only dictionary</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="nameObjectCollection"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Dictionary.Empty``2">
            <summary>
            Returns an empty <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/>.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <returns></returns>
        </member>
        <member name="T:WebApplications.Utilities.Dictionary.EmptyDictionary`2">
            <summary>
            An empty <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2"/>
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="F:WebApplications.Utilities.Dictionary.EmptyDictionary`2.Instance">
            <summary>
            The empty dictionary.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Dictionary.EmptyDictionary`2.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Dictionary.EmptyDictionary`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:WebApplications.Utilities.Dictionary.EmptyDictionary`2.Count">
            <summary>
            Gets the number of elements in the collection.
            </summary>
            <returns>The number of elements in the collection. </returns>
        </member>
        <member name="M:WebApplications.Utilities.Dictionary.EmptyDictionary`2.ContainsKey(`0)">
            <summary>
            Determines whether the read-only dictionary contains an element that has the specified key.
            </summary>
            <param name="key">The key to locate.</param>
            <returns>
            true if the read-only dictionary contains an element that has the specified key; otherwise, false.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Dictionary.EmptyDictionary`2.TryGetValue(`0,`1@)">
            <summary>
            Gets the value that is associated with the specified key.
            </summary>
            <param name="key">The key to locate.</param>
            <param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <paramref name="value" /> parameter. This parameter is passed uninitialized.</param>
            <returns>
            true if the object that implements the <see cref="T:System.Collections.Generic.IReadOnlyDictionary`2" /> interface contains an element that has the specified key; otherwise, false.
            </returns>
        </member>
        <member name="P:WebApplications.Utilities.Dictionary.EmptyDictionary`2.Item(`0)">
            <summary>
            Gets the element that has the specified key in the read-only dictionary.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">The property is retrieved and key is not found.</exception>
        </member>
        <member name="P:WebApplications.Utilities.Dictionary.EmptyDictionary`2.Keys">
            <summary>
            Gets an enumerable collection that contains the keys in the read-only dictionary.
            </summary>
            <returns>An enumerable collection that contains the keys in the read-only dictionary.</returns>
        </member>
        <member name="P:WebApplications.Utilities.Dictionary.EmptyDictionary`2.Values">
            <summary>
            Gets an enumerable collection that contains the values in the read-only dictionary.
            </summary>
            <returns>An enumerable collection that contains the values in the read-only dictionary.</returns>
        </member>
        <member name="T:WebApplications.Utilities.EqualityNetwork`1">
            <summary>
            Allows the normalization of equalities.
            </summary>
            <typeparam name="T">The value type</typeparam>
        </member>
        <member name="F:WebApplications.Utilities.EqualityNetwork`1._equalityComparer">
            <summary>
            The equality comparer
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.EqualityNetwork`1._comparer">
            <summary>
            The comparator
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.EqualityNetwork`1.#ctor(System.Int32,System.Collections.Generic.EqualityComparer{`0},System.Collections.Generic.Comparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.EqualityNetwork`1"/> class.
            </summary>
            <param name="count">The count.</param>
            <param name="equalityComparer">The equality comparer.</param>
            <param name="comparer">The comparer.</param>
        </member>
        <member name="M:WebApplications.Utilities.EqualityNetwork`1.Add(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds a set of values that have to be equal to each other.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="M:WebApplications.Utilities.EqualityNetwork`1.Add(`0[])">
            <summary>
            Adds a set of values that have to be equal to each other.
            </summary>
            <param name="values">The values.</param>
        </member>
        <member name="M:WebApplications.Utilities.EqualityNetwork`1.GetEnumerator">
            <summary>
            Returns an enumeration of equalities.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:WebApplications.Utilities.EqualityNetwork`1.TryGetEquivalent(`0,`0@)">
            <summary>
            Given a value tells you the value 
            </summary>
            <param name="value">The value.</param>
            <param name="target">The target.</param>
            <returns><c>true</c> if an equality was found, <c>false</c> otherwise</returns>
        </member>
        <member name="M:WebApplications.Utilities.EqualityNetwork`1.GetEquivalent(`0)">
            <summary>
            Gets the equivalent value for the current value.
            If value has not been set equal to anything, this method returns value.
            </summary>
            <param name="value">The value.</param>
            <returns>The equivalent value.</returns>
        </member>
        <member name="M:WebApplications.Utilities.EqualityNetwork`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:WebApplications.Utilities.EqualityNetwork`1.AreEqual(`0,`0)">
            <summary>
            Tests whether two objects are set to be equal.
            </summary>
            <param name="a">One object</param>
            <param name="b">The other object</param>
            <returns>true if they are equal, false otherwise.</returns>
        </member>
        <member name="T:WebApplications.Utilities.ExpressionExtensions">
            <summary>
            <see cref="T:System.Linq.Expressions.Expression"/> extension methods.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.GetFuncExpression``1(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Gets the lambda expression as a strongly typed function.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="expression">The lambda expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Func`1"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.GetActionExpression(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Gets the lambda expression as a strongly typed action.
            </summary>
            <param name="expression">The lambda expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Action"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.Lambda``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Used for creating a lambda when it needs to be assigned directly to a <see cref="T:System.Linq.Expressions.LambdaExpression" />.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="expression">The expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Func`1"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.Lambda(System.Linq.Expressions.Expression{System.Action})">
            <summary>
            Used for creating a lambda when it needs to be assigned directly to a <see cref="T:System.Linq.Expressions.LambdaExpression" />.
            </summary>
            <param name="expression">The expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Action"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.GetFuncExpression``2(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Gets the lambda expression as a strongly typed function.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="expression">The lambda expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Func`2"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.GetActionExpression``1(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Gets the lambda expression as a strongly typed action.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <param name="expression">The lambda expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Action`1"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.Lambda``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Used for creating a lambda when it needs to be assigned directly to a <see cref="T:System.Linq.Expressions.LambdaExpression" />.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="expression">The expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Func`2"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.Lambda``1(System.Linq.Expressions.Expression{System.Action{``0}})">
            <summary>
            Used for creating a lambda when it needs to be assigned directly to a <see cref="T:System.Linq.Expressions.LambdaExpression" />.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <param name="expression">The expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Action`1"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.GetFuncExpression``3(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Gets the lambda expression as a strongly typed function.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="expression">The lambda expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Func`3"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.GetActionExpression``2(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Gets the lambda expression as a strongly typed action.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <param name="expression">The lambda expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Action`2"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.Lambda``3(System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
            <summary>
            Used for creating a lambda when it needs to be assigned directly to a <see cref="T:System.Linq.Expressions.LambdaExpression" />.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="expression">The expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Func`3"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.Lambda``2(System.Linq.Expressions.Expression{System.Action{``0,``1}})">
            <summary>
            Used for creating a lambda when it needs to be assigned directly to a <see cref="T:System.Linq.Expressions.LambdaExpression" />.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <param name="expression">The expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Action`2"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.GetFuncExpression``4(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Gets the lambda expression as a strongly typed function.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="expression">The lambda expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Func`4"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.GetActionExpression``3(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Gets the lambda expression as a strongly typed action.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <param name="expression">The lambda expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Action`3"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.Lambda``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}})">
            <summary>
            Used for creating a lambda when it needs to be assigned directly to a <see cref="T:System.Linq.Expressions.LambdaExpression" />.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="expression">The expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Func`4"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.Lambda``3(System.Linq.Expressions.Expression{System.Action{``0,``1,``2}})">
            <summary>
            Used for creating a lambda when it needs to be assigned directly to a <see cref="T:System.Linq.Expressions.LambdaExpression" />.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <param name="expression">The expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Action`3"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.GetFuncExpression``5(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Gets the lambda expression as a strongly typed function.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="expression">The lambda expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Func`5"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.GetActionExpression``4(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Gets the lambda expression as a strongly typed action.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <param name="expression">The lambda expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Action`4"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.Lambda``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}})">
            <summary>
            Used for creating a lambda when it needs to be assigned directly to a <see cref="T:System.Linq.Expressions.LambdaExpression" />.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="expression">The expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Func`5"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.Lambda``4(System.Linq.Expressions.Expression{System.Action{``0,``1,``2,``3}})">
            <summary>
            Used for creating a lambda when it needs to be assigned directly to a <see cref="T:System.Linq.Expressions.LambdaExpression" />.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <param name="expression">The expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Action`4"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.GetFuncExpression``6(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Gets the lambda expression as a strongly typed function.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="expression">The lambda expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Func`6"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.GetActionExpression``5(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Gets the lambda expression as a strongly typed action.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <param name="expression">The lambda expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Action`5"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.Lambda``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}})">
            <summary>
            Used for creating a lambda when it needs to be assigned directly to a <see cref="T:System.Linq.Expressions.LambdaExpression" />.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="expression">The expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Func`6"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.Lambda``5(System.Linq.Expressions.Expression{System.Action{``0,``1,``2,``3,``4}})">
            <summary>
            Used for creating a lambda when it needs to be assigned directly to a <see cref="T:System.Linq.Expressions.LambdaExpression" />.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <param name="expression">The expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Action`5"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.GetFuncExpression``7(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Gets the lambda expression as a strongly typed function.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="expression">The lambda expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Func`7"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.GetActionExpression``6(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Gets the lambda expression as a strongly typed action.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <param name="expression">The lambda expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Action`6"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.Lambda``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6}})">
            <summary>
            Used for creating a lambda when it needs to be assigned directly to a <see cref="T:System.Linq.Expressions.LambdaExpression" />.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="expression">The expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Func`7"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.Lambda``6(System.Linq.Expressions.Expression{System.Action{``0,``1,``2,``3,``4,``5}})">
            <summary>
            Used for creating a lambda when it needs to be assigned directly to a <see cref="T:System.Linq.Expressions.LambdaExpression" />.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <param name="expression">The expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Action`6"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.GetFuncExpression``8(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Gets the lambda expression as a strongly typed function.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="expression">The lambda expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Func`8"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.GetActionExpression``7(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Gets the lambda expression as a strongly typed action.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <param name="expression">The lambda expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Action`7"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.Lambda``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7}})">
            <summary>
            Used for creating a lambda when it needs to be assigned directly to a <see cref="T:System.Linq.Expressions.LambdaExpression" />.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="expression">The expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Func`8"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.Lambda``7(System.Linq.Expressions.Expression{System.Action{``0,``1,``2,``3,``4,``5,``6}})">
            <summary>
            Used for creating a lambda when it needs to be assigned directly to a <see cref="T:System.Linq.Expressions.LambdaExpression" />.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <param name="expression">The expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Action`7"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.GetFuncExpression``9(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Gets the lambda expression as a strongly typed function.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="expression">The lambda expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Func`9"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.GetActionExpression``8(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Gets the lambda expression as a strongly typed action.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <param name="expression">The lambda expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Action`8"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.Lambda``9(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}})">
            <summary>
            Used for creating a lambda when it needs to be assigned directly to a <see cref="T:System.Linq.Expressions.LambdaExpression" />.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="expression">The expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Func`9"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.Lambda``8(System.Linq.Expressions.Expression{System.Action{``0,``1,``2,``3,``4,``5,``6,``7}})">
            <summary>
            Used for creating a lambda when it needs to be assigned directly to a <see cref="T:System.Linq.Expressions.LambdaExpression" />.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <param name="expression">The expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Action`8"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.GetFuncExpression``10(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Gets the lambda expression as a strongly typed function.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="expression">The lambda expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Func`10"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.GetActionExpression``9(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Gets the lambda expression as a strongly typed action.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <param name="expression">The lambda expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Action`9"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.Lambda``10(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}})">
            <summary>
            Used for creating a lambda when it needs to be assigned directly to a <see cref="T:System.Linq.Expressions.LambdaExpression" />.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="expression">The expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Func`10"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.Lambda``9(System.Linq.Expressions.Expression{System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8}})">
            <summary>
            Used for creating a lambda when it needs to be assigned directly to a <see cref="T:System.Linq.Expressions.LambdaExpression" />.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <param name="expression">The expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Action`9"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.GetFuncExpression``11(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Gets the lambda expression as a strongly typed function.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="expression">The lambda expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Func`11"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.GetActionExpression``10(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Gets the lambda expression as a strongly typed action.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <param name="expression">The lambda expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Action`10"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.Lambda``11(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}})">
            <summary>
            Used for creating a lambda when it needs to be assigned directly to a <see cref="T:System.Linq.Expressions.LambdaExpression" />.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="expression">The expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Func`11"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.Lambda``10(System.Linq.Expressions.Expression{System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}})">
            <summary>
            Used for creating a lambda when it needs to be assigned directly to a <see cref="T:System.Linq.Expressions.LambdaExpression" />.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <param name="expression">The expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Action`10"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.GetFuncExpression``12(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Gets the lambda expression as a strongly typed function.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name="T11">The type of parameter 11.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="expression">The lambda expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Func`12"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.GetActionExpression``11(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Gets the lambda expression as a strongly typed action.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name="T11">The type of parameter 11.</typeparam>
            <param name="expression">The lambda expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Action`11"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.Lambda``12(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}})">
            <summary>
            Used for creating a lambda when it needs to be assigned directly to a <see cref="T:System.Linq.Expressions.LambdaExpression" />.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name="T11">The type of parameter 11.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="expression">The expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Func`12"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.Lambda``11(System.Linq.Expressions.Expression{System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}})">
            <summary>
            Used for creating a lambda when it needs to be assigned directly to a <see cref="T:System.Linq.Expressions.LambdaExpression" />.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name="T11">The type of parameter 11.</typeparam>
            <param name="expression">The expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Action`11"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.GetFuncExpression``13(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Gets the lambda expression as a strongly typed function.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name="T11">The type of parameter 11.</typeparam>
            <typeparam name="T12">The type of parameter 12.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="expression">The lambda expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Func`13"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.GetActionExpression``12(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Gets the lambda expression as a strongly typed action.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name="T11">The type of parameter 11.</typeparam>
            <typeparam name="T12">The type of parameter 12.</typeparam>
            <param name="expression">The lambda expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Action`12"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.Lambda``13(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}})">
            <summary>
            Used for creating a lambda when it needs to be assigned directly to a <see cref="T:System.Linq.Expressions.LambdaExpression" />.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name="T11">The type of parameter 11.</typeparam>
            <typeparam name="T12">The type of parameter 12.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="expression">The expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Func`13"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.Lambda``12(System.Linq.Expressions.Expression{System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}})">
            <summary>
            Used for creating a lambda when it needs to be assigned directly to a <see cref="T:System.Linq.Expressions.LambdaExpression" />.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name="T11">The type of parameter 11.</typeparam>
            <typeparam name="T12">The type of parameter 12.</typeparam>
            <param name="expression">The expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Action`12"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.GetFuncExpression``14(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Gets the lambda expression as a strongly typed function.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name="T11">The type of parameter 11.</typeparam>
            <typeparam name="T12">The type of parameter 12.</typeparam>
            <typeparam name="T13">The type of parameter 13.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="expression">The lambda expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Func`14"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.GetActionExpression``13(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Gets the lambda expression as a strongly typed action.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name="T11">The type of parameter 11.</typeparam>
            <typeparam name="T12">The type of parameter 12.</typeparam>
            <typeparam name="T13">The type of parameter 13.</typeparam>
            <param name="expression">The lambda expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Action`13"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.Lambda``14(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}})">
            <summary>
            Used for creating a lambda when it needs to be assigned directly to a <see cref="T:System.Linq.Expressions.LambdaExpression" />.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name="T11">The type of parameter 11.</typeparam>
            <typeparam name="T12">The type of parameter 12.</typeparam>
            <typeparam name="T13">The type of parameter 13.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="expression">The expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Func`14"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.Lambda``13(System.Linq.Expressions.Expression{System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}})">
            <summary>
            Used for creating a lambda when it needs to be assigned directly to a <see cref="T:System.Linq.Expressions.LambdaExpression" />.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name="T11">The type of parameter 11.</typeparam>
            <typeparam name="T12">The type of parameter 12.</typeparam>
            <typeparam name="T13">The type of parameter 13.</typeparam>
            <param name="expression">The expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Action`13"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.GetFuncExpression``15(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Gets the lambda expression as a strongly typed function.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name="T11">The type of parameter 11.</typeparam>
            <typeparam name="T12">The type of parameter 12.</typeparam>
            <typeparam name="T13">The type of parameter 13.</typeparam>
            <typeparam name="T14">The type of parameter 14.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="expression">The lambda expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Func`15"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.GetActionExpression``14(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Gets the lambda expression as a strongly typed action.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name="T11">The type of parameter 11.</typeparam>
            <typeparam name="T12">The type of parameter 12.</typeparam>
            <typeparam name="T13">The type of parameter 13.</typeparam>
            <typeparam name="T14">The type of parameter 14.</typeparam>
            <param name="expression">The lambda expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Action`14"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.Lambda``15(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}})">
            <summary>
            Used for creating a lambda when it needs to be assigned directly to a <see cref="T:System.Linq.Expressions.LambdaExpression" />.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name="T11">The type of parameter 11.</typeparam>
            <typeparam name="T12">The type of parameter 12.</typeparam>
            <typeparam name="T13">The type of parameter 13.</typeparam>
            <typeparam name="T14">The type of parameter 14.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="expression">The expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Func`15"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.Lambda``14(System.Linq.Expressions.Expression{System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}})">
            <summary>
            Used for creating a lambda when it needs to be assigned directly to a <see cref="T:System.Linq.Expressions.LambdaExpression" />.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name="T11">The type of parameter 11.</typeparam>
            <typeparam name="T12">The type of parameter 12.</typeparam>
            <typeparam name="T13">The type of parameter 13.</typeparam>
            <typeparam name="T14">The type of parameter 14.</typeparam>
            <param name="expression">The expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Action`14"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.GetFuncExpression``16(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Gets the lambda expression as a strongly typed function.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name="T11">The type of parameter 11.</typeparam>
            <typeparam name="T12">The type of parameter 12.</typeparam>
            <typeparam name="T13">The type of parameter 13.</typeparam>
            <typeparam name="T14">The type of parameter 14.</typeparam>
            <typeparam name="T15">The type of parameter 15.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="expression">The lambda expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Func`16"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.GetActionExpression``15(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Gets the lambda expression as a strongly typed action.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name="T11">The type of parameter 11.</typeparam>
            <typeparam name="T12">The type of parameter 12.</typeparam>
            <typeparam name="T13">The type of parameter 13.</typeparam>
            <typeparam name="T14">The type of parameter 14.</typeparam>
            <typeparam name="T15">The type of parameter 15.</typeparam>
            <param name="expression">The lambda expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Action`15"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.Lambda``16(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}})">
            <summary>
            Used for creating a lambda when it needs to be assigned directly to a <see cref="T:System.Linq.Expressions.LambdaExpression" />.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name="T11">The type of parameter 11.</typeparam>
            <typeparam name="T12">The type of parameter 12.</typeparam>
            <typeparam name="T13">The type of parameter 13.</typeparam>
            <typeparam name="T14">The type of parameter 14.</typeparam>
            <typeparam name="T15">The type of parameter 15.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="expression">The expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Func`16"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.Lambda``15(System.Linq.Expressions.Expression{System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}})">
            <summary>
            Used for creating a lambda when it needs to be assigned directly to a <see cref="T:System.Linq.Expressions.LambdaExpression" />.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name="T11">The type of parameter 11.</typeparam>
            <typeparam name="T12">The type of parameter 12.</typeparam>
            <typeparam name="T13">The type of parameter 13.</typeparam>
            <typeparam name="T14">The type of parameter 14.</typeparam>
            <typeparam name="T15">The type of parameter 15.</typeparam>
            <param name="expression">The expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Action`15"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.GetFuncExpression``17(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Gets the lambda expression as a strongly typed function.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name="T11">The type of parameter 11.</typeparam>
            <typeparam name="T12">The type of parameter 12.</typeparam>
            <typeparam name="T13">The type of parameter 13.</typeparam>
            <typeparam name="T14">The type of parameter 14.</typeparam>
            <typeparam name="T15">The type of parameter 15.</typeparam>
            <typeparam name="T16">The type of parameter 16.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="expression">The lambda expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Func`17"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.GetActionExpression``16(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Gets the lambda expression as a strongly typed action.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name="T11">The type of parameter 11.</typeparam>
            <typeparam name="T12">The type of parameter 12.</typeparam>
            <typeparam name="T13">The type of parameter 13.</typeparam>
            <typeparam name="T14">The type of parameter 14.</typeparam>
            <typeparam name="T15">The type of parameter 15.</typeparam>
            <typeparam name="T16">The type of parameter 16.</typeparam>
            <param name="expression">The lambda expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Action`16"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.Lambda``17(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16}})">
            <summary>
            Used for creating a lambda when it needs to be assigned directly to a <see cref="T:System.Linq.Expressions.LambdaExpression" />.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name="T11">The type of parameter 11.</typeparam>
            <typeparam name="T12">The type of parameter 12.</typeparam>
            <typeparam name="T13">The type of parameter 13.</typeparam>
            <typeparam name="T14">The type of parameter 14.</typeparam>
            <typeparam name="T15">The type of parameter 15.</typeparam>
            <typeparam name="T16">The type of parameter 16.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="expression">The expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Func`17"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.Lambda``16(System.Linq.Expressions.Expression{System.Action{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}})">
            <summary>
            Used for creating a lambda when it needs to be assigned directly to a <see cref="T:System.Linq.Expressions.LambdaExpression" />.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name="T11">The type of parameter 11.</typeparam>
            <typeparam name="T12">The type of parameter 12.</typeparam>
            <typeparam name="T13">The type of parameter 13.</typeparam>
            <typeparam name="T14">The type of parameter 14.</typeparam>
            <typeparam name="T15">The type of parameter 15.</typeparam>
            <typeparam name="T16">The type of parameter 16.</typeparam>
            <param name="expression">The expression.</param>
            <returns>
            An <see cref="T:System.Linq.Expressions.Expression`1" /> with the delegate type <see cref="T:System.Action`16"/>.
            </returns>
        </member>
        <member name="F:WebApplications.Utilities.ExpressionExtensions._enumeratorMoveNextMethod">
            <summary>
            The <see cref="M:System.Collections.IEnumerator.MoveNext" /> method.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.ExpressionExtensions._disposeMethod">
            <summary>
            The <see cref="M:System.IDisposable.Dispose"/> method.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.ExpressionExtensions._expressionDebugView">
            <summary>
            Gets the debug view of an expression.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.ForEach(System.Linq.Expressions.Expression,System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression},System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)">
            <summary>
            Takes an input source enumerable expression (must be of type 
            <see cref="T:System.Collections.Generic.IEnumerable`1" />) and creates a foreach loop,
            where the body is generated using the 
            <paramref name="getBody"/> function.
            </summary>
            <param name="sourceEnumerable">The source enumerable.</param>
            <param name="getBody">The get body function, where the input parameter is the current item in the loop.</param>
            <param name="break">The break target used by the loop body.</param>
            <param name="continue">The continue target used by the loop body.</param>
            <returns>
            BlockExpression.
            </returns>
            <exception cref="T:System.ArgumentException">The source enumerable is not of an enumerable type;sourceEnumerable</exception>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.ForEach(System.Linq.Expressions.Expression,System.Func{System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}},System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)">
            <summary>
            Takes an input source enumerable expression (must be of type 
            <see cref="T:System.Collections.Generic.IEnumerable`1" />) and creates a foreach loop,
            where the body is generated using the 
            <paramref name="getBody" /> function.
            </summary>
            <param name="sourceEnumerable">The source enumerable.</param>
            <param name="getBody">The get body function, where the input parameter is the current item in the loop.</param>
            <param name="break">The break target used by the loop body.</param>
            <param name="continue">The continue target used by the loop body.</param>
            <returns>
            BlockExpression.
            </returns>
            <exception cref="T:System.ArgumentException">The source enumerable is not of an enumerable type;sourceEnumerable</exception>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.Blockify(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})">
            <summary>
            Takes an enumeration of expressions and locals, and returns the most compact single expression.
            </summary>
            <param name="expressions">The expressions.</param>
            <param name="locals">The locals.</param>
            <returns>A single expression</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.Blockify(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Linq.Expressions.ParameterExpression[])">
            <summary>
            Takes an enumeration of expressions (and optional a set of locals), and returns the most compact single expression.
            </summary>
            <param name="expressions">The expressions.</param>
            <param name="locals">The locals.</param>
            <returns>A single expression</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.UnBlockify(System.Linq.Expressions.Expression)">
            <summary>
            If the expression is a block that has no local variables, then it returns an enumeration of the inner
            expressions.
            </summary>
            <param name="expression">The expression.</param>
            <returns>IEnumerable{Expression}.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.UnBlockify(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}@)">
            <summary>
            If the expression is a block, then it returns an enumeration of the inner expressions and outputs any
            variables.
            </summary>
            <param name="expression">The expression.</param>
            <param name="variables">The variables.</param>
            <returns>
            IEnumerable{Expression}.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.AddVariables(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})">
            <summary>
            Adds the variables to an existing block.
            </summary>
            <param name="block">The block.</param>
            <param name="variables">The variables.</param>
            <returns>BlockExpression.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.AddVariables(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])">
            <summary>
            Adds the variables to an existing block.
            </summary>
            <param name="block">The block.</param>
            <param name="variables">The variables.</param>
            <returns>BlockExpression.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.AddExpressions(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
            <summary>
            Adds the expressions to an existing block.
            </summary>
            <param name="block">The block.</param>
            <param name="expressions">The expressions.</param>
            <returns>BlockExpression.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.AddExpressions(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])">
            <summary>
            Adds the expressions to an existing block.
            </summary>
            <param name="block">The block.</param>
            <param name="expressions">The expressions.</param>
            <returns>BlockExpression.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.GetDelegateExpression``1(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Gets the lambda expression as a strongly typed delegate.
            </summary>
            <typeparam name="TDelegate">The type of the delegate.</typeparam>
            <param name="expression">The lambda expression.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException">expression;The expression does not have the same number of parameters as the delegate.</exception>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.Inline(System.Linq.Expressions.LambdaExpression,System.Linq.Expressions.Expression[])">
            <summary>
            Takes a lambda expression and returns new expression where the parameters have been replaced by the specified
            expressions, effectively inlining the expression.
            </summary>
            <param name="expression">The expression.</param>
            <param name="parameters">The replacement parameters.</param>
            <returns>Expression.</returns>
        </member>
        <member name="T:WebApplications.Utilities.ExpressionExtensions.ParameterReplacerVisitor">
            <summary>
            Replaces the parameters of a lambda expression.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.ExpressionExtensions.ParameterReplacerVisitor._lambda">
            <summary>
            The lambda
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.ExpressionExtensions.ParameterReplacerVisitor._replacements">
            <summary>
            The replacements
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.ParameterReplacerVisitor.#ctor(System.Linq.Expressions.LambdaExpression,System.Linq.Expressions.Expression[])">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.ExpressionExtensions.ParameterReplacerVisitor" /> class.
            </summary>
            <param name="expression">The expression.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.ParameterReplacerVisitor.Visit">
            <summary>
            Visits this instance.
            </summary>
            <returns>Expression.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.ParameterReplacerVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>
            Visits the <see cref="T:System.Linq.Expressions.ParameterExpression" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.GetDebugView(System.Linq.Expressions.Expression)">
            <summary>
            Gets the debug view of the expression.
            </summary>
            <param name="expression">The expression.</param>
            <returns>The debug view for the expression.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.GetCSharpView(System.Linq.Expressions.Expression)">
            <summary>
            Gets a CSharp like view of the given expression.
            </summary>
            <param name="expression">The expression.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.GetParameterUsage(System.Linq.Expressions.Expression)">
            <summary>
            Gets the <see cref="T:System.Linq.Expressions.ParameterExpression">ParameterExpressions</see> that are used within an expression.
            </summary>
            <param name="expression">The expression.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.Contains(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Determines whether <paramref name="expression" /> contains <paramref name="subExpression">the sub-expression</paramref>.
            </summary>
            <param name="expression">The expression.</param>
            <param name="subExpression">The sub expression.</param>
            <returns><see langword="true"/> if found; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.Uses(System.Linq.Expressions.LambdaExpression,System.Linq.Expressions.Expression)">
            <summary>
            Determines whether <paramref name="expression" /> uses <paramref name="subExpression">the sub-expression</paramref>.
            This will search everywhere except inside the signature of a <see cref="T:System.Linq.Expressions.LambdaExpression"/>, which is useful for finding the
            usage of a parameter, without including the parameters of signatures.
            </summary>
            <param name="expression">The expression.</param>
            <param name="subExpression">The sub expression.</param>
            <returns><see langword="true"/> if found; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.ExpressionExtensions.FinderExpressionVisitor">
            <summary>
            An <see cref="T:System.Linq.Expressions.ExpressionVisitor"/> that looks for an expression in a tree.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.FinderExpressionVisitor.#ctor(System.Linq.Expressions.Expression,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.ExpressionExtensions.FinderExpressionVisitor" /> class.
            </summary>
            <param name="targetExpression">The search expression.</param>
            <param name="skipLambdaSignatures">if set to <see langword="true" /> skip lambda signatures.</param>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.FinderExpressionVisitor.Visit(System.Linq.Expressions.Expression)">
            <summary>
            Dispatches the expression to one of the more specialized visit methods in this class.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.FinderExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})">
            <summary>
            Visits the lambda.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.ExpressionExtensions.FinderExpressionVisitor.Contains(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean)">
            <summary>
            Determines whether [contains] [the specified expression].
            </summary>
            <param name="expression">The expression.</param>
            <param name="subExpression">The sub expression.</param>
            <param name="skipLambdaSignatures">if set to <see langword="true" /> skip lambda signatures.</param>
            <returns></returns>
        </member>
        <member name="T:WebApplications.Utilities.ExtendedInterlocked">
            <summary>
            An extension to the interlocked funcionality in .NET for ranges
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedInterlocked.Increment(System.Int32@,WebApplications.Utilities.Ranges.IntRange)">
            <summary>
            Increments a value whilst keeping it inside a range.
            </summary>
            <param name="value">The value.</param>
            <param name="range">The range.</param>
            <returns>The incremented result.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedInterlocked.Increment(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Increments a value whilst keeping it inside a range.
            </summary>
            <param name="value">The value.</param>
            <param name="start">The start of the range (inclusive).</param>
            <param name="end">The end of the range (inclusive).</param>
            <returns>The incremented result.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedInterlocked.Decrement(System.Int32@,WebApplications.Utilities.Ranges.IntRange)">
            <summary>
            Decrement a value whilst keeping it inside a range.
            </summary>
            <param name="value">The value.</param>
            <param name="range">The range.</param>
            <returns>The decremented result.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedInterlocked.Decrement(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Decrement a value whilst keeping it inside a range.
            </summary>
            <param name="value">The value.</param>
            <param name="start">The start of the range (inclusive).</param>
            <param name="end">The end of the range (inclusive).</param>
            <returns>The decremented result.</returns>
        </member>
        <member name="T:WebApplications.Utilities.HighPrecisionClock">
            <summary>
            A clock that retrieves the current system date and time with the highest possible level of precision (&lt;1us).
            </summary>
            <remarks>Uses the GetSystemTimePreciseAsFileTime function if available, falling back to using a <see cref="T:System.Diagnostics.Stopwatch"/> if not.</remarks>
        </member>
        <member name="F:WebApplications.Utilities.HighPrecisionClock.Instance">
            <summary>
            The instance of the clock.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.HighPrecisionClock.#cctor">
            <summary>
            Initializes the <see cref="T:WebApplications.Utilities.HighPrecisionClock"/> class.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.HighPrecisionClock.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:WebApplications.Utilities.HighPrecisionClock"/> class from being created.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.HighPrecisionClock.Now">
            <summary>
            Gets the current <see cref="T:NodaTime.Instant" /> on the time line according to this clock.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.HighPrecisionClock.NowTicks">
            <summary>
            Gets the current ticks on the time line according to this clock.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.IO.CloseableStream">
            <summary>
            Wraps a <see cref="T:System.IO.Stream"/> allowing an <see cref="T:System.Action"/> to be called when the <see cref="T:System.IO.Stream"/> is <see cref="M:System.IO.Stream.Close">closed</see>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.IO.CloseableStream._stream">
            <summary>
            The underlying stream.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.IO.CloseableStream._onClose">
            <summary>
            The action to call when the stream is disposed.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.IO.CloseableStream._onError">
            <summary>
            The action to call when the stream is disposed.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.IO.CloseableStream.#ctor(System.IO.Stream,System.Action,System.Func{System.Exception,System.Boolean})">
            <summary>
            Create a stream that will invoke the specified <paramref name="onClose"/> action when the <paramref name="stream"/> is closed/disposed.
            </summary>
            <param name="stream">The stream to wrap</param>
            <param name="onClose">The action to call after the specified <paramref name="stream"/> is closed.</param>
            <param name="onError">The optional function to call if the underlying stream errors on close (<paramref name="onClose" /> will still be called after
            <paramref name="onError"/>), return <see langword="true"/> to suppress the exception.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="stream"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="onClose"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:WebApplications.Utilities.IO.CloseableStream.Close">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.IO.CloseableStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.IO.CloseableStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.IO.CloseableStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.IO.CloseableStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.IO.CloseableStream.CreateObjRef(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.IO.CloseableStream.EndRead(System.IAsyncResult)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.IO.CloseableStream.EndWrite(System.IAsyncResult)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.IO.CloseableStream.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.IO.CloseableStream.Flush">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.IO.CloseableStream.FlushAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.IO.CloseableStream.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.IO.CloseableStream.InitializeLifetimeService">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.IO.CloseableStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.IO.CloseableStream.ReadByte">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.IO.CloseableStream.ReadTimeout">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.IO.CloseableStream.ToString">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.IO.CloseableStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.IO.CloseableStream.WriteByte(System.Byte)">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.IO.CloseableStream.WriteTimeout">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.IO.CloseableStream.CanTimeout">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.IO.CloseableStream.SetLength(System.Int64)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.IO.CloseableStream.Read(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.IO.CloseableStream.Write(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.IO.CloseableStream.CanRead">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.IO.CloseableStream.CanSeek">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.IO.CloseableStream.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.IO.CloseableStream.Length">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.IO.CloseableStream.Position">
            <inheritdoc />
        </member>
        <member name="T:WebApplications.Utilities.IO.PeekableStream">
            <summary>
            PeekableStream wraps a Stream and can be used to peek ahead in the underlying stream,
            without consuming the bytes. In other words, doing Peek() will allow you to look ahead in the stream,
            but it won't affect the result of subsequent Read() calls.
            
            This is sometimes necessary, e.g. for peeking at the magic number of a stream of bytes and decide which
            stream processor to hand over the stream.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.IO.PeekableStream.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.IO.PeekableStream"/> class.
            </summary>
            <param name="baseStream">The base stream.</param>
        </member>
        <member name="M:WebApplications.Utilities.IO.PeekableStream.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.IO.Stream" /> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:WebApplications.Utilities.IO.PeekableStream.PeekByte">
            <summary>
            Reads a byte from the stream without advancing the position within the stream, or returns -1 if at the end of the stream.
            </summary>
            <returns>
            The unsigned byte cast to an Int32, or -1 if at the end of the stream.
            </returns>
        </member>
        <member name="P:WebApplications.Utilities.IO.PeekableStream.CanRead">
            <summary>
            When overridden in a derived class, gets a value indicating whether the current stream supports reading.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.IO.PeekableStream.Position">
            <summary>
            When overridden in a derived class, gets or sets the position within the current stream.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.IO.PeekableStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            When overridden in a derived class, reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified byte array with the values between <paramref name="offset" /> and (<paramref name="offset" /> + <paramref name="count" /> - 1) replaced by the bytes read from the current source.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer" /> at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>
            The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.IO.PeekableStream.ReadByte">
            <summary>
            Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.
            </summary>
            <returns>
            The unsigned byte cast to an Int32, or -1 if at the end of the stream.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.IO.PeekableStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Asynchronously reads the bytes from the current stream and writes them to another stream, using a specified buffer size and cancellation token.
            </summary>
            <param name="destination">The stream to which the contents of the current stream will be copied.</param>
            <param name="bufferSize">The size, in bytes, of the buffer. This value must be greater than zero. The default size is 81920.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None" />.</param>
            <returns>
            A task that represents the asynchronous copy operation.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.IO.PeekableStream.Close">
            <summary>
            Closes the current stream and releases any resources (such as sockets and file handles) associated with the current stream. Instead of calling this method, ensure that the stream is properly disposed.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.IO.PeekableStream.FlushAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously clears all buffers for this stream, causes any buffered data to be written to the underlying device, and monitors cancellation requests.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None" />.</param>
            <returns>
            A task that represents the asynchronous flush operation.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.IO.PeekableStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Asynchronously reads a sequence of bytes from the current stream, advances the position within the stream by the number of bytes read, and monitors cancellation requests.
            </summary>
            <param name="buffer">The buffer to write the data into.</param>
            <param name="offset">The byte offset in <paramref name="buffer" /> at which to begin writing data from the stream.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None" />.</param>
            <returns>
            A task that represents the asynchronous read operation. The value of the <see cref="P:System.Threading.Tasks.Task`1.Result" /> parameter contains the total number of bytes read into the buffer. 
            The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the stream has been reached.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.IO.PeekableStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.
            </summary>
            <param name="buffer">The buffer to write data from.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer" /> from which to begin copying bytes to the stream.</param>
            <param name="count">The maximum number of bytes to write.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None" />.</param>
            <returns>
            A task that represents the asynchronous write operation.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.IO.PeekableStream.InitializeLifetimeService">
            <summary>
            Obtains a lifetime service object to control the lifetime policy for this instance.
            </summary>
            <returns>
            An object of type <see cref="T:System.Runtime.Remoting.Lifetime.ILease" /> used to control the lifetime policy for this instance. This is the current lifetime service object for this instance if one exists; otherwise, a new lifetime service object initialized to the value of the <see cref="P:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime" /> property.
            </returns>
            <PermissionSet>
              <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="RemotingConfiguration, Infrastructure" />
            </PermissionSet>
        </member>
        <member name="M:WebApplications.Utilities.IO.PeekableStream.CreateObjRef(System.Type)">
            <summary>
            Creates an object that contains all the relevant information required to generate a proxy used to communicate with a remote object.
            </summary>
            <param name="requestedType">The <see cref="T:System.Type" /> of the object that the new <see cref="T:System.Runtime.Remoting.ObjRef" /> will reference.</param>
            <returns>
            Information required to generate a proxy.
            </returns>
            <PermissionSet>
              <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="Infrastructure" />
            </PermissionSet>
        </member>
        <member name="M:WebApplications.Utilities.IO.PeekableStream.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.IO.PeekableStream.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <see langword="true" /> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.IO.PeekableStream.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.IO.PeekableStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            When overridden in a derived class, sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the <paramref name="origin" /> parameter.</param>
            <param name="origin">A value of type <see cref="T:System.IO.SeekOrigin" /> indicating the reference point used to obtain the new position.</param>
            <returns>
            The new position within the current stream.
            </returns>
        </member>
        <member name="P:WebApplications.Utilities.IO.PeekableStream.CanSeek">
            <summary>
            When overridden in a derived class, gets a value indicating whether the current stream supports seeking.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.IO.PeekableStream.CanWrite">
            <summary>
            When overridden in a derived class, gets a value indicating whether the current stream supports writing.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.IO.PeekableStream.CanTimeout">
            <summary>
            Gets a value that determines whether the current stream can time out.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.IO.PeekableStream.ReadTimeout">
            <summary>
            Gets or sets a value, in miliseconds, that determines how long the stream will attempt to read before timing out.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.IO.PeekableStream.WriteTimeout">
            <summary>
            Gets or sets a value, in miliseconds, that determines how long the stream will attempt to write before timing out.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.IO.PeekableStream.Flush">
            <summary>
            When overridden in a derived class, clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.IO.PeekableStream.Length">
            <summary>
            When overridden in a derived class, gets the length in bytes of the stream.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.IO.PeekableStream.SetLength(System.Int64)">
            <summary>
            When overridden in a derived class, sets the length of the current stream.
            </summary>
            <param name="value">The desired length of the current stream in bytes.</param>
        </member>
        <member name="M:WebApplications.Utilities.IO.PeekableStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            When overridden in a derived class, writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes. This method copies <paramref name="count" /> bytes from <paramref name="buffer" /> to the current stream.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer" /> at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
        </member>
        <member name="M:WebApplications.Utilities.IO.PeekableStream.WriteByte(System.Byte)">
            <summary>
            Writes a byte to the current position in the stream and advances the position within the stream by one byte.
            </summary>
            <param name="value">The byte to write to the stream.</param>
        </member>
        <member name="T:WebApplications.Utilities.IO.OverlappingPipeClientStream">
            <summary>
            Implements a Named Pipe Client that support asynchronous read/write and overlapping.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.IO.OverlappingPipeClientStream.ReadMode">
            <summary>
            The read mode.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.IO.OverlappingPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeTransmissionMode,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.IO.OverlappingPipeClientStream"/> class.
            </summary>
            <param name="serverName">Name of the server.</param>
            <param name="pipeName">Name of the pipe.</param>
            <param name="transmissionMode"></param>
            <param name="impersonationLevel">The impersonation level.</param>
            <param name="inheritability">The inheritability.</param>
        </member>
        <member name="M:WebApplications.Utilities.IO.OverlappingPipeClientStream.Connect(System.Threading.CancellationToken)">
            <summary>
            Waits for a connection.
            </summary>
            <param name="token">The token.</param>
            <returns>An awaitable task.</returns>
        </member>
        <member name="T:WebApplications.Utilities.IO.OverlappingPipeServerStream">
            <summary>
            Implements a Named Pipe Server that support asynchronous read/write and overlapping.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.IO.OverlappingPipeServerStream.#ctor(System.String,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.IO.OverlappingPipeServerStream" /> class.
            </summary>
            <param name="name">The name.</param>
            <param name="maximumConnections">The maximum connections.</param>
            <param name="mode">The mode.</param>
            <param name="inBufferSize">Size of the in buffer.</param>
            <param name="outBufferSize">Size of the out buffer.</param>
            <param name="security">The security.</param>
        </member>
        <member name="M:WebApplications.Utilities.IO.OverlappingPipeServerStream.Connect(System.Threading.CancellationToken)">
            <summary>
            Waits for a connection.
            </summary>
            <param name="token">The token.</param>
            <returns>An awaitable task.</returns>
        </member>
        <member name="T:WebApplications.Utilities.IO.OverlappingPipeStream">
            <summary>
            Implements a <see cref="T:System.IO.Pipes.PipeStream"/> that support asynchronous read/write and overlapping.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.IO.OverlappingPipeStream.Stream">
            <summary>
            The underlaying stream.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.IO.OverlappingPipeStream.#ctor(System.IO.Pipes.PipeStream,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.IO.OverlappingPipeStream"/> class.
            </summary>
            <param name="stream">The stream.</param>
            <param name="bufferSize">Size of the buffer.</param>
        </member>
        <member name="P:WebApplications.Utilities.IO.OverlappingPipeStream.IsConnected">
            <summary>
            Gets a value indicating whether this instance is connected.
            </summary>
            <value><see langword="true" /> if this instance is connected; otherwise, <see langword="false" />.</value>
        </member>
        <member name="M:WebApplications.Utilities.IO.OverlappingPipeStream.WriteAsync(System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Reads a message or block of bytes asynchronously, whilst interleaving reads.
            </summary>
            <param name="data">The data.</param>
            <param name="token">The token.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:WebApplications.Utilities.IO.OverlappingPipeStream.ReadAsync(System.Threading.CancellationToken)">
            <summary>
            Reads a message or block of bytes asynchronously, whilst interleaving writes.
            </summary>
            <param name="token">The token.</param>
            <returns>
            An awaitable task that contains the data that was read.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.IO.OverlappingPipeStream.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.IReadOnlyLookup`2">
            <summary>
            Defines try get method for data structures that map keys to <see cref="T:System.Collections.Generic.IEnumerable`1"/> sequences of values.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TElement">The type of the element.</typeparam>
        </member>
        <member name="P:WebApplications.Utilities.IReadOnlyLookup`2.ValuesCount">
            <summary>
            Gets the values count.
            </summary>
            <value>The values count.</value>
        </member>
        <member name="M:WebApplications.Utilities.IReadOnlyLookup`2.TryGetValues(`0,System.Collections.Generic.IEnumerable{`1}@)">
            <summary>
            Attempts to get the values with the given key.
            </summary>
            <param name="key">The key.</param>
            <param name="values">The values.</param>
            <returns><see langword="true" /> if the key was found, <see langword="false" /> otherwise.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Array`1">
            <summary>
            Helper class for arrays.
            </summary>
            <typeparam name="T">The type of the elements of the array.</typeparam>
        </member>
        <member name="F:WebApplications.Utilities.Array`1.Empty">
            <summary>
            An empty array.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.KeyValuePair">
            <summary>
            Helpers for <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.KeyValuePair.Create``2(``0,``1)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Collections.Generic.KeyValuePair`2"/> structure with the specified <paramref name="key"/> and <paramref name="value"/>.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="key">The object defined in each key/value pair.</param>
            <param name="value">The definition associated with <paramref name="key"/>.</param>
            <returns>The new <see cref="T:System.Collections.Generic.KeyValuePair`2"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.KeyValuePair.Decompose``2(System.Collections.Generic.KeyValuePair{``0,``1},``0@,``1@)">
            <summary>
            Decomposes the key/value pair into individual values.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="kvp">The key/value pair to decompose.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns>The key/value pair.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Mapping">
            <summary>
            A mapping on the underlying data.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Mapping.Offset">
            <summary>
            The offset in the underlying data.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Mapping.Length">
            <summary>
            The length.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Mapping.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Mapping"/> struct.
            </summary>
            <param name="offset">The offset.</param>
            <param name="length">The length.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="length"/> is less than zero.</exception>
        </member>
        <member name="T:WebApplications.Utilities.ReadOnlyMap`1">
            <summary>
            Holds an ordered collection of mappings to underlying data.
            </summary>
            <typeparam name="T">The item type.</typeparam>
            <seealso cref="T:System.Collections.Generic.IReadOnlyList`1"/>
            <seealso cref="T:System.Collections.ICollection"/>
            <seealso cref="T:WebApplications.Utilities.ReadOnlyWindow`1"/>
            <remarks>
            <para>The <see cref="T:WebApplications.Utilities.ReadOnlyMap`1"/> extends a <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Collections.Generic.IReadOnlyList`1"/>, and
            so can be initialized and manipulated as a list.  When in use it can be case to a <see cref="T:System.Collections.Generic.IReadOnlyList`1"/>
            of <typeparamref name="T"/> or an <see cref="T:System.Collections.ICollection"/>, at which point it acts like a single collection
            mapping requests for calls onto the underlying data.</para>
            <para>The <see cref="T:WebApplications.Utilities.ReadOnlyOffsetMap`1"/> can be used where you wish to map onto a single data source.</para>
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.ReadOnlyMap`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:WebApplications.Utilities.ReadOnlyMap`1.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:WebApplications.Utilities.ReadOnlyMap`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="P:WebApplications.Utilities.ReadOnlyMap`1.System#Collections#ICollection#SyncRoot">
            <inheritdoc/>
        </member>
        <member name="P:WebApplications.Utilities.ReadOnlyMap`1.System#Collections#ICollection#IsSynchronized">
            <inheritdoc/>
        </member>
        <member name="P:WebApplications.Utilities.ReadOnlyMap`1.System#Collections#ICollection#Count">
            <inheritdoc/>
        </member>
        <member name="P:WebApplications.Utilities.ReadOnlyMap`1.System#Collections#Generic#IReadOnlyCollection{T}#Count">
            <inheritdoc/>
        </member>
        <member name="P:WebApplications.Utilities.ReadOnlyMap`1.System#Collections#Generic#IReadOnlyList{T}#Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:WebApplications.Utilities.ReadOnlyOffsetMap`1">
            <summary>
            Holds an ordered collection of mappings to a single piece of underlying data.
            </summary>
            <typeparam name="T">The item type.</typeparam>
            <seealso cref="T:WebApplications.Utilities.ReadOnlyMap`1"/>
            <seealso cref="T:System.Collections.Generic.IReadOnlyList`1"/>
            <seealso cref="T:System.Collections.ICollection"/>
            <seealso cref="T:WebApplications.Utilities.ReadOnlyWindow`1"/>
            <remarks>
            <para>The <see cref="T:WebApplications.Utilities.ReadOnlyOffsetMap`1"/> extends a <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:WebApplications.Utilities.Mapping"/>, and
            so can be initialized and manipulated as a list.  When in use it can be cast to a <see cref="T:System.Collections.Generic.IReadOnlyList`1"/>
            of <typeparamref name="T"/> or an <see cref="T:System.Collections.ICollection"/>, at which point it acts like a single collection
            mapping requests for calls onto the underlying data.</para>
            <para>The <see cref="T:WebApplications.Utilities.ReadOnlyMap`1"/> can be used where you wish to map onto multiple data sources.</para>
            </remarks>
        </member>
        <member name="F:WebApplications.Utilities.ReadOnlyOffsetMap`1.Data">
            <summary>
            The underlying data.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.ReadOnlyOffsetMap`1.#ctor(System.Collections.Generic.IReadOnlyList{`0},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.ReadOnlyOffsetMap`1" /> class.
            </summary>
            <param name="data">The data.</param>
            <param name="capacity">The capacity.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="data"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:WebApplications.Utilities.ReadOnlyOffsetMap`1.#ctor(System.Collections.Generic.IReadOnlyList{`0},System.Collections.Generic.IEnumerable{WebApplications.Utilities.Mapping})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.ReadOnlyOffsetMap`1" /> class.
            </summary>
            <param name="data">The data.</param>
            <param name="mappings">The initial mappings.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="data"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="mappings"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:WebApplications.Utilities.ReadOnlyOffsetMap`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:WebApplications.Utilities.ReadOnlyOffsetMap`1.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:WebApplications.Utilities.ReadOnlyOffsetMap`1.Add(System.Int32,System.Int32)">
            <summary>
            Creates and then adds a new <see cref="T:WebApplications.Utilities.Mapping"/>.
            </summary>
            <param name="offset">The offset.</param>
            <param name="length">The length.</param>
            <returns>A new instance of a <see cref="T:WebApplications.Utilities.Mapping"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="length"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.ReadOnlyOffsetMap`1.Add(WebApplications.Utilities.Mapping)">
            <inheritdoc/>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="item.Offset.Offset"/> is less than zero or more than the count of the underlying data.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="item.Length.Length"/> is less than zero, or exceeds the bounds of the underlying data when combined with the <paramref name="item.Offset.Offset"/>.</exception>
        </member>
        <member name="M:WebApplications.Utilities.ReadOnlyOffsetMap`1.Insert(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates and then inserts a new <see cref="T:WebApplications.Utilities.Mapping"/> at the <paramref name="index">specified index</paramref>.
            </summary>
            <param name="index">The index.</param>
            <param name="offset">The offset.</param>
            <param name="length">The length.</param>
            <returns>A new instance of a <see cref="T:WebApplications.Utilities.Mapping"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="length"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.ReadOnlyOffsetMap`1.Insert(System.Int32,WebApplications.Utilities.Mapping)">
            <inheritdoc/>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="item.Offset.Offset"/> is less than zero or more than the count of the underlying data.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="item.Length.Length"/> is less than zero, or exceeds the bounds of the underlying data when combined with the <paramref name="item.Offset.Offset"/>.</exception>
        </member>
        <member name="M:WebApplications.Utilities.ReadOnlyOffsetMap`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="P:WebApplications.Utilities.ReadOnlyOffsetMap`1.System#Collections#ICollection#SyncRoot">
            <inheritdoc/>
        </member>
        <member name="P:WebApplications.Utilities.ReadOnlyOffsetMap`1.System#Collections#ICollection#IsSynchronized">
            <inheritdoc/>
        </member>
        <member name="P:WebApplications.Utilities.ReadOnlyOffsetMap`1.IsReadOnly">
            <inheritdoc/>
        </member>
        <member name="P:WebApplications.Utilities.ReadOnlyOffsetMap`1.System#Collections#ICollection#Count">
            <inheritdoc/>
        </member>
        <member name="P:WebApplications.Utilities.ReadOnlyOffsetMap`1.System#Collections#Generic#IReadOnlyCollection{T}#Count">
            <inheritdoc/>
        </member>
        <member name="P:WebApplications.Utilities.ReadOnlyOffsetMap`1.System#Collections#Generic#IReadOnlyList{T}#Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:WebApplications.Utilities.ReadOnlyOffsetMap`1.MapIndex(System.Int32)">
            <summary>
            Maps the specified index to the underlying data index.
            </summary>
            <param name="index">The index.</param>
            <returns>The index in the underlying data.</returns>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="index"/> is out of range.</exception>
        </member>
        <member name="T:WebApplications.Utilities.StringMap">
            <summary>
            Allows viewing of a string based on specific <see cref="F:WebApplications.Utilities.StringMap.Options"/>.
            </summary>
            <seealso cref="M:WebApplications.Utilities.DifferenceExtensions.ToMapped(System.String,WebApplications.Utilities.Difference.TextOptions)"/>
        </member>
        <member name="F:WebApplications.Utilities.StringMap._emptyMap">
            <summary>
            The empty map.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.StringMap.Map">
            <summary>
            The map, in tuples with the start (inclusive) character index, the chunk length and the cumulative count.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.StringMap.Original">
            <summary>
            The original string.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.StringMap.OriginalCount">
            <summary>
            Gets the original number of characters.
            </summary>
            <value>The original number of characters.</value>
        </member>
        <member name="F:WebApplications.Utilities.StringMap.Mapped">
            <summary>
            The mapped string.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.StringMap.Options">
            <summary>
            The text options.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.StringMap.#ctor(System.String,WebApplications.Utilities.Difference.TextOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.StringMap" /> class.
            </summary>
            <param name="input">The input.</param>
            <param name="options">The options.</param>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="input" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="options" /> are invalid.</exception>
        </member>
        <member name="M:WebApplications.Utilities.StringMap.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.StringMap.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.StringMap.Count">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.StringMap.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:System.Char" /> at the <paramref name="index">specified index</paramref>.
            </summary>
            <param name="index">The index.</param>
            <returns>The specified <see cref="T:System.Char"/>.</returns>
            <exception cref="T:System.IndexOutOfRangeException" accessor="get"><paramref name="index" /> is out of range.</exception>
        </member>
        <member name="F:WebApplications.Utilities.StringMap._lastMap">
            <summary>
            The <see cref="F:WebApplications.Utilities.StringMap.Map"/> index at which we last found returned a character for our
            <see cref="M:Item(int)">indexer</see>.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.StringMap.GetOriginalIndex(System.Int32)">
            <summary>
            Gets the index into the <see cref="F:WebApplications.Utilities.StringMap.Original"/> string for the <paramref name="index">specified
            index</paramref> into the <see cref="F:WebApplications.Utilities.StringMap.Mapped"/> string.
            </summary>
            <param name="index">The index in the <see cref="F:WebApplications.Utilities.StringMap.Mapped"/> string.</param>
            <returns>The index into the <see cref="F:WebApplications.Utilities.StringMap.Original"/> string.</returns>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="index" /> is out of range.</exception>
            <remarks>
            <para>Lookup is optimized for sequential access (either forward or backwards) on the same thread.</para>
            <para>When accessing the index randomly the mapping uses an optimized divide and conquer strategy.</para>
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.StringMap.ToString">
            <inheritdoc />
        </member>
        <member name="T:WebApplications.Utilities.Threading.BufferedAction">
            <summary>
            Buffers calls to an action.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.BufferedAction._action">
            <summary>
            The asynchronous action to run.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.BufferedAction.Duration">
            <summary>
            The duration (in milliseconds) to buffer the action for.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.BufferedAction._buffer">
            <summary>
            The current buffer (if any).
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction.#ctor(System.Action{System.Object[][]},NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction.#ctor(System.Action{System.Object[][]},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction.#ctor(System.Action{System.Object[][]},System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction.Run(System.Object[])">
            <summary>
            Buffers a call to the underlying action.
            </summary>
            <param name="arguments">The arguments.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction.Dispose">
            <summary>
            Disposes this instance.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction.Dispose(System.Boolean)">
            <summary>
            Disposes the specified instance.
            </summary>
            <param name="disposing">Whether this is disposing or finalizing.</param>
            <remarks>
            <para><paramref name="disposing"/> indicates whether the method was invoked from the 
            <see cref="M:System.IDisposable.Dispose"/> implementation or from the finalizer. The implementation should check the
            parameter before  accessing other reference objects. Such objects should  only be accessed when the method 
            is called from the <see cref="M:System.IDisposable.Dispose"/> implementation (when the <paramref name="disposing"/> 
            parameter is equal to <see langword="true"/>). If the method is invoked from the finalizer
            (disposing is false), other objects should not be accessed. The reason is that objects are finalized in an 
            unpredictable order and so they, or any of their dependencies, might already have been finalized.</para>
            </remarks>
        </member>
        <member name="T:WebApplications.Utilities.Threading.BufferedAction.ActionBuffer">
            <summary>
            An individual buffered action.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction.ActionBuffer.#ctor(WebApplications.Utilities.Threading.BufferedAction)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction.ActionBuffer" /> class.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction.ActionBuffer.OnTick(System.Object)">
            <summary>
            Called when we have a timer tick.
            </summary>
            <param name="state">The state.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction.ActionBuffer.Dispose">
            <summary>
            Disposes this instance.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction.ActionBuffer.Dispose(System.Boolean)">
            <summary>
            Disposes the specified instance.
            </summary>
            <param name="disposing">Whether this is disposing or finalizing.</param>
            <remarks>
            <para><paramref name="disposing"/> indicates whether the method was invoked from the 
            <see cref="M:System.IDisposable.Dispose"/> implementation or from the finalizer. The implementation should check the
            parameter before  accessing other reference objects. Such objects should  only be accessed when the method 
            is called from the <see cref="M:System.IDisposable.Dispose"/> implementation (when the <paramref name="disposing"/> 
            parameter is equal to <see langword="true"/>). If the method is invoked from the finalizer
            (disposing is false), other objects should not be accessed. The reason is that objects are finalized in an 
            unpredictable order and so they, or any of their dependencies, might already have been finalized.</para>
            </remarks>
        </member>
        <member name="T:WebApplications.Utilities.Threading.BufferedAction`1">
            <summary>
            Buffers calls to an action.
            </summary>
            <typeparam name="T1">The type of argument 1.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`1.#ctor(System.Action{System.Collections.Generic.IEnumerable{`0}},NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`1.#ctor(System.Action{System.Collections.Generic.IEnumerable{`0}},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`1.#ctor(System.Action{System.Collections.Generic.IEnumerable{`0}},System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`1.Run(`0)">
            <summary>
            Buffers a call to the underlying action.
            </summary>
            <param name="arg1">Argument 1.</param>
        </member>
        <member name="T:WebApplications.Utilities.Threading.BufferedAction`2">
            <summary>
            Buffers calls to an action.
            </summary>
            <typeparam name="T1">The type of argument 1.</typeparam>
            <typeparam name="T2">The type of argument 2.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`2.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1}},NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`2.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1}},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`2.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1}},System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`2.Run(`0,`1)">
            <summary>
            Buffers a call to the underlying action.
            </summary>
            <param name="arg1">Argument 1.</param>
            <param name="arg2">Argument 2.</param>
        </member>
        <member name="T:WebApplications.Utilities.Threading.BufferedAction`3">
            <summary>
            Buffers calls to an action.
            </summary>
            <typeparam name="T1">The type of argument 1.</typeparam>
            <typeparam name="T2">The type of argument 2.</typeparam>
            <typeparam name="T3">The type of argument 3.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`3.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2}},NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`3.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2}},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`3.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2}},System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`3.Run(`0,`1,`2)">
            <summary>
            Buffers a call to the underlying action.
            </summary>
            <param name="arg1">Argument 1.</param>
            <param name="arg2">Argument 2.</param>
            <param name="arg3">Argument 3.</param>
        </member>
        <member name="T:WebApplications.Utilities.Threading.BufferedAction`4">
            <summary>
            Buffers calls to an action.
            </summary>
            <typeparam name="T1">The type of argument 1.</typeparam>
            <typeparam name="T2">The type of argument 2.</typeparam>
            <typeparam name="T3">The type of argument 3.</typeparam>
            <typeparam name="T4">The type of argument 4.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`4.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3}},NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`4.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3}},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`4.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3}},System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`4.Run(`0,`1,`2,`3)">
            <summary>
            Buffers a call to the underlying action.
            </summary>
            <param name="arg1">Argument 1.</param>
            <param name="arg2">Argument 2.</param>
            <param name="arg3">Argument 3.</param>
            <param name="arg4">Argument 4.</param>
        </member>
        <member name="T:WebApplications.Utilities.Threading.BufferedAction`5">
            <summary>
            Buffers calls to an action.
            </summary>
            <typeparam name="T1">The type of argument 1.</typeparam>
            <typeparam name="T2">The type of argument 2.</typeparam>
            <typeparam name="T3">The type of argument 3.</typeparam>
            <typeparam name="T4">The type of argument 4.</typeparam>
            <typeparam name="T5">The type of argument 5.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`5.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4}},NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`5.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4}},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`5.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4}},System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`5.Run(`0,`1,`2,`3,`4)">
            <summary>
            Buffers a call to the underlying action.
            </summary>
            <param name="arg1">Argument 1.</param>
            <param name="arg2">Argument 2.</param>
            <param name="arg3">Argument 3.</param>
            <param name="arg4">Argument 4.</param>
            <param name="arg5">Argument 5.</param>
        </member>
        <member name="T:WebApplications.Utilities.Threading.BufferedAction`6">
            <summary>
            Buffers calls to an action.
            </summary>
            <typeparam name="T1">The type of argument 1.</typeparam>
            <typeparam name="T2">The type of argument 2.</typeparam>
            <typeparam name="T3">The type of argument 3.</typeparam>
            <typeparam name="T4">The type of argument 4.</typeparam>
            <typeparam name="T5">The type of argument 5.</typeparam>
            <typeparam name="T6">The type of argument 6.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`6.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5}},NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`6.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5}},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`6.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5}},System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`6.Run(`0,`1,`2,`3,`4,`5)">
            <summary>
            Buffers a call to the underlying action.
            </summary>
            <param name="arg1">Argument 1.</param>
            <param name="arg2">Argument 2.</param>
            <param name="arg3">Argument 3.</param>
            <param name="arg4">Argument 4.</param>
            <param name="arg5">Argument 5.</param>
            <param name="arg6">Argument 6.</param>
        </member>
        <member name="T:WebApplications.Utilities.Threading.BufferedAction`7">
            <summary>
            Buffers calls to an action.
            </summary>
            <typeparam name="T1">The type of argument 1.</typeparam>
            <typeparam name="T2">The type of argument 2.</typeparam>
            <typeparam name="T3">The type of argument 3.</typeparam>
            <typeparam name="T4">The type of argument 4.</typeparam>
            <typeparam name="T5">The type of argument 5.</typeparam>
            <typeparam name="T6">The type of argument 6.</typeparam>
            <typeparam name="T7">The type of argument 7.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`7.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6}},NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`7.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6}},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`7.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6}},System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`7.Run(`0,`1,`2,`3,`4,`5,`6)">
            <summary>
            Buffers a call to the underlying action.
            </summary>
            <param name="arg1">Argument 1.</param>
            <param name="arg2">Argument 2.</param>
            <param name="arg3">Argument 3.</param>
            <param name="arg4">Argument 4.</param>
            <param name="arg5">Argument 5.</param>
            <param name="arg6">Argument 6.</param>
            <param name="arg7">Argument 7.</param>
        </member>
        <member name="T:WebApplications.Utilities.Threading.BufferedAction`8">
            <summary>
            Buffers calls to an action.
            </summary>
            <typeparam name="T1">The type of argument 1.</typeparam>
            <typeparam name="T2">The type of argument 2.</typeparam>
            <typeparam name="T3">The type of argument 3.</typeparam>
            <typeparam name="T4">The type of argument 4.</typeparam>
            <typeparam name="T5">The type of argument 5.</typeparam>
            <typeparam name="T6">The type of argument 6.</typeparam>
            <typeparam name="T7">The type of argument 7.</typeparam>
            <typeparam name="T8">The type of argument 8.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`8.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7}},NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`8.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7}},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`8.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7}},System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`8.Run(`0,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Buffers a call to the underlying action.
            </summary>
            <param name="arg1">Argument 1.</param>
            <param name="arg2">Argument 2.</param>
            <param name="arg3">Argument 3.</param>
            <param name="arg4">Argument 4.</param>
            <param name="arg5">Argument 5.</param>
            <param name="arg6">Argument 6.</param>
            <param name="arg7">Argument 7.</param>
            <param name="arg8">Argument 8.</param>
        </member>
        <member name="T:WebApplications.Utilities.Threading.BufferedAction`9">
            <summary>
            Buffers calls to an action.
            </summary>
            <typeparam name="T1">The type of argument 1.</typeparam>
            <typeparam name="T2">The type of argument 2.</typeparam>
            <typeparam name="T3">The type of argument 3.</typeparam>
            <typeparam name="T4">The type of argument 4.</typeparam>
            <typeparam name="T5">The type of argument 5.</typeparam>
            <typeparam name="T6">The type of argument 6.</typeparam>
            <typeparam name="T7">The type of argument 7.</typeparam>
            <typeparam name="T8">The type of argument 8.</typeparam>
            <typeparam name="T9">The type of argument 9.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`9.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8}},NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`9.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8}},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`9.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8}},System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`9.Run(`0,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Buffers a call to the underlying action.
            </summary>
            <param name="arg1">Argument 1.</param>
            <param name="arg2">Argument 2.</param>
            <param name="arg3">Argument 3.</param>
            <param name="arg4">Argument 4.</param>
            <param name="arg5">Argument 5.</param>
            <param name="arg6">Argument 6.</param>
            <param name="arg7">Argument 7.</param>
            <param name="arg8">Argument 8.</param>
            <param name="arg9">Argument 9.</param>
        </member>
        <member name="T:WebApplications.Utilities.Threading.BufferedAction`10">
            <summary>
            Buffers calls to an action.
            </summary>
            <typeparam name="T1">The type of argument 1.</typeparam>
            <typeparam name="T2">The type of argument 2.</typeparam>
            <typeparam name="T3">The type of argument 3.</typeparam>
            <typeparam name="T4">The type of argument 4.</typeparam>
            <typeparam name="T5">The type of argument 5.</typeparam>
            <typeparam name="T6">The type of argument 6.</typeparam>
            <typeparam name="T7">The type of argument 7.</typeparam>
            <typeparam name="T8">The type of argument 8.</typeparam>
            <typeparam name="T9">The type of argument 9.</typeparam>
            <typeparam name="T10">The type of argument 10.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`10.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9}},NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`10.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9}},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`10.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9}},System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`10.Run(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Buffers a call to the underlying action.
            </summary>
            <param name="arg1">Argument 1.</param>
            <param name="arg2">Argument 2.</param>
            <param name="arg3">Argument 3.</param>
            <param name="arg4">Argument 4.</param>
            <param name="arg5">Argument 5.</param>
            <param name="arg6">Argument 6.</param>
            <param name="arg7">Argument 7.</param>
            <param name="arg8">Argument 8.</param>
            <param name="arg9">Argument 9.</param>
            <param name="arg10">Argument 10.</param>
        </member>
        <member name="T:WebApplications.Utilities.Threading.BufferedAction`11">
            <summary>
            Buffers calls to an action.
            </summary>
            <typeparam name="T1">The type of argument 1.</typeparam>
            <typeparam name="T2">The type of argument 2.</typeparam>
            <typeparam name="T3">The type of argument 3.</typeparam>
            <typeparam name="T4">The type of argument 4.</typeparam>
            <typeparam name="T5">The type of argument 5.</typeparam>
            <typeparam name="T6">The type of argument 6.</typeparam>
            <typeparam name="T7">The type of argument 7.</typeparam>
            <typeparam name="T8">The type of argument 8.</typeparam>
            <typeparam name="T9">The type of argument 9.</typeparam>
            <typeparam name="T10">The type of argument 10.</typeparam>
            <typeparam name="T11">The type of argument 11.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`11.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10}},NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`11.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10}},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`11.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10}},System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`11.Run(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Buffers a call to the underlying action.
            </summary>
            <param name="arg1">Argument 1.</param>
            <param name="arg2">Argument 2.</param>
            <param name="arg3">Argument 3.</param>
            <param name="arg4">Argument 4.</param>
            <param name="arg5">Argument 5.</param>
            <param name="arg6">Argument 6.</param>
            <param name="arg7">Argument 7.</param>
            <param name="arg8">Argument 8.</param>
            <param name="arg9">Argument 9.</param>
            <param name="arg10">Argument 10.</param>
            <param name="arg11">Argument 11.</param>
        </member>
        <member name="T:WebApplications.Utilities.Threading.BufferedAction`12">
            <summary>
            Buffers calls to an action.
            </summary>
            <typeparam name="T1">The type of argument 1.</typeparam>
            <typeparam name="T2">The type of argument 2.</typeparam>
            <typeparam name="T3">The type of argument 3.</typeparam>
            <typeparam name="T4">The type of argument 4.</typeparam>
            <typeparam name="T5">The type of argument 5.</typeparam>
            <typeparam name="T6">The type of argument 6.</typeparam>
            <typeparam name="T7">The type of argument 7.</typeparam>
            <typeparam name="T8">The type of argument 8.</typeparam>
            <typeparam name="T9">The type of argument 9.</typeparam>
            <typeparam name="T10">The type of argument 10.</typeparam>
            <typeparam name="T11">The type of argument 11.</typeparam>
            <typeparam name="T12">The type of argument 12.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`12.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11}},NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`12.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11}},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`12.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11}},System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`12.Run(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Buffers a call to the underlying action.
            </summary>
            <param name="arg1">Argument 1.</param>
            <param name="arg2">Argument 2.</param>
            <param name="arg3">Argument 3.</param>
            <param name="arg4">Argument 4.</param>
            <param name="arg5">Argument 5.</param>
            <param name="arg6">Argument 6.</param>
            <param name="arg7">Argument 7.</param>
            <param name="arg8">Argument 8.</param>
            <param name="arg9">Argument 9.</param>
            <param name="arg10">Argument 10.</param>
            <param name="arg11">Argument 11.</param>
            <param name="arg12">Argument 12.</param>
        </member>
        <member name="T:WebApplications.Utilities.Threading.BufferedAction`13">
            <summary>
            Buffers calls to an action.
            </summary>
            <typeparam name="T1">The type of argument 1.</typeparam>
            <typeparam name="T2">The type of argument 2.</typeparam>
            <typeparam name="T3">The type of argument 3.</typeparam>
            <typeparam name="T4">The type of argument 4.</typeparam>
            <typeparam name="T5">The type of argument 5.</typeparam>
            <typeparam name="T6">The type of argument 6.</typeparam>
            <typeparam name="T7">The type of argument 7.</typeparam>
            <typeparam name="T8">The type of argument 8.</typeparam>
            <typeparam name="T9">The type of argument 9.</typeparam>
            <typeparam name="T10">The type of argument 10.</typeparam>
            <typeparam name="T11">The type of argument 11.</typeparam>
            <typeparam name="T12">The type of argument 12.</typeparam>
            <typeparam name="T13">The type of argument 13.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`13.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12}},NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`13.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12}},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`13.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12}},System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`13.Run(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Buffers a call to the underlying action.
            </summary>
            <param name="arg1">Argument 1.</param>
            <param name="arg2">Argument 2.</param>
            <param name="arg3">Argument 3.</param>
            <param name="arg4">Argument 4.</param>
            <param name="arg5">Argument 5.</param>
            <param name="arg6">Argument 6.</param>
            <param name="arg7">Argument 7.</param>
            <param name="arg8">Argument 8.</param>
            <param name="arg9">Argument 9.</param>
            <param name="arg10">Argument 10.</param>
            <param name="arg11">Argument 11.</param>
            <param name="arg12">Argument 12.</param>
            <param name="arg13">Argument 13.</param>
        </member>
        <member name="T:WebApplications.Utilities.Threading.BufferedAction`14">
            <summary>
            Buffers calls to an action.
            </summary>
            <typeparam name="T1">The type of argument 1.</typeparam>
            <typeparam name="T2">The type of argument 2.</typeparam>
            <typeparam name="T3">The type of argument 3.</typeparam>
            <typeparam name="T4">The type of argument 4.</typeparam>
            <typeparam name="T5">The type of argument 5.</typeparam>
            <typeparam name="T6">The type of argument 6.</typeparam>
            <typeparam name="T7">The type of argument 7.</typeparam>
            <typeparam name="T8">The type of argument 8.</typeparam>
            <typeparam name="T9">The type of argument 9.</typeparam>
            <typeparam name="T10">The type of argument 10.</typeparam>
            <typeparam name="T11">The type of argument 11.</typeparam>
            <typeparam name="T12">The type of argument 12.</typeparam>
            <typeparam name="T13">The type of argument 13.</typeparam>
            <typeparam name="T14">The type of argument 14.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`14.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13}},NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`14.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13}},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`14.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13}},System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`14.Run(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Buffers a call to the underlying action.
            </summary>
            <param name="arg1">Argument 1.</param>
            <param name="arg2">Argument 2.</param>
            <param name="arg3">Argument 3.</param>
            <param name="arg4">Argument 4.</param>
            <param name="arg5">Argument 5.</param>
            <param name="arg6">Argument 6.</param>
            <param name="arg7">Argument 7.</param>
            <param name="arg8">Argument 8.</param>
            <param name="arg9">Argument 9.</param>
            <param name="arg10">Argument 10.</param>
            <param name="arg11">Argument 11.</param>
            <param name="arg12">Argument 12.</param>
            <param name="arg13">Argument 13.</param>
            <param name="arg14">Argument 14.</param>
        </member>
        <member name="T:WebApplications.Utilities.Threading.BufferedAction`15">
            <summary>
            Buffers calls to an action.
            </summary>
            <typeparam name="T1">The type of argument 1.</typeparam>
            <typeparam name="T2">The type of argument 2.</typeparam>
            <typeparam name="T3">The type of argument 3.</typeparam>
            <typeparam name="T4">The type of argument 4.</typeparam>
            <typeparam name="T5">The type of argument 5.</typeparam>
            <typeparam name="T6">The type of argument 6.</typeparam>
            <typeparam name="T7">The type of argument 7.</typeparam>
            <typeparam name="T8">The type of argument 8.</typeparam>
            <typeparam name="T9">The type of argument 9.</typeparam>
            <typeparam name="T10">The type of argument 10.</typeparam>
            <typeparam name="T11">The type of argument 11.</typeparam>
            <typeparam name="T12">The type of argument 12.</typeparam>
            <typeparam name="T13">The type of argument 13.</typeparam>
            <typeparam name="T14">The type of argument 14.</typeparam>
            <typeparam name="T15">The type of argument 15.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`15.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14}},NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`15.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14}},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`15.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14}},System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`15.Run(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Buffers a call to the underlying action.
            </summary>
            <param name="arg1">Argument 1.</param>
            <param name="arg2">Argument 2.</param>
            <param name="arg3">Argument 3.</param>
            <param name="arg4">Argument 4.</param>
            <param name="arg5">Argument 5.</param>
            <param name="arg6">Argument 6.</param>
            <param name="arg7">Argument 7.</param>
            <param name="arg8">Argument 8.</param>
            <param name="arg9">Argument 9.</param>
            <param name="arg10">Argument 10.</param>
            <param name="arg11">Argument 11.</param>
            <param name="arg12">Argument 12.</param>
            <param name="arg13">Argument 13.</param>
            <param name="arg14">Argument 14.</param>
            <param name="arg15">Argument 15.</param>
        </member>
        <member name="T:WebApplications.Utilities.Threading.BufferedAction`16">
            <summary>
            Buffers calls to an action.
            </summary>
            <typeparam name="T1">The type of argument 1.</typeparam>
            <typeparam name="T2">The type of argument 2.</typeparam>
            <typeparam name="T3">The type of argument 3.</typeparam>
            <typeparam name="T4">The type of argument 4.</typeparam>
            <typeparam name="T5">The type of argument 5.</typeparam>
            <typeparam name="T6">The type of argument 6.</typeparam>
            <typeparam name="T7">The type of argument 7.</typeparam>
            <typeparam name="T8">The type of argument 8.</typeparam>
            <typeparam name="T9">The type of argument 9.</typeparam>
            <typeparam name="T10">The type of argument 10.</typeparam>
            <typeparam name="T11">The type of argument 11.</typeparam>
            <typeparam name="T12">The type of argument 12.</typeparam>
            <typeparam name="T13">The type of argument 13.</typeparam>
            <typeparam name="T14">The type of argument 14.</typeparam>
            <typeparam name="T15">The type of argument 15.</typeparam>
            <typeparam name="T16">The type of argument 16.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`16.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15}},NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`16.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15}},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`16.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15}},System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`16.Run(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
            <summary>
            Buffers a call to the underlying action.
            </summary>
            <param name="arg1">Argument 1.</param>
            <param name="arg2">Argument 2.</param>
            <param name="arg3">Argument 3.</param>
            <param name="arg4">Argument 4.</param>
            <param name="arg5">Argument 5.</param>
            <param name="arg6">Argument 6.</param>
            <param name="arg7">Argument 7.</param>
            <param name="arg8">Argument 8.</param>
            <param name="arg9">Argument 9.</param>
            <param name="arg10">Argument 10.</param>
            <param name="arg11">Argument 11.</param>
            <param name="arg12">Argument 12.</param>
            <param name="arg13">Argument 13.</param>
            <param name="arg14">Argument 14.</param>
            <param name="arg15">Argument 15.</param>
            <param name="arg16">Argument 16.</param>
        </member>
        <member name="T:WebApplications.Utilities.Threading.BufferedAction`17">
            <summary>
            Buffers calls to an action.
            </summary>
            <typeparam name="T1">The type of argument 1.</typeparam>
            <typeparam name="T2">The type of argument 2.</typeparam>
            <typeparam name="T3">The type of argument 3.</typeparam>
            <typeparam name="T4">The type of argument 4.</typeparam>
            <typeparam name="T5">The type of argument 5.</typeparam>
            <typeparam name="T6">The type of argument 6.</typeparam>
            <typeparam name="T7">The type of argument 7.</typeparam>
            <typeparam name="T8">The type of argument 8.</typeparam>
            <typeparam name="T9">The type of argument 9.</typeparam>
            <typeparam name="T10">The type of argument 10.</typeparam>
            <typeparam name="T11">The type of argument 11.</typeparam>
            <typeparam name="T12">The type of argument 12.</typeparam>
            <typeparam name="T13">The type of argument 13.</typeparam>
            <typeparam name="T14">The type of argument 14.</typeparam>
            <typeparam name="T15">The type of argument 15.</typeparam>
            <typeparam name="T16">The type of argument 16.</typeparam>
            <typeparam name="T17">The type of argument 17.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`17.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16}},NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`17.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16}},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`17.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16}},System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`17.Run(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16)">
            <summary>
            Buffers a call to the underlying action.
            </summary>
            <param name="arg1">Argument 1.</param>
            <param name="arg2">Argument 2.</param>
            <param name="arg3">Argument 3.</param>
            <param name="arg4">Argument 4.</param>
            <param name="arg5">Argument 5.</param>
            <param name="arg6">Argument 6.</param>
            <param name="arg7">Argument 7.</param>
            <param name="arg8">Argument 8.</param>
            <param name="arg9">Argument 9.</param>
            <param name="arg10">Argument 10.</param>
            <param name="arg11">Argument 11.</param>
            <param name="arg12">Argument 12.</param>
            <param name="arg13">Argument 13.</param>
            <param name="arg14">Argument 14.</param>
            <param name="arg15">Argument 15.</param>
            <param name="arg16">Argument 16.</param>
            <param name="arg17">Argument 17.</param>
        </member>
        <member name="T:WebApplications.Utilities.Threading.BufferedAction`18">
            <summary>
            Buffers calls to an action.
            </summary>
            <typeparam name="T1">The type of argument 1.</typeparam>
            <typeparam name="T2">The type of argument 2.</typeparam>
            <typeparam name="T3">The type of argument 3.</typeparam>
            <typeparam name="T4">The type of argument 4.</typeparam>
            <typeparam name="T5">The type of argument 5.</typeparam>
            <typeparam name="T6">The type of argument 6.</typeparam>
            <typeparam name="T7">The type of argument 7.</typeparam>
            <typeparam name="T8">The type of argument 8.</typeparam>
            <typeparam name="T9">The type of argument 9.</typeparam>
            <typeparam name="T10">The type of argument 10.</typeparam>
            <typeparam name="T11">The type of argument 11.</typeparam>
            <typeparam name="T12">The type of argument 12.</typeparam>
            <typeparam name="T13">The type of argument 13.</typeparam>
            <typeparam name="T14">The type of argument 14.</typeparam>
            <typeparam name="T15">The type of argument 15.</typeparam>
            <typeparam name="T16">The type of argument 16.</typeparam>
            <typeparam name="T17">The type of argument 17.</typeparam>
            <typeparam name="T18">The type of argument 18.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`18.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17}},NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`18.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17}},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`18.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17}},System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`18.Run(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17)">
            <summary>
            Buffers a call to the underlying action.
            </summary>
            <param name="arg1">Argument 1.</param>
            <param name="arg2">Argument 2.</param>
            <param name="arg3">Argument 3.</param>
            <param name="arg4">Argument 4.</param>
            <param name="arg5">Argument 5.</param>
            <param name="arg6">Argument 6.</param>
            <param name="arg7">Argument 7.</param>
            <param name="arg8">Argument 8.</param>
            <param name="arg9">Argument 9.</param>
            <param name="arg10">Argument 10.</param>
            <param name="arg11">Argument 11.</param>
            <param name="arg12">Argument 12.</param>
            <param name="arg13">Argument 13.</param>
            <param name="arg14">Argument 14.</param>
            <param name="arg15">Argument 15.</param>
            <param name="arg16">Argument 16.</param>
            <param name="arg17">Argument 17.</param>
            <param name="arg18">Argument 18.</param>
        </member>
        <member name="T:WebApplications.Utilities.Threading.BufferedAction`19">
            <summary>
            Buffers calls to an action.
            </summary>
            <typeparam name="T1">The type of argument 1.</typeparam>
            <typeparam name="T2">The type of argument 2.</typeparam>
            <typeparam name="T3">The type of argument 3.</typeparam>
            <typeparam name="T4">The type of argument 4.</typeparam>
            <typeparam name="T5">The type of argument 5.</typeparam>
            <typeparam name="T6">The type of argument 6.</typeparam>
            <typeparam name="T7">The type of argument 7.</typeparam>
            <typeparam name="T8">The type of argument 8.</typeparam>
            <typeparam name="T9">The type of argument 9.</typeparam>
            <typeparam name="T10">The type of argument 10.</typeparam>
            <typeparam name="T11">The type of argument 11.</typeparam>
            <typeparam name="T12">The type of argument 12.</typeparam>
            <typeparam name="T13">The type of argument 13.</typeparam>
            <typeparam name="T14">The type of argument 14.</typeparam>
            <typeparam name="T15">The type of argument 15.</typeparam>
            <typeparam name="T16">The type of argument 16.</typeparam>
            <typeparam name="T17">The type of argument 17.</typeparam>
            <typeparam name="T18">The type of argument 18.</typeparam>
            <typeparam name="T19">The type of argument 19.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`19.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18}},NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`19.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18}},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`19.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18}},System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`19.Run(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18)">
            <summary>
            Buffers a call to the underlying action.
            </summary>
            <param name="arg1">Argument 1.</param>
            <param name="arg2">Argument 2.</param>
            <param name="arg3">Argument 3.</param>
            <param name="arg4">Argument 4.</param>
            <param name="arg5">Argument 5.</param>
            <param name="arg6">Argument 6.</param>
            <param name="arg7">Argument 7.</param>
            <param name="arg8">Argument 8.</param>
            <param name="arg9">Argument 9.</param>
            <param name="arg10">Argument 10.</param>
            <param name="arg11">Argument 11.</param>
            <param name="arg12">Argument 12.</param>
            <param name="arg13">Argument 13.</param>
            <param name="arg14">Argument 14.</param>
            <param name="arg15">Argument 15.</param>
            <param name="arg16">Argument 16.</param>
            <param name="arg17">Argument 17.</param>
            <param name="arg18">Argument 18.</param>
            <param name="arg19">Argument 19.</param>
        </member>
        <member name="T:WebApplications.Utilities.Threading.BufferedAction`20">
            <summary>
            Buffers calls to an action.
            </summary>
            <typeparam name="T1">The type of argument 1.</typeparam>
            <typeparam name="T2">The type of argument 2.</typeparam>
            <typeparam name="T3">The type of argument 3.</typeparam>
            <typeparam name="T4">The type of argument 4.</typeparam>
            <typeparam name="T5">The type of argument 5.</typeparam>
            <typeparam name="T6">The type of argument 6.</typeparam>
            <typeparam name="T7">The type of argument 7.</typeparam>
            <typeparam name="T8">The type of argument 8.</typeparam>
            <typeparam name="T9">The type of argument 9.</typeparam>
            <typeparam name="T10">The type of argument 10.</typeparam>
            <typeparam name="T11">The type of argument 11.</typeparam>
            <typeparam name="T12">The type of argument 12.</typeparam>
            <typeparam name="T13">The type of argument 13.</typeparam>
            <typeparam name="T14">The type of argument 14.</typeparam>
            <typeparam name="T15">The type of argument 15.</typeparam>
            <typeparam name="T16">The type of argument 16.</typeparam>
            <typeparam name="T17">The type of argument 17.</typeparam>
            <typeparam name="T18">The type of argument 18.</typeparam>
            <typeparam name="T19">The type of argument 19.</typeparam>
            <typeparam name="T20">The type of argument 20.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`20.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19}},NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`20.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19}},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`20.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19}},System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`20.Run(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19)">
            <summary>
            Buffers a call to the underlying action.
            </summary>
            <param name="arg1">Argument 1.</param>
            <param name="arg2">Argument 2.</param>
            <param name="arg3">Argument 3.</param>
            <param name="arg4">Argument 4.</param>
            <param name="arg5">Argument 5.</param>
            <param name="arg6">Argument 6.</param>
            <param name="arg7">Argument 7.</param>
            <param name="arg8">Argument 8.</param>
            <param name="arg9">Argument 9.</param>
            <param name="arg10">Argument 10.</param>
            <param name="arg11">Argument 11.</param>
            <param name="arg12">Argument 12.</param>
            <param name="arg13">Argument 13.</param>
            <param name="arg14">Argument 14.</param>
            <param name="arg15">Argument 15.</param>
            <param name="arg16">Argument 16.</param>
            <param name="arg17">Argument 17.</param>
            <param name="arg18">Argument 18.</param>
            <param name="arg19">Argument 19.</param>
            <param name="arg20">Argument 20.</param>
        </member>
        <member name="T:WebApplications.Utilities.Threading.BufferedAction`21">
            <summary>
            Buffers calls to an action.
            </summary>
            <typeparam name="T1">The type of argument 1.</typeparam>
            <typeparam name="T2">The type of argument 2.</typeparam>
            <typeparam name="T3">The type of argument 3.</typeparam>
            <typeparam name="T4">The type of argument 4.</typeparam>
            <typeparam name="T5">The type of argument 5.</typeparam>
            <typeparam name="T6">The type of argument 6.</typeparam>
            <typeparam name="T7">The type of argument 7.</typeparam>
            <typeparam name="T8">The type of argument 8.</typeparam>
            <typeparam name="T9">The type of argument 9.</typeparam>
            <typeparam name="T10">The type of argument 10.</typeparam>
            <typeparam name="T11">The type of argument 11.</typeparam>
            <typeparam name="T12">The type of argument 12.</typeparam>
            <typeparam name="T13">The type of argument 13.</typeparam>
            <typeparam name="T14">The type of argument 14.</typeparam>
            <typeparam name="T15">The type of argument 15.</typeparam>
            <typeparam name="T16">The type of argument 16.</typeparam>
            <typeparam name="T17">The type of argument 17.</typeparam>
            <typeparam name="T18">The type of argument 18.</typeparam>
            <typeparam name="T19">The type of argument 19.</typeparam>
            <typeparam name="T20">The type of argument 20.</typeparam>
            <typeparam name="T21">The type of argument 21.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`21.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20}},NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`21.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20}},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`21.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20}},System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`21.Run(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20)">
            <summary>
            Buffers a call to the underlying action.
            </summary>
            <param name="arg1">Argument 1.</param>
            <param name="arg2">Argument 2.</param>
            <param name="arg3">Argument 3.</param>
            <param name="arg4">Argument 4.</param>
            <param name="arg5">Argument 5.</param>
            <param name="arg6">Argument 6.</param>
            <param name="arg7">Argument 7.</param>
            <param name="arg8">Argument 8.</param>
            <param name="arg9">Argument 9.</param>
            <param name="arg10">Argument 10.</param>
            <param name="arg11">Argument 11.</param>
            <param name="arg12">Argument 12.</param>
            <param name="arg13">Argument 13.</param>
            <param name="arg14">Argument 14.</param>
            <param name="arg15">Argument 15.</param>
            <param name="arg16">Argument 16.</param>
            <param name="arg17">Argument 17.</param>
            <param name="arg18">Argument 18.</param>
            <param name="arg19">Argument 19.</param>
            <param name="arg20">Argument 20.</param>
            <param name="arg21">Argument 21.</param>
        </member>
        <member name="T:WebApplications.Utilities.Threading.BufferedAction`22">
            <summary>
            Buffers calls to an action.
            </summary>
            <typeparam name="T1">The type of argument 1.</typeparam>
            <typeparam name="T2">The type of argument 2.</typeparam>
            <typeparam name="T3">The type of argument 3.</typeparam>
            <typeparam name="T4">The type of argument 4.</typeparam>
            <typeparam name="T5">The type of argument 5.</typeparam>
            <typeparam name="T6">The type of argument 6.</typeparam>
            <typeparam name="T7">The type of argument 7.</typeparam>
            <typeparam name="T8">The type of argument 8.</typeparam>
            <typeparam name="T9">The type of argument 9.</typeparam>
            <typeparam name="T10">The type of argument 10.</typeparam>
            <typeparam name="T11">The type of argument 11.</typeparam>
            <typeparam name="T12">The type of argument 12.</typeparam>
            <typeparam name="T13">The type of argument 13.</typeparam>
            <typeparam name="T14">The type of argument 14.</typeparam>
            <typeparam name="T15">The type of argument 15.</typeparam>
            <typeparam name="T16">The type of argument 16.</typeparam>
            <typeparam name="T17">The type of argument 17.</typeparam>
            <typeparam name="T18">The type of argument 18.</typeparam>
            <typeparam name="T19">The type of argument 19.</typeparam>
            <typeparam name="T20">The type of argument 20.</typeparam>
            <typeparam name="T21">The type of argument 21.</typeparam>
            <typeparam name="T22">The type of argument 22.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`22.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21}},NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`22.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21}},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`22.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21}},System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`22.Run(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21)">
            <summary>
            Buffers a call to the underlying action.
            </summary>
            <param name="arg1">Argument 1.</param>
            <param name="arg2">Argument 2.</param>
            <param name="arg3">Argument 3.</param>
            <param name="arg4">Argument 4.</param>
            <param name="arg5">Argument 5.</param>
            <param name="arg6">Argument 6.</param>
            <param name="arg7">Argument 7.</param>
            <param name="arg8">Argument 8.</param>
            <param name="arg9">Argument 9.</param>
            <param name="arg10">Argument 10.</param>
            <param name="arg11">Argument 11.</param>
            <param name="arg12">Argument 12.</param>
            <param name="arg13">Argument 13.</param>
            <param name="arg14">Argument 14.</param>
            <param name="arg15">Argument 15.</param>
            <param name="arg16">Argument 16.</param>
            <param name="arg17">Argument 17.</param>
            <param name="arg18">Argument 18.</param>
            <param name="arg19">Argument 19.</param>
            <param name="arg20">Argument 20.</param>
            <param name="arg21">Argument 21.</param>
            <param name="arg22">Argument 22.</param>
        </member>
        <member name="T:WebApplications.Utilities.Threading.BufferedAction`23">
            <summary>
            Buffers calls to an action.
            </summary>
            <typeparam name="T1">The type of argument 1.</typeparam>
            <typeparam name="T2">The type of argument 2.</typeparam>
            <typeparam name="T3">The type of argument 3.</typeparam>
            <typeparam name="T4">The type of argument 4.</typeparam>
            <typeparam name="T5">The type of argument 5.</typeparam>
            <typeparam name="T6">The type of argument 6.</typeparam>
            <typeparam name="T7">The type of argument 7.</typeparam>
            <typeparam name="T8">The type of argument 8.</typeparam>
            <typeparam name="T9">The type of argument 9.</typeparam>
            <typeparam name="T10">The type of argument 10.</typeparam>
            <typeparam name="T11">The type of argument 11.</typeparam>
            <typeparam name="T12">The type of argument 12.</typeparam>
            <typeparam name="T13">The type of argument 13.</typeparam>
            <typeparam name="T14">The type of argument 14.</typeparam>
            <typeparam name="T15">The type of argument 15.</typeparam>
            <typeparam name="T16">The type of argument 16.</typeparam>
            <typeparam name="T17">The type of argument 17.</typeparam>
            <typeparam name="T18">The type of argument 18.</typeparam>
            <typeparam name="T19">The type of argument 19.</typeparam>
            <typeparam name="T20">The type of argument 20.</typeparam>
            <typeparam name="T21">The type of argument 21.</typeparam>
            <typeparam name="T22">The type of argument 22.</typeparam>
            <typeparam name="T23">The type of argument 23.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`23.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22}},NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`23.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22}},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`23.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22}},System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`23.Run(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22)">
            <summary>
            Buffers a call to the underlying action.
            </summary>
            <param name="arg1">Argument 1.</param>
            <param name="arg2">Argument 2.</param>
            <param name="arg3">Argument 3.</param>
            <param name="arg4">Argument 4.</param>
            <param name="arg5">Argument 5.</param>
            <param name="arg6">Argument 6.</param>
            <param name="arg7">Argument 7.</param>
            <param name="arg8">Argument 8.</param>
            <param name="arg9">Argument 9.</param>
            <param name="arg10">Argument 10.</param>
            <param name="arg11">Argument 11.</param>
            <param name="arg12">Argument 12.</param>
            <param name="arg13">Argument 13.</param>
            <param name="arg14">Argument 14.</param>
            <param name="arg15">Argument 15.</param>
            <param name="arg16">Argument 16.</param>
            <param name="arg17">Argument 17.</param>
            <param name="arg18">Argument 18.</param>
            <param name="arg19">Argument 19.</param>
            <param name="arg20">Argument 20.</param>
            <param name="arg21">Argument 21.</param>
            <param name="arg22">Argument 22.</param>
            <param name="arg23">Argument 23.</param>
        </member>
        <member name="T:WebApplications.Utilities.Threading.BufferedAction`24">
            <summary>
            Buffers calls to an action.
            </summary>
            <typeparam name="T1">The type of argument 1.</typeparam>
            <typeparam name="T2">The type of argument 2.</typeparam>
            <typeparam name="T3">The type of argument 3.</typeparam>
            <typeparam name="T4">The type of argument 4.</typeparam>
            <typeparam name="T5">The type of argument 5.</typeparam>
            <typeparam name="T6">The type of argument 6.</typeparam>
            <typeparam name="T7">The type of argument 7.</typeparam>
            <typeparam name="T8">The type of argument 8.</typeparam>
            <typeparam name="T9">The type of argument 9.</typeparam>
            <typeparam name="T10">The type of argument 10.</typeparam>
            <typeparam name="T11">The type of argument 11.</typeparam>
            <typeparam name="T12">The type of argument 12.</typeparam>
            <typeparam name="T13">The type of argument 13.</typeparam>
            <typeparam name="T14">The type of argument 14.</typeparam>
            <typeparam name="T15">The type of argument 15.</typeparam>
            <typeparam name="T16">The type of argument 16.</typeparam>
            <typeparam name="T17">The type of argument 17.</typeparam>
            <typeparam name="T18">The type of argument 18.</typeparam>
            <typeparam name="T19">The type of argument 19.</typeparam>
            <typeparam name="T20">The type of argument 20.</typeparam>
            <typeparam name="T21">The type of argument 21.</typeparam>
            <typeparam name="T22">The type of argument 22.</typeparam>
            <typeparam name="T23">The type of argument 23.</typeparam>
            <typeparam name="T24">The type of argument 24.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`24.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23}},NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`24.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23}},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`24.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23}},System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`24.Run(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23)">
            <summary>
            Buffers a call to the underlying action.
            </summary>
            <param name="arg1">Argument 1.</param>
            <param name="arg2">Argument 2.</param>
            <param name="arg3">Argument 3.</param>
            <param name="arg4">Argument 4.</param>
            <param name="arg5">Argument 5.</param>
            <param name="arg6">Argument 6.</param>
            <param name="arg7">Argument 7.</param>
            <param name="arg8">Argument 8.</param>
            <param name="arg9">Argument 9.</param>
            <param name="arg10">Argument 10.</param>
            <param name="arg11">Argument 11.</param>
            <param name="arg12">Argument 12.</param>
            <param name="arg13">Argument 13.</param>
            <param name="arg14">Argument 14.</param>
            <param name="arg15">Argument 15.</param>
            <param name="arg16">Argument 16.</param>
            <param name="arg17">Argument 17.</param>
            <param name="arg18">Argument 18.</param>
            <param name="arg19">Argument 19.</param>
            <param name="arg20">Argument 20.</param>
            <param name="arg21">Argument 21.</param>
            <param name="arg22">Argument 22.</param>
            <param name="arg23">Argument 23.</param>
            <param name="arg24">Argument 24.</param>
        </member>
        <member name="T:WebApplications.Utilities.Threading.BufferedAction`25">
            <summary>
            Buffers calls to an action.
            </summary>
            <typeparam name="T1">The type of argument 1.</typeparam>
            <typeparam name="T2">The type of argument 2.</typeparam>
            <typeparam name="T3">The type of argument 3.</typeparam>
            <typeparam name="T4">The type of argument 4.</typeparam>
            <typeparam name="T5">The type of argument 5.</typeparam>
            <typeparam name="T6">The type of argument 6.</typeparam>
            <typeparam name="T7">The type of argument 7.</typeparam>
            <typeparam name="T8">The type of argument 8.</typeparam>
            <typeparam name="T9">The type of argument 9.</typeparam>
            <typeparam name="T10">The type of argument 10.</typeparam>
            <typeparam name="T11">The type of argument 11.</typeparam>
            <typeparam name="T12">The type of argument 12.</typeparam>
            <typeparam name="T13">The type of argument 13.</typeparam>
            <typeparam name="T14">The type of argument 14.</typeparam>
            <typeparam name="T15">The type of argument 15.</typeparam>
            <typeparam name="T16">The type of argument 16.</typeparam>
            <typeparam name="T17">The type of argument 17.</typeparam>
            <typeparam name="T18">The type of argument 18.</typeparam>
            <typeparam name="T19">The type of argument 19.</typeparam>
            <typeparam name="T20">The type of argument 20.</typeparam>
            <typeparam name="T21">The type of argument 21.</typeparam>
            <typeparam name="T22">The type of argument 22.</typeparam>
            <typeparam name="T23">The type of argument 23.</typeparam>
            <typeparam name="T24">The type of argument 24.</typeparam>
            <typeparam name="T25">The type of argument 25.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`25.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24}},NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`25.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24}},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`25.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24}},System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`25.Run(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24)">
            <summary>
            Buffers a call to the underlying action.
            </summary>
            <param name="arg1">Argument 1.</param>
            <param name="arg2">Argument 2.</param>
            <param name="arg3">Argument 3.</param>
            <param name="arg4">Argument 4.</param>
            <param name="arg5">Argument 5.</param>
            <param name="arg6">Argument 6.</param>
            <param name="arg7">Argument 7.</param>
            <param name="arg8">Argument 8.</param>
            <param name="arg9">Argument 9.</param>
            <param name="arg10">Argument 10.</param>
            <param name="arg11">Argument 11.</param>
            <param name="arg12">Argument 12.</param>
            <param name="arg13">Argument 13.</param>
            <param name="arg14">Argument 14.</param>
            <param name="arg15">Argument 15.</param>
            <param name="arg16">Argument 16.</param>
            <param name="arg17">Argument 17.</param>
            <param name="arg18">Argument 18.</param>
            <param name="arg19">Argument 19.</param>
            <param name="arg20">Argument 20.</param>
            <param name="arg21">Argument 21.</param>
            <param name="arg22">Argument 22.</param>
            <param name="arg23">Argument 23.</param>
            <param name="arg24">Argument 24.</param>
            <param name="arg25">Argument 25.</param>
        </member>
        <member name="T:WebApplications.Utilities.Threading.BufferedAction`26">
            <summary>
            Buffers calls to an action.
            </summary>
            <typeparam name="T1">The type of argument 1.</typeparam>
            <typeparam name="T2">The type of argument 2.</typeparam>
            <typeparam name="T3">The type of argument 3.</typeparam>
            <typeparam name="T4">The type of argument 4.</typeparam>
            <typeparam name="T5">The type of argument 5.</typeparam>
            <typeparam name="T6">The type of argument 6.</typeparam>
            <typeparam name="T7">The type of argument 7.</typeparam>
            <typeparam name="T8">The type of argument 8.</typeparam>
            <typeparam name="T9">The type of argument 9.</typeparam>
            <typeparam name="T10">The type of argument 10.</typeparam>
            <typeparam name="T11">The type of argument 11.</typeparam>
            <typeparam name="T12">The type of argument 12.</typeparam>
            <typeparam name="T13">The type of argument 13.</typeparam>
            <typeparam name="T14">The type of argument 14.</typeparam>
            <typeparam name="T15">The type of argument 15.</typeparam>
            <typeparam name="T16">The type of argument 16.</typeparam>
            <typeparam name="T17">The type of argument 17.</typeparam>
            <typeparam name="T18">The type of argument 18.</typeparam>
            <typeparam name="T19">The type of argument 19.</typeparam>
            <typeparam name="T20">The type of argument 20.</typeparam>
            <typeparam name="T21">The type of argument 21.</typeparam>
            <typeparam name="T22">The type of argument 22.</typeparam>
            <typeparam name="T23">The type of argument 23.</typeparam>
            <typeparam name="T24">The type of argument 24.</typeparam>
            <typeparam name="T25">The type of argument 25.</typeparam>
            <typeparam name="T26">The type of argument 26.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`26.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25}},NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`26.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25}},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`26.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25}},System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`26.Run(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25)">
            <summary>
            Buffers a call to the underlying action.
            </summary>
            <param name="arg1">Argument 1.</param>
            <param name="arg2">Argument 2.</param>
            <param name="arg3">Argument 3.</param>
            <param name="arg4">Argument 4.</param>
            <param name="arg5">Argument 5.</param>
            <param name="arg6">Argument 6.</param>
            <param name="arg7">Argument 7.</param>
            <param name="arg8">Argument 8.</param>
            <param name="arg9">Argument 9.</param>
            <param name="arg10">Argument 10.</param>
            <param name="arg11">Argument 11.</param>
            <param name="arg12">Argument 12.</param>
            <param name="arg13">Argument 13.</param>
            <param name="arg14">Argument 14.</param>
            <param name="arg15">Argument 15.</param>
            <param name="arg16">Argument 16.</param>
            <param name="arg17">Argument 17.</param>
            <param name="arg18">Argument 18.</param>
            <param name="arg19">Argument 19.</param>
            <param name="arg20">Argument 20.</param>
            <param name="arg21">Argument 21.</param>
            <param name="arg22">Argument 22.</param>
            <param name="arg23">Argument 23.</param>
            <param name="arg24">Argument 24.</param>
            <param name="arg25">Argument 25.</param>
            <param name="arg26">Argument 26.</param>
        </member>
        <member name="T:WebApplications.Utilities.Threading.BufferedAction`27">
            <summary>
            Buffers calls to an action.
            </summary>
            <typeparam name="T1">The type of argument 1.</typeparam>
            <typeparam name="T2">The type of argument 2.</typeparam>
            <typeparam name="T3">The type of argument 3.</typeparam>
            <typeparam name="T4">The type of argument 4.</typeparam>
            <typeparam name="T5">The type of argument 5.</typeparam>
            <typeparam name="T6">The type of argument 6.</typeparam>
            <typeparam name="T7">The type of argument 7.</typeparam>
            <typeparam name="T8">The type of argument 8.</typeparam>
            <typeparam name="T9">The type of argument 9.</typeparam>
            <typeparam name="T10">The type of argument 10.</typeparam>
            <typeparam name="T11">The type of argument 11.</typeparam>
            <typeparam name="T12">The type of argument 12.</typeparam>
            <typeparam name="T13">The type of argument 13.</typeparam>
            <typeparam name="T14">The type of argument 14.</typeparam>
            <typeparam name="T15">The type of argument 15.</typeparam>
            <typeparam name="T16">The type of argument 16.</typeparam>
            <typeparam name="T17">The type of argument 17.</typeparam>
            <typeparam name="T18">The type of argument 18.</typeparam>
            <typeparam name="T19">The type of argument 19.</typeparam>
            <typeparam name="T20">The type of argument 20.</typeparam>
            <typeparam name="T21">The type of argument 21.</typeparam>
            <typeparam name="T22">The type of argument 22.</typeparam>
            <typeparam name="T23">The type of argument 23.</typeparam>
            <typeparam name="T24">The type of argument 24.</typeparam>
            <typeparam name="T25">The type of argument 25.</typeparam>
            <typeparam name="T26">The type of argument 26.</typeparam>
            <typeparam name="T27">The type of argument 27.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`27.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26}},NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`27.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26}},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`27.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26}},System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`27.Run(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26)">
            <summary>
            Buffers a call to the underlying action.
            </summary>
            <param name="arg1">Argument 1.</param>
            <param name="arg2">Argument 2.</param>
            <param name="arg3">Argument 3.</param>
            <param name="arg4">Argument 4.</param>
            <param name="arg5">Argument 5.</param>
            <param name="arg6">Argument 6.</param>
            <param name="arg7">Argument 7.</param>
            <param name="arg8">Argument 8.</param>
            <param name="arg9">Argument 9.</param>
            <param name="arg10">Argument 10.</param>
            <param name="arg11">Argument 11.</param>
            <param name="arg12">Argument 12.</param>
            <param name="arg13">Argument 13.</param>
            <param name="arg14">Argument 14.</param>
            <param name="arg15">Argument 15.</param>
            <param name="arg16">Argument 16.</param>
            <param name="arg17">Argument 17.</param>
            <param name="arg18">Argument 18.</param>
            <param name="arg19">Argument 19.</param>
            <param name="arg20">Argument 20.</param>
            <param name="arg21">Argument 21.</param>
            <param name="arg22">Argument 22.</param>
            <param name="arg23">Argument 23.</param>
            <param name="arg24">Argument 24.</param>
            <param name="arg25">Argument 25.</param>
            <param name="arg26">Argument 26.</param>
            <param name="arg27">Argument 27.</param>
        </member>
        <member name="T:WebApplications.Utilities.Threading.BufferedAction`28">
            <summary>
            Buffers calls to an action.
            </summary>
            <typeparam name="T1">The type of argument 1.</typeparam>
            <typeparam name="T2">The type of argument 2.</typeparam>
            <typeparam name="T3">The type of argument 3.</typeparam>
            <typeparam name="T4">The type of argument 4.</typeparam>
            <typeparam name="T5">The type of argument 5.</typeparam>
            <typeparam name="T6">The type of argument 6.</typeparam>
            <typeparam name="T7">The type of argument 7.</typeparam>
            <typeparam name="T8">The type of argument 8.</typeparam>
            <typeparam name="T9">The type of argument 9.</typeparam>
            <typeparam name="T10">The type of argument 10.</typeparam>
            <typeparam name="T11">The type of argument 11.</typeparam>
            <typeparam name="T12">The type of argument 12.</typeparam>
            <typeparam name="T13">The type of argument 13.</typeparam>
            <typeparam name="T14">The type of argument 14.</typeparam>
            <typeparam name="T15">The type of argument 15.</typeparam>
            <typeparam name="T16">The type of argument 16.</typeparam>
            <typeparam name="T17">The type of argument 17.</typeparam>
            <typeparam name="T18">The type of argument 18.</typeparam>
            <typeparam name="T19">The type of argument 19.</typeparam>
            <typeparam name="T20">The type of argument 20.</typeparam>
            <typeparam name="T21">The type of argument 21.</typeparam>
            <typeparam name="T22">The type of argument 22.</typeparam>
            <typeparam name="T23">The type of argument 23.</typeparam>
            <typeparam name="T24">The type of argument 24.</typeparam>
            <typeparam name="T25">The type of argument 25.</typeparam>
            <typeparam name="T26">The type of argument 26.</typeparam>
            <typeparam name="T27">The type of argument 27.</typeparam>
            <typeparam name="T28">The type of argument 28.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`28.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27}},NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`28.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27}},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`28.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27}},System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`28.Run(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27)">
            <summary>
            Buffers a call to the underlying action.
            </summary>
            <param name="arg1">Argument 1.</param>
            <param name="arg2">Argument 2.</param>
            <param name="arg3">Argument 3.</param>
            <param name="arg4">Argument 4.</param>
            <param name="arg5">Argument 5.</param>
            <param name="arg6">Argument 6.</param>
            <param name="arg7">Argument 7.</param>
            <param name="arg8">Argument 8.</param>
            <param name="arg9">Argument 9.</param>
            <param name="arg10">Argument 10.</param>
            <param name="arg11">Argument 11.</param>
            <param name="arg12">Argument 12.</param>
            <param name="arg13">Argument 13.</param>
            <param name="arg14">Argument 14.</param>
            <param name="arg15">Argument 15.</param>
            <param name="arg16">Argument 16.</param>
            <param name="arg17">Argument 17.</param>
            <param name="arg18">Argument 18.</param>
            <param name="arg19">Argument 19.</param>
            <param name="arg20">Argument 20.</param>
            <param name="arg21">Argument 21.</param>
            <param name="arg22">Argument 22.</param>
            <param name="arg23">Argument 23.</param>
            <param name="arg24">Argument 24.</param>
            <param name="arg25">Argument 25.</param>
            <param name="arg26">Argument 26.</param>
            <param name="arg27">Argument 27.</param>
            <param name="arg28">Argument 28.</param>
        </member>
        <member name="T:WebApplications.Utilities.Threading.BufferedAction`29">
            <summary>
            Buffers calls to an action.
            </summary>
            <typeparam name="T1">The type of argument 1.</typeparam>
            <typeparam name="T2">The type of argument 2.</typeparam>
            <typeparam name="T3">The type of argument 3.</typeparam>
            <typeparam name="T4">The type of argument 4.</typeparam>
            <typeparam name="T5">The type of argument 5.</typeparam>
            <typeparam name="T6">The type of argument 6.</typeparam>
            <typeparam name="T7">The type of argument 7.</typeparam>
            <typeparam name="T8">The type of argument 8.</typeparam>
            <typeparam name="T9">The type of argument 9.</typeparam>
            <typeparam name="T10">The type of argument 10.</typeparam>
            <typeparam name="T11">The type of argument 11.</typeparam>
            <typeparam name="T12">The type of argument 12.</typeparam>
            <typeparam name="T13">The type of argument 13.</typeparam>
            <typeparam name="T14">The type of argument 14.</typeparam>
            <typeparam name="T15">The type of argument 15.</typeparam>
            <typeparam name="T16">The type of argument 16.</typeparam>
            <typeparam name="T17">The type of argument 17.</typeparam>
            <typeparam name="T18">The type of argument 18.</typeparam>
            <typeparam name="T19">The type of argument 19.</typeparam>
            <typeparam name="T20">The type of argument 20.</typeparam>
            <typeparam name="T21">The type of argument 21.</typeparam>
            <typeparam name="T22">The type of argument 22.</typeparam>
            <typeparam name="T23">The type of argument 23.</typeparam>
            <typeparam name="T24">The type of argument 24.</typeparam>
            <typeparam name="T25">The type of argument 25.</typeparam>
            <typeparam name="T26">The type of argument 26.</typeparam>
            <typeparam name="T27">The type of argument 27.</typeparam>
            <typeparam name="T28">The type of argument 28.</typeparam>
            <typeparam name="T29">The type of argument 29.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`29.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28}},NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`29.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28}},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`29.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28}},System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`29.Run(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28)">
            <summary>
            Buffers a call to the underlying action.
            </summary>
            <param name="arg1">Argument 1.</param>
            <param name="arg2">Argument 2.</param>
            <param name="arg3">Argument 3.</param>
            <param name="arg4">Argument 4.</param>
            <param name="arg5">Argument 5.</param>
            <param name="arg6">Argument 6.</param>
            <param name="arg7">Argument 7.</param>
            <param name="arg8">Argument 8.</param>
            <param name="arg9">Argument 9.</param>
            <param name="arg10">Argument 10.</param>
            <param name="arg11">Argument 11.</param>
            <param name="arg12">Argument 12.</param>
            <param name="arg13">Argument 13.</param>
            <param name="arg14">Argument 14.</param>
            <param name="arg15">Argument 15.</param>
            <param name="arg16">Argument 16.</param>
            <param name="arg17">Argument 17.</param>
            <param name="arg18">Argument 18.</param>
            <param name="arg19">Argument 19.</param>
            <param name="arg20">Argument 20.</param>
            <param name="arg21">Argument 21.</param>
            <param name="arg22">Argument 22.</param>
            <param name="arg23">Argument 23.</param>
            <param name="arg24">Argument 24.</param>
            <param name="arg25">Argument 25.</param>
            <param name="arg26">Argument 26.</param>
            <param name="arg27">Argument 27.</param>
            <param name="arg28">Argument 28.</param>
            <param name="arg29">Argument 29.</param>
        </member>
        <member name="T:WebApplications.Utilities.Threading.BufferedAction`30">
            <summary>
            Buffers calls to an action.
            </summary>
            <typeparam name="T1">The type of argument 1.</typeparam>
            <typeparam name="T2">The type of argument 2.</typeparam>
            <typeparam name="T3">The type of argument 3.</typeparam>
            <typeparam name="T4">The type of argument 4.</typeparam>
            <typeparam name="T5">The type of argument 5.</typeparam>
            <typeparam name="T6">The type of argument 6.</typeparam>
            <typeparam name="T7">The type of argument 7.</typeparam>
            <typeparam name="T8">The type of argument 8.</typeparam>
            <typeparam name="T9">The type of argument 9.</typeparam>
            <typeparam name="T10">The type of argument 10.</typeparam>
            <typeparam name="T11">The type of argument 11.</typeparam>
            <typeparam name="T12">The type of argument 12.</typeparam>
            <typeparam name="T13">The type of argument 13.</typeparam>
            <typeparam name="T14">The type of argument 14.</typeparam>
            <typeparam name="T15">The type of argument 15.</typeparam>
            <typeparam name="T16">The type of argument 16.</typeparam>
            <typeparam name="T17">The type of argument 17.</typeparam>
            <typeparam name="T18">The type of argument 18.</typeparam>
            <typeparam name="T19">The type of argument 19.</typeparam>
            <typeparam name="T20">The type of argument 20.</typeparam>
            <typeparam name="T21">The type of argument 21.</typeparam>
            <typeparam name="T22">The type of argument 22.</typeparam>
            <typeparam name="T23">The type of argument 23.</typeparam>
            <typeparam name="T24">The type of argument 24.</typeparam>
            <typeparam name="T25">The type of argument 25.</typeparam>
            <typeparam name="T26">The type of argument 26.</typeparam>
            <typeparam name="T27">The type of argument 27.</typeparam>
            <typeparam name="T28">The type of argument 28.</typeparam>
            <typeparam name="T29">The type of argument 29.</typeparam>
            <typeparam name="T30">The type of argument 30.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`30.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29}},NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`30.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29}},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`30.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29}},System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`30.Run(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29)">
            <summary>
            Buffers a call to the underlying action.
            </summary>
            <param name="arg1">Argument 1.</param>
            <param name="arg2">Argument 2.</param>
            <param name="arg3">Argument 3.</param>
            <param name="arg4">Argument 4.</param>
            <param name="arg5">Argument 5.</param>
            <param name="arg6">Argument 6.</param>
            <param name="arg7">Argument 7.</param>
            <param name="arg8">Argument 8.</param>
            <param name="arg9">Argument 9.</param>
            <param name="arg10">Argument 10.</param>
            <param name="arg11">Argument 11.</param>
            <param name="arg12">Argument 12.</param>
            <param name="arg13">Argument 13.</param>
            <param name="arg14">Argument 14.</param>
            <param name="arg15">Argument 15.</param>
            <param name="arg16">Argument 16.</param>
            <param name="arg17">Argument 17.</param>
            <param name="arg18">Argument 18.</param>
            <param name="arg19">Argument 19.</param>
            <param name="arg20">Argument 20.</param>
            <param name="arg21">Argument 21.</param>
            <param name="arg22">Argument 22.</param>
            <param name="arg23">Argument 23.</param>
            <param name="arg24">Argument 24.</param>
            <param name="arg25">Argument 25.</param>
            <param name="arg26">Argument 26.</param>
            <param name="arg27">Argument 27.</param>
            <param name="arg28">Argument 28.</param>
            <param name="arg29">Argument 29.</param>
            <param name="arg30">Argument 30.</param>
        </member>
        <member name="T:WebApplications.Utilities.Threading.BufferedAction`31">
            <summary>
            Buffers calls to an action.
            </summary>
            <typeparam name="T1">The type of argument 1.</typeparam>
            <typeparam name="T2">The type of argument 2.</typeparam>
            <typeparam name="T3">The type of argument 3.</typeparam>
            <typeparam name="T4">The type of argument 4.</typeparam>
            <typeparam name="T5">The type of argument 5.</typeparam>
            <typeparam name="T6">The type of argument 6.</typeparam>
            <typeparam name="T7">The type of argument 7.</typeparam>
            <typeparam name="T8">The type of argument 8.</typeparam>
            <typeparam name="T9">The type of argument 9.</typeparam>
            <typeparam name="T10">The type of argument 10.</typeparam>
            <typeparam name="T11">The type of argument 11.</typeparam>
            <typeparam name="T12">The type of argument 12.</typeparam>
            <typeparam name="T13">The type of argument 13.</typeparam>
            <typeparam name="T14">The type of argument 14.</typeparam>
            <typeparam name="T15">The type of argument 15.</typeparam>
            <typeparam name="T16">The type of argument 16.</typeparam>
            <typeparam name="T17">The type of argument 17.</typeparam>
            <typeparam name="T18">The type of argument 18.</typeparam>
            <typeparam name="T19">The type of argument 19.</typeparam>
            <typeparam name="T20">The type of argument 20.</typeparam>
            <typeparam name="T21">The type of argument 21.</typeparam>
            <typeparam name="T22">The type of argument 22.</typeparam>
            <typeparam name="T23">The type of argument 23.</typeparam>
            <typeparam name="T24">The type of argument 24.</typeparam>
            <typeparam name="T25">The type of argument 25.</typeparam>
            <typeparam name="T26">The type of argument 26.</typeparam>
            <typeparam name="T27">The type of argument 27.</typeparam>
            <typeparam name="T28">The type of argument 28.</typeparam>
            <typeparam name="T29">The type of argument 29.</typeparam>
            <typeparam name="T30">The type of argument 30.</typeparam>
            <typeparam name="T31">The type of argument 31.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`31.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30}},NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`31.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30}},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`31.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30}},System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`31.Run(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30)">
            <summary>
            Buffers a call to the underlying action.
            </summary>
            <param name="arg1">Argument 1.</param>
            <param name="arg2">Argument 2.</param>
            <param name="arg3">Argument 3.</param>
            <param name="arg4">Argument 4.</param>
            <param name="arg5">Argument 5.</param>
            <param name="arg6">Argument 6.</param>
            <param name="arg7">Argument 7.</param>
            <param name="arg8">Argument 8.</param>
            <param name="arg9">Argument 9.</param>
            <param name="arg10">Argument 10.</param>
            <param name="arg11">Argument 11.</param>
            <param name="arg12">Argument 12.</param>
            <param name="arg13">Argument 13.</param>
            <param name="arg14">Argument 14.</param>
            <param name="arg15">Argument 15.</param>
            <param name="arg16">Argument 16.</param>
            <param name="arg17">Argument 17.</param>
            <param name="arg18">Argument 18.</param>
            <param name="arg19">Argument 19.</param>
            <param name="arg20">Argument 20.</param>
            <param name="arg21">Argument 21.</param>
            <param name="arg22">Argument 22.</param>
            <param name="arg23">Argument 23.</param>
            <param name="arg24">Argument 24.</param>
            <param name="arg25">Argument 25.</param>
            <param name="arg26">Argument 26.</param>
            <param name="arg27">Argument 27.</param>
            <param name="arg28">Argument 28.</param>
            <param name="arg29">Argument 29.</param>
            <param name="arg30">Argument 30.</param>
            <param name="arg31">Argument 31.</param>
        </member>
        <member name="T:WebApplications.Utilities.Threading.BufferedAction`32">
            <summary>
            Buffers calls to an action.
            </summary>
            <typeparam name="T1">The type of argument 1.</typeparam>
            <typeparam name="T2">The type of argument 2.</typeparam>
            <typeparam name="T3">The type of argument 3.</typeparam>
            <typeparam name="T4">The type of argument 4.</typeparam>
            <typeparam name="T5">The type of argument 5.</typeparam>
            <typeparam name="T6">The type of argument 6.</typeparam>
            <typeparam name="T7">The type of argument 7.</typeparam>
            <typeparam name="T8">The type of argument 8.</typeparam>
            <typeparam name="T9">The type of argument 9.</typeparam>
            <typeparam name="T10">The type of argument 10.</typeparam>
            <typeparam name="T11">The type of argument 11.</typeparam>
            <typeparam name="T12">The type of argument 12.</typeparam>
            <typeparam name="T13">The type of argument 13.</typeparam>
            <typeparam name="T14">The type of argument 14.</typeparam>
            <typeparam name="T15">The type of argument 15.</typeparam>
            <typeparam name="T16">The type of argument 16.</typeparam>
            <typeparam name="T17">The type of argument 17.</typeparam>
            <typeparam name="T18">The type of argument 18.</typeparam>
            <typeparam name="T19">The type of argument 19.</typeparam>
            <typeparam name="T20">The type of argument 20.</typeparam>
            <typeparam name="T21">The type of argument 21.</typeparam>
            <typeparam name="T22">The type of argument 22.</typeparam>
            <typeparam name="T23">The type of argument 23.</typeparam>
            <typeparam name="T24">The type of argument 24.</typeparam>
            <typeparam name="T25">The type of argument 25.</typeparam>
            <typeparam name="T26">The type of argument 26.</typeparam>
            <typeparam name="T27">The type of argument 27.</typeparam>
            <typeparam name="T28">The type of argument 28.</typeparam>
            <typeparam name="T29">The type of argument 29.</typeparam>
            <typeparam name="T30">The type of argument 30.</typeparam>
            <typeparam name="T31">The type of argument 31.</typeparam>
            <typeparam name="T32">The type of argument 32.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`32.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30,`31}},NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`32.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30,`31}},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`32.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30,`31}},System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`32.Run(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30,`31)">
            <summary>
            Buffers a call to the underlying action.
            </summary>
            <param name="arg1">Argument 1.</param>
            <param name="arg2">Argument 2.</param>
            <param name="arg3">Argument 3.</param>
            <param name="arg4">Argument 4.</param>
            <param name="arg5">Argument 5.</param>
            <param name="arg6">Argument 6.</param>
            <param name="arg7">Argument 7.</param>
            <param name="arg8">Argument 8.</param>
            <param name="arg9">Argument 9.</param>
            <param name="arg10">Argument 10.</param>
            <param name="arg11">Argument 11.</param>
            <param name="arg12">Argument 12.</param>
            <param name="arg13">Argument 13.</param>
            <param name="arg14">Argument 14.</param>
            <param name="arg15">Argument 15.</param>
            <param name="arg16">Argument 16.</param>
            <param name="arg17">Argument 17.</param>
            <param name="arg18">Argument 18.</param>
            <param name="arg19">Argument 19.</param>
            <param name="arg20">Argument 20.</param>
            <param name="arg21">Argument 21.</param>
            <param name="arg22">Argument 22.</param>
            <param name="arg23">Argument 23.</param>
            <param name="arg24">Argument 24.</param>
            <param name="arg25">Argument 25.</param>
            <param name="arg26">Argument 26.</param>
            <param name="arg27">Argument 27.</param>
            <param name="arg28">Argument 28.</param>
            <param name="arg29">Argument 29.</param>
            <param name="arg30">Argument 30.</param>
            <param name="arg31">Argument 31.</param>
            <param name="arg32">Argument 32.</param>
        </member>
        <member name="T:WebApplications.Utilities.Threading.BufferedAction`33">
            <summary>
            Buffers calls to an action.
            </summary>
            <typeparam name="T1">The type of argument 1.</typeparam>
            <typeparam name="T2">The type of argument 2.</typeparam>
            <typeparam name="T3">The type of argument 3.</typeparam>
            <typeparam name="T4">The type of argument 4.</typeparam>
            <typeparam name="T5">The type of argument 5.</typeparam>
            <typeparam name="T6">The type of argument 6.</typeparam>
            <typeparam name="T7">The type of argument 7.</typeparam>
            <typeparam name="T8">The type of argument 8.</typeparam>
            <typeparam name="T9">The type of argument 9.</typeparam>
            <typeparam name="T10">The type of argument 10.</typeparam>
            <typeparam name="T11">The type of argument 11.</typeparam>
            <typeparam name="T12">The type of argument 12.</typeparam>
            <typeparam name="T13">The type of argument 13.</typeparam>
            <typeparam name="T14">The type of argument 14.</typeparam>
            <typeparam name="T15">The type of argument 15.</typeparam>
            <typeparam name="T16">The type of argument 16.</typeparam>
            <typeparam name="T17">The type of argument 17.</typeparam>
            <typeparam name="T18">The type of argument 18.</typeparam>
            <typeparam name="T19">The type of argument 19.</typeparam>
            <typeparam name="T20">The type of argument 20.</typeparam>
            <typeparam name="T21">The type of argument 21.</typeparam>
            <typeparam name="T22">The type of argument 22.</typeparam>
            <typeparam name="T23">The type of argument 23.</typeparam>
            <typeparam name="T24">The type of argument 24.</typeparam>
            <typeparam name="T25">The type of argument 25.</typeparam>
            <typeparam name="T26">The type of argument 26.</typeparam>
            <typeparam name="T27">The type of argument 27.</typeparam>
            <typeparam name="T28">The type of argument 28.</typeparam>
            <typeparam name="T29">The type of argument 29.</typeparam>
            <typeparam name="T30">The type of argument 30.</typeparam>
            <typeparam name="T31">The type of argument 31.</typeparam>
            <typeparam name="T32">The type of argument 32.</typeparam>
            <typeparam name="T33">The type of argument 33.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`33.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30,`31,`32}},NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`33.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30,`31,`32}},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`33.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30,`31,`32}},System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`33.Run(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30,`31,`32)">
            <summary>
            Buffers a call to the underlying action.
            </summary>
            <param name="arg1">Argument 1.</param>
            <param name="arg2">Argument 2.</param>
            <param name="arg3">Argument 3.</param>
            <param name="arg4">Argument 4.</param>
            <param name="arg5">Argument 5.</param>
            <param name="arg6">Argument 6.</param>
            <param name="arg7">Argument 7.</param>
            <param name="arg8">Argument 8.</param>
            <param name="arg9">Argument 9.</param>
            <param name="arg10">Argument 10.</param>
            <param name="arg11">Argument 11.</param>
            <param name="arg12">Argument 12.</param>
            <param name="arg13">Argument 13.</param>
            <param name="arg14">Argument 14.</param>
            <param name="arg15">Argument 15.</param>
            <param name="arg16">Argument 16.</param>
            <param name="arg17">Argument 17.</param>
            <param name="arg18">Argument 18.</param>
            <param name="arg19">Argument 19.</param>
            <param name="arg20">Argument 20.</param>
            <param name="arg21">Argument 21.</param>
            <param name="arg22">Argument 22.</param>
            <param name="arg23">Argument 23.</param>
            <param name="arg24">Argument 24.</param>
            <param name="arg25">Argument 25.</param>
            <param name="arg26">Argument 26.</param>
            <param name="arg27">Argument 27.</param>
            <param name="arg28">Argument 28.</param>
            <param name="arg29">Argument 29.</param>
            <param name="arg30">Argument 30.</param>
            <param name="arg31">Argument 31.</param>
            <param name="arg32">Argument 32.</param>
            <param name="arg33">Argument 33.</param>
        </member>
        <member name="T:WebApplications.Utilities.Threading.BufferedAction`34">
            <summary>
            Buffers calls to an action.
            </summary>
            <typeparam name="T1">The type of argument 1.</typeparam>
            <typeparam name="T2">The type of argument 2.</typeparam>
            <typeparam name="T3">The type of argument 3.</typeparam>
            <typeparam name="T4">The type of argument 4.</typeparam>
            <typeparam name="T5">The type of argument 5.</typeparam>
            <typeparam name="T6">The type of argument 6.</typeparam>
            <typeparam name="T7">The type of argument 7.</typeparam>
            <typeparam name="T8">The type of argument 8.</typeparam>
            <typeparam name="T9">The type of argument 9.</typeparam>
            <typeparam name="T10">The type of argument 10.</typeparam>
            <typeparam name="T11">The type of argument 11.</typeparam>
            <typeparam name="T12">The type of argument 12.</typeparam>
            <typeparam name="T13">The type of argument 13.</typeparam>
            <typeparam name="T14">The type of argument 14.</typeparam>
            <typeparam name="T15">The type of argument 15.</typeparam>
            <typeparam name="T16">The type of argument 16.</typeparam>
            <typeparam name="T17">The type of argument 17.</typeparam>
            <typeparam name="T18">The type of argument 18.</typeparam>
            <typeparam name="T19">The type of argument 19.</typeparam>
            <typeparam name="T20">The type of argument 20.</typeparam>
            <typeparam name="T21">The type of argument 21.</typeparam>
            <typeparam name="T22">The type of argument 22.</typeparam>
            <typeparam name="T23">The type of argument 23.</typeparam>
            <typeparam name="T24">The type of argument 24.</typeparam>
            <typeparam name="T25">The type of argument 25.</typeparam>
            <typeparam name="T26">The type of argument 26.</typeparam>
            <typeparam name="T27">The type of argument 27.</typeparam>
            <typeparam name="T28">The type of argument 28.</typeparam>
            <typeparam name="T29">The type of argument 29.</typeparam>
            <typeparam name="T30">The type of argument 30.</typeparam>
            <typeparam name="T31">The type of argument 31.</typeparam>
            <typeparam name="T32">The type of argument 32.</typeparam>
            <typeparam name="T33">The type of argument 33.</typeparam>
            <typeparam name="T34">The type of argument 34.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`34.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30,`31,`32,`33}},NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`34.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30,`31,`32,`33}},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`34.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30,`31,`32,`33}},System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`34.Run(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30,`31,`32,`33)">
            <summary>
            Buffers a call to the underlying action.
            </summary>
            <param name="arg1">Argument 1.</param>
            <param name="arg2">Argument 2.</param>
            <param name="arg3">Argument 3.</param>
            <param name="arg4">Argument 4.</param>
            <param name="arg5">Argument 5.</param>
            <param name="arg6">Argument 6.</param>
            <param name="arg7">Argument 7.</param>
            <param name="arg8">Argument 8.</param>
            <param name="arg9">Argument 9.</param>
            <param name="arg10">Argument 10.</param>
            <param name="arg11">Argument 11.</param>
            <param name="arg12">Argument 12.</param>
            <param name="arg13">Argument 13.</param>
            <param name="arg14">Argument 14.</param>
            <param name="arg15">Argument 15.</param>
            <param name="arg16">Argument 16.</param>
            <param name="arg17">Argument 17.</param>
            <param name="arg18">Argument 18.</param>
            <param name="arg19">Argument 19.</param>
            <param name="arg20">Argument 20.</param>
            <param name="arg21">Argument 21.</param>
            <param name="arg22">Argument 22.</param>
            <param name="arg23">Argument 23.</param>
            <param name="arg24">Argument 24.</param>
            <param name="arg25">Argument 25.</param>
            <param name="arg26">Argument 26.</param>
            <param name="arg27">Argument 27.</param>
            <param name="arg28">Argument 28.</param>
            <param name="arg29">Argument 29.</param>
            <param name="arg30">Argument 30.</param>
            <param name="arg31">Argument 31.</param>
            <param name="arg32">Argument 32.</param>
            <param name="arg33">Argument 33.</param>
            <param name="arg34">Argument 34.</param>
        </member>
        <member name="T:WebApplications.Utilities.Threading.BufferedAction`35">
            <summary>
            Buffers calls to an action.
            </summary>
            <typeparam name="T1">The type of argument 1.</typeparam>
            <typeparam name="T2">The type of argument 2.</typeparam>
            <typeparam name="T3">The type of argument 3.</typeparam>
            <typeparam name="T4">The type of argument 4.</typeparam>
            <typeparam name="T5">The type of argument 5.</typeparam>
            <typeparam name="T6">The type of argument 6.</typeparam>
            <typeparam name="T7">The type of argument 7.</typeparam>
            <typeparam name="T8">The type of argument 8.</typeparam>
            <typeparam name="T9">The type of argument 9.</typeparam>
            <typeparam name="T10">The type of argument 10.</typeparam>
            <typeparam name="T11">The type of argument 11.</typeparam>
            <typeparam name="T12">The type of argument 12.</typeparam>
            <typeparam name="T13">The type of argument 13.</typeparam>
            <typeparam name="T14">The type of argument 14.</typeparam>
            <typeparam name="T15">The type of argument 15.</typeparam>
            <typeparam name="T16">The type of argument 16.</typeparam>
            <typeparam name="T17">The type of argument 17.</typeparam>
            <typeparam name="T18">The type of argument 18.</typeparam>
            <typeparam name="T19">The type of argument 19.</typeparam>
            <typeparam name="T20">The type of argument 20.</typeparam>
            <typeparam name="T21">The type of argument 21.</typeparam>
            <typeparam name="T22">The type of argument 22.</typeparam>
            <typeparam name="T23">The type of argument 23.</typeparam>
            <typeparam name="T24">The type of argument 24.</typeparam>
            <typeparam name="T25">The type of argument 25.</typeparam>
            <typeparam name="T26">The type of argument 26.</typeparam>
            <typeparam name="T27">The type of argument 27.</typeparam>
            <typeparam name="T28">The type of argument 28.</typeparam>
            <typeparam name="T29">The type of argument 29.</typeparam>
            <typeparam name="T30">The type of argument 30.</typeparam>
            <typeparam name="T31">The type of argument 31.</typeparam>
            <typeparam name="T32">The type of argument 32.</typeparam>
            <typeparam name="T33">The type of argument 33.</typeparam>
            <typeparam name="T34">The type of argument 34.</typeparam>
            <typeparam name="T35">The type of argument 35.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`35.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30,`31,`32,`33,`34}},NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`35.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30,`31,`32,`33,`34}},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`35.#ctor(System.Action{WebApplications.Utilities.IEnumerable{`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30,`31,`32,`33,`34}},System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.BufferedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="action"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration"/> is less than or equal to zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.BufferedAction`35.Run(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30,`31,`32,`33,`34)">
            <summary>
            Buffers a call to the underlying action.
            </summary>
            <param name="arg1">Argument 1.</param>
            <param name="arg2">Argument 2.</param>
            <param name="arg3">Argument 3.</param>
            <param name="arg4">Argument 4.</param>
            <param name="arg5">Argument 5.</param>
            <param name="arg6">Argument 6.</param>
            <param name="arg7">Argument 7.</param>
            <param name="arg8">Argument 8.</param>
            <param name="arg9">Argument 9.</param>
            <param name="arg10">Argument 10.</param>
            <param name="arg11">Argument 11.</param>
            <param name="arg12">Argument 12.</param>
            <param name="arg13">Argument 13.</param>
            <param name="arg14">Argument 14.</param>
            <param name="arg15">Argument 15.</param>
            <param name="arg16">Argument 16.</param>
            <param name="arg17">Argument 17.</param>
            <param name="arg18">Argument 18.</param>
            <param name="arg19">Argument 19.</param>
            <param name="arg20">Argument 20.</param>
            <param name="arg21">Argument 21.</param>
            <param name="arg22">Argument 22.</param>
            <param name="arg23">Argument 23.</param>
            <param name="arg24">Argument 24.</param>
            <param name="arg25">Argument 25.</param>
            <param name="arg26">Argument 26.</param>
            <param name="arg27">Argument 27.</param>
            <param name="arg28">Argument 28.</param>
            <param name="arg29">Argument 29.</param>
            <param name="arg30">Argument 30.</param>
            <param name="arg31">Argument 31.</param>
            <param name="arg32">Argument 32.</param>
            <param name="arg33">Argument 33.</param>
            <param name="arg34">Argument 34.</param>
            <param name="arg35">Argument 35.</param>
        </member>
        <member name="T:WebApplications.Utilities.Threading.AsyncTimerCallback">
            <summary>
            Represents the method that handles calls from an <see cref="T:WebApplications.Utilities.Threading.AsyncTimer"/>.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:WebApplications.Utilities.Threading.AsyncTimer">
            <summary>
            Provides a mechanism for executing an asynchronous method at specified intervals.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.AsyncTimer.MinimumPeriodMs">
            <summary>
            The minimum period (in milliseconds), prevents the timer thrashing too quickly.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.AsyncTimer.MinimumPeriod">
            <summary>
            The minimum period, prevents the timer thrashing too quickly.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Threading.AsyncTimer.TimeOuts">
            <summary>
            Holds together timeout information in an immutable object for thread safety.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.AsyncTimer.TimeOuts.DueTimeMs">
            <summary>
            The due time (in milliseconds) between the last time the timeouts were changed (see <see cref="F:WebApplications.Utilities.Threading.AsyncTimer.TimeOuts.TimeStamp"/>) and the start of the task invocation.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.AsyncTimer.TimeOuts.MinimumGapMs">
            <summary>
            The minimum gap (in milliseconds) between the start of the task invocation and the end of the previous task invocation.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.AsyncTimer.TimeOuts.PeriodMs">
            <summary>
            The minimum gap (in milliseconds) between the start of the task invocation and the start of the previous task invocation.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.AsyncTimer.TimeOuts.TimeStamp">
            <summary>
            The time stamp (in <see cref="T:NodaTime.Duration">duration ticks</see>), for when these timeouts were set.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.AsyncTimer.TimeOuts.DueTimeStamp">
            <summary>
            The time stamp (in <see cref="T:NodaTime.Duration">duration ticks</see>), for <see cref="F:WebApplications.Utilities.Threading.AsyncTimer.TimeOuts.DueTimeMs"/>.
            </summary>
            <remarks>If <see cref="M:Change"/> was called and the DueTime was not updated, this field will have the 
            same value as in the old TimeOut. Otherwise, this will be equal to the <see cref="F:WebApplications.Utilities.Threading.AsyncTimer.TimeOuts.TimeStamp"/> + <see cref="F:WebApplications.Utilities.Threading.AsyncTimer.TimeOuts.DueTimeMs"/> (converted to ticks)</remarks>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncTimer.TimeOuts.#ctor(NodaTime.Duration,NodaTime.Duration,NodaTime.Duration,System.Int64,System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.AsyncTimer.TimeOuts" /> class.
            </summary>
            <param name="period">The period.</param>
            <param name="dueTime">The due time.</param>
            <param name="minimumGap">The minimum gap.</param>
            <param name="timeStamp">The time stamp.</param>
            <param name="dueTimeStamp">The due time stamp.</param>
        </member>
        <member name="P:WebApplications.Utilities.Threading.AsyncTimer.TimeOuts.DueTime">
            <summary>
            The due time between the last time the timeouts were changed (see <see cref="F:WebApplications.Utilities.Threading.AsyncTimer.TimeOuts.TimeStamp"/>) and the start of the task invocation.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Threading.AsyncTimer.TimeOuts.MinimumGap">
            <summary>
            The minimum gap  between the start of the task invocation and the end of the previous task invocation.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Threading.AsyncTimer.TimeOuts.Period">
            <summary>
            The minimum gap between the start of the task invocation and the start of the previous task invocation.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncTimer.#ctor(System.Action,System.Int32,System.Int32,System.Int32,WebApplications.Utilities.Threading.PauseToken,System.Action{System.Exception})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.AsyncTimer" /> class.
            </summary>
            <param name="callback">The callback.</param>
            <param name="period">The minimum gap (in milliseconds) between the start of the task invocation and the start of the previous task invocation (defaults to <see cref="F:System.Threading.Timeout.Infinite"/>).</param>
            <param name="dueTime">The due time (in milliseconds) between the last time the timeouts were changed and the start of the task invocation (defaults to 0ms).</param>
            <param name="minimumGap">The minimum gap (in milliseconds) between the start of the task invocation and the end of the previous task invocation (defaults to 0ms).</param>
            <param name="pauseToken">The pause token for pasuing the timer.</param>
            <param name="errorHandler">The optional error handler.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncTimer.#ctor(System.Action,System.Nullable{NodaTime.Duration},System.Nullable{NodaTime.Duration},System.Nullable{NodaTime.Duration},WebApplications.Utilities.Threading.PauseToken,System.Action{System.Exception})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.AsyncTimer" /> class.
            </summary>
            <param name="callback">The asynchronous method to be executed.</param>
            <param name="period">The minimum gap between the start of the task invocation and the start of the previous task invocation (defautls to <see langword="null" /> which is equivalent to <see cref="F:WebApplications.Utilities.TimeHelpers.InfiniteDuration" />).</param>
            <param name="dueTime">The due time between the last time the timeouts were changed and the start of the task invocation (defautls to <see langword="null" /> which is equivalent to <see cref="F:NodaTime.Duration.Zero" />).</param>
            <param name="minimumGap">The minimum gap between the start of the task invocation and the end of the previous task invocation (defautls to <see langword="null" /> which is equivalent to <see cref="F:NodaTime.Duration.Zero" />).</param>
            <param name="pauseToken">The pause token for pasuing the timer.</param>
            <param name="errorHandler">The optional error handler.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncTimer.#ctor(System.Action{System.Threading.CancellationToken},System.Int32,System.Int32,System.Int32,WebApplications.Utilities.Threading.PauseToken,System.Action{System.Exception})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.AsyncTimer" /> class.
            </summary>
            <param name="callback">The callback.</param>
            <param name="period">The minimum gap (in milliseconds) between the start of the task invocation and the start of the previous task invocation (defaults to <see cref="F:System.Threading.Timeout.Infinite"/>).</param>
            <param name="dueTime">The due time (in milliseconds) between the last time the timeouts were changed and the start of the task invocation (defaults to 0ms).</param>
            <param name="minimumGap">The minimum gap (in milliseconds) between the start of the task invocation and the end of the previous task invocation (defaults to 0ms).</param>
            <param name="pauseToken">The pause token for pasuing the timer.</param>
            <param name="errorHandler">The optional error handler.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncTimer.#ctor(System.Action{System.Threading.CancellationToken},System.Nullable{NodaTime.Duration},System.Nullable{NodaTime.Duration},System.Nullable{NodaTime.Duration},WebApplications.Utilities.Threading.PauseToken,System.Action{System.Exception})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.AsyncTimer" /> class.
            </summary>
            <param name="callback">The asynchronous method to be executed.</param>
            <param name="period">The minimum gap between the start of the task invocation and the start of the previous task invocation (defautls to <see langword="null" /> which is equivalent to <see cref="F:WebApplications.Utilities.TimeHelpers.InfiniteDuration" />).</param>
            <param name="dueTime">The due time between the last time the timeouts were changed and the start of the task invocation (defautls to <see langword="null" /> which is equivalent to <see cref="F:NodaTime.Duration.Zero" />).</param>
            <param name="minimumGap">The minimum gap between the start of the task invocation and the end of the previous task invocation (defautls to <see langword="null" /> which is equivalent to <see cref="F:NodaTime.Duration.Zero" />).</param>
            <param name="pauseToken">The pause token for pasuing the timer.</param>
            <param name="errorHandler">The optional error handler.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncTimer.#ctor(WebApplications.Utilities.Threading.AsyncTimerCallback,System.Int32,System.Int32,System.Int32,WebApplications.Utilities.Threading.PauseToken,System.Action{System.Exception})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.AsyncTimer" /> class.
            </summary>
            <param name="callback">The callback.</param>
            <param name="period">The minimum gap (in milliseconds) between the start of the task invocation and the start of the previous task invocation (defaults to <see cref="F:System.Threading.Timeout.Infinite"/>).</param>
            <param name="dueTime">The due time (in milliseconds) between the last time the timeouts were changed and the start of the task invocation (defaults to 0ms).</param>
            <param name="minimumGap">The minimum gap (in milliseconds) between the start of the task invocation and the end of the previous task invocation (defaults to 0ms).</param>
            <param name="pauseToken">The pause token for pasuing the timer.</param>
            <param name="errorHandler">The optional error handler.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncTimer.#ctor(WebApplications.Utilities.Threading.AsyncTimerCallback,System.Nullable{NodaTime.Duration},System.Nullable{NodaTime.Duration},System.Nullable{NodaTime.Duration},WebApplications.Utilities.Threading.PauseToken,System.Action{System.Exception})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.AsyncTimer" /> class.
            </summary>
            <param name="callback">The asynchronous method to be executed.</param>
            <param name="period">The minimum gap between the start of the task invocation and the start of the previous task invocation (defautls to <see langword="null" /> which is equivalent to <see cref="F:WebApplications.Utilities.TimeHelpers.InfiniteDuration" />).</param>
            <param name="dueTime">The due time between the last time the timeouts were changed and the start of the task invocation (defautls to <see langword="null" /> which is equivalent to <see cref="F:NodaTime.Duration.Zero" />).</param>
            <param name="minimumGap">The minimum gap between the start of the task invocation and the end of the previous task invocation (defautls to <see langword="null" /> which is equivalent to <see cref="F:NodaTime.Duration.Zero" />).</param>
            <param name="pauseToken">The pause token for pasuing the timer.</param>
            <param name="errorHandler">The optional error handler.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncTimer.TimerTask(System.Threading.CancellationToken)">
            <summary>
            The timer task executes the callback asynchronously after set delays.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncTimer.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Executes the timer's callback immediately, if it's not currently executing, and allows you to wait for it to finish.  Otheriwse,
            it waits for the current execution to finish.  The next execution will then be calculated based on the start/end of this execution.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            An awaitable task.
            </returns>
            <remarks>
            <para>This makes it easy to programmatically trigger the execution of a task that normally runs on a timer.</para>
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncTimer.Change(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Changes the specified due time and period.
            </summary>
            <param name="period">The optional minimum gap (in milliseconds) between the start of the task invocation and the start of the previous task invocation; use <see langword="null"/> to leave the value unchanged.</param>
            <param name="dueTime">The optional due time (in milliseconds) between the last time the timeouts were changed and the start of the task invocation; use <see langword="null"/> to leave the value unchanged.</param>
            <param name="minimumGap">The optional minimum gap (in milliseconds) between the start of the task invocation and the end of the previous task invocation; use <see langword="null"/> to leave the value unchanged.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncTimer.Change(System.Nullable{NodaTime.Duration},System.Nullable{NodaTime.Duration},System.Nullable{NodaTime.Duration})">
            <summary>
            Changes the specified due time and period.
            </summary>
            <param name="period">The optional minimum gap between the start of the task invocation and the start of the previous task invocation; use <see langword="null"/> to leave the value unchanged.</param>
            <param name="dueTime">The optional due time between the last time the timeouts were changed and the start of the task invocation; use <see langword="null"/> to leave the value unchanged.</param>
            <param name="minimumGap">The optional minimum gap between the start of the task invocation and the end of the previous task invocation; use <see langword="null"/> to leave the value unchanged.</param>
        </member>
        <member name="P:WebApplications.Utilities.Threading.AsyncTimer.DueTime">
            <summary>
            The due time between the last time the timeouts were changed and the start of the task invocation.
            </summary>
            <value>
            The due time.
            </value>
        </member>
        <member name="P:WebApplications.Utilities.Threading.AsyncTimer.MinimumGap">
            <summary>
            The minimum gap  between the start of the task invocation and the end of the previous task invocation.
            </summary>
            <value>
            The minimum gap.
            </value>
        </member>
        <member name="P:WebApplications.Utilities.Threading.AsyncTimer.Period">
            <summary>
            The minimum gap between the start of the task invocation and the start of the previous task invocation.
            </summary>
            <value>
            The period.
            </value>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncTimer.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Threading.CancelableTask">
            <summary>
            Allows cancellation of a task.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.CancelableTask.Completed">
            <summary>
            The completed result.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.CancelableTask.True">
            <summary>
            A cancelable task that returns a <see langword="true"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.CancelableTask.False">
            <summary>
            A cancelable task that returns a <see langword="false"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.CancelableTask.Zero">
            <summary>
            A cancelable task that returns a <c>0</c>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.CancelableTask.One">
            <summary>
            A cancelable task that returns a <c>1</c>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.CancelableTask.MinusOne">
            <summary>
            A cancelable task that returns a <c>-1</c>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.CancelableTask.MinInt">
            <summary>
            A cancelable task that returns <see cref="F:System.Int32.MinValue"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.CancelableTask.MaxInt">
            <summary>
            A cancelable task that returns <see cref="F:System.Int32.MaxValue"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.CancelableTask.Cancelled">
            <summary>
            The cancelled task.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask.FromResult``1(``0)">
            <summary>
            Creates a <see cref="T:WebApplications.Utilities.Threading.CancelableTask`1" /> that's completed successfully with the specified result.
            </summary>
            <typeparam name="TResult">The type of the result returned by the task.</typeparam>
            <param name="result">The result to store into the completed task.</param>
            <returns>
            The successfully completed task.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask.FromException(System.Exception)">
            <summary>
            Creates a <see cref="T:WebApplications.Utilities.Threading.CancelableTask" /> that's completed exceptionally with the specified exception.
            </summary>
            <param name="exception">The exception with which to complete the task.</param>
            <returns>
            The faulted task.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask.FromException``1(System.Exception)">
            <summary>
            Creates a <see cref="T:Task{TResult}" /> that's completed exceptionally with the specified exception.
            </summary>
            <typeparam name="TResult">The type of the result returned by the task.</typeparam>
            <param name="exception">The exception with which to complete the task.</param>
            <returns>
            The faulted task.
            </returns>
        </member>
        <member name="F:WebApplications.Utilities.Threading.CancelableTask._task">
            <summary>
            The task
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.CancelableTask._cts">
            <summary>
            The cancelable token source for canceling the task,
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Threading.CancelableTask.Task">
            <summary>
            Gets the underlaying task that can be cancelled.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Threading.CancelableTask.IsCanceled">
            <summary>
            Gets whether this <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/> instance has completed execution due to being canceled.
            </summary>
            <value>
            <see langword="true" /> if the task has completed due to being canceled; otherwise <see langword="false" />.
            </value>
        </member>
        <member name="P:WebApplications.Utilities.Threading.CancelableTask.IsCompleted">
            <summary>
            Gets whether this <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/> has completed.
            </summary>
            <value>
            <see langword="true" /> if the task has completed; otherwise <see langword="false" />.
            </value>
        </member>
        <member name="P:WebApplications.Utilities.Threading.CancelableTask.IsFaulted">
            <summary>
            Gets whether the <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/> completed due to an unhandled exception.
            </summary>
            <value>
            <see langword="true" /> if the task has thrown an unhandled exception; otherwise <see langword="false" />.
            </value>
        </member>
        <member name="P:WebApplications.Utilities.Threading.CancelableTask.Status">
            <summary>
            Gets the <see cref="T:System.Threading.Tasks.TaskStatus"/> of this task.
            </summary>
            <value>
            The current <see cref="T:System.Threading.Tasks.TaskStatus"/> of this task instance.
            </value>
        </member>
        <member name="P:WebApplications.Utilities.Threading.CancelableTask.Exception">
            <summary>
            Gets the <see cref="P:WebApplications.Utilities.Threading.CancelableTask.Exception"/> that caused the <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/> to end prematurely. 
            If the <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/> completed successfully or has not yet thrown any exceptions, this will return <see langword="null"/>.
            </summary>
            <value>
            The <see cref="P:WebApplications.Utilities.Threading.CancelableTask.Exception"/> that caused the <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/> to end prematurely.
            </value>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask.Run(System.Action{System.Threading.CancellationToken},System.Threading.CancellationToken)">
            <summary>
            Queues the specified work to run on the ThreadPool and returns a task handle for that work.
            </summary>
            <param name="action">The work to execute asynchronously.</param>
            <param name="token">A cancellation token that should be used to cancel the work.</param>
            <returns>A <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/> that represents the work queued to execute in the ThreadPool.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask.Run(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task},System.Threading.CancellationToken)">
            <summary>
            Queues the specified work to run on the ThreadPool and returns a task handle for that work.
            </summary>
            <param name="action">The work to execute asynchronously.</param>
            <param name="token">A cancellation token that should be used to cancel the work.</param>
            <returns>A <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/> that represents the work queued to execute in the ThreadPool.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask.Run``1(System.Func{System.Threading.CancellationToken,``0},System.Threading.CancellationToken)">
            <summary>
            Queues the specified work to run on the ThreadPool and returns a task handle for that work.
            </summary>
            <param name="function">The work to execute asynchronously.</param>
            <param name="token">A cancellation token that should be used to cancel the work.</param>
            <returns>A <see cref="T:WebApplications.Utilities.Threading.CancelableTask`1"/> that represents the work queued to execute in the ThreadPool.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask.Run``1(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)">
            <summary>
            Queues the specified work to run on the ThreadPool and returns a task handle for that work.
            </summary>
            <param name="function">The work to execute asynchronously.</param>
            <param name="token">A cancellation token that should be used to cancel the work.</param>
            <returns>A <see cref="T:WebApplications.Utilities.Threading.CancelableTask`1"/> that represents the work queued to execute in the ThreadPool.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask.#ctor(System.Threading.Tasks.Task,WebApplications.Utilities.Threading.ICancelableTokenSource)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/> class.
            </summary>
            <param name="task">The task.</param>
            <param name="cts">The cancelable token source.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask.#ctor(System.Action{System.Threading.CancellationToken},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/> class.
            </summary>
            <param name="action">The delegate that represents the code to execute in the task.</param>
            <param name="token">The <see cref="T:System.Threading.CancellationToken"/> that the new task will observe.</param>
            <param name="creationOptions">The <see cref="T:System.Threading.Tasks.TaskCreationOptions"/> used to customize the task's behavior.</param>
            <param name="run">if set to <see langword="true" /> the task will be started.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask.#ctor(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/> class.
            </summary>
            <param name="action">The delegate that represents the code to execute in the task.</param>
            <param name="token">The <see cref="T:System.Threading.CancellationToken"/> that the new task will observe.</param>
            <param name="creationOptions">The <see cref="T:System.Threading.Tasks.TaskCreationOptions"/> used to customize the task's behavior.</param>
            <param name="run">if set to <see langword="true" /> the task will be started.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask.#ctor(System.Action{System.Threading.CancellationToken},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.CancelableTask`1" /> class.
            </summary>
            <param name="action">The delegate that represents the code to execute in the task.</param>
            <param name="token">The <see cref="T:System.Threading.CancellationToken"/> that the new task will observe.</param>
            <param name="creationOptions">The <see cref="T:System.Threading.Tasks.TaskCreationOptions"/> used to customize the task's behavior.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask.#ctor(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.CancelableTask`1" /> class.
            </summary>
            <param name="action">The delegate that represents the code to execute in the task.</param>
            <param name="token">The <see cref="T:System.Threading.CancellationToken"/> that the new task will observe.</param>
            <param name="creationOptions">The <see cref="T:System.Threading.Tasks.TaskCreationOptions"/> used to customize the task's behavior.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask.Cancel">
            <summary>
            Communicates a request for cancellation.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask.CancelAfter(System.Int32)">
            <summary>
            Schedules a cancel operation on this <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/> after the specified number of milliseconds.
            </summary>
            <param name="millisecondsDelay">The time span to wait before canceling this <see cref="T:System.Threading.CancellationTokenSource"/>.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask.CancelAfter(System.TimeSpan)">
            <summary>
            Schedules a cancel operation on this <see cref="T:WebApplications.Utilities.Threading.ICancelableTokenSource"/> after the specified time span.
            </summary>
            <param name="delay">The time span to wait before canceling this <see cref="T:WebApplications.Utilities.Threading.ICancelableTokenSource"/>.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask.CancelAfter(NodaTime.Duration)">
            <summary>
            Schedules a cancel operation on this <see cref="T:WebApplications.Utilities.Threading.ICancelableTokenSource"/> after the specified time span.
            </summary>
            <param name="delay">The time span to wait before canceling this <see cref="T:WebApplications.Utilities.Threading.ICancelableTokenSource"/>.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask.GetAwaiter">
            <summary>
            Gets an awaiter used to await this <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/>.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask.WebApplications#Utilities#Threading#ICancelableTask#GetAwaiter">
            <summary>
            Gets an awaiter used to await this <see cref="T:WebApplications.Utilities.Threading.ICancelableTask"/>.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask.ConfigureAwait(System.Boolean)">
            <summary>
            Configures an awaiter used to await this <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/>.
            </summary>
            <param name="continueOnCapturedContext"><see langword="true" /> to attempt to marshal the continuation back to the original context captured; otherwise, <see langword="false" />.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask.ContinueWith(System.Action{WebApplications.Utilities.Threading.CancelableTask,System.Threading.CancellationToken},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
            <summary>
            Creates a continuation that executes when the target <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/> completes.
            </summary>
            <param name="continuationAction">An action to run when the Task completes. When run, the delegate will be passed the completed task as an argument.</param>
            <param name="token">The <see cref="T:System.Threading.CancellationToken"/> that will be assigned to the new continuation task.</param>
            <param name="options">Options for when the continuation is scheduled and how it behaves.</param>
            <param name="scheduler">The <see cref="T:System.Threading.Tasks.TaskScheduler"/> to associate with the continuation task and to use for its execution.</param>
            <returns>A new continuation <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask.ContinueWith``1(System.Func{WebApplications.Utilities.Threading.CancelableTask,System.Threading.CancellationToken,``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
            <summary>
            Creates a continuation that executes when the target <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/> completes.
            </summary>
            <param name="continuationAction">An action to run when the Task completes. When run, the delegate will be passed the completed task as an argument.</param>
            <param name="token">The <see cref="T:System.Threading.CancellationToken"/> that will be assigned to the new continuation task.</param>
            <param name="options">Options for when the continuation is scheduled and how it behaves.</param>
            <param name="scheduler">The <see cref="T:System.Threading.Tasks.TaskScheduler"/> to associate with the continuation task and to use for its execution.</param>
            <returns>A new continuation <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask.ContinueWith(System.Func{WebApplications.Utilities.Threading.CancelableTask,System.Threading.CancellationToken,System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
            <summary>
            Creates a continuation that executes when the target <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/> completes.
            </summary>
            <param name="continuationAction">An action to run when the Task completes. When run, the delegate will be passed the completed task as an argument.</param>
            <param name="token">The <see cref="T:System.Threading.CancellationToken"/> that will be assigned to the new continuation task.</param>
            <param name="options">Options for when the continuation is scheduled and how it behaves.</param>
            <param name="scheduler">The <see cref="T:System.Threading.Tasks.TaskScheduler"/> to associate with the continuation task and to use for its execution.</param>
            <returns>A new continuation <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask.ContinueWith``1(System.Func{WebApplications.Utilities.Threading.CancelableTask,System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
            <summary>
            Creates a continuation that executes when the target <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/> completes.
            </summary>
            <param name="continuationAction">An action to run when the Task completes. When run, the delegate will be passed the completed task as an argument.</param>
            <param name="token">The <see cref="T:System.Threading.CancellationToken"/> that will be assigned to the new continuation task.</param>
            <param name="options">Options for when the continuation is scheduled and how it behaves.</param>
            <param name="scheduler">The <see cref="T:System.Threading.Tasks.TaskScheduler"/> to associate with the continuation task and to use for its execution.</param>
            <returns>A new continuation <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask.Wait(System.Threading.CancellationToken)">
            <summary>
            Waits for the <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/> to complete execution.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for the task to complete.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask.Wait(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Waits for the <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/> to complete execution within a specified number of milliseconds.
            </summary>
            <param name="millisecondsTimeout">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite"/> (-1) to wait indefinitely.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for the task to complete.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask.Wait(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Waits for the <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/> to complete execution within a specified time interval.
            </summary>
            <param name="timeout">A <see cref="T:System.TimeSpan"/> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan"/> that represents -1 milliseconds to wait indefinitely.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for the task to complete.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask.Start(System.Threading.Tasks.TaskScheduler)">
            <summary>
            Starts the <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/>, scheduling it for execution to the specified <see cref="T:System.Threading.Tasks.TaskScheduler"/>.
            </summary>
            <param name="scheduler">The <see cref="T:System.Threading.Tasks.TaskScheduler"/> with which to associate and execute this task.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Threading.CancelableTask`1">
            <summary>
            Allows cancellation of a task.
            </summary>
            <typeparam name="TResult">The type the task returns.</typeparam>
        </member>
        <member name="F:WebApplications.Utilities.Threading.CancelableTask`1.Default">
            <summary>
            A cancelable task that returns the <see langword="default"/> value for the type <typeparamref name="TResult"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.CancelableTask`1.Cancelled">
            <summary>
            The cancelled task.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask`1.FromResult(`0)">
            <summary>
            Creates a <see cref="T:WebApplications.Utilities.Threading.CancelableTask`1" /> that's completed successfully with the specified result.
            </summary>
            <param name="result">The result to store into the completed task.</param>
            <returns>
            The successfully completed task.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask`1.FromException(System.Exception)">
            <summary>
            Creates a <see cref="T:System.Threading.Tasks.Task`1" /> that's completed exceptionally with the specified exception.
            </summary>
            <param name="exception">The exception with which to complete the task.</param>
            <returns>
            The faulted task.
            </returns>
        </member>
        <member name="F:WebApplications.Utilities.Threading.CancelableTask`1._task">
            <summary>
            The task
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.CancelableTask`1._cts">
            <summary>
            The cancelable token source for canceling the task,
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Threading.CancelableTask`1.Task">
            <summary>
            Gets the underlaying task that can be cancelled.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Threading.CancelableTask`1.WebApplications#Utilities#Threading#ICancelableTask#Task">
            <summary>
            Gets the underlaying task that can be cancelled.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Threading.CancelableTask`1.IsCanceled">
            <summary>
            Gets whether this <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/> instance has completed execution due to being canceled.
            </summary>
            <value>
            <see langword="true" /> if the task has completed due to being canceled; otherwise <see langword="false" />.
            </value>
        </member>
        <member name="P:WebApplications.Utilities.Threading.CancelableTask`1.IsCompleted">
            <summary>
            Gets whether this <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/> has completed.
            </summary>
            <value>
            <see langword="true" /> if the task has completed; otherwise <see langword="false" />.
            </value>
        </member>
        <member name="P:WebApplications.Utilities.Threading.CancelableTask`1.IsFaulted">
            <summary>
            Gets whether the <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/> completed due to an unhandled exception.
            </summary>
            <value>
            <see langword="true" /> if the task has thrown an unhandled exception; otherwise <see langword="false" />.
            </value>
        </member>
        <member name="P:WebApplications.Utilities.Threading.CancelableTask`1.Status">
            <summary>
            Gets the <see cref="T:System.Threading.Tasks.TaskStatus"/> of this task.
            </summary>
            <value>
            The current <see cref="T:System.Threading.Tasks.TaskStatus"/> of this task instance.
            </value>
        </member>
        <member name="P:WebApplications.Utilities.Threading.CancelableTask`1.Exception">
            <summary>
            Gets the <see cref="P:WebApplications.Utilities.Threading.CancelableTask`1.Exception"/> that caused the <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/> to end prematurely. 
            If the <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/> completed successfully or has not yet thrown any exceptions, this will return <see langword="null"/>.
            </summary>
            <value>
            The <see cref="P:WebApplications.Utilities.Threading.CancelableTask`1.Exception"/> that caused the <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/> to end prematurely.
            </value>
        </member>
        <member name="P:WebApplications.Utilities.Threading.CancelableTask`1.Result">
            <summary>
            Gets the result value of this <see cref="T:WebApplications.Utilities.Threading.CancelableTask`1"/>
            </summary>
            <value>
            The result.
            </value>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask`1.#ctor(System.Threading.Tasks.Task{`0},WebApplications.Utilities.Threading.ICancelableTokenSource)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/> class.
            </summary>
            <param name="task">The task.</param>
            <param name="cts">The cancelable token source.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask`1.#ctor(System.Func{System.Threading.CancellationToken,`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/> class.
            </summary>
            <param name="function">The delegate that represents the code to execute in the task.</param>
            <param name="token">The <see cref="T:System.Threading.CancellationToken"/> that the new task will observe.</param>
            <param name="creationOptions">The <see cref="T:System.Threading.Tasks.TaskCreationOptions"/> used to customize the task's behavior.</param>
            <param name="run">if set to <see langword="true" /> the task will be started.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask`1.#ctor(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{`0}},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/> class.
            </summary>
            <param name="function">The delegate that represents the code to execute in the task.</param>
            <param name="token">The <see cref="T:System.Threading.CancellationToken"/> that the new task will observe.</param>
            <param name="creationOptions">The <see cref="T:System.Threading.Tasks.TaskCreationOptions"/> used to customize the task's behavior.</param>
            <param name="run">if set to <see langword="true" /> the task will be started.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask`1.#ctor(System.Func{System.Threading.CancellationToken,`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.CancelableTask`1" /> class.
            </summary>
            <param name="function">The delegate that represents the code to execute in the task.
            When the function has completed, the task's Result property will be set to return the result value of the function.</param>
            <param name="token">The <see cref="T:System.Threading.CancellationToken"/> that the new task will observe.</param>
            <param name="creationOptions">The <see cref="T:System.Threading.Tasks.TaskCreationOptions"/> used to customize the task's behavior.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask`1.#ctor(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{`0}},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.CancelableTask`1" /> class.
            </summary>
            <param name="function">The delegate that represents the code to execute in the task.
            When the function has completed, the task's Result property will be set to return the result value of the function.</param>
            <param name="token">The <see cref="T:System.Threading.CancellationToken" /> that the new task will observe.</param>
            <param name="creationOptions">The <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> used to customize the task's behavior.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask`1.Cancel">
            <summary>
            Communicates a request for cancellation.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask`1.CancelAfter(System.Int32)">
            <summary>
            Schedules a cancel operation on this <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/> after the specified number of milliseconds.
            </summary>
            <param name="millisecondsDelay">The time span to wait before canceling this <see cref="T:System.Threading.CancellationTokenSource"/>.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask`1.CancelAfter(System.TimeSpan)">
            <summary>
            Schedules a cancel operation on this <see cref="T:WebApplications.Utilities.Threading.ICancelableTokenSource"/> after the specified time span.
            </summary>
            <param name="delay">The time span to wait before canceling this <see cref="T:WebApplications.Utilities.Threading.ICancelableTokenSource"/>.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask`1.CancelAfter(NodaTime.Duration)">
            <summary>
            Schedules a cancel operation on this <see cref="T:WebApplications.Utilities.Threading.ICancelableTokenSource" /> after the specified duration.
            </summary>
            <param name="delay">The duration to wait before canceling this <see cref="T:WebApplications.Utilities.Threading.ICancelableTokenSource" />.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask`1.GetAwaiter">
            <summary>
            Gets an awaiter used to await this <see cref="T:WebApplications.Utilities.Threading.CancelableTask`1"/>.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask`1.WebApplications#Utilities#Threading#ICancelableTask#GetAwaiter">
            <summary>
            Gets an awaiter used to await this <see cref="T:WebApplications.Utilities.Threading.ICancelableTask"/>.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask`1.ConfigureAwait(System.Boolean)">
            <summary>
            Configures an awaiter used to await this <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/>.
            </summary>
            <param name="continueOnCapturedContext"><see langword="true" /> to attempt to marshal the continuation back to the original context captured; otherwise, <see langword="false" />.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask`1.ContinueWith(System.Action{WebApplications.Utilities.Threading.CancelableTask{`0},System.Threading.CancellationToken},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
            <summary>
            Creates a continuation that executes when the target <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/> completes.
            </summary>
            <param name="continuationAction">An action to run when the Task completes. When run, the delegate will be passed the completed task as an argument.</param>
            <param name="token">The <see cref="T:System.Threading.CancellationToken"/> that will be assigned to the new continuation task.</param>
            <param name="options">Options for when the continuation is scheduled and how it behaves.</param>
            <param name="scheduler">The <see cref="T:System.Threading.Tasks.TaskScheduler"/> to associate with the continuation task and to use for its execution.</param>
            <returns>A new continuation <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask`1.ContinueWith``1(System.Func{WebApplications.Utilities.Threading.CancelableTask{`0},System.Threading.CancellationToken,``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
            <summary>
            Creates a continuation that executes when the target <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/> completes.
            </summary>
            <param name="continuationAction">An action to run when the Task completes. When run, the delegate will be passed the completed task as an argument.</param>
            <param name="token">The <see cref="T:System.Threading.CancellationToken"/> that will be assigned to the new continuation task.</param>
            <param name="options">Options for when the continuation is scheduled and how it behaves.</param>
            <param name="scheduler">The <see cref="T:System.Threading.Tasks.TaskScheduler"/> to associate with the continuation task and to use for its execution.</param>
            <returns>A new continuation <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask`1.ContinueWith(System.Func{WebApplications.Utilities.Threading.CancelableTask{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
            <summary>
            Creates a continuation that executes when the target <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/> completes.
            </summary>
            <param name="continuationAction">An action to run when the Task completes. When run, the delegate will be passed the completed task as an argument.</param>
            <param name="token">The <see cref="T:System.Threading.CancellationToken"/> that will be assigned to the new continuation task.</param>
            <param name="options">Options for when the continuation is scheduled and how it behaves.</param>
            <param name="scheduler">The <see cref="T:System.Threading.Tasks.TaskScheduler"/> to associate with the continuation task and to use for its execution.</param>
            <returns>A new continuation <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask`1.ContinueWith``1(System.Func{WebApplications.Utilities.Threading.CancelableTask{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
            <summary>
            Creates a continuation that executes when the target <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/> completes.
            </summary>
            <param name="continuationAction">An action to run when the Task completes. When run, the delegate will be passed the completed task as an argument.</param>
            <param name="token">The <see cref="T:System.Threading.CancellationToken"/> that will be assigned to the new continuation task.</param>
            <param name="options">Options for when the continuation is scheduled and how it behaves.</param>
            <param name="scheduler">The <see cref="T:System.Threading.Tasks.TaskScheduler"/> to associate with the continuation task and to use for its execution.</param>
            <returns>A new continuation <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask`1.Wait(System.Threading.CancellationToken)">
            <summary>
            Waits for the <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/> to complete execution.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for the task to complete.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask`1.Wait(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Waits for the <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/> to complete execution within a specified number of milliseconds.
            </summary>
            <param name="millisecondsTimeout">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite"/> (-1) to wait indefinitely.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for the task to complete.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask`1.Wait(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Waits for the <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/> to complete execution within a specified time interval.
            </summary>
            <param name="timeout">A <see cref="T:System.TimeSpan"/> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan"/> that represents -1 milliseconds to wait indefinitely.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for the task to complete.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask`1.Wait(NodaTime.Duration,System.Threading.CancellationToken)">
            <summary>
            Waits for the <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/> to complete execution within a specified time interval.
            </summary>
            <param name="timeout">A <see cref="T:NodaTime.Duration"/> that represents the number of milliseconds to wait, or a <see cref="T:NodaTime.Duration"/> that represents -1 milliseconds to wait indefinitely.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for the task to complete.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask`1.Start(System.Threading.Tasks.TaskScheduler)">
            <summary>
            Starts the <see cref="T:WebApplications.Utilities.Threading.CancelableTask"/>, scheduling it for execution to the specified <see cref="T:System.Threading.Tasks.TaskScheduler"/>.
            </summary>
            <param name="scheduler">The <see cref="T:System.Threading.Tasks.TaskScheduler"/> with which to associate and execute this task.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTask`1.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Threading.ICancelableTask">
            <summary>
            Interface to a task that can be canceled.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Threading.ICancelableTask.Task">
            <summary>
            Gets the underlaying task that can be cancelled.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Threading.ICancelableTask.IsCanceled">
            <summary>
            Gets whether this <see cref="T:WebApplications.Utilities.Threading.ICancelableTask"/> instance has completed execution due to being canceled.
            </summary>
            <value>
            <see langword="true" /> if the task has completed due to being canceled; otherwise <see langword="false" />.
            </value>
        </member>
        <member name="P:WebApplications.Utilities.Threading.ICancelableTask.IsCompleted">
            <summary>
            Gets whether this <see cref="T:WebApplications.Utilities.Threading.ICancelableTask"/> has completed.
            </summary>
            <value>
            <see langword="true" /> if the task has completed; otherwise <see langword="false" />.
            </value>
        </member>
        <member name="P:WebApplications.Utilities.Threading.ICancelableTask.IsFaulted">
            <summary>
            Gets whether the <see cref="T:WebApplications.Utilities.Threading.ICancelableTask"/> completed due to an unhandled exception.
            </summary>
            <value>
            <see langword="true" /> if the task has thrown an unhandled exception; otherwise <see langword="false" />.
            </value>
        </member>
        <member name="P:WebApplications.Utilities.Threading.ICancelableTask.Status">
            <summary>
            Gets the <see cref="T:System.Threading.Tasks.TaskStatus"/> of this task.
            </summary>
            <value>
            The current <see cref="T:System.Threading.Tasks.TaskStatus"/> of this task instance.
            </value>
        </member>
        <member name="P:WebApplications.Utilities.Threading.ICancelableTask.Exception">
            <summary>
            Gets the <see cref="P:WebApplications.Utilities.Threading.ICancelableTask.Exception"/> that caused the <see cref="T:WebApplications.Utilities.Threading.ICancelableTask"/> to end prematurely. 
            If the <see cref="T:WebApplications.Utilities.Threading.ICancelableTask"/> completed successfully or has not yet thrown any exceptions, this will return <see langword="null"/>.
            </summary>
            <value>
            The <see cref="P:WebApplications.Utilities.Threading.ICancelableTask.Exception"/> that caused the <see cref="T:WebApplications.Utilities.Threading.ICancelableTask"/> to end prematurely.
            </value>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ICancelableTask.Cancel">
            <summary>
            Cancels the task.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ICancelableTask.GetAwaiter">
            <summary>
            Gets an awaiter used to await this <see cref="T:WebApplications.Utilities.Threading.ICancelableTask"/>.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ICancelableTask.CancelAfter(System.Int32)">
            <summary>
            Schedules a cancel operation on this <see cref="T:WebApplications.Utilities.Threading.ICancelableTask"/> after the specified number of milliseconds.
            </summary>
            <param name="millisecondsDelay">The time span to wait before canceling this <see cref="T:System.Threading.CancellationTokenSource"/>.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ICancelableTask.CancelAfter(System.TimeSpan)">
            <summary>
            Schedules a cancel operation on this <see cref="T:WebApplications.Utilities.Threading.ICancelableTokenSource"/> after the specified time span.
            </summary>
            <param name="delay">The time span to wait before canceling this <see cref="T:WebApplications.Utilities.Threading.ICancelableTokenSource"/>.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ICancelableTask.CancelAfter(NodaTime.Duration)">
            <summary>
            Schedules a cancel operation on this <see cref="T:WebApplications.Utilities.Threading.ICancelableTokenSource"/> after the specified duration.
            </summary>
            <param name="delay">The duration to wait before canceling this <see cref="T:WebApplications.Utilities.Threading.ICancelableTokenSource"/>.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ICancelableTask.Wait(System.Threading.CancellationToken)">
            <summary>
            Waits for the <see cref="T:WebApplications.Utilities.Threading.ICancelableTask"/> to complete execution.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for the task to complete.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ICancelableTask.Wait(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Waits for the <see cref="T:WebApplications.Utilities.Threading.ICancelableTask"/> to complete execution within a specified number of milliseconds.
            </summary>
            <param name="millisecondsTimeout">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite"/> (-1) to wait indefinitely.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for the task to complete.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ICancelableTask.Wait(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Waits for the <see cref="T:WebApplications.Utilities.Threading.ICancelableTask"/> to complete execution within a specified time interval.
            </summary>
            <param name="timeout">A <see cref="T:System.TimeSpan"/> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan"/> that represents -1 milliseconds to wait indefinitely.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> to observe while waiting for the task to complete.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ICancelableTask.Start(System.Threading.Tasks.TaskScheduler)">
            <summary>
            Starts the <see cref="T:WebApplications.Utilities.Threading.ICancelableTask"/>, scheduling it for execution to the specified <see cref="T:System.Threading.Tasks.TaskScheduler"/>.
            </summary>
            <param name="scheduler">The <see cref="T:System.Threading.Tasks.TaskScheduler"/> with which to associate and execute this task.</param>
        </member>
        <member name="T:WebApplications.Utilities.Threading.ThreadLocalCollection`1">
            <summary>
            A collection that stores its values in individual thread local collections. This collection is best suited for multiple concurrent additions.
            </summary>
            <typeparam name="T">The type of the items in the collection.</typeparam>
            <remarks>The <see cref="M:WebApplications.Utilities.Threading.ThreadLocalCollection`1.Add(`0)"/> and <see cref="M:WebApplications.Utilities.Threading.ThreadLocalCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0})"/> methods are thread safe, however any other methods are not guaranteed to be thread safe.
            After calling <see cref="M:WebApplications.Utilities.Threading.ThreadLocalCollection`1.Dispose"/>, the collection becomes read-only.</remarks>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ThreadLocalCollection`1.Add(`0)">
            <summary>
            Adds an item to the <see cref="T:WebApplications.Utilities.Threading.ThreadLocalCollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:WebApplications.Utilities.Threading.ThreadLocalCollection`1"/>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:WebApplications.Utilities.Threading.ThreadLocalCollection`1"/> is read-only.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:WebApplications.Utilities.Threading.ThreadLocalCollection`1"/> was disposed by another thread while executing the method.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ThreadLocalCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds a collection of elements to the <see cref="T:WebApplications.Utilities.Threading.ThreadLocalCollection`1"/>
            </summary>
            <param name="items">The collection of items to add to the collection.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:WebApplications.Utilities.Threading.ThreadLocalCollection`1"/> is read-only.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:WebApplications.Utilities.Threading.ThreadLocalCollection`1"/> was disposed by another thread while executing the method.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ThreadLocalCollection`1.Clear">
            <summary>
            Removes all items from the <see cref="T:WebApplications.Utilities.Threading.ThreadLocalCollection`1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:WebApplications.Utilities.Threading.ThreadLocalCollection`1"/> is read-only. </exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:WebApplications.Utilities.Threading.ThreadLocalCollection`1"/> was disposed by another thread while executing the method.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ThreadLocalCollection`1.Contains(`0)">
            <summary>
            Determines whether the <see cref="T:WebApplications.Utilities.Threading.ThreadLocalCollection`1"/> contains a specific value.
            </summary>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:WebApplications.Utilities.Threading.ThreadLocalCollection`1"/>; otherwise, false.
            </returns>
            <param name="item">The object to locate in the <see cref="T:WebApplications.Utilities.Threading.ThreadLocalCollection`1"/>.</param>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:WebApplications.Utilities.Threading.ThreadLocalCollection`1"/> was disposed by another thread while executing the method.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ThreadLocalCollection`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:WebApplications.Utilities.Threading.ThreadLocalCollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">
            The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:WebApplications.Utilities.Threading.ThreadLocalCollection`1"/>. 
            The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex"/> is less than 0.</exception>
            <exception cref="T:System.ArgumentException">The number of elements in the source <see cref="T:WebApplications.Utilities.Threading.ThreadLocalCollection`1"/> is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:WebApplications.Utilities.Threading.ThreadLocalCollection`1"/> was disposed by another thread while executing the method.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ThreadLocalCollection`1.Remove(`0)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. 
            This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:WebApplications.Utilities.Threading.ThreadLocalCollection`1"/> was disposed by another thread while executing the method.</exception>
        </member>
        <member name="P:WebApplications.Utilities.Threading.ThreadLocalCollection`1.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:WebApplications.Utilities.Threading.ThreadLocalCollection`1"/>.
            </summary>
            <returns>
            The number of elements contained in the <see cref="T:WebApplications.Utilities.Threading.ThreadLocalCollection`1"/>.
            </returns>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:WebApplications.Utilities.Threading.ThreadLocalCollection`1"/> was disposed by another thread while executing the method.</exception>
        </member>
        <member name="P:WebApplications.Utilities.Threading.ThreadLocalCollection`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:WebApplications.Utilities.Threading.ThreadLocalCollection`1"/> is read-only.
            </summary>
            <returns>
            true if the <see cref="T:WebApplications.Utilities.Threading.ThreadLocalCollection`1"/> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ThreadLocalCollection`1.ToArray">
            <summary>
            Copies the elements of the <see cref="T:WebApplications.Utilities.Threading.ThreadLocalCollection`1"/> to a new array.
            </summary>
            <returns>
            An array containing copies of the elements of the <see cref="T:WebApplications.Utilities.Threading.ThreadLocalCollection`1"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ThreadLocalCollection`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:WebApplications.Utilities.Threading.ThreadLocalCollection`1"/> was disposed by another thread while executing the method.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ThreadLocalCollection`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:WebApplications.Utilities.Threading.ThreadLocalCollection`1"/> was disposed by another thread while executing the method.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ThreadLocalCollection`1.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:WebApplications.Utilities.Threading.ICancelableTokenSource">
            <summary>
            Interface for a token source.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ICancelableTokenSource.Cancel">
            <summary>
            Communicates a request for cancellation.
            </summary>
            <exception cref="T:System.ObjectDisposedException">This <see cref="T:WebApplications.Utilities.Threading.ICancelableTokenSource"/> has been disposed.</exception>
            <exception cref="T:System.AggregateException">An aggregate exception containing all the exceptions thrown by the registered callbacks on the associated <see cref="T:System.Threading.CancellationToken"/>.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ICancelableTokenSource.Cancel(System.Boolean)">
            <summary>
            Communicates a request for cancellation, and specifies whether remaining callbacks and cancelable operations should be processed.
            </summary>
            <param name="throwOnFirstException">true if exceptions should immediately propagate; otherwise, false.</param>
            <exception cref="T:System.ObjectDisposedException">This <see cref="T:WebApplications.Utilities.Threading.ICancelableTokenSource"/> has been disposed.</exception>
            <exception cref="T:System.AggregateException">An aggregate exception containing all the exceptions thrown by the registered callbacks on the associated <see cref="T:System.Threading.CancellationToken"/>.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ICancelableTokenSource.CancelAfter(System.TimeSpan)">
            <summary>
            Schedules a cancel operation on this <see cref="T:WebApplications.Utilities.Threading.ICancelableTokenSource"/> after the specified time span.
            </summary>
            <param name="delay">The time span to wait before canceling this <see cref="T:WebApplications.Utilities.Threading.ICancelableTokenSource"/>.</param>
            <exception cref="T:System.ObjectDisposedException">The exception thrown when this <see cref="T:WebApplications.Utilities.Threading.ICancelableTokenSource"/> has been disposed.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The exception that is thrown when <paramref name="delay"/> is less than -1 or greater than Int32.MaxValue.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ICancelableTokenSource.CancelAfter(NodaTime.Duration)">
            <summary>
            Schedules a cancel operation on this <see cref="T:WebApplications.Utilities.Threading.ICancelableTokenSource"/> after the specified duration.
            </summary>
            <param name="delay">The duration to wait before canceling this <see cref="T:WebApplications.Utilities.Threading.ICancelableTokenSource"/>.</param>
            <exception cref="T:System.ObjectDisposedException">The exception thrown when this <see cref="T:WebApplications.Utilities.Threading.ICancelableTokenSource"/> has been disposed.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The exception that is thrown when <paramref name="delay"/> is less than -1 or greater than Int32.MaxValue.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ICancelableTokenSource.CancelAfter(System.Int32)">
            <summary>
            Schedules a cancel operation on this <see cref="T:WebApplications.Utilities.Threading.ICancelableTokenSource"/> after the specified number of milliseconds.
            </summary>
            <param name="millisecondsDelay">The time span to wait before canceling this <see cref="T:WebApplications.Utilities.Threading.ICancelableTokenSource"/>.</param>
            <exception cref="T:System.ObjectDisposedException">The exception thrown when this <see cref="T:WebApplications.Utilities.Threading.ICancelableTokenSource"/> has been disposed.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The exception thrown when <paramref name="millisecondsDelay"/> is less than -1.</exception>
        </member>
        <member name="T:WebApplications.Utilities.Threading.ITokenSource">
            <summary>
            Interface for a token source.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Threading.ITokenSource.Token">
            <summary>
            Gets the <see cref="T:System.Threading.CancellationToken"/> associated with this <see cref="T:WebApplications.Utilities.Threading.ITokenSource"/>.
            </summary>
            <value>
            The <see cref="T:System.Threading.CancellationToken"/> associated with this <see cref="T:WebApplications.Utilities.Threading.ITokenSource"/>.
            </value>
        </member>
        <member name="P:WebApplications.Utilities.Threading.ITokenSource.IsCancellationRequested">
            <summary>
            Gets whether cancellation has been requested for this token source.
            </summary>
            <value>Whether cancellation has been requested for this token source.</value>
        </member>
        <member name="F:WebApplications.Utilities.Threading.TimedTokenSource._timeoutSource">
            <summary>
            The timeout source
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.TimedTokenSource._source">
            <summary>
            The _sources
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Threading.TimedTokenSource.Token">
            <summary>
            Gets the <see cref="T:System.Threading.CancellationToken" /> associated with this <see cref="T:WebApplications.Utilities.Threading.WrappedTokenSource" />.
            </summary>
            <value>
            The <see cref="T:System.Threading.CancellationToken" /> associated with this <see cref="T:WebApplications.Utilities.Threading.WrappedTokenSource" />.
            </value>
        </member>
        <member name="P:WebApplications.Utilities.Threading.TimedTokenSource.IsCancellationRequested">
            <summary>
            Gets whether cancellation has been requested for this token source.
            </summary>
            <value>
            Whether cancellation has been requested for this token source.
            </value>
        </member>
        <member name="M:WebApplications.Utilities.Threading.TimedTokenSource.#ctor(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.TimedTokenSource"/> class.
            </summary>
            <param name="milliseconds">The milliseconds.</param>
            <param name="token">The token.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.TimedTokenSource.#ctor(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.TimedTokenSource"/> class.
            </summary>
            <param name="timeout">The timeout.</param>
            <param name="token">The token.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.TimedTokenSource.#ctor(NodaTime.Duration,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.TimedTokenSource"/> class.
            </summary>
            <param name="timeout">The timeout.</param>
            <param name="token">The token.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.TimedTokenSource.#ctor(System.Int32,System.Threading.CancellationToken[])">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.TimedTokenSource"/> class.
            </summary>
            <param name="milliseconds">The milliseconds.</param>
            <param name="tokens">The tokens.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.TimedTokenSource.#ctor(System.TimeSpan,System.Threading.CancellationToken[])">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.TimedTokenSource"/> class.
            </summary>
            <param name="timeout">The timeout.</param>
            <param name="tokens">The tokens.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.TimedTokenSource.#ctor(NodaTime.Duration,System.Threading.CancellationToken[])">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.TimedTokenSource"/> class.
            </summary>
            <param name="timeout">The timeout.</param>
            <param name="tokens">The tokens.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.TimedTokenSource.Cancel">
            <summary>
            Communicates a request for cancellation.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Threading.TimedTokenSource.Cancel(System.Boolean)">
            <summary>
            Communicates a request for cancellation, and specifies whether remaining callbacks and cancelable operations should be processed.
            </summary>
            <param name="throwOnFirstException">true if exceptions should immediately propagate; otherwise, false.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.TimedTokenSource.CancelAfter(System.TimeSpan)">
            <summary>
            Schedules a cancel operation on this <see cref="T:System.Threading.CancellationTokenSource" /> after the specified time span.
            </summary>
            <param name="delay">The time span to wait before canceling this <see cref="T:System.Threading.CancellationTokenSource" />.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.TimedTokenSource.CancelAfter(NodaTime.Duration)">
            <summary>
            Schedules a cancel operation on this <see cref="T:System.Threading.CancellationTokenSource" /> after the specified duration.
            </summary>
            <param name="delay">The duration to wait before canceling this <see cref="T:System.Threading.CancellationTokenSource" />.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.TimedTokenSource.CancelAfter(System.Int32)">
            <summary>
            Schedules a cancel operation on this <see cref="T:System.Threading.CancellationTokenSource" /> after the specified number of milliseconds.
            </summary>
            <param name="millisecondsDelay">The time span to wait before canceling this <see cref="T:System.Threading.CancellationTokenSource" />.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.TimedTokenSource.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Threading.PauseToken">
            <summary>
            Used to wait when the associated <see cref="T:WebApplications.Utilities.Threading.PauseTokenSource"/> is paused.
            </summary>
            <remarks>See http://blogs.msdn.com/b/pfxteam/archive/2013/01/13/cooperatively-pausing-async-methods.aspx.
            </remarks>
        </member>
        <member name="F:WebApplications.Utilities.Threading.PauseToken.None">
            <summary>
            The default PauseToken never pauses.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.PauseToken.Paused">
            <summary>
            A pause token that is always paused.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.PauseToken._source">
            <summary>
            The source <see cref="T:WebApplications.Utilities.Threading.PauseTokenSource"/>, if any.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Threading.PauseToken.#ctor(WebApplications.Utilities.Threading.PauseTokenSource)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.PauseToken"/> struct.
            </summary>
            <param name="source">The source.</param>
        </member>
        <member name="P:WebApplications.Utilities.Threading.PauseToken.CanPause">
            <summary>
            Gets a value indicating whether this instance can pause.
            </summary>
            <value><see langword="true" /> if this instance can pause; otherwise, <see langword="false" />.</value>
        </member>
        <member name="P:WebApplications.Utilities.Threading.PauseToken.IsPaused">
            <summary>
            Gets a value indicating whether this instance is paused.
            </summary>
            <value><see langword="true" /> if this instance is paused; otherwise, <see langword="false" />.</value>
        </member>
        <member name="M:WebApplications.Utilities.Threading.PauseToken.WaitWhilePausedAsync(System.Threading.CancellationToken)">
            <summary>
            Waits the while paused asynchronous.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Threading.PauseTokenSource">
            <summary>
            Allows the creation of <see cref="T:WebApplications.Utilities.Threading.PauseToken">pause tokens</see> which support pausing.
            </summary>
            <remarks>See http://blogs.msdn.com/b/pfxteam/archive/2013/01/13/cooperatively-pausing-async-methods.aspx.
            </remarks>
        </member>
        <member name="F:WebApplications.Utilities.Threading.PauseTokenSource._paused">
            <summary>
            The paused completion source.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Threading.PauseTokenSource.IsPaused">
            <summary>
            Gets or sets a value indicating whether this instance is paused.
            </summary>
            <value><see langword="true" /> if this instance is paused; otherwise, <see langword="false" />.</value>
        </member>
        <member name="P:WebApplications.Utilities.Threading.PauseTokenSource.Token">
            <summary>
            Gets the token.
            </summary>
            <value>The token.</value>
        </member>
        <member name="M:WebApplications.Utilities.Threading.PauseTokenSource.WaitWhilePausedAsync(System.Threading.CancellationToken)">
            <summary>
            Used by <see cref="T:WebApplications.Utilities.Threading.PauseToken"/> to paused.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Threading.AsyncDebouncedAction">
            <summary>
            Debounces an asynchronous action.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.AsyncDebouncedAction._lock">
            <summary>
            The semaphore controls concurrent access to action execution.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.AsyncDebouncedAction._action">
            <summary>
            The asynchronous action to run.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.AsyncDebouncedAction._durationTicks">
            <summary>
            The duration ticks is the number of ticks to leave after a successfully completed action invocation, from the start of the last successful invocation.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.AsyncDebouncedAction._minimumGapTicks">
            <summary>
            The gap ticks is the number of ticks to leave after a successfully completed action invocation, from the end of the last successful invocation.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.AsyncDebouncedAction._nextRun">
            <summary>
            The next run is the earliest tick that the action can be run again.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncDebouncedAction.#ctor(System.Func{System.Threading.Tasks.Task},NodaTime.Duration,NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.AsyncDebouncedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <param name="minimumGap">The minimum gap, is the time left after a successful execution before the action can be run again.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncDebouncedAction.#ctor(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task},NodaTime.Duration,NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.AsyncDebouncedAction"/> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <param name="minimumGap">The minimum gap, is the time left after a successful execution before the action can be run again.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncDebouncedAction.#ctor(System.Func{System.Threading.Tasks.Task},System.TimeSpan,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.AsyncDebouncedAction" /> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <param name="minimumGap">The minimum gap, is the time left after a successful execution before the action can be run again.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncDebouncedAction.#ctor(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task},System.TimeSpan,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.AsyncDebouncedAction"/> class.
            </summary>
            <param name="action">The action.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <param name="minimumGap">The minimum gap, is the time left after a successful execution before the action can be run again.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncDebouncedAction.Run(System.Threading.CancellationToken)">
            <summary>
            Runs the action asynchronously.
            </summary>
            <param name="token">The token.</param>
            <returns>An awaitable task, that completes with the debounced result.</returns>
            <remarks><para>If the action is currently running, this will wait until it completes (or
            <paramref name="token"/> has been cancelled),
            but won't run the action again.  However, if the original action is cancelled, or errors,
            then it will run the action again immediately.</para>
            </remarks>
        </member>
        <member name="T:WebApplications.Utilities.Threading.AsyncDebouncedFunction`1">
            <summary>
            Debounces an asynchronous function.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.AsyncDebouncedFunction`1._lock">
            <summary>
            The semaphore controls concurrent access to function execution.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.AsyncDebouncedFunction`1._function">
            <summary>
            The asynchronous function to run.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.AsyncDebouncedFunction`1._durationTicks">
            <summary>
            The duration ticks is the number of ticks to leave after a successfully completed function invocation, from the start of the last successful invocation.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.AsyncDebouncedFunction`1._minimumGapTicks">
            <summary>
            The gap ticks is the number of ticks to leave after a successfully completed function invocation, from the end of the last successful invocation.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.AsyncDebouncedFunction`1._nextRun">
            <summary>
            The next run is the earliest tick that the function can be run again.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.AsyncDebouncedFunction`1._lastResult">
            <summary>
            The last result.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncDebouncedFunction`1.#ctor(System.Func{System.Threading.Tasks.Task{`0}},NodaTime.Duration,NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.AsyncDebouncedFunction`1" /> class.
            </summary>
            <param name="function">The function.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <param name="minimumGap">The minimum gap, is the time left after a successful execution before the function can be run again.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncDebouncedFunction`1.#ctor(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{`0}},NodaTime.Duration,NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.AsyncDebouncedFunction`1"/> class.
            </summary>
            <param name="function">The function.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <param name="minimumGap">The minimum gap, is the time left after a successful execution before the function can be run again.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncDebouncedFunction`1.#ctor(System.Func{System.Threading.Tasks.Task{`0}},System.TimeSpan,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.AsyncDebouncedFunction`1" /> class.
            </summary>
            <param name="function">The function.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <param name="minimumGap">The minimum gap, is the time left after a successful execution before the function can be run again.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncDebouncedFunction`1.#ctor(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{`0}},System.TimeSpan,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.AsyncDebouncedFunction`1"/> class.
            </summary>
            <param name="function">The function.</param>
            <param name="duration">The duration is the amount of time the result of a successful execution is held, after the point a successful request was made.</param>
            <param name="minimumGap">The minimum gap, is the time left after a successful execution before the function can be run again.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncDebouncedFunction`1.Run(System.Threading.CancellationToken)">
            <summary>
            Runs the function asynchronously.
            </summary>
            <param name="token">The token.</param>
            <returns>An awaitable task, that completes with the debounced result.</returns>
            <remarks><para>If the function is currently running, this will wait until it completes (or
            <paramref name="token"/> has been cancelled),
            but won't run the function again.  However, if the original function is cancelled, or errors,
            then it will run the function again immediately.</para>
            </remarks>
        </member>
        <member name="T:WebApplications.Utilities.Threading.AsyncLock">
            <summary>
            Asynchronous lock making it easy to lock a region of code using the async/await syntax.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncLock.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.AsyncLock" /> class.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncLock.LockAsync(System.Threading.CancellationToken)">
            <summary>
            Creates a lock region that can be completed by disposing the returned disposable.
            </summary>
            <param name="token">The optional cancellation token.</param>
            <returns>Task{IDisposable}.</returns>
            <remarks><para>This is best used with a <see langword="using"/> statement.</para></remarks>
        </member>
        <member name="T:WebApplications.Utilities.Threading.AsyncReaderWriterLock">
            <summary>
            Asynchronous lock making it easy to lock a region of code using the async/await syntax.
            </summary>
            <remarks>
            http://blogs.msdn.com/b/pfxteam/archive/2012/02/12/10266988.aspx
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncReaderWriterLock.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.AsyncReaderWriterLock" /> class.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncReaderWriterLock.ReaderLockAsync(System.Threading.CancellationToken)">
            <summary>
            Creates a read lock region that can be completed by disposing the returned disposable.
            </summary>
            <param name="token">The optional cancellation token.</param>
            <returns>Task{IDisposable}.</returns>
            <remarks><para>This is best used with a <see langword="using"/> statement.</para></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncReaderWriterLock.WriterLockAsync(System.Threading.CancellationToken)">
            <summary>
            Creates a write lock region that can be completed by disposing the returned disposable.
            </summary>
            <param name="token">The optional cancellation token.</param>
            <returns>Task{IDisposable}.</returns>
            <remarks><para>This is best used with a <see langword="using"/> statement.</para></remarks>
        </member>
        <member name="T:WebApplications.Utilities.Threading.AsyncReaderWriterLock.Releaser">
            <summary>
            Releaser struct, used as disposable to allow releasing of lock on disposal.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Threading.AsyncSemaphore">
            <summary>
            Asynchronous semaphore makes it easy to synchronize/throttle tasks so that no more than a fixed
            number can enter a critical region at the same time
            </summary>
            <remarks>
            Originally based on http://blogs.msdn.com/b/pfxteam/archive/2012/02/12/10266983.aspx
            </remarks>
        </member>
        <member name="P:WebApplications.Utilities.Threading.AsyncSemaphore.CurrentCount">
            <summary>
            Gets the current count.
            </summary>
            <value>
            The current count.
            </value>
        </member>
        <member name="P:WebApplications.Utilities.Threading.AsyncSemaphore.MaxCount">
            <summary>
            Gets or sets the maximum count.
            </summary>
            <value>
            The maximum count.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">value</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncSemaphore.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.AsyncSemaphore" /> class.
            </summary>
            <param name="initialCount">The initial count.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The count is less than one.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncSemaphore.WaitAsync(System.Threading.CancellationToken)">
            <summary>
            Waits on the semaphore.
            </summary>
            <param name="token">The optional cancellation token.</param>
            <returns>Task.</returns>
            <remarks><para>This is best used with a <see langword="using"/> statement.</para></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncSemaphore.Release">
            <summary>
            Releases any waiters waiting on the semaphore.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncSemaphore.WaitAllAsync(WebApplications.Utilities.Threading.AsyncSemaphore[])">
            <summary>
            Waits on all the given semaphores.
            </summary>
            <param name="semaphores">The semaphores to wait on. Can contain null elements.</param>
            <returns></returns>
            <remarks><para>This is best used with a <see langword="using"/> statement.</para></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncSemaphore.WaitAllAsync(System.Threading.CancellationToken,WebApplications.Utilities.Threading.AsyncSemaphore[])">
            <summary>
            Waits on all the given semaphores.
            </summary>
            <param name="token">The optional cancellation token.</param>
            <param name="semaphores">The semaphores to wait on. Can contain null elements.</param>
            <returns></returns>
            <remarks><para>This is best used with a <see langword="using"/> statement.</para></remarks>
        </member>
        <member name="T:WebApplications.Utilities.Threading.AsyncSemaphore.Releaser">
            <summary>
            Used to release a single semaphore.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncSemaphore.Releaser.#ctor(WebApplications.Utilities.Threading.AsyncSemaphore)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.AsyncSemaphore.Releaser"/> struct.
            </summary>
            <param name="semaphore">The semaphore.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncSemaphore.Releaser.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Threading.AsyncSemaphore.AllReleaser">
            <summary>
            Used to release multiple semaphores that have been waited on by WaitAllAsync.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.AsyncSemaphore.AllReleaser.Default">
            <summary>
            A default instance of the releaser that does nothing.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.AsyncSemaphore.AllReleaser.DefaultTask">
            <summary>
            A task with the value <see cref="F:WebApplications.Utilities.Threading.AsyncSemaphore.AllReleaser.Default"/>.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncSemaphore.AllReleaser.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.AsyncSemaphore.AllReleaser"/> struct.
            </summary>
            <param name="count">The total possible number of semaphores.</param>
        </member>
        <member name="P:WebApplications.Utilities.Threading.AsyncSemaphore.AllReleaser.IsDefault">
            <summary>
            Gets a value indicating whether this instance is default.
            </summary>
            <value>
            <see langword="true" /> if this instance is default; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:WebApplications.Utilities.Threading.AsyncSemaphore.AllReleaser.Semaphores">
            <summary>
            Gets the semaphores to release.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncSemaphore.AllReleaser.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Threading.SerializingSynchronizationContext">
            <summary>
            Allows serialization of actions.
            </summary>
            <remarks>See https://github.com/revane/SerializingSynchronizationContext.
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.Threading.SerializingSynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)">
            <summary>
            When overridden in a derived class, dispatches an asynchronous message to a synchronization context.
            </summary>
            <param name="callback">The <see cref="T:System.Threading.SendOrPostCallback" /> delegate to call.</param>
            <param name="state">The object passed to the delegate.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.SerializingSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)">
            <summary>
            When overridden in a derived class, dispatches a synchronous message to a synchronization context.
            </summary>
            <param name="callback">The <see cref="T:System.Threading.SendOrPostCallback" /> delegate to call.</param>
            <param name="state">The object passed to the delegate.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.SerializingSynchronizationContext.ProcessQueue">
            <summary>
            Processes the queue.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Threading.SerializingSynchronizationContext.CallbackInfo">
            <summary>
            Groups the state with the callback.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Threading.SerializingSynchronizationContext.CallbackInfo.#ctor(System.Threading.SendOrPostCallback,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.SerializingSynchronizationContext.CallbackInfo"/> struct.
            </summary>
            <param name="callback">The Callback.</param>
            <param name="state">The state.</param>
        </member>
        <member name="P:WebApplications.Utilities.Threading.SerializingSynchronizationContext.CallbackInfo.Callback">
            <summary>
            Gets or sets the Callback.
            </summary>
            <value>The Callback.</value>
        </member>
        <member name="P:WebApplications.Utilities.Threading.SerializingSynchronizationContext.CallbackInfo.State">
            <summary>
            Gets or sets the state.
            </summary>
            <value>The state.</value>
        </member>
        <member name="T:WebApplications.Utilities.Threading.SynchronizationContextAwaiter">
            <summary>
            Allows awaiting for a synchronization context, and runs that the continuation on the context.
            </summary>
            <remarks>Do not use with ConfigureAwait(false), as this can result in the continuation running outside the context.</remarks>
        </member>
        <member name="M:WebApplications.Utilities.Threading.SynchronizationContextAwaiter.#ctor(System.Threading.SynchronizationContext)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.SynchronizationContextAwaiter"/> struct.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="P:WebApplications.Utilities.Threading.SynchronizationContextAwaiter.IsCompleted">
            <summary>
            Gets a value indicating whether this instance is completed.
            </summary>
            <value><see langword="true" /> if this instance is completed; otherwise, <see langword="false" />.</value>
        </member>
        <member name="M:WebApplications.Utilities.Threading.SynchronizationContextAwaiter.OnCompleted(System.Action)">
            <summary>
            Called when the action is completed..
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.SynchronizationContextAwaiter.GetResult">
            <summary>
            Gets the result.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Threading.SynchronizedQueue">
            <summary>
            Allows queuing of work to run exclusively, or concurrently.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.SynchronizedQueue._pair">
            <summary>
            The schedule pair.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Threading.SynchronizedQueue.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.SynchronizedQueue" /> class.
            </summary>
            <param name="taskScheduler">The target scheduler on which this pair should execute.</param>
            <param name="maxConcurrencyLevel">The maximum number of tasks to run concurrently.</param>
            <param name="maxItemsPerTask">The maximum number of tasks to process for each underlying scheduled task used by the pair.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.SynchronizedQueue.Do(System.Action,System.Threading.CancellationToken)">
            <summary>
            Schedules the specified action.
            </summary>
            <param name="action">The action.</param>
            <param name="token">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.SynchronizedQueue.DoConcurrent(System.Action,System.Threading.CancellationToken)">
            <summary>
            Schedules the specified action to run concurrently.
            </summary>
            <param name="action">The action.</param>
            <param name="token">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.SynchronizedQueue.Do``1(System.Func{``0},System.Threading.CancellationToken)">
            <summary>
            Schedules the specified function.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="function">The function.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.SynchronizedQueue.DoConcurrent``1(System.Func{``0},System.Threading.CancellationToken)">
            <summary>
            Schedules the specified action to run concurrently.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="function">The function.</param>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="T:WebApplications.Utilities.Threading.CancelableTokenSource">
            <summary>
            An <see cref="T:WebApplications.Utilities.Threading.ITokenSource"/> implementation that is based on <see cref="T:System.Threading.CancellationTokenSource"/>.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTokenSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.CancelableTokenSource"/> class.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTokenSource.#ctor(System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.CancelableTokenSource"/> class.
            </summary>
            <param name="timeout">The timeout.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTokenSource.#ctor(NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.CancelableTokenSource"/> class.
            </summary>
            <param name="timeout">The timeout.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTokenSource.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.CancelableTokenSource"/> class.
            </summary>
            <param name="timeout">The timeout.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.CancelableTokenSource.CancelAfter(NodaTime.Duration)">
            <summary>
            Schedules a cancel operation on this <see cref="T:WebApplications.Utilities.Threading.CancelableTokenSource" /> after the specified duration.
            </summary>
            <param name="delay">The duration to wait before canceling this <see cref="T:WebApplications.Utilities.Threading.CancelableTokenSource" />.</param>
        </member>
        <member name="F:WebApplications.Utilities.Threading.TokenSource._token">
            <summary>
            The token
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Threading.TokenSource.Token">
            <summary>
            Gets the <see cref="T:System.Threading.CancellationToken" /> associated with this <see cref="T:WebApplications.Utilities.Threading.ITokenSource" />.
            </summary>
            <value>
            The <see cref="T:System.Threading.CancellationToken" /> associated with this <see cref="T:WebApplications.Utilities.Threading.ITokenSource" />.
            </value>
        </member>
        <member name="P:WebApplications.Utilities.Threading.TokenSource.IsCancellationRequested">
            <summary>
            Gets whether cancellation has been requested for this token source.
            </summary>
            <value>
            Whether cancellation has been requested for this token source.
            </value>
        </member>
        <member name="M:WebApplications.Utilities.Threading.TokenSource.#ctor(System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.TokenSource"/> class.
            </summary>
            <param name="token">The token.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.TokenSource.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Threading.WrappedTokenSource">
            <summary>
            An <see cref="T:WebApplications.Utilities.Threading.ITokenSource"/> that wraps other sources.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.WrappedTokenSource._source">
            <summary>
            The _sources
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Threading.WrappedTokenSource.Token">
            <summary>
            Gets the <see cref="T:System.Threading.CancellationToken" /> associated with this <see cref="T:WebApplications.Utilities.Threading.WrappedTokenSource" />.
            </summary>
            <value>
            The <see cref="T:System.Threading.CancellationToken" /> associated with this <see cref="T:WebApplications.Utilities.Threading.WrappedTokenSource" />.
            </value>
        </member>
        <member name="P:WebApplications.Utilities.Threading.WrappedTokenSource.IsCancellationRequested">
            <summary>
            Gets whether cancellation has been requested for this token source.
            </summary>
            <value>
            Whether cancellation has been requested for this token source.
            </value>
        </member>
        <member name="M:WebApplications.Utilities.Threading.WrappedTokenSource.#ctor(System.Threading.CancellationTokenSource)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.WrappedTokenSource"/> class from a single cancellation token source.
            </summary>
            <param name="source">The source.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.WrappedTokenSource.#ctor(System.Threading.CancellationToken,System.Threading.CancellationToken)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.WrappedTokenSource" /> class from a token and multiple cancellation token sources.
            </summary>
            <param name="token1">The token1.</param>
            <param name="token2">The token2.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.WrappedTokenSource.#ctor(System.Threading.CancellationToken[])">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.WrappedTokenSource" /> class from a token and multiple cancellation token sources.
            </summary>
            <param name="tokens">The tokens.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.WrappedTokenSource.Cancel">
            <summary>
            Communicates a request for cancellation.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Threading.WrappedTokenSource.Cancel(System.Boolean)">
            <summary>
            Communicates a request for cancellation, and specifies whether remaining callbacks and cancelable operations should be processed.
            </summary>
            <param name="throwOnFirstException">true if exceptions should immediately propagate; otherwise, false.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.WrappedTokenSource.CancelAfter(System.TimeSpan)">
            <summary>
            Schedules a cancel operation on this <see cref="T:System.Threading.CancellationTokenSource" /> after the specified time span.
            </summary>
            <param name="delay">The time span to wait before canceling this <see cref="T:System.Threading.CancellationTokenSource" />.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.WrappedTokenSource.CancelAfter(NodaTime.Duration)">
            <summary>
            Schedules a cancel operation on this <see cref="T:System.Threading.CancellationTokenSource" /> after the specified duration.
            </summary>
            <param name="delay">The duration to wait before canceling this <see cref="T:System.Threading.CancellationTokenSource" />.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.WrappedTokenSource.CancelAfter(System.Int32)">
            <summary>
            Schedules a cancel operation on this <see cref="T:System.Threading.CancellationTokenSource" /> after the specified number of milliseconds.
            </summary>
            <param name="millisecondsDelay">The time span to wait before canceling this <see cref="T:System.Threading.CancellationTokenSource" />.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.WrappedTokenSource.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Threading.ApmWrap`1">
            <summary>
              A light-weight struct with the ability to associate an arbitrary piece of data of type T with any
              <see cref="T:System.IAsyncResult"/> object. When the asynchronous operation completes this data can be retrieved
              to complete processing.
            </summary>
            <typeparam name="T">The type of the data to embed.</typeparam>
            <remarks>
              <para>This is typically used when you are implementing code that wraps an asynchronous operation and you
              wish to add some context or state of your own to complete the wrapping.</para>
              <para>Based on Jeff Ritcher's wintellect threading libraries.</para>
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ApmWrap`1.Equals(WebApplications.Utilities.Threading.ApmWrap{`0})">
            <summary>
              Returns a <see cref="T:System.Boolean"/> value indicating whether this instance and the specified
              <see cref="T:WebApplications.Utilities.Threading.ApmWrap`1">ApmWrap</see> object are equal.
            </summary>
            <param name="value">The ApmWrap object to compare to this instance.</param>
            <returns>
              Returns <see langword="true"/> if <paramref name="value"/> is equal to this instance; otherwise returns <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ApmWrap`1.Equals(System.Object)">
            <summary>
              Returns a <see cref="T:System.Boolean"/> value indicating whether this instance and the specified object are equal.
            </summary>
            <param name="obj">The object to compare to this instance.</param>
            <returns>
              Returns <see langword="true"/> if the value of the <paramref name="obj"/> is equal to this instance; otherwise returns <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ApmWrap`1.GetHashCode">
            <summary>
              Returns a hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code for this instance.</returns>
            <remarks>Suitable for use in hashing algorithms and also for data structures like a hash table.</remarks>
            <seealso cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ApmWrap`1.op_Equality(WebApplications.Utilities.Threading.ApmWrap{`0},WebApplications.Utilities.Threading.ApmWrap{`0})">
            <summary>
              <para>Implements the operator ==.</para>
              <para>Returns a <see cref="T:System.Boolean"/> indicating whether two instances of
              <see cref="T:WebApplications.Utilities.Threading.ApmWrap`1">ApmWrap</see> are equal.</para>
            </summary>
            <param name="obj1">The first ApmWrap object to compare.</param>
            <param name="obj2">The second ApmWrap object to compare.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ApmWrap`1.op_Inequality(WebApplications.Utilities.Threading.ApmWrap{`0},WebApplications.Utilities.Threading.ApmWrap{`0})">
            <summary>
              <para>Implements the operator !=.</para>
              <para>Returns a <see cref="T:System.Boolean"/> indicating whether two instances of
              <see cref="T:WebApplications.Utilities.Threading.ApmWrap`1">ApmWrap</see> are <b>not</b> equal.</para>
            </summary>
            <param name="obj1">The first ApmWrap object to compare.</param>
            <param name="obj2">The second ApmWrap object to compare.</param>
        </member>
        <member name="P:WebApplications.Utilities.Threading.ApmWrap`1.SyncContext">
            <summary>
              If the SyncContext is a non-null value when creating an ApmWrap object then the ApmWrap object will force the
              operation to complete using the specified <see cref="T:System.Threading.SynchronizationContext"/>.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ApmWrap`1.CreateCallback(System.AsyncCallback,`0)">
            <summary>
              Creates an ApmWrap object around a callback method.
            </summary>
            <param name="data">The data to embed in the ApmWrap object.</param>
            <param name="callback">The callback method that should be invoked when the operation completes.</param>
            <returns>An ApmWrap object's completion method.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ApmWrap`1.WrapCallback(System.AsyncCallback,`0,System.Threading.SynchronizationContext)">
            <summary>
              Creates an ApmWrap object around a callback method.
            </summary>
            <param name="data">The data to embed.</param>
            <param name="callback">
              <para>The callback method.</para>
              <para>This is called once the asynchronous operation completes.</para>
            </param>
            <param name="syncContext">The <see cref="T:System.Threading.SynchronizationContext"/>.</param>
            <returns>
              The internal callback stored within the created ApmWrap object.
              A <see langword="null"/> is returned if the <paramref name="callback"/> is null.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ApmWrap`1.Wrap(System.IAsyncResult,`0)">
            <summary>
              Creates an ApmWrap object around an asynchronous operation.
            </summary>
            <param name="data">The data to embed in the ApmWrap object.</param>
            <param name="result">The original IAsyncResult object returned from the BeginXXX method.</param>
            <returns>
              An ApmWrap object that contains the originally-returned <see cref="T:System.IAsyncResult"/> object.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ApmWrap`1.Unwrap(System.IAsyncResult@)">
            <summary>
              Unwraps an ApmWrap object and also retrieves the embedded data.
            </summary>
            <param name="result">
              The <see langword="ref">reference</see> to the wrapped IAsyncResult object.
            </param>
            <returns>The embedded data.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Threading.ApmWrap`1.ApmWrapper">
            <summary>
              Represents the actual wrapper.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Threading.ApmWrap`1.ApmWrapper.AsyncCallback">
            <summary>
              Gets or sets the <see cref="P:WebApplications.Utilities.Threading.ApmWrap`1.ApmWrapper.AsyncCallback">async callback</see>.
            </summary>
            <remarks>This is the method to call when the asynchronous operation has completed.</remarks>
        </member>
        <member name="P:WebApplications.Utilities.Threading.ApmWrap`1.ApmWrapper.AsyncResult">
            <summary>
              Gets or sets the <see cref="T:System.IAsyncResult">status</see> of the asynchronous operation.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Threading.ApmWrap`1.ApmWrapper.Data">
            <summary>
              Gets or sets the data to embed.
            </summary>
            <value>The data embedded in the result object.</value>
        </member>
        <member name="P:WebApplications.Utilities.Threading.ApmWrap`1.ApmWrapper.SyncContext">
            <summary>
              Gets or sets the <see cref="T:System.Threading.SynchronizationContext">synchronization context</see>.
            </summary>
            <value>The synchronization context.</value>
            <remarks>
              The synchronization context allows you to queue a unit of work to a specific context.
            </remarks>
        </member>
        <member name="P:WebApplications.Utilities.Threading.ApmWrap`1.ApmWrapper.AsyncState">
            <summary>
              Gets a user-defined object that qualifies or contains information about an asynchronous operation.
            </summary>
            <seealso cref="P:System.IAsyncResult.AsyncState"/>
        </member>
        <member name="P:WebApplications.Utilities.Threading.ApmWrap`1.ApmWrapper.AsyncWaitHandle">
            <summary>
              Gets a <see cref="T:System.Threading.WaitHandle"/> which is used to wait for an asynchronous operation to complete.
            </summary>
            <returns>A wait handle that is used to wait for an asynchronous operation to complete.</returns>
        </member>
        <member name="P:WebApplications.Utilities.Threading.ApmWrap`1.ApmWrapper.CompletedSynchronously">
            <summary>
              Gets a <see cref="T:System.Boolean"/> value indicating whether the asynchronous operation completed synchronously.
            </summary>
            <returns>
              Returns <see langword="true"/> if the asynchronous operation completed synchronously; otherwise returns <see langword="false"/>.
            </returns>
        </member>
        <member name="P:WebApplications.Utilities.Threading.ApmWrap`1.ApmWrapper.IsCompleted">
            <summary>
              Gets a <see cref="T:System.Boolean"/> value that indicates whether the asynchronous operation has completed.
            </summary>
            <value>Returns <see langword="true"/> if the operation is complete; otherwise returns <see langword="false"/>.</value>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ApmWrap`1.ApmWrapper.AsyncCallbackInternal(System.IAsyncResult)">
            <summary>
              The internal callback.
            </summary>
            <param name="result">The status of the asynchronous operation.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ApmWrap`1.ApmWrapper.Equals(System.Object)">
            <summary>
              Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The object to compare with the current instance.</param>
            <returns>
              Returns <see langword="true"/> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise returns <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ApmWrap`1.ApmWrapper.GetHashCode">
            <summary>
              Returns a hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code for this instance.</returns>
            <remarks>Suitable for use in hashing algorithms and also for data structures like a hash table.</remarks>
            <seealso cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ApmWrap`1.ApmWrapper.PostCallback(System.Object)">
            <summary>
              Posts the callback.
            </summary>
            <param name="state">The object passed to the delegate.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ApmWrap`1.ApmWrapper.ToString">
            <summary>
              Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String"/> representation of the instance.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Threading.AsyncResult">
            <summary>
              Represents the <see cref="T:System.IAsyncResult">status</see> of an asynchronous operation that has no return type.
            </summary>
            <remarks>
              Based on Jeff Ritcher's wintellect threading libraries.
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncResult.#ctor(System.AsyncCallback,System.Object)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.AsyncResult"/> class.
            </summary>
            <param name="asyncCallback">The method to execute once the operation completes.</param>
            <param name="state">
              The object that can be obtained via the <see cref="P:WebApplications.Utilities.Threading.AsyncResult.AsyncState"/> property.
            </param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncResult.#ctor(System.AsyncCallback,System.Object,System.Object)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.AsyncResult"/> class.
            </summary>
            <param name="asyncCallback">The method that should be executed when the operation completes.</param>
            <param name="state">The object that can be obtained via the AsyncState property.</param>
            <param name="initiatingObject">
              <para>The object that is initiating the asynchronous operation.</para>
              <para>This is stored in the <see cref="P:WebApplications.Utilities.Threading.AsyncResult.InitiatingObject"/> property.</para>
            </param>
        </member>
        <member name="P:WebApplications.Utilities.Threading.AsyncResult.InitiatingObject">
            <summary>
              Gets the <see cref="T:System.Object"/> that was used to initiate the asynchronous operation.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Threading.AsyncResult.IsCancelled">
            <summary>
              Gets a <see cref="T:System.Boolean"/> value that indicates whether the asynchronous operation has cancelled.
            </summary>
            <value>
              Returns <see langword="true"/> if the operation is cancelled; otherwise returns <see langword="false"/>.
            </value>
        </member>
        <member name="P:WebApplications.Utilities.Threading.AsyncResult.AsyncState">
            <summary>
              Gets a user-defined object that qualifies or contains information about an asynchronous operation.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Threading.AsyncResult.AsyncWaitHandle">
            <summary>
              Gets a WaitHandle that is used to wait for an asynchronous operation to complete.
            </summary>
            <returns>A wait handle that is used to wait for an asynchronous operation to complete.</returns>
        </member>
        <member name="P:WebApplications.Utilities.Threading.AsyncResult.CompletedSynchronously">
            <summary>
              Gets a <see cref="T:System.Boolean"/> value that indicates whether the asynchronous operation completed synchronously.
            </summary>
            <value>
              Returns <see langword="true"/> if the asynchronous operation completed synchronously; otherwise returns <see langword="false"/>.
            </value>
        </member>
        <member name="P:WebApplications.Utilities.Threading.AsyncResult.IsCompleted">
            <summary>
              Gets a <see cref="T:System.Boolean"/> value that indicates whether the asynchronous operation has completed.
            </summary>
            <value>
              Returns <see langword="true"/> if the operation is complete; otherwise returns <see langword="false"/>.
            </value>
            <remarks>This includes the cancelled state which will return <see langword="true"/>.</remarks>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncResult.BeginInvokeOnWorkerThread">
            <summary>
              Returns the <see cref="T:System.IAsyncResult">status</see> of an operation that was queued to the thread pool.
            </summary>
            <returns>The IAsyncResult.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncResult.CompleteOpHelper(System.IAsyncResult)">
            <summary>
              A helper function used to run the callback on the completed asynchronous operation.
            </summary>
            <param name="ar">
              The <see cref="T:System.IAsyncResult"/> object that represents the asynchronous operation.
            </param>
            <seealso cref="M:WebApplications.Utilities.Threading.AsyncResult.OnCompleteOperation(System.IAsyncResult)"/>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncResult.EndInvoke">
            <summary>
              Frees up the resources used by the asynchronous operation.
              If the asynchronous operation failed then this method throws the exception.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncResult.GetAsyncCallbackHelper">
            <summary>
              Returns a single <see langword="static"/> delegate to a <see langword="static"/> method that will invoke
              the desired <see cref="T:System.AsyncCallback"/>
            </summary>
            <returns>The <see langword="static"/> delegate.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncResult.OnCompleteOperation(System.IAsyncResult)">
            <summary>
              Invokes the callback method when the asynchronous operations completes.
            </summary>
            <param name="result">
              The <see cref="T:System.IAsyncResult"/> object identifying that the asynchronous operation that has completed.
            </param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncResult.SetAsCompleted(System.Exception,System.Boolean)">
            <summary>
              Set the status of the asynchronous operation to completed.
            </summary>
            <param name="exception">
              If non-null then this identifies the exception that occurred while processing the asynchronous operation.
            </param>
            <param name="completedSynchronously">Indicates whether the operation completed synchronously or asynchronously.</param>
            <exception cref="T:System.InvalidOperationException">The operation result has already been set previously.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncResult.SetAsCancelled">
            <summary>
              Set the status of the asynchronous operation to cancelled.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Threading.AsyncResult`1">
            <summary>
              Represents the status of an asynchronous operation that has a return type of <typeparamref name="TResult" />.
            </summary>
            <typeparam name="TResult">The type of the value returned.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncResult`1.#ctor(System.AsyncCallback,System.Object)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.AsyncResult`1"/> class.
            </summary>
            <param name="asyncCallback">The method to execute once the operation completes.</param>
            <param name="state">The object that can be obtained via the AsyncState property.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncResult`1.#ctor(System.AsyncCallback,System.Object,System.Object)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.AsyncResult`1"/> class.
            </summary>
            <param name="asyncCallback">The method that should be executed when the operation completes.</param>
            <param name="state">The object that can be obtained via the AsyncState property.</param>
            <param name="initiatingObject">
              <para>The object that is initiating the asynchronous operation.</para>
              <para>This is stored in the <see cref="P:WebApplications.Utilities.Threading.AsyncResult.InitiatingObject"/>property.</para>
            </param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncResult`1.BeginInvokeOnWorkerThread">
            <summary>
              Returns an <see cref="T:System.IAsyncResult"/> for an operation that was queued to the thread pool.
            </summary>
            <returns>The <see cref="T:System.IAsyncResult"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncResult`1.CompleteOpHelper(System.IAsyncResult)">
            <summary>
              A helper function used to run the callback on the completed asynchronous operation.
            </summary>
            <param name="ar">
              The <see cref="T:System.IAsyncResult"/> object that represents the asynchronous operation.
            </param>
            <seealso cref="M:WebApplications.Utilities.Threading.AsyncResult.OnCompleteOperation(System.IAsyncResult)"/>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncResult`1.EndInvoke">
            <summary>
              Frees up the resources used by the asynchronous operation.
              If the asynchronous operation failed then this method throws the exception.
            </summary>
            <returns>The value calculated by the asynchronous operation.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncResult`1.GetAsyncCallbackHelper">
            <summary>
              Returns a single <see langword="static"/> delegate to a <see langword="static"/> method that will invoke
              the desired <see cref="T:System.AsyncCallback"/>.
            </summary>
            <returns>The single static delegate.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncResult`1.OnCompleteOperation(System.IAsyncResult)">
            <summary>
              Invokes the callback method when the asynchronous operations completes.
            </summary>
            <param name="result">
              The object identifying the asynchronous operation that has completed.
            </param>
            <returns>The value computed by the asynchronous operation.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Threading.AsyncResult`1.SetAsCompleted(`0,System.Boolean)">
            <summary>
              Call this method to indicate that the asynchronous operation has completed.
            </summary>
            <param name="result">The value calculated by the asynchronous operation.</param>
            <param name="completedSynchronously">
              Indicates whether the operation completed synchronously or asynchronously.
            </param>
        </member>
        <member name="T:WebApplications.Utilities.Threading.ContextStack`1">
            <summary>
              Holds a stack of objects against a logical call stack on a thread.
            </summary>
            <remarks>
              <para>Although it can take any object type, it is never safe to modify objects that exist on the stack,
              as they are shared across many threads. Only the stack structure itself is thread-safe. When used with value
              types it is entirely safe.</para>
              <para>Unlike previous systems, this only stores <see cref="T:System.String"/>s against the thread call context, the
              data of which is merely an index into a lookup dictionary. This means that it will always serialize (for
              example when passing across an app domain) without any issues.</para>
              <para>This works because it stores a string against the thread context, which is a value type, as such
              when a new thread is spun up, the string value is copied to the new thread - acting as a snapshot of the
              thread state at the point the new thread was created.</para>
            </remarks>
            <typeparam name="T">The type of objects in the stack.</typeparam>
        </member>
        <member name="F:WebApplications.Utilities.Threading.ContextStack`1._contextKey">
            <summary>
              This holds a unique random key (<see cref="T:System.Guid"/>), that makes it impossible to guess
              where the object is stored in the <see cref="T:System.Runtime.Remoting.Messaging.CallContext">call
              context</see>, so the only access point is this instance.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.ContextStack`1._objects">
            <summary>
              Holds all active objects by their index.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.ContextStack`1._stackCache">
            <summary>
              Caches the current stack against the Thread Local Storage
              (http://msdn.microsoft.com/en-us/library/windows/desktop/ms686749).
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.ContextStack`1._counter">
            <summary>
              The counter, which is used to generate unique indices for objects (more memory efficient and
              quicker than GUIDs, but requires more thought to prevent collision).
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Threading.ContextStack`1.CurrentStack">
            <summary>
              Gets the current stack.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Threading.ContextStack`1.Current">
            <summary>
              Gets the current top of the stack.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ContextStack`1.Region(`0)">
            <summary>
              Adds the entry to the top of the stack.
            </summary>
            <param name="entry">The entry.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ContextStack`1.Clean">
            <summary>
              Creates a region in which the stack does not exist.
              This is useful for security when passing off to a set of untrusted code.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Threading.ContextStack`1.Cleaner">
            <summary>
              Used to remove stack from the logical call context for a period.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.ContextStack`1.Cleaner._oldStack">
            <summary>
              The stack value before we started.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.ContextStack`1.Cleaner._stack">
            <summary>
              The owner stack.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.ContextStack`1.Cleaner._threadId">
            <summary>
              The managed thread id.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.ContextStack`1.Cleaner._tls">
            <summary>
              The value held in the TLS.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ContextStack`1.Cleaner.#ctor(WebApplications.Utilities.Threading.ContextStack{`0})">
            <summary>
              Initializes a new instance of the <see cref="T:System.Object"/> class.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ContextStack`1.Cleaner.Dispose">
            <summary>
              Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
            <exception cref="T:System.InvalidOperationException">
              Cannot close the cleaner region as it was created on another thread.
            </exception>
        </member>
        <member name="T:WebApplications.Utilities.Threading.ContextStack`1.Disposer">
            <summary>
              Used to start and end a region.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.ContextStack`1.Disposer._key">
            <summary>
              The key.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.ContextStack`1.Disposer._oldStack">
            <summary>
              The stack value before we started.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.ContextStack`1.Disposer._stack">
            <summary>
              The owner stack.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Threading.ContextStack`1.Disposer._threadId">
            <summary>
              The managed thread id.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ContextStack`1.Disposer.#ctor(WebApplications.Utilities.Threading.ContextStack{`0},`0)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Threading.ContextStack`1.Disposer"/> class.
            </summary>
            <param name="stack">The stack.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.Threading.ContextStack`1.Disposer.Dispose">
            <summary>
              Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
            <exception cref="T:System.InvalidOperationException">
              Cannot close the region as it was created on another thread.
            </exception>
        </member>
        <member name="T:WebApplications.Utilities.VariableLengthEncoding">
            <summary>
            Class for performing variable length encoding.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.VariableLengthEncoding.Encode(System.UInt64)">
            <summary>
            Encodes the specified value to a byte[].
            </summary>
            <param name="value">The value.</param>
            <returns>The compressed value.</returns>
            <seealso cref="M:WebApplications.Utilities.VariableLengthEncoding.Decode(System.Byte[],System.Int64)"/>
            <seealso cref="M:WebApplications.Utilities.VariableLengthEncoding.Decode(System.Byte[],System.Int64@)"/>
            <remarks>
            <para>This compression assumes a weighting towards lower values, an is ideally suited for lengths.  It uses
            7-bits per byte, with the most significant bit indicating that another byte is used.  This means it also
            encodes its own length and can act as a variable length header.</para>
            <para>Values less than 268,435,456 (1 &lt;&lt; 28) take a maximum of four bytes, and only 1 byte for values
            less than 128 (1 &lt;&lt; 7).  As such the compression becomes inefficient above 28 bits, however it has
            the distinct benefit of being able to encode all possible ulong values, requiring up to 10 bytes for the
            largest values, at a cost of two bytes compared to a ulong.</para>
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.VariableLengthEncoding.Encode(System.UInt64,System.Byte[],System.Int64)">
            <summary>
            Encodes the specified value to a byte[].
            </summary>
            <param name="value">The value.</param>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset.</param>
            <returns>The compressed value.</returns>
            <seealso cref="M:WebApplications.Utilities.VariableLengthEncoding.Decode(System.Byte[],System.Int64)"/>
            <seealso cref="M:WebApplications.Utilities.VariableLengthEncoding.Decode(System.Byte[],System.Int64@)"/>
            <remarks><para>This compression assumes a weighting towards lower values, an is ideally suited for lengths.  It uses
            7-bits per byte, with the most significant bit indicating that another byte is used.  This means it also
            encodes its own length and can act as a variable length header.</para>
            <para>Values less than 268,435,456 (1 &lt;&lt; 28) take a maximum of four bytes, and only 1 byte for values
            less than 128 (1 &lt;&lt; 7).  As such the compression becomes inefficient above 28 bits, however it has
            the distinct benefit of being able to encode all possible ulong values, requiring up to 10 bytes for the
            largest values, at a cost of two bytes compared to a ulong.</para></remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="buffer"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.IO.InternalBufferOverflowException">Could not encode the value as the buffer ran out of space.</exception>
        </member>
        <member name="M:WebApplications.Utilities.VariableLengthEncoding.Encode(System.UInt64,System.Byte[],System.Int64@)">
            <summary>
            Encodes the specified value to a byte[].
            </summary>
            <param name="value">The value.</param>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset.</param>
            <returns>The compressed value.</returns>
            <seealso cref="M:WebApplications.Utilities.VariableLengthEncoding.Decode(System.Byte[],System.Int64)"/>
            <seealso cref="M:WebApplications.Utilities.VariableLengthEncoding.Decode(System.Byte[],System.Int64@)"/>
            <remarks><para>This compression assumes a weighting towards lower values, an is ideally suited for lengths.  It uses
            7-bits per byte, with the most significant bit indicating that another byte is used.  This means it also
            encodes its own length and can act as a variable length header.</para>
            <para>Values less than 268,435,456 (1 &lt;&lt; 28) take a maximum of four bytes, and only 1 byte for values
            less than 128 (1 &lt;&lt; 7).  As such the compression becomes inefficient above 28 bits, however it has
            the distinct benefit of being able to encode all possible ulong values, requiring up to 10 bytes for the
            largest values, at a cost of two bytes compared to a ulong.</para></remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="buffer"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.IO.InternalBufferOverflowException">Could not encode the value as the buffer ran out of space.</exception>
        </member>
        <member name="M:WebApplications.Utilities.VariableLengthEncoding.Decode(System.Byte[],System.Int64)">
            <summary>
            Decodes the specified value from the buffer.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset to start from.</param>
            <returns>The uncompressed value.</returns>
            <seealso cref="M:WebApplications.Utilities.VariableLengthEncoding.Encode(System.UInt64)"/>
            <seealso cref="M:WebApplications.Utilities.VariableLengthEncoding.Encode(System.UInt64,System.Byte[],System.Int64)"/>
            <seealso cref="M:WebApplications.Utilities.VariableLengthEncoding.Encode(System.UInt64,System.Byte[],System.Int64@)"/>
            <exception cref="T:System.ArgumentNullException"><paramref name="buffer"/> is <see langword="null"/>.</exception>
            <remarks><para>As this uses a variable length encoding that encodes it's own length a length is no required.</para></remarks>
            <exception cref="T:System.IO.InternalBufferOverflowException">The encoding was invalid, ran out of bytes before getting an end of encoding byte.</exception>
        </member>
        <member name="M:WebApplications.Utilities.VariableLengthEncoding.Decode(System.Byte[],System.Int64@)">
            <summary>
            Decodes the specified value from the buffer.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset to start from.</param>
            <returns>The uncompressed value.</returns>
            <seealso cref="M:WebApplications.Utilities.VariableLengthEncoding.Encode(System.UInt64)"/>
            <seealso cref="M:WebApplications.Utilities.VariableLengthEncoding.Encode(System.UInt64,System.Byte[],System.Int64)"/>
            <exception cref="T:System.ArgumentNullException"><paramref name="buffer"/> is <see langword="null"/>.</exception>
            <remarks><para>As this uses a variable length encoding that encodes it's own length a length is no required.</para></remarks>
            <exception cref="T:System.IO.InternalBufferOverflowException">The encoding was invalid, ran out of bytes before getting an end of encoding byte.</exception>
        </member>
        <member name="T:WebApplications.Utilities.ModuleInitializer">
            <summary>
              This type cannot be private, as it must be callable from the actual Module Initializer.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.ModuleInitializer.Initialize">
            <summary>
              This method must not be private and must be <see langword="static"/>. 
              Any return value is ignored.
            </summary>
            <remarks>
              Include initialization code here that will run when the library is first loaded,
              and before any element of the library is used.
            </remarks>
        </member>
        <member name="T:WebApplications.Utilities.ParameterUsageVisitor">
            <summary>
            Expression visitor that gets all the <see cref="T:System.Linq.Expressions.ParameterExpression">parameters</see> that are actually used within an expression.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.ParameterUsageVisitor.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:WebApplications.Utilities.ParameterUsageVisitor"/> class from being created.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.ParameterUsageVisitor.Contains(System.Linq.Expressions.ParameterExpression)">
            <summary>
            Gets whether the parameter given is used within the visited expression.
            </summary>
            <param name="parameter">The parameter.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.ParameterUsageVisitor.Create(System.Linq.Expressions.Expression)">
            <summary>
            Determines the parameters used within the given expression.
            </summary>
            <param name="expression">The expression.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.ParameterUsageVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>
            Visits the <see cref="T:System.Linq.Expressions.ParameterExpression" />.
            </summary>
            <param name="node">The expression to visit.</param>
            <returns>
            The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ParameterUsageVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})">
            <summary>
            Visits the lambda.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.ParameterUsageVisitor.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ParameterUsageVisitor.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:WebApplications.Utilities.ParameterUsageVisitor.Count">
            <summary>
            Gets the number of parameters used in the expression.
            </summary>
            <returns>The number of parameters used in the expression. </returns>
        </member>
        <member name="T:WebApplications.Utilities.Ranges.DurationRange">
            <summary>
              A range of <see cref="T:NodaTime.Duration">Duration</see>s.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.DurationRange.#ctor(NodaTime.Duration,NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.DurationRange"/> class.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.DurationRange.#ctor(NodaTime.Duration,NodaTime.Duration,NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.DurationRange"/> class.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="step">The step.</param>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.DurationRange.AutoStep(NodaTime.Duration)">
            <summary>
            Given a delta automatically returns a sensible step size.
            </summary>
            <param name="delta">The delta.</param>
            <returns>Duration.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.DurationRange.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.DurationRange.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:WebApplications.Utilities.Ranges.InstantRange">
            <summary>
              A range of <see cref="T:NodaTime.Instant">Instant</see>s.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.InstantRange.#ctor(NodaTime.Instant,NodaTime.Instant)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.InstantRange"/> class using the specified start and end instants.
            </summary>
            <param name="start">The start instant.</param>
            <param name="end">The end instant.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
              The <paramref name="start"/> instant was greater than the <paramref name="end"/> instant.
            </exception>
            <remarks>The step size is 00:00:01.</remarks>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.InstantRange.#ctor(NodaTime.Instant,NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.InstantRange" /> class using the specified start instant and duration.
            </summary>
            <param name="start">The start instant.</param>
            <param name="duration">The duration.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="duration" /> was negative.</exception>
            <remarks>
            The step size is 00:00:01.
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.InstantRange.#ctor(NodaTime.Instant,NodaTime.Instant,NodaTime.Duration)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.InstantRange"/> class using the specified start instant,
              end instant and step size.
            </summary>
            <param name="start">The start instant.</param>
            <param name="end">The end instant.</param>
            <param name="step">The step between each instant in the range.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="start"/> was after the <see cref="T:System.DateTime">date</see> specified for <paramref name="end"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.InstantRange.#ctor(NodaTime.Instant,NodaTime.Duration,NodaTime.Duration)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:WebApplications.Utilities.Ranges.InstantRange" /> class using the specified start instant,
            end instant and step size.
            </summary>
            <param name="start">The start instant.</param>
            <param name="duration">The duration.</param>
            <param name="step">The step between each instant in the range.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="duration" /> was negative.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.InstantRange.#ctor(WebApplications.Utilities.Ranges.ZonedDateTimeRange)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.InstantRange"/> class using the specified zoned date time range.
            </summary>
            <param name="zonedDateTimeRange">The zoned date time range.</param>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.InstantRange.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> representation of this instance.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.InstantRange.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:WebApplications.Utilities.Ranges.LocalDateRange">
            <summary>
            A range of <see cref="T:NodaTime.LocalDate"/>.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.LocalDateRange.#ctor(NodaTime.LocalDate,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.LocalDateRange" /> class using the specified start date and duration.
            </summary>
            <param name="start">The start date.</param>
            <param name="days">The duration in days.</param>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.LocalDateRange.#ctor(NodaTime.LocalDate,NodaTime.Period)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.LocalDateRange" /> class using the specified start date and duration.
            </summary>
            <param name="start">The start date.</param>
            <param name="duration">The duration.</param>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.LocalDateRange.#ctor(NodaTime.LocalDate,NodaTime.LocalDate)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.LocalDateRange"/> class using the specified start and end date.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.LocalDateRange.#ctor(NodaTime.LocalDate,NodaTime.LocalDate,NodaTime.Period)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.LocalDateRange"/> class using the specified start date, end date and step.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="step">The step.</param>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.LocalDateRange.#ctor(NodaTime.LocalDate,System.UInt32,NodaTime.Period)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.LocalDateRange" /> class using the specified start date, duration and step.
            </summary>
            <param name="start">The start.</param>
            <param name="days">The duration in days.</param>
            <param name="step">The step.</param>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.LocalDateRange.#ctor(NodaTime.LocalDate,NodaTime.Period,NodaTime.Period)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.LocalDateRange" /> class using the specified start date, duration and step.
            </summary>
            <param name="start">The start.</param>
            <param name="duration">The duration.</param>
            <param name="step">The step.</param>
        </member>
        <member name="P:WebApplications.Utilities.Ranges.LocalDateRange.Days">
            <summary>
            Gets the number of days between the start date and the end date, inclusively.
            This will return 1 where the start and end date are equal.
            </summary>
            <remarks>
            This is always the same as <see cref="P:WebApplications.Utilities.Ranges.LocalDateRange.Nights"/> + 1.
            </remarks>
        </member>
        <member name="P:WebApplications.Utilities.Ranges.LocalDateRange.Nights">
            <summary>
            Gets the number of nights in the date range.
            Where the start and end date are equal this will return 0.
            </summary>
            <remarks>
            This is always the same as <see cref="P:WebApplications.Utilities.Ranges.LocalDateRange.Days"/> - 1.
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.LocalDateRange.AutoStep(NodaTime.LocalDate,NodaTime.LocalDate)">
            <summary>
            Given a start and end automatically returns a sensible step size.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <returns>
            Period.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.LocalDateRange.At(NodaTime.LocalTime)">
            <summary>
            Gets a <see cref="T:WebApplications.Utilities.Ranges.LocalDateTimeRange" /> at the time given on the dates represented by this local date range.
            </summary>
            <param name="time">The time.</param>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.LocalDateRange.At(NodaTime.LocalTime,NodaTime.LocalTime)">
            <summary>
            Gets a <see cref="T:WebApplications.Utilities.Ranges.LocalDateTimeRange" /> at the times given on the dates represented by this local date range.
            </summary>
            <param name="startTime">The start time.</param>
            <param name="endTime">The end time.</param>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.LocalDateRange.AtMidnight">
            <summary>
            Gets a <see cref="T:WebApplications.Utilities.Ranges.LocalDateTimeRange" /> at midnight on the dates represented by this local date range.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.LocalDateRange.ToDateRangeUnspecified">
            <summary>
            Converts this range to a <see cref="T:WebApplications.Utilities.Ranges.DateRange"/> with a <see cref="P:System.DateTime.Kind" /> of <see cref="F:System.DateTimeKind.Unspecified"/>.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.LocalDateRange.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.LocalDateRange.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:WebApplications.Utilities.Ranges.LocalDateTimeRange">
            <summary>
            A range of <see cref="T:NodaTime.LocalDateTime"/>.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.LocalDateTimeRange.#ctor(NodaTime.LocalDateTime,NodaTime.LocalDateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.LocalDateTimeRange"/> class using the specified start and end date time.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.LocalDateTimeRange.#ctor(NodaTime.LocalDateTime,NodaTime.Period)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.LocalDateTimeRange" /> class using the specified start date time and duration.
            </summary>
            <param name="start">The start.</param>
            <param name="duration">The duration.</param>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.LocalDateTimeRange.#ctor(NodaTime.LocalDateTime,NodaTime.LocalDateTime,NodaTime.Period)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.LocalDateTimeRange"/> class using the specified start date time, end date time and step.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="step">The step.</param>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.LocalDateTimeRange.#ctor(NodaTime.LocalDateTime,NodaTime.Period,NodaTime.Period)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.LocalDateTimeRange" /> class using the specified start date time, duration and step.
            </summary>
            <param name="start">The start.</param>
            <param name="duration">The duration.</param>
            <param name="step">The step.</param>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.LocalDateTimeRange.AutoStep(NodaTime.LocalDateTime,NodaTime.LocalDateTime)">
            <summary>
            Given a start and end automatically returns a sensible step size.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <returns>
            Period.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.LocalDateTimeRange.ToDateTimeRangeUnspecified">
            <summary>
            Converts this range to a <see cref="T:WebApplications.Utilities.Ranges.DateTimeRange"/> with a <see cref="P:System.DateTime.Kind" /> of <see cref="F:System.DateTimeKind.Unspecified"/>.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Ranges.LocalDateTimeRange.DateRange">
            <summary>
            Gets a <see cref="T:WebApplications.Utilities.Ranges.LocalDateRange"/> of the date components of this <see cref="T:WebApplications.Utilities.Ranges.LocalDateTimeRange"/>. 
            The step will be rounded to the nearest day, rounded up to 1 day if less.
            </summary>
            <value>
            The date range.
            </value>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.LocalDateTimeRange.DateStep">
            <summary>
            Rounds the step to the nearest day, rounding up to 1 day if less.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.LocalDateTimeRange.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.LocalDateTimeRange.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:WebApplications.Utilities.Ranges.LocalTimeRange">
            <summary>
            A range of <see cref="T:NodaTime.LocalTime"/>.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.LocalTimeRange.#ctor(NodaTime.LocalTime,NodaTime.LocalTime)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.LocalTimeRange"/> class using the specified start and end times.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.LocalTimeRange.#ctor(NodaTime.LocalTime,NodaTime.Period)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.LocalTimeRange" /> class using the specified start time and duration.
            </summary>
            <param name="start">The start.</param>
            <param name="duration">The duration.</param>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.LocalTimeRange.#ctor(NodaTime.LocalTime,NodaTime.LocalTime,NodaTime.Period)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.LocalTimeRange"/> class using the specified start time, end time and step.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="step">The step.</param>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.LocalTimeRange.#ctor(NodaTime.LocalTime,NodaTime.Period,NodaTime.Period)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.LocalTimeRange" /> class using the specified start time, duration and step.
            </summary>
            <param name="start">The start.</param>
            <param name="duration">The duration.</param>
            <param name="step">The step.</param>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.LocalTimeRange.AutoStep(NodaTime.LocalTime,NodaTime.LocalTime)">
            <summary>
            Given a start and end automatically returns a sensible step size.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <returns>
            Period.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="P:WebApplications.Utilities.Ranges.LocalTimeRange.LocalDateTimeRange">
            <summary>
            Gets a <see cref="P:WebApplications.Utilities.Ranges.LocalTimeRange.LocalDateTimeRange"/> with these local times, on January 1st 1970 in the ISO calendar.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.LocalTimeRange.On(NodaTime.LocalDate)">
            <summary>
            Gets a <see cref="P:WebApplications.Utilities.Ranges.LocalTimeRange.LocalDateTimeRange"/> from this local time range on the date given.
            </summary>
            <param name="date">The date to combine with the times in the range.</param>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.LocalTimeRange.On(NodaTime.LocalDate,NodaTime.LocalDate)">
            <summary>
            Gets a <see cref="P:WebApplications.Utilities.Ranges.LocalTimeRange.LocalDateTimeRange" /> from this local time range on the date given.
            </summary>
            <param name="startDate">The date to combine with the start time.</param>
            <param name="endDate">The date to combine with the end time.</param>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.LocalTimeRange.ToTimeSpanRange">
            <summary>
            Converts this range to a <see cref="T:WebApplications.Utilities.Ranges.TimeSpanRange"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.LocalTimeRange.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.LocalTimeRange.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:WebApplications.Utilities.Ranges.ZonedDateTimeRange">
            <summary>
              A range of <see cref="T:NodaTime.ZonedDateTime">ZonedDateTime</see>s.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.ZonedDateTimeRange.#ctor(NodaTime.ZonedDateTime,NodaTime.ZonedDateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.ZonedDateTimeRange" /> class.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.ZonedDateTimeRange.#ctor(NodaTime.ZonedDateTime,NodaTime.ZonedDateTime,NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.ZonedDateTimeRange" /> class.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="step">The step.</param>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.ZonedDateTimeRange.#ctor(WebApplications.Utilities.Ranges.InstantRange,NodaTime.DateTimeZone)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.ZonedDateTimeRange"/> class.
            </summary>
            <param name="instantRange">The instant range.</param>
            <param name="dateTimeZone">The date time zone.</param>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.ZonedDateTimeRange.#ctor(WebApplications.Utilities.Ranges.InstantRange,NodaTime.DateTimeZone,NodaTime.DateTimeZone)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.ZonedDateTimeRange"/> class.
            </summary>
            <param name="instantRange">The instant range.</param>
            <param name="startDateTimeZone">The start date time zone.</param>
            <param name="endDateTimeZone">The end date time zone.</param>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.ZonedDateTimeRange.#ctor(NodaTime.Instant,NodaTime.Instant,NodaTime.DateTimeZone)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.ZonedDateTimeRange"/> class.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="dateTimeZone">The date time zone.</param>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.ZonedDateTimeRange.#ctor(NodaTime.Instant,NodaTime.Instant,NodaTime.DateTimeZone,NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.ZonedDateTimeRange"/> class.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="dateTimeZone">The date time zone.</param>
            <param name="step">The step.</param>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.ZonedDateTimeRange.#ctor(NodaTime.Instant,NodaTime.DateTimeZone,NodaTime.Instant,NodaTime.DateTimeZone)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.ZonedDateTimeRange"/> class.
            </summary>
            <param name="start">The start.</param>
            <param name="startDateTimeZone">The start date time zone.</param>
            <param name="end">The end.</param>
            <param name="endDateTimeZone">The end date time zone.</param>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.ZonedDateTimeRange.#ctor(NodaTime.Instant,NodaTime.DateTimeZone,NodaTime.Instant,NodaTime.DateTimeZone,NodaTime.Duration)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.ZonedDateTimeRange"/> class.
            </summary>
            <param name="start">The start.</param>
            <param name="startDateTimeZone">The start date time zone.</param>
            <param name="end">The end.</param>
            <param name="endDateTimeZone">The end date time zone.</param>
            <param name="step">The step.</param>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.ZonedDateTimeRange.op_Implicit(WebApplications.Utilities.Ranges.ZonedDateTimeRange)~WebApplications.Utilities.Ranges.InstantRange">
            <summary>
            Performs an implicit conversion from <see cref="T:WebApplications.Utilities.Ranges.ZonedDateTimeRange"/> to <see cref="T:WebApplications.Utilities.Ranges.InstantRange"/>.
            </summary>
            <param name="zonedDateTimeRange">The zoned date time range.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.ZonedDateTimeRange.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.ZonedDateTimeRange.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:WebApplications.Utilities.Ranges.ByteRange">
            <summary>
            A range of <see cref="T:System.Byte"/>s.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.ByteRange.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.ByteRange"/> class.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="step">The step.</param>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.ByteRange.ToString">
            <inheritdoc />
        </member>
        <member name="T:WebApplications.Utilities.Ranges.FinancialRange">
            <summary>
            A range of <see cref="T:WebApplications.Utilities.Financials.Financial"/> financial.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.FinancialRange.#ctor(WebApplications.Utilities.Financials.Financial,WebApplications.Utilities.Financials.Financial)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.Range`1"/> class.
            </summary>
            <param name="start">The start value (inclusive).</param>
            <param name="end">The end value (inclusive).</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="start"/> value was greater than the <paramref name="end"/> value.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.FinancialRange.#ctor(WebApplications.Utilities.Financials.Financial,WebApplications.Utilities.Financials.Financial,System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.Range`1"/> class.
            </summary>
            <param name="start">The start value.</param>
            <param name="end">The end value (inclusive).</param>
            <param name="step">The range step (inclusive).</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="start"/> value was greater than the <paramref name="end"/> value.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.FinancialRange.#ctor(WebApplications.Utilities.Financials.Financial,WebApplications.Utilities.Financials.Financial,WebApplications.Utilities.Financials.Financial)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.Range`2"/> class.
            </summary>
            <param name="start">The start value (inclusive).</param>
            <param name="end">The end value (inclusive).</param>
            <param name="step">The range step.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
              The <paramref name="start"/> value was greater than the <paramref name="end"/> value.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.FinancialRange.#ctor(WebApplications.Utilities.Globalization.CurrencyInfo,System.Decimal,System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.Range`2"/> class.
            </summary>
            <param name="currency">The currency information.</param>
            <param name="start">The start value (inclusive).</param>
            <param name="end">The end value (inclusive).</param>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.FinancialRange.#ctor(WebApplications.Utilities.Globalization.CurrencyInfo,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.Range`2"/> class.
            </summary>
            <param name="currency">The currency information.</param>
            <param name="start">The start value (inclusive).</param>
            <param name="end">The end value (inclusive).</param>
            <param name="step">The range step.</param>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.FinancialRange.#ctor(WebApplications.Utilities.Globalization.CurrencyInfo,System.Decimal,System.Decimal,WebApplications.Utilities.Financials.Financial)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.Range`2"/> class.
            </summary>
            <param name="currency">The currency information.</param>
            <param name="start">The start value (inclusive).</param>
            <param name="end">The end value (inclusive).</param>
            <param name="step">The range step.</param>
        </member>
        <member name="P:WebApplications.Utilities.Ranges.FinancialRange.Currency">
            <summary>
            Gets the currency.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.FinancialRange.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <param name="format">The format style: "I" for the value followed by the ISO currency code, "C" for a culture specific currency format.</param>
            <param name="provider">The format provider.</param>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
            <exception cref="T:System.FormatException">The format string is not supported.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.FinancialRange.ToString">
            <inheritdoc/>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.FinancialRange.ToString(System.String)">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <param name="format">The format style: "I" for the value followed by the ISO currency code, "C" for a culture specific currency format.</param>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:WebApplications.Utilities.Ranges.TimeSpanRange">
            <summary>
            A range of <see cref="T:System.TimeSpan">s</see> values with the time component ignored.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.TimeSpanRange.#ctor(System.TimeSpan,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.TimeSpanRange"/> class.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.TimeSpanRange.#ctor(System.TimeSpan,System.TimeSpan,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.TimeSpanRange"/> class.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="step">The step in days.</param>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.TimeSpanRange.AutoStep(System.TimeSpan)">
            <summary>
            Given a delta automatically returns a sensible step size.
            </summary>
            <param name="delta">The delta.</param>
            <returns>TimeSpan.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.TimeSpanRange.ToString">
            <inheritdoc />
        </member>
        <member name="T:WebApplications.Utilities.Ranges.DateRange">
            <summary>
              A range of <see cref="T:System.DateTime">date</see> values with the time component ignored.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.DateRange.#ctor(System.DateTime,System.UInt32)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.DateRange"/> class using the specified start date and duration.
            </summary>
            <param name="start">The start date (inclusive).</param>
            <param name="days">The duration in days.</param>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.DateRange.#ctor(System.DateTime,System.DateTime)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.DateRange"/> class using the specified start date and end date.
            </summary>
            <param name="start">The start date (inclusive).</param>
            <param name="end">The end date (inclusive).</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
              The <paramref name="start"/> date was greater than the <paramref name="end"/> date.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.DateRange.#ctor(System.DateTime,System.DateTime,System.Int32)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.DateRange"/> class using the specified start date, end date and step.
            </summary>
            <param name="start">The start date (inclusive).</param>
            <param name="end">The end date (inclusive).</param>
            <param name="step">The step between each date in the range (in days).</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
              The <paramref name="start"/> date was greater than the <paramref name="end"/> date.
            </exception>
        </member>
        <member name="P:WebApplications.Utilities.Ranges.DateRange.Days">
            <summary>
              Gets the number of days between the start date and the end date, inclusively.
              This will return 1 where the start and end date are equal.
            </summary>
            <remarks>
              This is always the same as <see cref="P:WebApplications.Utilities.Ranges.DateRange.Nights"/> + 1.
            </remarks>
        </member>
        <member name="P:WebApplications.Utilities.Ranges.DateRange.Nights">
            <summary>
              Gets the number of nights in the date range.
              Where the start and end date are equal this will return 0.
            </summary>
            <remarks>
               This is always the same as <see cref="P:WebApplications.Utilities.Ranges.DateRange.Days"/> - 1.
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.DateRange.ToString">
            <summary>
              Returns a <see cref="T:System.String"/> representation of this instance.
            </summary>
            <returns>
              A <see cref="T:System.String"/> representation of this instance.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.DateRange.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:WebApplications.Utilities.Ranges.DateTimeRange">
            <summary>
              A range of <see cref="T:System.DateTime">DateTime</see>s.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.DateTimeRange.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.DateTimeRange"/> class using the specified start date and end date.
            </summary>
            <param name="start">The start date (inclusive).</param>
            <param name="end">The end date (inclusive).</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
              The <paramref name="start"/> date was greater than the <paramref name="end"/> date.
            </exception>
            <remarks>The step size is 00:00:01.</remarks>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.DateTimeRange.#ctor(System.DateTime,System.DateTime,System.TimeSpan)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.DateTimeRange"/> class using the specified start date,
              end date and step size.
            </summary>
            <param name="start">The start date (inclusive).</param>
            <param name="end">The end date (inclusive).</param>
            <param name="step">The step between each date in the range (in days).</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
              The <paramref name="start"/> was after the <see cref="T:System.DateTime">date</see> specified for
            <paramref name="end"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.DateTimeRange.ToString">
            <summary>
              Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
              A <see cref="T:System.String"/> representation of this instance.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.DateTimeRange.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:WebApplications.Utilities.Ranges.DecimalRange">
            <summary>
              A range of <see cref="T:System.Decimal"/>s.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.DecimalRange.#ctor(System.Decimal,System.Decimal,System.Decimal)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.DecimalRange"/> class.
            </summary>
            <param name="start">The start number (inclusive).</param>
            <param name="end">The end number (inclusive).</param>
            <param name="step">
              <para>The step between each value in the range.</para>
              <para>By default this is set to 1.0M.</para>
            </param>
            <remarks>
              Imprecise step values can result in cumulative rounding errors.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
              The <paramref name="start"/> value was greater than the <paramref name="end"/> value.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.DecimalRange.ToString">
            <summary>
              Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
              A <see cref="T:System.String"/> representation of this instance.
            </returns>
        </member>
        <member name="T:WebApplications.Utilities.Ranges.DoubleRange">
            <summary>
              A range of <see cref="T:System.Double"/>s.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.DoubleRange.#ctor(System.Double,System.Double,System.Double)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.DoubleRange"/> class.
            </summary>
            <param name="start">The start number (inclusive).</param>
            <param name="end">The end number (inclusive).</param>
            <param name="step">
              <para>The step between each value in the range.</para>
              <para>By default this is set to 1.0D.</para>
            </param>
            <remarks>
              Imprecise step values can result in cumulative rounding errors.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
              The <paramref name="start"/> value was greater than the <paramref name="end"/> value.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.DoubleRange.ToString">
            <summary>
              Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
              A <see cref="T:System.String"/> representation of this instance.
            </returns>
        </member>
        <member name="T:WebApplications.Utilities.Ranges.IntRange">
            <summary>
            A range of <see cref="T:System.Int32">integers</see>.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.IntRange.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.IntRange"/> class.
            </summary>
            <param name="start">The start number (inclusive).</param>
            <param name="end">The end number (inclusive).</param>
            <param name="step">
              <para>The step between each value in the range.</para>
              <para>By default this is set to 1.</para>
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
              The <paramref name="start"/> value was greater than the <paramref name="end"/> value.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.IntRange.ToString">
            <summary>
              Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
              A <see cref="T:System.String"/> representation of this instance.
            </returns>
        </member>
        <member name="T:WebApplications.Utilities.Ranges.LongRange">
            <summary>
              A range of <see cref="T:System.Int64"/>s.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.LongRange.#ctor(System.Int64,System.Int64,System.Int64)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.LongRange"/> class.
            </summary>
            <param name="start">The start number (inclusive).</param>
            <param name="end">The end number (inclusive).</param>
            <param name="step">
              <para>The step between each value in the range.</para>
              <para>By default this is set to 1.</para>
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
              The <paramref name="start"/> value was greater than the <paramref name="end"/> value.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.LongRange.ToString">
            <summary>
              Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
              A <see cref="T:System.String"/> representation of this instance.
            </returns>
        </member>
        <member name="T:WebApplications.Utilities.Ranges.Range`2">
            <summary>
              A range of values of type <typeparamref name="TValue"/>.
            </summary>
            <typeparam name="TValue">The type of the values in the range.</typeparam>
            <typeparam name="TStep">The type of the step used to iterate through the collection.</typeparam>
        </member>
        <member name="F:WebApplications.Utilities.Ranges.Range`2._add">
            <summary>
              Method for performing additions.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Ranges.Range`2._lessThan">
            <summary>
              Method for performing LessThan comparison.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Ranges.Range`2._lessThanOrEqual">
            <summary>
              Method for performing LessThanOrEqual comparison.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Ranges.Range`2._greaterThanOrEqual">
            <summary>
              Method for performing GreaterThanOrEqual comparison.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Ranges.Range`2._end">
            <summary>
              The end of the range (inclusive).
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Ranges.Range`2._start">
            <summary>
              The start of the range (inclusive).
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Ranges.Range`2._step">
            <summary>
              The step for enumeration
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.Range`2.#cctor">
            <summary>
              Initializes the <see cref="T:WebApplications.Utilities.Ranges.Range`2"/> class.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.Range`2.CheckStartGreaterThanEnd(`0,`0,System.Boolean)">
            <summary>
            Checks that the start is greater than the end.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="throw">if set to <see langword="true" /> throw if failed.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException">start</exception>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.Range`2.#ctor(`0,`0)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.Range`2"/> class.
            </summary>
            <param name="start">The start value (inclusive).</param>
            <param name="end">The end value (inclusive).</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
              The <paramref name="start"/> value was greater than the <paramref name="end"/> value.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.Range`2.#ctor(`0,`0,`1)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.Range`2"/> class.
            </summary>
            <param name="start">The start value (inclusive).</param>
            <param name="end">The end value (inclusive).</param>
            <param name="step">The range step.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
              The <paramref name="start"/> value was greater than the <paramref name="end"/> value.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.Range`2.GetEnumerator">
            <summary>
              Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
              A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.Range`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
              Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
              An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.Range`2.Equals(WebApplications.Utilities.Ranges.Range{`0,`1})">
            <inheritDoc />
        </member>
        <member name="P:WebApplications.Utilities.Ranges.Range`2.Start">
            <summary>
              The start of the range (inclusive).
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Ranges.Range`2.End">
            <summary>
              The end of the range (inclusive).
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Ranges.Range`2.Step">
            <summary>
              The step for enumeration
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.Range`2.Bind(`0)">
            <summary>
              Binds the specified value so that it cannot fall outside the values of the range.
            </summary>
            <param name="value">The value to bind.</param>
            <returns>The bound value.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.Range`2.Contains(`0)">
            <summary>
            Determines whether the <paramref name="value"/> given is within this range.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.Range`2.Intersects(WebApplications.Utilities.Ranges.Range{`0,`1})">
            <summary>
            Checks if this range intersects with another range.
            </summary>
            <param name="other">The other.</param>
            <returns><see langword="true"/> if the range intersects with this range; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.Range`2.GetEnumerator(`1)">
            <summary>
              Returns an enumerator that iterates through the collection and allows a specific step size.
            </summary>
            <param name="step">The step to iterate by.</param>
            <returns>
              A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.Range`2.Equals(System.Object)">
            <inheritDoc />
        </member>
        <member name="M:WebApplications.Utilities.Ranges.Range`2.GetHashCode">
            <inheritDoc />
        </member>
        <member name="M:WebApplications.Utilities.Ranges.Range`2.ToString">
            <summary>
              Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
              A <see cref="T:System.String"/> representation of this instance.
            </returns>
        </member>
        <member name="T:WebApplications.Utilities.Ranges.Range`1">
            <summary>
              A simple range where the step is the same type as the values.
            </summary>
            <typeparam name="T">The value and step type.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.Range`1.#ctor(`0,`0)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.Range`1"/> class.
            </summary>
            <param name="start">The start value (inclusive).</param>
            <param name="end">The end value (inclusive).</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
              The <paramref name="start"/> value was greater than the <paramref name="end"/> value.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.Range`1.#ctor(`0,`0,`0)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.Range`1"/> class.
            </summary>
            <param name="start">The start value.</param>
            <param name="end">The end value (inclusive).</param>
            <param name="step">The range step (inclusive).</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
              The <paramref name="start"/> value was greater than the <paramref name="end"/> value.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.Range`1.ToString">
            <summary>
              Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
              A <see cref="T:System.String"/> representation of this instance.
            </returns>
        </member>
        <member name="T:WebApplications.Utilities.Ranges.ShortRange">
            <summary>
              A range of <see cref="T:System.Int16"/>s.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.ShortRange.#ctor(System.Int16,System.Int16,System.Int16)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Ranges.ShortRange"/> class.
            </summary>
            <param name="start">The start number.</param>
            <param name="end">The end number.</param>
            <param name="step">
              <para>The step between each value in the range.</para>
              <para>By default this is set to 1.</para>
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
              The <paramref name="start"/> value was greater than the <paramref name="end"/> value.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Ranges.ShortRange.ToString">
            <summary>
              Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
              A <see cref="T:System.String"/> representation of this instance.
            </returns>
        </member>
        <member name="T:WebApplications.Utilities.Reflect.InfoHelper`1">
            <summary>
            Helper class for getting <see cref="T:System.Reflection.MemberInfo"/>.
            </summary>
            <typeparam name="T"></typeparam>
            <threadsafety static="false" instance="false" />
        </member>
        <member name="F:WebApplications.Utilities.Reflect.InfoHelper`1.RefOrOut">
            <summary>
            A temporary field that can be used to help get <see cref="T:System.Reflection.MemberInfo"/> for a method with reference or output parameters.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.InfoHelper`1.Parameter">
            <summary>
            A secondary temporary field that can be used to help get a <see cref="T:System.Reflection.ParameterInfo"/> of a reference/output parameter for a method with multiple reference/ouput parameters.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.InfoHelper`1.RefOrOutFieldInfo">
            <summary>
            The <see cref="T:System.Reflection.FieldInfo"/> for <see cref="F:WebApplications.Utilities.Reflect.InfoHelper`1.RefOrOut"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.InfoHelper`1.ParameterFieldInfo">
            <summary>
            The <see cref="T:System.Reflection.FieldInfo"/> for <see cref="F:WebApplications.Utilities.Reflect.InfoHelper`1.Parameter"/>.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Reflect.InfoHelper">
            <summary>
            Helper class for getting <see cref="T:System.Reflection.MemberInfo"/>.
            </summary>
            <threadsafety static="true" instance="false" />
        </member>
        <member name="M:WebApplications.Utilities.Reflect.InfoHelper.GetMethodInfo(System.Linq.Expressions.Expression{System.Action},System.Boolean)">
            <summary>
            Gets the method information.
            </summary>
            <param name="exp">The expression.</param>
            <param name="throwIfNotFound">if set to <see langword="true" /> and the method was not found, an exception will be throw;
            otherwise, <see langword="null"/> will be returned.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="exp">expression</paramref> is null.</exception>
            <exception cref="T:System.ArgumentException">The information was not found in the <paramref name="exp">expression</paramref> and <paramref name="throwIfNotFound"/> is <see langword="true"/>.</exception>
            <remarks>
            Usage:
            <code>InfoHelper.GetMethodInfo(() =&gt; TypeOrInstance.Method(parameters));</code>
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.InfoHelper.GetMethodInfo``1(System.Linq.Expressions.Expression{System.Action{``0}},System.Boolean)">
            <summary>
            Gets the method information.
            </summary>
            <typeparam name="TInstance">The type of the instance.</typeparam>
            <param name="exp">The expression.</param>
            <param name="throwIfNotFound">if set to <see langword="true" /> and the method was not found, an exception will be throw;
            otherwise, <see langword="null"/> will be returned.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="exp">expression</paramref> is null.</exception>
            <exception cref="T:System.ArgumentException">The information was not found in the <paramref name="exp">expression</paramref> and <paramref name="throwIfNotFound"/> is <see langword="true"/>.</exception>
            <remarks>Usage:
            <code>InfoHelper.GetMethodInfo&lt;Type&gt;(i => i.Method(parameters));</code>
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.InfoHelper.GetMethodInfo``1(``0,System.Linq.Expressions.Expression{System.Action{``0}},System.Boolean)">
            <summary>
            Gets the method information.
            </summary>
            <typeparam name="TInstance">The type of the instance.</typeparam>
            <param name="instance">The instance.</param>
            <param name="exp">The expression.</param>
            <param name="throwIfNotFound">if set to <see langword="true" /> and the method was not found, an exception will be throw;
            otherwise, <see langword="null"/> will be returned.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="exp">expression</paramref> is null.</exception>
            <exception cref="T:System.ArgumentException">The information was not found in the <paramref name="exp">expression</paramref> 
            and <paramref name="throwIfNotFound"/> is <see langword="true"/>.</exception>
            <remarks>Usage:
            <code>instance.GetMethodInfo(i => i.Method(parameters));</code>
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.InfoHelper.GetMethodInfo(System.Linq.Expressions.Expression{System.Func{System.Object}},System.Boolean)">
            <summary>
            Gets the method information.
            </summary>
            <param name="exp">The expression.</param>
            <param name="throwIfNotFound">if set to <see langword="true" /> and the method was not found, an exception will be throw;
            otherwise, <see langword="null"/> will be returned.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="exp">expression</paramref> is null.</exception>
            <exception cref="T:System.ArgumentException">The information was not found in the <paramref name="exp">expression</paramref> 
            and <paramref name="throwIfNotFound"/> is <see langword="true"/>.</exception>
            <remarks>Usage:
            <code>InfoHelper.GetMethodInfo(() => TypeOrInstance.Method(parameters));</code>
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.InfoHelper.GetMethodInfo``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean)">
            <summary>
            Gets the method information.
            </summary>
            <typeparam name="TInstance">The type of the instance.</typeparam>
            <param name="exp">The expression.</param>
            <param name="throwIfNotFound">if set to <see langword="true" /> and the method was not found, an exception will be throw;
            otherwise, <see langword="null"/> will be returned.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="exp">expression</paramref> is null.</exception>
            <exception cref="T:System.ArgumentException">The information was not found in the <paramref name="exp">expression</paramref> 
            and <paramref name="throwIfNotFound"/> is <see langword="true"/>.</exception>
            <remarks>Usage:
            <code>InfoHelper.GetMethodInfo&lt;Type&gt;(i => i.Method(parameters));</code>
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.InfoHelper.GetMethodInfo``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Boolean)">
            <summary>
            Gets the method information.
            </summary>
            <typeparam name="TInstance">The type of the instance.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="instance">The instance.</param>
            <param name="exp">The expression.</param>
            <param name="throwIfNotFound">if set to <see langword="true" /> and the method was not found, an exception will be throw;
            otherwise, <see langword="null" /> will be returned.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="exp">expression</paramref> is null.</exception>
            <exception cref="T:System.ArgumentException">The information was not found in the <paramref name="exp">expression</paramref> 
            and <paramref name="throwIfNotFound"/> is <see langword="true"/>.</exception>
            <remarks>
            Usage:
            <code>instance.GetMethodInfo(i =&gt; i.Method(parameters));</code>
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.InfoHelper.GetConstructorInfo``1(System.Linq.Expressions.Expression{System.Func{``0}},System.Boolean)">
            <summary>
            Gets the constructor information.
            </summary>
            <typeparam name="TInstance">The type of the instance.</typeparam>
            <param name="exp">The expression.</param>
            <param name="throwIfNotFound">if set to <see langword="true" /> and the constructor was not found, an exception will be throw;
            otherwise, <see langword="null"/> will be returned.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="exp">expression</paramref> is null.</exception>
            <exception cref="T:System.ArgumentException">The information was not found in the <paramref name="exp">expression</paramref> 
            and <paramref name="throwIfNotFound"/> is <see langword="true"/>.</exception>
            <remarks>Usage:
            <code>InfoHelper.GetConstructorInfo(() => new Type(parameter));</code>
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.InfoHelper.GetPropertyInfo``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean)">
            <summary>
            Gets the property information.
            </summary>
            <typeparam name="TInstance">The type of the instance.</typeparam>
            <param name="exp">The expression.</param>
            <param name="throwIfNotFound">if set to <see langword="true" /> and the property was not found, an exception will be throw;
            otherwise, <see langword="null"/> will be returned.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="exp">expression</paramref> is null.</exception>
            <exception cref="T:System.ArgumentException">The information was not found in the <paramref name="exp">expression</paramref> 
            and <paramref name="throwIfNotFound"/> is <see langword="true"/>.</exception>
            <remarks>Usage:
            <code>InfoHelper.GetPropertyInfo&lt;Type&gt;(i => i.Property);</code>
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.InfoHelper.GetPropertyInfo``1(System.Linq.Expressions.Expression{System.Func{``0}},System.Boolean)">
            <summary>
            Gets the property information.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="exp">The expression.</param>
            <param name="throwIfNotFound">if set to <see langword="true" /> and the property was not found, an exception will be throw;
            otherwise, <see langword="null"/> will be returned.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="exp">expression</paramref> is null.</exception>
            <exception cref="T:System.ArgumentException">The information was not found in the <paramref name="exp">expression</paramref> 
            and <paramref name="throwIfNotFound"/> is <see langword="true"/>.</exception>
            <remarks>Usage:
            <code>InfoHelper.GetPropertyInfo(() => TypeOrInstance.Property);</code>
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.InfoHelper.GetPropertyInfo``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Boolean)">
            <summary>
            Gets the property information.
            </summary>
            <typeparam name="TInstance">The type of the instance.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="instance">The instance.</param>
            <param name="exp">The expression.</param>
            <param name="throwIfNotFound">if set to <see langword="true" /> and the property was not found, an exception will be throw;
            otherwise, <see langword="null"/> will be returned.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="exp">expression</paramref> is null.</exception>
            <exception cref="T:System.ArgumentException">The information was not found in the <paramref name="exp">expression</paramref> 
            and <paramref name="throwIfNotFound"/> is <see langword="true"/>.</exception>
            <remarks>Usage:
            <code>instance.GetPropertyInfo(i => i.Property);</code>
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.InfoHelper.GetFieldInfo``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean)">
            <summary>
            Gets the field information.
            </summary>
            <typeparam name="TInstance">The type of the instance.</typeparam>
            <param name="exp">The expression.</param>
            <param name="throwIfNotFound">if set to <see langword="true" /> and the field was not found, an exception will be throw;
            otherwise, <see langword="null"/> will be returned.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="exp">expression</paramref> is null.</exception>
            <exception cref="T:System.ArgumentException">The information was not found in the <paramref name="exp">expression</paramref> 
            and <paramref name="throwIfNotFound"/> is <see langword="true"/>.</exception>
            <remarks>Usage:
            <code>InfoHelper.GetFieldInfo&lt;Type&gt;(i => i.Field);</code>
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.InfoHelper.GetFieldInfo``1(System.Linq.Expressions.Expression{System.Func{``0}},System.Boolean)">
            <summary>
            Gets the field information.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="exp">The expression.</param>
            <param name="throwIfNotFound">if set to <see langword="true" /> and the field was not found, an exception will be throw;
            otherwise, <see langword="null"/> will be returned.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="exp">expression</paramref> is null.</exception>
            <exception cref="T:System.ArgumentException">The information was not found in the <paramref name="exp">expression</paramref>
            and <paramref name="throwIfNotFound"/> is <see langword="true"/>.</exception>
            <remarks>Usage:
            <code>InfoHelper.GetFieldInfo(() => TypeOrInstance.Field);</code>
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.InfoHelper.GetFieldInfo``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Boolean)">
            <summary>
            Gets the field information.
            </summary>
            <typeparam name="TInstance">The type of the instance.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="instance">The instance.</param>
            <param name="exp">The expression.</param>
            <param name="throwIfNotFound">if set to <see langword="true" /> and the field was not found, an exception will be throw;
            otherwise, <see langword="null"/> will be returned.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="exp">expression</paramref> is null.</exception>
            <exception cref="T:System.ArgumentException">The information was not found in the <paramref name="exp">expression</paramref> 
            and <paramref name="throwIfNotFound"/> is <see langword="true"/>.</exception>
            <remarks>Usage:
            <code>instance.GetFieldInfo(i => i.Field);</code>
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.InfoHelper.GetMemberInfo``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean)">
            <summary>
            Gets the member information.
            </summary>
            <typeparam name="TInstance">The type of the instance.</typeparam>
            <param name="exp">The expression.</param>
            <param name="throwIfNotFound">if set to <see langword="true" /> and the member was not found, an exception will be throw;
            otherwise, <see langword="null"/> will be returned.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="exp">expression</paramref> is null.</exception>
            <exception cref="T:System.ArgumentException">The information was not found in the <paramref name="exp">expression</paramref> 
            and <paramref name="throwIfNotFound"/> is <see langword="true"/>.</exception>
            <remarks>Usage:
            <code>InfoHelper.GetMemberInfo&lt;Type&gt;(i => i.AnyMember);</code>
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.InfoHelper.GetMemberInfo``1(System.Linq.Expressions.Expression{System.Func{``0}},System.Boolean)">
            <summary>
            Gets the member information.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="exp">The expression.</param>
            <param name="throwIfNotFound">if set to <see langword="true" /> and the member was not found, an exception will be throw;
            otherwise, <see langword="null"/> will be returned.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="exp">expression</paramref> is null.</exception>
            <exception cref="T:System.ArgumentException">The information was not found in the <paramref name="exp">expression</paramref> 
            and <paramref name="throwIfNotFound"/> is <see langword="true"/>.</exception>
            <remarks>Usage:
            <code>InfoHelper.GetMemberInfo(() => TypeOrInstance.AnyMember);</code>
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.InfoHelper.GetMemberInfo``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Boolean)">
            <summary>
            Gets the member information.
            </summary>
            <typeparam name="TInstance">The type of the instance.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="instance">The instance.</param>
            <param name="exp">The expression.</param>
            <param name="throwIfNotFound">if set to <see langword="true" /> and the member was not found, an exception will be throw;
            otherwise, <see langword="null"/> will be returned.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="exp">expression</paramref> is null.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="exp">expression</paramref> is null.</exception>
            <exception cref="T:System.ArgumentException">The information was not found in the <paramref name="exp">expression</paramref> 
            and <paramref name="throwIfNotFound"/> is <see langword="true"/>.</exception>
            <remarks>Usage:
            <code>instance.GetMemberInfo(i => i.AnyMember);</code>
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.InfoHelper.GetParameterInfo``1(System.Linq.Expressions.Expression{System.Action{``0}},System.Boolean)">
            <summary>
            Gets the parameter information for the parameter indicated by the expressions parameter.
            </summary>
            <typeparam name="TParam">The type of the parameter.</typeparam>
            <param name="exp">The expression.</param>
            <param name="throwIfNotFound">if set to <see langword="true" /> and the parameter was not found, an exception will be throw;
            otherwise, <see langword="null"/> will be returned.</param>
            <returns></returns>
            <remarks>Usage:
            <code>InfoHelper.GetParameterInfo&lt;ParameterType&gt;(p => TypeOrInstance.Method(..., p, ...));</code>
            or
            <code>InfoHelper.GetParameterInfo&lt;ParameterType&gt;(p => TypeOrInstance.Method(..., ref InfoHelper&lt;ParameterType&gt;.Parameter, ...));</code>
            If both <c>p</c> and <see cref="F:WebApplications.Utilities.Reflect.InfoHelper`1.Parameter"/> are used, then the parameter <c>p</c> is passed to will be used.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="exp">expression</paramref> is null.</exception>
            <exception cref="T:System.ArgumentException">The information was not found in the <paramref name="exp">expression</paramref> 
            and <paramref name="throwIfNotFound"/> is <see langword="true"/>.</exception>
            <exception cref="T:System.ArgumentException">Multiple parameters specified</exception>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.InfoHelper.GetParameterInfo``2(System.Linq.Expressions.Expression{System.Action{``0,``1}},System.Boolean)">
            <summary>
            Gets the parameter information.
            </summary>
            <typeparam name="TInstance">The type of the instance.</typeparam>
            <typeparam name="TParam">The type of the parameter.</typeparam>
            <param name="exp">The expression.</param>
            <param name="throwIfNotFound">if set to <see langword="true" /> and the parameter was not found, an exception will be throw;
            otherwise, <see langword="null"/> will be returned.</param>
            <returns></returns>
            <remarks>Usage:
            <code>InfoHelper.GetParameterInfo&lt;Type,ParameterType&gt;(p => TypeOrInstance.Method(..., p, ...));</code>
            or
            <code>InfoHelper.GetParameterInfo&lt;Type,ParameterType&gt;(p => TypeOrInstance.Method(..., ref InfoHelper&lt;ParameterType&gt;.Parameter, ...));</code>
            If both <c>p</c> and <see cref="F:WebApplications.Utilities.Reflect.InfoHelper`1.Parameter"/> are used, then the parameter <c>p</c> is passed to will be used.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="exp">expression</paramref> is null.</exception>
            <exception cref="T:System.ArgumentException">The information was not found in the <paramref name="exp">expression</paramref> 
            and <paramref name="throwIfNotFound"/> is <see langword="true"/>.</exception>
            <exception cref="T:System.ArgumentException">Multiple parameters specified</exception>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.InfoHelper.GetParameterInfo``1(System.Linq.Expressions.MethodCallExpression,System.Linq.Expressions.ParameterExpression)">
            <summary>
            Gets the parameter information.
            </summary>
            <typeparam name="TParam">The type of the parameter.</typeparam>
            <param name="body">The body.</param>
            <param name="parameter">The parameter.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">Multiple parameters specified</exception>
        </member>
        <member name="T:WebApplications.Utilities.Reflect.CastMethod">
            <summary>
            A method that implements a cast operator.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.CastMethod.FromType">
            <summary>
            The type this cast casts from.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.CastMethod.IsExplicit">
            <summary>
            Whether the cast is an explicit cast.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.CastMethod.ToType">
            <summary>
            The type this cast casts to.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.CastMethod.#ctor(WebApplications.Utilities.Reflect.ExtendedType,System.Reflection.MethodInfo,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Reflect.CastMethod" /> class.
            </summary>
            <param name="extendedType">Type of the extended.</param>
            <param name="info">The info.</param>
            <param name="isExplicit">if set to <see langword="true" /> [is explicit].</param>
            <remarks></remarks>
        </member>
        <member name="T:WebApplications.Utilities.Reflect.Constructor">
            <summary>
              Wraps the constructor information with accessors for retrieving parameters.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.Constructor.ExtendedType">
            <summary>
            The extended type.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.Constructor.Info">
            <summary>
              The constructor info.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.Constructor._parameters">
            <summary>
            Create enumeration of parameters on demand.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.Constructor.#ctor(WebApplications.Utilities.Reflect.ExtendedType,System.Reflection.ConstructorInfo)">
            <summary>
            Initializes the <see cref="T:WebApplications.Utilities.Reflect.Constructor"/> class.
            </summary>
            <param name="extendedType">Type of the extended.</param>
            <param name="info">The info.</param>
            <remarks></remarks>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.Constructor.Parameters">
            <summary>
              The parameters.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.Constructor.ParametersCount">
            <summary>
            Gets the parameters count.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.Constructor.DeclaringType">
            <inheritdoc/>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.Constructor.TypeGenericArguments">
            <inheritdoc/>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.Constructor.SignatureGenericArguments">
            <inheritdoc/>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.Constructor.ParameterTypes">
            <inheritdoc/>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.Constructor.ReturnType">
            <inheritdoc/>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.Constructor.WebApplications#Utilities#Reflect#ISignature#Close(System.Type[],System.Type[])">
            <inheritdoc/>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.Constructor.op_Implicit(WebApplications.Utilities.Reflect.Constructor)~System.Reflection.ConstructorInfo">
            <summary>
            Performs an implicit conversion from <see cref="T:WebApplications.Utilities.Reflect.Constructor"/> to <see cref="T:System.Reflection.ConstructorInfo"/>.
            </summary>
            <param name="constructor">The constructor.</param>
            <returns>The result of the conversion.</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.Constructor.op_Implicit(System.Reflection.ConstructorInfo)~WebApplications.Utilities.Reflect.Constructor">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Reflection.ConstructorInfo"/> to <see cref="T:WebApplications.Utilities.Reflect.Constructor"/>.
            </summary>
            <param name="constructorInfo">The constructor info.</param>
            <returns>The result of the conversion.</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.Constructor.Close(System.Type[])">
            <summary>
            Closes the constructor with the specified concrete generic types.
            </summary>
            <param name="typeClosures">The types required to close the current type.</param>
            <returns>A closed signature, if possible; otherwise <see langword="null" />.</returns>
            <remarks><para>If signature closure is unsupported this method should return <see langword="null" />.</para>
            <para>The closure arrays are ordered and contain the same number of elements as their corresponding
            generic arguments.  Where elements are <see langword="null"/> a closure is not required.</para></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.Constructor.GetFunc(System.Type[])">
            <summary>
            Gets the lambda function equivalent of a method, for much better runtime performance than an invocation.
            </summary>
            <param name="funcTypes">The parameter types, followed by the return type.</param>
            <returns>A functional equivalent of the specified method info.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <exception cref="T:System.InvalidOperationException"></exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
              <para>The method specified is a static constructor.</para>
              <para>-or-</para>
              <para>No parameter/return types specified.</para>
              <para>-or-</para>
              <para>The method specified doesn't return a value. (An Action should be used instead.)</para>
              <para>-or-</para>
              <para>The number of parameters specified in <paramref name="funcTypes" /> is incorrect.</para>
              <para>-or-</para>
              <para>The parameter type is not assignable to the type specified.</para>
              <para>-or-</para>
              <para>The return type is not assignable to the type specified.</para>
              </exception>
              <exception cref="T:System.InvalidOperationException">No parameter/return types specified.</exception>
            <remarks></remarks>
        </member>
        <member name="T:WebApplications.Utilities.Reflect.Event">
            <summary>
              Wraps an <see cref="T:System.Reflection.EventInfo"/> with accessors.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.Event.ExtendedType">
            <summary>
            The extended type.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.Event.Info">
            <summary>
              The event info object, provides access to event metadata.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.Event._addMethod">
            <summary>
              Grabs the add method lazily.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.Event._removeMethod">
            <summary>
              Grabs the remove method lazily.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.Event.#ctor(WebApplications.Utilities.Reflect.ExtendedType,System.Reflection.EventInfo)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Reflect.Event"/> class.
            </summary>
            <param name="extendedType">The extended type.</param>
            <param name="info">The event metadata.</param>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.Event.AddMethod">
            <summary>
              Gets the add method.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.Event.RemoveMethod">
            <summary>
              Gets the remove method.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.Event.op_Implicit(WebApplications.Utilities.Reflect.Event)~System.Reflection.EventInfo">
            <summary>
            Performs an implicit conversion from <see cref="T:WebApplications.Utilities.Reflect.Event"/> to <see cref="T:System.Reflection.EventInfo"/>.
            </summary>
            <param name="event">The event.</param>
            <returns>The result of the conversion.</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.Event.op_Implicit(System.Reflection.EventInfo)~WebApplications.Utilities.Reflect.Event">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Reflection.EventInfo"/> to <see cref="T:WebApplications.Utilities.Reflect.Event"/>.
            </summary>
            <param name="eventInfo">The event info.</param>
            <returns>The result of the conversion.</returns>
            <remarks></remarks>
        </member>
        <member name="T:WebApplications.Utilities.Reflect.Field">
            <summary>
            Wrap <see cref="T:System.Reflection.FieldInfo"/> with additional information.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.Field.ExtendedType">
            <summary>
            The extended type.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.Field.Info">
            <summary>
            The underlying <see cref="T:System.Reflection.FieldInfo"/>.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.Field.#ctor(WebApplications.Utilities.Reflect.ExtendedType,System.Reflection.FieldInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Reflect.Field"/> class.
            </summary>
            <param name="extendedType">Type of the extended.</param>
            <param name="info">The info.</param>
            <remarks></remarks>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.Field.ReturnType">
            <summary>
            Gets the field type.
            </summary>
            <value>The field type.</value>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.Field.op_Implicit(WebApplications.Utilities.Reflect.Field)~System.Reflection.FieldInfo">
            <summary>
            Performs an implicit conversion from <see cref="T:WebApplications.Utilities.Reflect.Field"/> to <see cref="T:System.Reflection.FieldInfo"/>.
            </summary>
            <param name="field">The field.</param>
            <returns>The result of the conversion.</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.Field.op_Implicit(System.Reflection.FieldInfo)~WebApplications.Utilities.Reflect.Field">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Reflection.FieldInfo"/> to <see cref="T:WebApplications.Utilities.Reflect.Field"/>.
            </summary>
            <param name="fieldInfo">The field info.</param>
            <returns>The result of the conversion.</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.Field.Getter``1">
            <summary>
            Retrieves the lambda function equivalent of the specified static getter method.
            </summary>
            <typeparam name="TValue">The type of the value returned.</typeparam>	
            <returns>A function that takes an object of the type T and returns the value of the field.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.Field.Getter``2">
            <summary>
            Retrieves the lambda function equivalent of the specified instance getter method.
            </summary>
            <typeparam name="T">The type of the parameter the function encapsulates.</typeparam>	
            <typeparam name="TValue">The type of the value returned.</typeparam>	
            <returns>A function that takes an object of the type T and returns the value of the field.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.Field.Setter``1">
            <summary>
            Retrieves the lambda action equivalent of the specified static setter method.
            </summary>
            <typeparam name="TValue">The type of the value returned.</typeparam>	
            <returns>An action that sets the value of the relevant static field.</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.Field.Setter``2">
            <summary>
            Retrieves the lambda action equivalent of the specified instance setter method.
            </summary>
            <typeparam name="T">The type of the parameter the function encapsulates.</typeparam>	
            <typeparam name="TValue">The type of the value returned.</typeparam>	
            <returns>An action that takes an object of the type T and sets the value of the relevant field.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Reflect.GenericArgument">
            <summary>
            Holds information about a generic argument.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.GenericArgument.Location">
            <summary>
            The arguments location.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.GenericArgument.Position">
            <summary>
            The arguments position.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.GenericArgument.Type">
            <summary>
            The argument type.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.GenericArgument.#ctor(WebApplications.Utilities.Reflect.GenericArgumentLocation,System.Int32,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Reflect.GenericArgument"/> struct.
            </summary>
            <param name="location">The location.</param>
            <param name="position">The position.</param>
            <param name="type">The type.</param>
            <remarks></remarks>
        </member>
        <member name="T:WebApplications.Utilities.Reflect.GenericArgumentLocation">
            <summary>
            The location of a generic argument.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.GenericArgumentLocation.None">
            <summary>
            This is not a generic argument.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.GenericArgumentLocation.Signature">
            <summary>
            Generic argument is found on the signature.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.GenericArgumentLocation.Type">
            <summary>
            Generic argument is found on type.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.GenericArgumentLocation.Any">
            <summary>
            Generic argument is found on type or method (should only be used with a name).
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Reflect.Indexer">
            <summary>
              Wraps a <see cref="T:System.Reflection.PropertyInfo"/> that actually refers to an indexer with accessors.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.Indexer._indexParameters">
            <summary>
            Creates index parameters on demand.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.Indexer.#ctor(WebApplications.Utilities.Reflect.ExtendedType,System.Reflection.PropertyInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Reflect.Property"/> class.
            </summary>
            <param name="extendedType">The extended type.</param>
            <param name="info">The <see cref="T:System.Reflection.PropertyInfo">property info</see>.</param>
            <remarks></remarks>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.Indexer.IndexParameters">
            <summary>
            Gets the index parameters (if this is an index);
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.Indexer.DeclaringType">
            <inheritdoc/>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.Indexer.TypeGenericArguments">
            <inheritdoc/>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.Indexer.SignatureGenericArguments">
            <inheritdoc/>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.Indexer.ParameterTypes">
            <inheritdoc/>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.Indexer.WebApplications#Utilities#Reflect#ISignature#Close(System.Type[],System.Type[])">
            <inheritdoc/>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.Indexer.op_Implicit(WebApplications.Utilities.Reflect.Indexer)~System.Reflection.PropertyInfo">
            <summary>
            Performs an implicit conversion from <see cref="T:WebApplications.Utilities.Reflect.Property"/> to <see cref="T:System.Reflection.PropertyInfo"/>.
            </summary>
            <param name="indexer">The indexer.</param>
            <returns>The result of the conversion.</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.Indexer.op_Implicit(System.Reflection.PropertyInfo)~WebApplications.Utilities.Reflect.Indexer">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Reflection.PropertyInfo"/> to <see cref="T:WebApplications.Utilities.Reflect.Property"/>.
            </summary>
            <param name="propertyInfo">The property info.</param>
            <returns>The result of the conversion.</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.Indexer.Close(System.Type[])">
            <summary>
            Closes the constructor with the specified concrete generic types.
            </summary>
            <param name="typeClosures">The types required to close the current type.</param>
            <returns>A closed signature, if possible; otherwise <see langword="null" />.</returns>
            <remarks><para>If signature closure is unsupported this method should return <see langword="null" />.</para>
            <para>The closure arrays are ordered and contain the same number of elements as their corresponding
            generic arguments.  Where elements are <see langword="null"/> a closure is not required.</para></remarks>
        </member>
        <member name="T:WebApplications.Utilities.Reflect.ISignature">
            <summary>
            Interface that allows for signature matching.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.ISignature.DeclaringType">
            <summary>
            Gets the declaring type of the signature, if this is a real signature.
            </summary>
            <value>The type of the declaring.</value>
            <remarks></remarks>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.ISignature.TypeGenericArguments">
            <summary>
            Gets the declaring type's generic arguments (if any).
            </summary>
            <value>The type generic arguments.</value>
            <remarks></remarks>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.ISignature.SignatureGenericArguments">
            <summary>
            Gets the signature generic arguments (if any).
            </summary>
            <value>The signature generic arguments.</value>
            <remarks></remarks>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.ISignature.ParameterTypes">
            <summary>
            Gets the parameter types.
            </summary>
            <value>The parameter types.</value>
            <remarks></remarks>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.ISignature.ReturnType">
            <summary>
            Gets the return type of the signature.
            </summary>
            <value>The type of the return.</value>
            <remarks>For constructors this is effectively the same as the <see cref="P:WebApplications.Utilities.Reflect.ISignature.DeclaringType"/></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ISignature.Close(System.Type[],System.Type[])">
            <summary>
            Closes the signature with the specified concrete generic types.
            </summary>
            <param name="typeClosures">The types required to close the current type.</param>
            <param name="signatureClosures">The types required to close the signature.</param>
            <returns>A closed signature, if possible; otherwise <see langword="null" />.</returns>
            <remarks><para>If signature closure is unsupported this method should return <see langword="null" />.</para>
            <para>The closure arrays are ordered and contain the same number of elements as their corresponding
            generic arguments.  Where elements are <see langword="null"/> a closure is not required.</para></remarks>
        </member>
        <member name="T:WebApplications.Utilities.Reflect.Method">
            <summary>
              Wraps the method information with accessors for retrieving parameters.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.Method.ExtendedType">
            <summary>
            The extended type.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.Method.Info">
            <summary>
              The method info.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.Method._genericArguments">
            <summary>
            Creates array of generic arguments on demand.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.Method._parameters">
            <summary>
            Create enumeration of parameters on demand.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.Method._closedMethods">
            <summary>
            Caches closed methods.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.Method.#ctor(WebApplications.Utilities.Reflect.ExtendedType,System.Reflection.MethodInfo)">
            <summary>
            Initializes the <see cref="T:WebApplications.Utilities.Reflect.Method"/> class.
            </summary>
            <param name="extendedType">Type of the extended.</param>
            <param name="info">The info.</param>
            <remarks></remarks>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.Method.Parameters">
            <summary>
              The parameters.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.Method.DeclaringType">
            <inheritdoc/>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.Method.ParameterTypes">
            <inheritdoc/>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.Method.TypeGenericArguments">
            <inheritdoc/>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.Method.SignatureGenericArguments">
            <inheritdoc/>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.Method.ReturnType">
            <inheritdoc/>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.Method.WebApplications#Utilities#Reflect#ISignature#Close(System.Type[],System.Type[])">
            <inheritdoc/>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.Method.Close(System.Type[])">
            <summary>
            Gets the closed version of a generic method.
            </summary>
            <param name="signatureClosures">The types required to close the method's generic arguments.</param>
            <returns>The closed <see cref="T:WebApplications.Utilities.Reflect.Method"/> if the generic types supplied are sufficient for closure; otherwise <see langword="null"/>.</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.Method.Close(System.Type[],System.Type[])">
            <summary>
            Gets the closed version of a generic method.
            </summary>
            <param name="typeClosures">The types required to close the current type.</param>
            <param name="signatureClosures">The types required to close the method's generic arguments.</param>
            <returns>The closed <see cref="T:WebApplications.Utilities.Reflect.Method"/> if the generic types supplied are sufficient for closure; otherwise <see langword="null"/>.</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.Method.op_Implicit(WebApplications.Utilities.Reflect.Method)~System.Reflection.MethodInfo">
            <summary>
            Performs an implicit conversion from <see cref="T:WebApplications.Utilities.Reflect.Method"/> to <see cref="T:System.Reflection.MethodInfo"/>.
            </summary>
            <param name="method">The method.</param>
            <returns>The result of the conversion.</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.Method.op_Implicit(System.Reflection.MethodInfo)~WebApplications.Utilities.Reflect.Method">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Reflection.MethodInfo"/> to <see cref="T:WebApplications.Utilities.Reflect.Method"/>.
            </summary>
            <param name="methodInfo">The method info.</param>
            <returns>The result of the conversion.</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.Method.GetAction(System.Type[])">
            <summary>
            Gets the lambda function equivalent of a method, for much better runtime performance than an invocation.
            </summary>
            <param name="funcTypes">The parameter types.</param>
            <returns>A functional equivalent of the specified method info.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <exception cref="T:System.InvalidOperationException"></exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
              <para>The method specified is a static constructor.</para>
              <para>-or-</para>
              <para>No parameter/return types specified.</para>
              <para>-or-</para>
              <para>The method specified doesn't return a value. (An Action should be used instead.)</para>
              <para>-or-</para>
              <para>The number of parameters specified in <paramref name="funcTypes" /> is incorrect.</para>
              <para>-or-</para>
              <para>The parameter type is not assignable to the type specified.</para>
              <para>-or-</para>
              <para>The return type is not assignable to the type specified.</para>
              </exception>
              <exception cref="T:System.InvalidOperationException">No parameter/return types specified.</exception>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.Method.GetFunc(System.Type[])">
            <summary>
            Gets the lambda function equivalent of a method, for much better runtime performance than an invocation.
            </summary>
            <param name="funcTypes">The parameter types, followed by the return type.</param>
            <returns>A functional equivalent of the specified method info.</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <exception cref="T:System.InvalidOperationException"></exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
              <para>The method specified is a static constructor.</para>
              <para>-or-</para>
              <para>No parameter/return types specified.</para>
              <para>-or-</para>
              <para>The method specified doesn't return a value. (An Action should be used instead.)</para>
              <para>-or-</para>
              <para>The number of parameters specified in <paramref name="funcTypes" /> is incorrect.</para>
              <para>-or-</para>
              <para>The parameter type is not assignable to the type specified.</para>
              <para>-or-</para>
              <para>The return type is not assignable to the type specified.</para>
              </exception>
              <exception cref="T:System.InvalidOperationException">No parameter/return types specified.</exception>
            <remarks></remarks>
        </member>
        <member name="T:WebApplications.Utilities.Reflect.Property">
            <summary>
              Wraps a <see cref="T:System.Reflection.PropertyInfo"/> with accessors.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.Property.ExtendedType">
            <summary>
            The extended type.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.Property.Info">
            <summary>
              The property info object, which provides access to property metadata. 
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.Property._getMethod">
            <summary>
              Grabs the getter method lazily.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.Property._setMethod">
            <summary>
              Grabs the setter method lazily.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.Property.#ctor(WebApplications.Utilities.Reflect.ExtendedType,System.Reflection.PropertyInfo)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.Reflect.Property"/> class.
            </summary>
            <param name="extendedType">The extended type.</param>
            <param name="info">
              The <see cref="T:System.Reflection.PropertyInfo">property info</see>.
            </param>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.Property.GetMethod">
            <summary>
              Gets the getter method.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.Property.SetMethod">
            <summary>
              Gets the setter method.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.Property.ReturnType">
            <summary>
            Gets the field type.
            </summary>
            <value>The field type.</value>
            <remarks></remarks>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.Property.IsAutomatic">
            <summary>
            Gets a value indicating whether this property is automatic.
            </summary>
            <value><see langword="true" /> if this instance is automatic; otherwise, <see langword="false" />.</value>
            <remarks></remarks>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.Property.AutomaticField">
            <summary>
            Gets the underlying automatic field (if any).
            </summary>
            <value>The automatic field.</value>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.Property.op_Implicit(WebApplications.Utilities.Reflect.Property)~System.Reflection.PropertyInfo">
            <summary>
            Performs an implicit conversion from <see cref="T:WebApplications.Utilities.Reflect.Property"/> to <see cref="T:System.Reflection.PropertyInfo"/>.
            </summary>
            <param name="property">The property.</param>
            <returns>The result of the conversion.</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.Property.op_Implicit(System.Reflection.PropertyInfo)~WebApplications.Utilities.Reflect.Property">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Reflection.PropertyInfo"/> to <see cref="T:WebApplications.Utilities.Reflect.Property"/>.
            </summary>
            <param name="propertyInfo">The property info.</param>
            <returns>The result of the conversion.</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.Property.Getter``1">
            <summary>
            Retrieves the lambda function equivalent of the specified static getter method.
            </summary>
            <typeparam name="TValue">The type of the value returned.</typeparam>	
            <returns>A function that takes an object of the type T and returns the value of the property.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.Property.Getter``2">
            <summary>
            Retrieves the lambda function equivalent of the specified instance getter method.
            </summary>
            <typeparam name="T">The type of the parameter the function encapsulates.</typeparam>	
            <typeparam name="TValue">The type of the value returned.</typeparam>	
            <returns>A function that takes an object of the type T and returns the value of the property.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.Property.Setter``1">
            <summary>
            Retrieves the lambda action equivalent of the specified static setter method.
            </summary>
            <typeparam name="TValue">The type of the value returned.</typeparam>	
            <returns>An action that sets the value of the relevant static field.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.Property.Setter``2">
            <summary>
            Retrieves the lambda action equivalent of the specified instance setter method.
            </summary>
            <typeparam name="T">The type of the parameter the function encapsulates.</typeparam>	
            <typeparam name="TValue">The type of the value returned.</typeparam>	
            <returns>An action that takes an object of the type T and sets the value of the relevant field.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <remarks></remarks>
        </member>
        <member name="T:WebApplications.Utilities.Reflect.ExtendedType">
            <summary>
            Holds extended information (including reflection info) for a type.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.ExtendedType.AllMembersBindingFlags">
            <summary>
            Binding flags for returning all fields/properties from a type.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.ExtendedType._extendedTypes">
            <summary>
            Holds all known extended types.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.ExtendedType._iConvertibleMethods">
            <summary>
            The standard conversion methods implemented by <see cref="T:System.IConvertible"/>.
            </summary>
            <remarks>
            Does not include:
             <list type="bullet">
               <item><description><see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)">ToType</see> - It isn't specific.</description></item>
               <item><description><see cref="M:System.IConvertible.GetTypeCode">GetTypeCode</see> - Isn't actually a conversion method.</description></item>
             </list>
            </remarks>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.ExtendedType.Type">
            <summary>
            The underlying type.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.ExtendedType._convertToCache">
            <summary>
            Creates a cache for casts on demand.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.ExtendedType._customAttributes">
            <summary>
            Calculates custom attributes on demand.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.ExtendedType._defaultMember">
            <summary>
            Calculates default member on demand.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.ExtendedType._events">
            <summary>
            Holds all events.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.ExtendedType._fields">
            <summary>
            Holds all fields.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.ExtendedType._genericArguments">
            <summary>
            Creates array of generic arguments on demand.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.ExtendedType._methods">
            <summary>
            Holds all methods.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.ExtendedType._properties">
            <summary>
            Holds all properties.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.ExtendedType._signature">
            <summary>
            Creates a signature on demand.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.ExtendedType._simpleFullName">
            <summary>
            Creates a simple full name on demand.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.ExtendedType._castsFrom">
            <summary>
            Holds user defined methods that cast to this type from another type.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.ExtendedType._castsTo">
            <summary>
            Holds user defined methods that cast from this type to another type.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.ExtendedType._closedTypes">
            <summary>
            Caches closed types.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.ExtendedType._constructors">
            <summary>
            Holds all constructors.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.ExtendedType._indexers">
            <summary>
            Holds all indexers.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.ExtendedType._loadLock">
            <summary>
            Spinlock for locking during member load.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.ExtendedType._loaded">
            <summary>
            Indicates whether members have been loaded.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Reflect.ExtendedType"/> class.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.ExtendedType.BaseType">
            <summary>
            Gets the <see cref="T:WebApplications.Utilities.Reflect.ExtendedType"/> for the Base Type.
            </summary>
            <value>The type of the base.</value>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.ExtendedType.Fields">
            <summary>
            Gets the fields.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.ExtendedType.AllFields">
            <summary>
            Gets all the fields, including from base types.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.ExtendedType.Indexers">
            <summary>
            Gets the indexers.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.ExtendedType.AllIndexers">
            <summary>
            Gets all the indexers, including from base types.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.ExtendedType.Properties">
            <summary>
            Gets the properties (doesn't include <see cref="P:WebApplications.Utilities.Reflect.ExtendedType.Indexers"/>).
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.ExtendedType.AllProperties">
            <summary>
            Gets all the properties, including from base types (doesn't include <see cref="P:WebApplications.Utilities.Reflect.ExtendedType.Indexers"/>).
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.ExtendedType.Events">
            <summary>
            Gets the events.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.ExtendedType.AllEvents">
            <summary>
            Gets all the events, including from base types.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.ExtendedType.Methods">
            <summary>
            Gets all the methods.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.ExtendedType.AllMethods">
            <summary>
            Gets all the methods, including from base types.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.ExtendedType.StaticConstructor">
            <summary>
            Gets the static constructor, if any.
            </summary>
            <value>The static constructor if found; otherwise <see langword="null"/>.</value>
            <remarks>The static constructor is a special case and does not appear directly in overloads.</remarks>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.ExtendedType.Constructors">
            <summary>
            Gets the constructors.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.ExtendedType.AllConstructors">
            <summary>
            Gets all the constructors, including from base types.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.ExtendedType.CustomAttributes">
            <summary>
            All the customer attributes on the type.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.ExtendedType.AllCustomAttributes">
            <summary>
            All the customer attributes on the type and base types.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.ExtendedType.DefaultMember">
            <summary>
            If this type has a default member (indexer), indicates its name.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.ExtendedType.Signature">
            <summary>
            Gets the signature of the type.
            </summary>
            <remarks>This is modelled after the Type.SigToString internal method.</remarks>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.ExtendedType.SimpleFullName">
            <summary>
            Gets the simple full name for the type.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.ExtendedType.GenericArguments">
            <summary>
            The generic arguments.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.ExtendedType.NonNullableType">
            <summary>
            If this is a nullable type (i.e. <see cref="T:System.Nullable`1"/>) then returns the underlying non-nullable type;
            otherwise returns <see cref="F:WebApplications.Utilities.Reflect.ExtendedType.Type"/>.
            </summary>
            <value>The type of the non nullable type.</value>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.ExtendedType.IsNullableType">
            <summary>
            Gets a value indicating whether this type is a nullable type (i.e. <see cref="T:System.Nullable`1"/>).
            </summary>
            <value><see langword="true" /> if this type is nullable type; otherwise, <see langword="false" />.</value>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.ExtendedType.IsConvertible">
            <summary>
            Gets a value indicating whether this type is convertible.
            </summary>
            <value><see langword="true" /> if this instance is convertible; otherwise, <see langword="false" />.</value>
        </member>
        <member name="P:WebApplications.Utilities.Reflect.ExtendedType.Interfaces">
            <summary>
            Gets the interfaces implemented by this type.
            </summary>
            <value>The interfaces.</value>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.FindType(System.String,System.Boolean,System.Boolean)">
            <summary>
            Finds the type with the specified <paramref name="typeName" />.
            </summary>
            <param name="typeName">Name of the type.</param>
            <param name="throwOnError">Throws an error if <see langword="true"/> and not found.</param>
            <param name="ignoreCase">Ignores the case if <see langword="true"/>.</param>
            <returns>The <see cref="F:WebApplications.Utilities.Reflect.ExtendedType.Type" /> if found; otherwise <see langword="null" />.</returns>
            <remarks>This is more robust than using <see cref="M:System.Type.GetType(System.String,System.Boolean,System.Boolean)" /> as it supports partial assembly names.</remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.Get(System.Type)">
            <summary>
            Gets the extended type information for the specified type.
            </summary>
            <param name="type">The type.</param>
            <returns>The type as an extended type.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.Get(System.String,System.Boolean)">
            <summary>
            Gets the extended type information for the specified type.
            </summary>
            <param name="typeName">Name of the type.</param>
            <param name="ignoreCase">Ignores the case if <see langword="true"/>.</param>
            <returns>The type as an extended type, if found; otherwise <see langword="null"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.LoadMembers">
            <summary>
            Loads all the members in one go.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.ImplementsCastFrom(System.Type,System.Boolean)">
            <summary>
            Whether this type implements a cast from the specified type.
            </summary>
            <param name="fromType">The type to cast from.</param>
            <param name="implicitOnly">If set to <see langword="true"/> only allows implicit casts.</param>
            <returns>
            <see langword="true"/> this type implements a cast from the specified type; otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.GetCastFromMethod(System.Type)">
            <summary>
            Gets the user-defined method that implements a cast from the given type to this type (if any exist on this type).
            </summary>
            <param name="fromType">The type to cast from.</param>
            <returns>The method that implements the cast; otherwise <see langword="null"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.ImplementsCastTo(System.Type,System.Boolean)">
            <summary>
            Whether this type implements a cast to the specified type.
            </summary>
            <param name="toType">The type to cast to.</param>
            <param name="implicitOnly">If set to <see langword="true" /> only allows implicit casts.</param>
            <returns>
            <see langword="true"/> this type implements a cast to the specified type; otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.GetCastToMethod(System.Type)">
            <summary>
            Gets the user-defined method that implements a cast to the given type from this type (if any exist on this type).
            </summary>
            <param name="toType">The type to cast to.</param>
            <returns>The method that implements the cast; otherwise <see langword="null"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.Implements(System.Type)">
            <summary>
            Checks to see if this type implements a particular interface.
            </summary>
            <param name="interfaceType">Type of the interface.</param>
            <returns><see langword="true"/> if <see cref="F:WebApplications.Utilities.Reflect.ExtendedType.Type"/> implements the interface type; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.GetField(System.String,System.Boolean)">
            <summary>
            Gets the field.
            </summary>
            <param name="name">The name.</param>
            <param name="includeBase">if set to <see langword="true" /> includes fields from the base type.</param>
            <returns>The <see cref="T:WebApplications.Utilities.Reflect.Field" /> if found; otherwise <see langword="null" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.GetField(System.Reflection.FieldInfo,System.Boolean)">
            <summary>
            Gets the <see cref="T:WebApplications.Utilities.Reflect.Field" /> matching the <see cref="T:System.Reflection.FieldInfo" /> if found.
            </summary>
            <param name="fieldInfo">The field info.</param>
            <param name="includeBase">if set to <see langword="true" /> includes fields from the base type.</param>
            <returns>The <see cref="T:WebApplications.Utilities.Reflect.Field" /> if found; otherwise <see langword="null" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.GetProperty(System.String,System.Boolean)">
            <summary>
            Gets the property.
            </summary>
            <param name="name">The name.</param>
            <param name="includeBase">if set to <see langword="true" /> includes properties from the base type.</param>
            <returns>The <see cref="T:WebApplications.Utilities.Reflect.Property" /> if found; otherwise <see langword="null" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.GetProperty(System.Reflection.PropertyInfo,System.Boolean)">
            <summary>
            Gets the <see cref="T:WebApplications.Utilities.Reflect.Property"/> matching the <see cref="T:System.Reflection.PropertyInfo"/> if any.
            </summary>
            <param name="propertyInfo">The property info.</param>
            <param name="includeBase">if set to <see langword="true" /> includes properties from the base type.</param>
            <returns>The <see cref="T:WebApplications.Utilities.Reflect.Property"/> if found; otherwise <see langword="null"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.GetIndexer(WebApplications.Utilities.Reflect.TypeSearch[])">
            <summary>
            Gets the indexer from the type (or base types).
            </summary>
            <param name="types">The types.</param>
            <returns>The indexer.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.GetIndexer(System.Boolean[]@,WebApplications.Utilities.Reflect.TypeSearch[])">
            <summary>
            Gets the indexer from the type (or base types).
            </summary>
            <param name="types">The types.</param>
            <param name="castsRequired">Any array indicating which parameters require a cast (the last element is for the return type).</param>
            <returns>The indexer.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.GetIndexer(System.Boolean,WebApplications.Utilities.Reflect.TypeSearch[])">
            <summary>
            Gets the indexer.
            </summary>
            <param name="includeBase">if set to <see langword="true" /> includes indexers from the base type.</param>
            <param name="types">The types.</param>
            <returns>The indexer.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.GetIndexer(System.Boolean,System.Boolean[]@,WebApplications.Utilities.Reflect.TypeSearch[])">
            <summary>
            Gets the indexer.
            </summary>
            <param name="includeBase">if set to <see langword="true" /> includes indexers from the base type.</param>
            <param name="castsRequired">Any array indicating which parameters require a cast (the last element is for the return type).</param>
            <param name="types">The types.</param>
            <returns>The indexer.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.GetIndexer(System.Reflection.PropertyInfo,System.Boolean)">
            <summary>
            Gets the <see cref="T:WebApplications.Utilities.Reflect.Indexer"/> matching the <see cref="T:System.Reflection.PropertyInfo"/> (if any).
            </summary>
            <param name="propertyInfo">The property info.</param>
            <param name="includeBase">if set to <see langword="true" /> includes indexers from the base type.</param>
            <returns>The indexer.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.GetMethods(System.String,System.Boolean)">
            <summary>
            Gets the methods.
            </summary>
            <param name="name">The name.</param>
            <param name="includeBase">if set to <see langword="true" /> includes methods from the base type.</param>
            <returns>The <see cref="P:WebApplications.Utilities.Reflect.ExtendedType.Methods"/> if found; otherwise <see langword="null"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.GetMethod(System.Reflection.MethodInfo,System.Boolean)">
            <summary>
            Gets the <see cref="T:WebApplications.Utilities.Reflect.Method"/> matching the <see cref="T:System.Reflection.MethodInfo"/> (if any).
            </summary>
            <param name="methodInfo">The method info.</param>
            <param name="includeBase">if set to <see langword="true" /> includes methods from the base type.</param>
            <returns>The <see cref="T:WebApplications.Utilities.Reflect.Method"/> if found; otherwise <see langword="null"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.GetMethod(System.String,WebApplications.Utilities.Reflect.TypeSearch[])">
            <summary>
            Gets the method.
            </summary>
            <param name="name">The name.</param>
            <param name="types">The parameter types and return type.</param>
            <returns>The <see cref="T:WebApplications.Utilities.Reflect.Method"/> if found; otherwise <see langword="null"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.GetMethod(System.String,System.Boolean,WebApplications.Utilities.Reflect.TypeSearch[])">
            <summary>
            Gets the method.
            </summary>
            <param name="name">The name.</param>
            <param name="includeBase">if set to <see langword="true" /> includes methods from the base type.</param>
            <param name="types">The parameter types and return type.</param>
            <returns>The <see cref="T:WebApplications.Utilities.Reflect.Method"/> if found; otherwise <see langword="null"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.GetMethod(System.String,System.Int32,WebApplications.Utilities.Reflect.TypeSearch[])">
            <summary>
            Gets the method.
            </summary>
            <param name="name">The name.</param>
            <param name="genericArguments">The number of generic arguments.</param>
            <param name="types">The parameter types and return type.</param>
            <returns>The <see cref="T:WebApplications.Utilities.Reflect.Method" /> if found; otherwise <see langword="null" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.GetMethod(System.String,System.Int32,System.Boolean,WebApplications.Utilities.Reflect.TypeSearch[])">
            <summary>
            Gets the method.
            </summary>
            <param name="name">The name.</param>
            <param name="genericArguments">The number of generic arguments.</param>
            <param name="includeBase">if set to <see langword="true" /> includes methods from the base type.</param>
            <param name="types">The parameter types and return type.</param>
            <returns>The <see cref="T:WebApplications.Utilities.Reflect.Method" /> if found; otherwise <see langword="null" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.GetMethod(System.String,System.Int32,System.Boolean,System.Boolean,WebApplications.Utilities.Reflect.TypeSearch[])">
            <summary>
            Gets the method.
            </summary>
            <param name="name">The name.</param>
            <param name="genericArguments">The number of generic arguments.</param>
            <param name="allowClosure">if set to <see langword="true" /> will automatically close the signatures generic types if possible.</param>
            <param name="allowCasts">if set to <see langword="true" /> then types will match if they can be cast to the required type.</param>
            <param name="types">The parameter types and return type.</param>
            <returns>The <see cref="T:WebApplications.Utilities.Reflect.Method" /> if found; otherwise <see langword="null" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.GetMethod(System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean,WebApplications.Utilities.Reflect.TypeSearch[])">
            <summary>
            Gets the method.
            </summary>
            <param name="name">The name.</param>
            <param name="genericArguments">The number of generic arguments.</param>
            <param name="allowClosure">if set to <see langword="true" /> will automatically close the signatures generic types if possible.</param>
            <param name="allowCasts">if set to <see langword="true" /> then types will match if they can be cast to the required type.</param>
            <param name="includeBase">if set to <see langword="true" /> includes methods from the base type.</param>
            <param name="types">The parameter types and return type.</param>
            <returns>The <see cref="T:WebApplications.Utilities.Reflect.Method" /> if found; otherwise <see langword="null" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.GetMethod(System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean[]@,WebApplications.Utilities.Reflect.TypeSearch[])">
            <summary>
            Gets the method.
            </summary>
            <param name="name">The name.</param>
            <param name="genericArguments">The number of generic arguments.</param>
            <param name="allowClosure">if set to <see langword="true" /> will automatically close the signatures generic types if possible.</param>
            <param name="allowCasts">if set to <see langword="true" /> then types will match if they can be cast to the required type.</param>
            <param name="castsRequired">Any array indicating which parameters require a cast (the last element is for the return type).</param>
            <param name="types">The parameter types and return type.</param>
            <returns>The <see cref="T:WebApplications.Utilities.Reflect.Method" /> if found; otherwise <see langword="null" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.GetMethod(System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean[]@,System.Boolean,WebApplications.Utilities.Reflect.TypeSearch[])">
            <summary>
            Gets the method.
            </summary>
            <param name="name">The name.</param>
            <param name="genericArguments">The number of generic arguments.</param>
            <param name="allowClosure">if set to <see langword="true" /> will automatically close the signatures generic types if possible.</param>
            <param name="allowCasts">if set to <see langword="true" /> then types will match if they can be cast to the required type.</param>
            <param name="castsRequired">Any array indicating which parameters require a cast (the last element is for the return type).</param>
            <param name="includeBase">if set to <see langword="true" /> includes methods from the base type.</param>
            <param name="types">The parameter types and return type.</param>
            <returns>The <see cref="T:WebApplications.Utilities.Reflect.Method" /> if found; otherwise <see langword="null" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.GetConstructor(WebApplications.Utilities.Reflect.TypeSearch[])">
            <summary>
            Gets the constructor.
            </summary>
            <param name="types">The parameter types and return type (normally the same as <see cref="F:WebApplications.Utilities.Reflect.ExtendedType.Type" />).</param>
            <returns>The <see cref="T:WebApplications.Utilities.Reflect.Constructor" /> if found; otherwise <see langword="null" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.GetConstructor(System.Boolean,WebApplications.Utilities.Reflect.TypeSearch[])">
            <summary>
            Gets the constructor.
            </summary>
            <param name="includeBase">if set to <see langword="true" /> includes constructors from the base type.</param>
            <param name="types">The parameter types and return type (normally the same as <see cref="F:WebApplications.Utilities.Reflect.ExtendedType.Type" />).</param>
            <returns>The <see cref="T:WebApplications.Utilities.Reflect.Constructor" /> if found; otherwise <see langword="null" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.GetConstructor(System.Boolean[]@,WebApplications.Utilities.Reflect.TypeSearch[])">
            <summary>
            Gets the constructor.
            </summary>
            <param name="castsRequired">Any array indicating which parameters require a cast (the last element is for the return type).</param>
            <param name="types">The parameter types and return type (normally the same as <see cref="F:WebApplications.Utilities.Reflect.ExtendedType.Type" />).</param>
            <returns>The <see cref="T:WebApplications.Utilities.Reflect.Constructor" /> if found; otherwise <see langword="null" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.GetConstructor(System.Boolean[]@,System.Boolean,WebApplications.Utilities.Reflect.TypeSearch[])">
            <summary>
            Gets the constructor.
            </summary>
            <param name="castsRequired">Any array indicating which parameters require a cast (the last element is for the return type).</param>
            <param name="includeBase">if set to <see langword="true" /> includes constructors from the base type.</param>
            <param name="types">The parameter types and return type (normally the same as <see cref="F:WebApplications.Utilities.Reflect.ExtendedType.Type"/>).</param>
            <returns>The <see cref="T:WebApplications.Utilities.Reflect.Constructor"/> if found; otherwise <see langword="null"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.GetConstructor(System.Reflection.ConstructorInfo,System.Boolean)">
            <summary>
            Gets the <see cref="T:WebApplications.Utilities.Reflect.Constructor"/> matching the <see cref="T:System.Reflection.ConstructorInfo"/> (if any).
            </summary>
            <param name="includeBase">if set to <see langword="true" /> includes constructors from the base type.</param>
            <param name="constructorInfo">The constructor info.</param>
            <returns>The constructor information wrapped with useful accessors.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.GetEvent(System.String,System.Boolean)">
            <summary>
            Gets the event.
            </summary>
            <param name="name">The name.</param>
            <param name="includeBase">if set to <see langword="true" /> includes events from the base type.</param>
            <returns>The <see cref="T:WebApplications.Utilities.Reflect.Event"/> if found; otherwise <see langword="null"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.GetEvent(System.Reflection.EventInfo,System.Boolean)">
            <summary>
            Gets the <see cref="T:WebApplications.Utilities.Reflect.Event"/> matching the <see cref="T:System.Reflection.EventInfo"/> if any.
            </summary>
            <param name="eventInfo">The event info.</param>
            <param name="includeBase">if set to <see langword="true" /> includes events from the base type.</param>
            <returns>The <see cref="T:WebApplications.Utilities.Reflect.Event"/> if found; otherwise <see langword="null"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.CloseType(System.Type[])">
            <summary>
            Closes the type if it is generic and has generic parameters, or creates equivalent type.
            </summary>
            <param name="genericTypes">The generic types (null to use existing type from closed type).</param>
            <returns>The <see cref="T:WebApplications.Utilities.Reflect.ExtendedType"/> without open generic parameter if the supplied generic types are able to close the type; otherwise <see langword="null"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.op_Implicit(WebApplications.Utilities.Reflect.ExtendedType)~System.Type">
            <summary>
            Performs an implicit conversion from <see cref="T:WebApplications.Utilities.Reflect.ExtendedType"/> to <see cref="T:System.Type"/>.
            </summary>
            <param name="extendedType">Type of the extended.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.op_Implicit(System.Type)~WebApplications.Utilities.Reflect.ExtendedType">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Type"/> to <see cref="T:WebApplications.Utilities.Reflect.ExtendedType"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.CanConvertTo(System.Type)">
            <summary>
            Determines whether this instance can be converted to the specified type.  Unlike the built in cast system,
            this returns true if a cast is possible AND if IConvertible can be used.
            </summary>
            <param name="type">The type.</param>
            <returns><see langword="true" /> if this instance can be cast to the specified type; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.TryConvert(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression@)">
            <summary>
            Converts the specified expression to the output type.
            </summary>
            <param name="expression">The expression.</param>
            <param name="outputExpression">The output expression.</param>
            <returns>Returns <see langword="true" /> if the conversion succeeded; otherwise returns <see langword="false" />.</returns>
            <remarks>This version is more powerful than the Expression.Convert CLR method in that it supports
            ToString() conversion, IConvertible and TypeConverters. It also prevents exceptions being thrown.</remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.ExtendedType.DescendsFrom(System.Type)">
            <summary> 
            Checks to see if a type descends from another type. 
            </summary> 
            <param name="baseType">Type of the base.</param> 
            <returns>
            <see langword="true"/> if the type extends from the <paramref name="baseType"/> specified; otherwise <see langword="false"/>
            </returns> 
        </member>
        <member name="T:WebApplications.Utilities.Reflect.TypeSearch">
            <summary>
            Used to match types in searches.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.TypeSearch.Void">
            <summary>
            The void type.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.TypeSearch.T1">
            <summary>
            The first generic argument on the type.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.TypeSearch.T2">
            <summary>
            The second generic argument on the type.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.TypeSearch.T3">
            <summary>
            The third generic argument on the type.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.TypeSearch.T4">
            <summary>
            The fourth generic argument on the type.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.TypeSearch.T5">
            <summary>
            The fifth generic argument on the type.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.TypeSearch.T6">
            <summary>
            The sixth generic argument on the type.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.TypeSearch.T7">
            <summary>
            The seventh generic argument on the type.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.TypeSearch.T8">
            <summary>
            The eighth generic argument on the type.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.TypeSearch.S1">
            <summary>
            The first generic argument on the signature.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.TypeSearch.S2">
            <summary>
            The second generic argument on the signature.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.TypeSearch.S3">
            <summary>
            The third generic argument on the signature.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.TypeSearch.S4">
            <summary>
            The forth generic argument on the signature.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.TypeSearch.S5">
            <summary>
            The fifth generic argument on the signature.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.TypeSearch.S6">
            <summary>
            The sixth generic argument on the signature.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.TypeSearch.S7">
            <summary>
            The seventh generic argument on the signature.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.TypeSearch.S8">
            <summary>
            The eighth generic argument on the signature.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.TypeSearch.GenericArgumentLocation">
            <summary>
            The generic argument location to search for (if any).
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.TypeSearch.GenericArgumentName">
            <summary>
            The generic argument name to search for (if any).
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.TypeSearch.GenericArgumentPosition">
            <summary>
            The generic argument position to search for (if any; otherwise -1).
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.TypeSearch.IsByReference">
            <summary>
            Whether the type is by reference.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.TypeSearch.IsPointer">
            <summary>
            Whether the type is a pointer.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflect.TypeSearch.Type">
            <summary>
            A concrete type to search for (if any).
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.TypeSearch.#ctor(System.Type,System.String,WebApplications.Utilities.Reflect.GenericArgumentLocation,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Object"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="name">The name.</param>
            <param name="location">The location.</param>
            <param name="position">The position.</param>
            <param name="isByReference">if set to <see langword="true"/> [is by reference].</param>
            <param name="isPointer">if set to <see langword="true"/> [is pointer].</param>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.TypeSearch.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Reflect.TypeSearch"/> class.
            </summary>
            <param name="type">The type.</param>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.TypeSearch.#ctor(WebApplications.Utilities.Reflect.GenericArgumentLocation,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Reflect.TypeSearch"/> class.
            </summary>
            <param name="location">The location.</param>
            <param name="position">The position.</param>
            <param name="isByReference">if set to <see langword="true"/> is by reference.</param>
            <param name="isPointer">if set to <see langword="true"/> is pointer.</param>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.TypeSearch.#ctor(WebApplications.Utilities.Reflect.GenericArgumentLocation,System.String,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Reflect.TypeSearch"/> class.
            </summary>
            <param name="location">The location.</param>
            <param name="name">The name.</param>
            <param name="isByReference">if set to <see langword="true"/> is by reference.</param>
            <param name="isPointer">if set to <see langword="true"/> is pointer.</param>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.TypeSearch.op_Implicit(WebApplications.Utilities.Reflect.TypeSearch)~System.Type">
            <summary>
            Performs an implicit conversion from <see cref="T:WebApplications.Utilities.Reflect.TypeSearch"/> to <see cref="T:System.Type"/>.
            </summary>
            <param name="typeSearch">The type search.</param>
            <returns>The result of the conversion.</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflect.TypeSearch.op_Implicit(System.Type)~WebApplications.Utilities.Reflect.TypeSearch">
            <summary>
            Performs an implicit conversion from <see cref="T:WebApplications.Utilities.Reflect.TypeSearch"/> to <see cref="T:System.Type"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The result of the conversion.</returns>
            <remarks></remarks>
        </member>
        <member name="T:WebApplications.Utilities.ResettableLazy`1">
            <summary>
            Provides support for lazy initialization.
            </summary>
            <typeparam name="T">Specifies the type of element being lazily initialized.</typeparam>
            <remarks>
            <para>
            By default, all public and protected members of <see cref="T:WebApplications.Utilities.ResettableLazy`1"/> are thread-safe and may be used
            concurrently from multiple threads.  These thread-safety guarantees may be removed optionally and per instance
            using parameters to the type's constructors.
            </para>
            <para>This code is based off the source code for the <see cref="T:System.Lazy`1"/> class.</para>
            </remarks>
        </member>
        <member name="T:WebApplications.Utilities.ResettableLazy`1.Boxed">
            <summary>
            wrapper class to box the initialized value, this is mainly created to avoid boxing/unboxing the value each time the value is called in case T is 
            a value type
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.ResettableLazy`1.#cctor">
            <summary>
            Initializes the <see cref="T:WebApplications.Utilities.ResettableLazy`1"/> class.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.ResettableLazy`1.GetCtorFunc">
            <summary>
            Gets the function for the default constructor for the type <typeparamref name="T"/>.
            </summary>
            <returns></returns>
            <exception cref="T:System.ArgumentException">The lazily-initialized type does not have a public, parameterless constructor.</exception>
        </member>
        <member name="F:WebApplications.Utilities.ResettableLazy`1._boxed">
            <summary>
            The boxed value of the lazy.
            </summary>
            <remarks>
            <para>If <see cref="F:WebApplications.Utilities.ResettableLazy`1._boxed"/> == <see langword="null"/>, the value is not yet created.</para>
            <para>If <see cref="F:WebApplications.Utilities.ResettableLazy`1._boxed"/> is <see cref="T:WebApplications.Utilities.ResettableLazy`1.Boxed"/>, the value is created.</para>
            <para>If <see cref="F:WebApplications.Utilities.ResettableLazy`1._boxed"/> is <see cref="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo"/>, the value is an exception.</para>
            </remarks>
        </member>
        <member name="F:WebApplications.Utilities.ResettableLazy`1._valueFactory">
            <summary>
            The factory delegate that returns the value.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.ResettableLazy`1._initialized">
            <summary>
            In None and ExecutionAndPublication modes, this will be set to <see langword="true"/> to avoid recursive calls.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.ResettableLazy`1._threadSafeObj">
            <summary>
            The object used for thread safety. Will be <see langword="null"/> if not thread safe, <see cref="F:WebApplications.Utilities.ResettableLazyHelpers.PublicationOnlySentinel"/> if PublicationOnly mode, or an object if ExecutionAndPublication mode.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.ResettableLazy`1._createOnToString">
            <summary>
            Whether the value should be created when <see cref="M:WebApplications.Utilities.ResettableLazy`1.ToString"/> is called.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.ResettableLazy`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.ResettableLazy`1"/> class that 
            uses <typeparamref name="T"/>'s default constructor for lazy initialization.
            </summary>
            <remarks>
            An instance created with this constructor may be used concurrently from multiple threads.
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.ResettableLazy`1.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the  <see cref="T:WebApplications.Utilities.ResettableLazy`1" /> class that uses 
            <typeparamref name="T" />'s default constructor for lazy initialization.
            </summary>
            <param name="createOnToString">if set to <see langword="true" /> the value will be created when <see cref="M:WebApplications.Utilities.ResettableLazy`1.ToString"/> is called.</param>
            <remarks>
            An instance created with this constructor may be used concurrently from multiple threads.
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.ResettableLazy`1.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.ResettableLazy`1" /> class that uses 
            <typeparamref name="T" />'s default constructor and a specified thread-safety mode.
            </summary>
            <param name="isThreadSafe">true if this instance should be usable by multiple threads concurrently; false if the instance will only be used by one thread at a time.</param>
            <param name="createOnToString">if set to <see langword="true" /> the value will be created when <see cref="M:WebApplications.Utilities.ResettableLazy`1.ToString"/> is called.</param>
        </member>
        <member name="M:WebApplications.Utilities.ResettableLazy`1.#ctor(System.Threading.LazyThreadSafetyMode,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.ResettableLazy`1" /> class that uses 
            <typeparamref name="T" />'s default constructor and a specified thread-safety mode.
            </summary>
            <param name="mode">The lazy thread-safety mode mode</param>
            <param name="createOnToString">if set to <see langword="true" /> the value will be created when <see cref="M:WebApplications.Utilities.ResettableLazy`1.ToString" /> is called.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="mode" /> mode contains an invalid valuee</exception>
        </member>
        <member name="M:WebApplications.Utilities.ResettableLazy`1.#ctor(System.Func{`0},System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.ResettableLazy`1" /> class
            that uses a specified initialization function and a specified thread-safety mode.
            </summary>
            <param name="valueFactory">The <see cref="T:System.Func{T}" /> invoked to produce the lazily-initialized value when it is needed.</param>
            <param name="isThreadSafe">true if this instance should be usable by multiple threads concurrently; false if the instance will only be used by one thread at a time.</param>
            <param name="createOnToString">if set to <see langword="true" /> the value will be created when <see cref="M:WebApplications.Utilities.ResettableLazy`1.ToString"/> is called.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="valueFactory" /> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:WebApplications.Utilities.ResettableLazy`1.#ctor(System.Func{`0},System.Threading.LazyThreadSafetyMode,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.ResettableLazy`1" /> class
            that uses a specified initialization function and a specified thread-safety mode.
            </summary>
            <param name="valueFactory">The <see cref="T:System.Func{T}" /> invoked to produce the lazily-initialized value when it is needed.</param>
            <param name="mode">The lazy thread-safety mode.</param>
            <param name="createOnToString">if set to <see langword="true" /> the value will be created when <see cref="M:WebApplications.Utilities.ResettableLazy`1.ToString"/> is called.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="valueFactory" /> is
            a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="mode" /> mode contains an invalid value.</exception>
        </member>
        <member name="M:WebApplications.Utilities.ResettableLazy`1.GetObjectFromMode(System.Threading.LazyThreadSafetyMode)">
            <summary>
            Static helper function that returns an object based on the given mode. it also throws an exception if the mode is invalid
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.ResettableLazy`1.OnSerializing(System.Runtime.Serialization.StreamingContext)">
            <summary>
            Forces initialization during serialization.
            </summary>
            <param name="context">The StreamingContext for the serialization operation.</param>
        </member>
        <member name="M:WebApplications.Utilities.ResettableLazy`1.ToString">
            <summary>
            Creates and returns a string representation of this instance.
            </summary>
            <returns>
            The result of calling <see cref="M:System.Object.ToString" /> on the <see cref="P:WebApplications.Utilities.ResettableLazy`1.Value" />.
            </returns>
            <exception cref="T:System.NullReferenceException">The <see cref="P:WebApplications.Utilities.ResettableLazy`1.Value" /> is null.</exception>
        </member>
        <member name="P:WebApplications.Utilities.ResettableLazy`1.ValueForDebugDisplay">
            <summary>
            Gets the value of the Lazy&lt;T&gt; for debugging display purposes.
            </summary>
            <value>
            The value if created; otherwise <see langword="default{T}"/>.
            </value>
        </member>
        <member name="P:WebApplications.Utilities.ResettableLazy`1.Mode">
            <summary>
            Gets a value indicating whether this instance may be used concurrently from multiple threads.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.ResettableLazy`1.IsValueFaulted">
            <summary>
            Gets whether the value creation is faulted or not
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.ResettableLazy`1.IsValueCreated">
            <summary>
            Gets a value indicating whether the <see cref="T:WebApplications.Utilities.ResettableLazy`1" /> has been initialized.
            </summary>
            <value>
            <see langword="true"/> if the <see cref="T:WebApplications.Utilities.ResettableLazy`1" /> instance has been initialized;
            otherwise, <see langword="false"/>.
            </value>
            <remarks>
            The initialization of a 
            <see cref="T:WebApplications.Utilities.ResettableLazy`1" /> instance may result in either
            a value being produced or an exception being thrown.  If an exception goes unhandled during initialization,
            <see cref="P:WebApplications.Utilities.ResettableLazy`1.IsValueCreated" /> will return <see langword="false"/>.
            </remarks>
        </member>
        <member name="P:WebApplications.Utilities.ResettableLazy`1.Value">
            <summary>Gets the lazily initialized value of the current <see cref="T:WebApplications.Utilities.ResettableLazy`1"/>.</summary>
            <value>The lazily initialized value of the current <see cref="T:WebApplications.Utilities.ResettableLazy`1"/>.</value>
            <exception cref="T:System.MissingMemberException">
            The <see cref="T:WebApplications.Utilities.ResettableLazy`1"/> was initialized to use the default constructor 
            of the type being lazily initialized, and that type does not have a public, parameterless constructor.
            </exception>
            <exception cref="T:System.MemberAccessException">
            The <see cref="T:WebApplications.Utilities.ResettableLazy`1"/> was initialized to use the default constructor 
            of the type being lazily initialized, and permissions to access the constructor were missing.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            The <see cref="T:WebApplications.Utilities.ResettableLazy`1"/> was constructed with the <see cref="F:System.Threading.LazyThreadSafetyMode.ExecutionAndPublication"/> or
            <see cref="F:System.Threading.LazyThreadSafetyMode.None"/>  and the initialization function attempted to access <see cref="P:WebApplications.Utilities.ResettableLazy`1.Value"/> on this instance.
            </exception>
            <remarks>
            If <see cref="P:WebApplications.Utilities.ResettableLazy`1.IsValueCreated"/> is false, accessing <see cref="P:WebApplications.Utilities.ResettableLazy`1.Value"/> will force initialization.
            Please <see cref="T:System.Threading.LazyThreadSafetyMode"/> for more information on how <see cref="T:WebApplications.Utilities.ResettableLazy`1"/> will behave if an exception is thrown
            from initialization delegate.
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.ResettableLazy`1.LazyInitValue">
            <summary>
            local helper method to initialize the value
            </summary>
            <returns>
            The initialized value
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ResettableLazy`1.CreateValue">
            <summary>
            Creates an instance of T using <see cref="F:WebApplications.Utilities.ResettableLazy`1._valueFactory" />.
            </summary>
            <returns>
            An instance of Boxed.
            </returns>
            <exception cref="T:System.InvalidOperationException">ValueFactory attempted to access the Value property of this instance.</exception>
        </member>
        <member name="M:WebApplications.Utilities.ResettableLazy`1.Reset">
            <summary>
            Resets the value of this <see cref="T:WebApplications.Utilities.ResettableLazy`1"/> to not created.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.SyncList`1">
            <summary>
            Provides synchronised access to a <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <typeparam name="T">The type of the elements of the list.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.SyncList`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.SyncList`1"/> class that is empty and has the default initial capacity.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.SyncList`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.SyncList`1"/> class that is empty and has the specific <paramref name="capacity"/>.
            </summary>
            <param name="capacity">The capacity.</param>
        </member>
        <member name="M:WebApplications.Utilities.SyncList`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.SyncList`1"/> class that wraps access to the specified <paramref name="list"/>, 
            using its <see cref="P:System.Collections.ICollection.SyncRoot"/> for synchronisation.
            </summary>
            <param name="list">The list to synchronise.</param>
        </member>
        <member name="P:WebApplications.Utilities.SyncList`1.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:WebApplications.Utilities.SyncList`1" />.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.SyncList`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:WebApplications.Utilities.SyncList`1" /> is read-only.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.SyncList`1.System#Collections#IList#IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IList" /> has a fixed size.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.SyncList`1.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.SyncList`1.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.SyncList`1.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="P:WebApplications.Utilities.SyncList`1.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.SyncList`1.Add(`0)">
            <summary>
            Adds an item to the <see cref="T:WebApplications.Utilities.SyncList`1" />.
            </summary>
            <param name="item">The object to add to the <see cref="T:WebApplications.Utilities.SyncList`1" />.</param>
        </member>
        <member name="M:WebApplications.Utilities.SyncList`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds the elements of the specified collection to the end of the <see cref="T:WebApplications.Utilities.SyncList`1"/>.
            </summary>
            <param name="collection">The collection whose elements should be added to the end of the <see cref="T:WebApplications.Utilities.SyncList`1"/>. 
            The collection itself cannot be null, but it can contain elements that are null, if type <typeparamref name="T"/> is a reference type.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.SyncList`1.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.IList" />.
            </summary>
            <param name="value">The object to add to the <see cref="T:System.Collections.IList" />.</param>
            <returns>
            The position into which the new element was inserted, or -1 to indicate that the item was not inserted into the collection.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.SyncList`1.Insert(System.Int32,`0)">
            <summary>
            Inserts an item to the <see cref="T:WebApplications.Utilities.SyncList`1" /> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:WebApplications.Utilities.SyncList`1" />.</param>
        </member>
        <member name="M:WebApplications.Utilities.SyncList`1.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.IList" /> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value" /> should be inserted.</param>
            <param name="value">The object to insert into the <see cref="T:System.Collections.IList" />.</param>
        </member>
        <member name="M:WebApplications.Utilities.SyncList`1.Contains(`0)">
            <summary>
            Determines whether the <see cref="T:WebApplications.Utilities.SyncList`1" /> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:WebApplications.Utilities.SyncList`1" />.</param>
            <returns>
            true if <paramref name="item" /> is found in the <see cref="T:WebApplications.Utilities.SyncList`1" />; otherwise, false.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.SyncList`1.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:System.Collections.IList" /> contains a specific value.
            </summary>
            <param name="value">The object to locate in the <see cref="T:System.Collections.IList" />.</param>
            <returns>
            true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, false.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.SyncList`1.IndexOf(`0)">
            <summary>
            Determines the index of a specific item in the <see cref="T:WebApplications.Utilities.SyncList`1" />.
            </summary>
            <param name="item">The object to locate in the <see cref="T:WebApplications.Utilities.SyncList`1" />.</param>
            <returns>
            The index of <paramref name="item" /> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.SyncList`1.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.
            </summary>
            <param name="value">The object to locate in the <see cref="T:System.Collections.IList" />.</param>
            <returns>
            The index of <paramref name="value" /> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.SyncList`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:WebApplications.Utilities.SyncList`1"/> to an <see cref="T:System.Array"/>,
            starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from 
            <see cref="T:WebApplications.Utilities.SyncList`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex"/> is less than 0.</exception>
            <exception cref="T:System.ArgumentException">The number of elements in the source <see cref="T:WebApplications.Utilities.SyncList`1"/>
            is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.</exception>
        </member>
        <member name="M:WebApplications.Utilities.SyncList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, 
            starting at a particular <see cref="T:System.Array" /> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied 
            from <see cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
            <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
        </member>
        <member name="M:WebApplications.Utilities.SyncList`1.Remove(`0)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:WebApplications.Utilities.SyncList`1" />.
            </summary>
            <param name="item">The object to remove from the <see cref="T:WebApplications.Utilities.SyncList`1" />.</param>
            <returns>
            true if <paramref name="item" /> was successfully removed from the <see cref="T:WebApplications.Utilities.SyncList`1" />; otherwise, false. 
            This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:WebApplications.Utilities.SyncList`1" />.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.SyncList`1.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:WebApplications.Utilities.SyncList`1" /> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:WebApplications.Utilities.SyncList`1.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.
            </summary>
            <param name="value">The object to remove from the <see cref="T:System.Collections.IList" />.</param>
        </member>
        <member name="M:WebApplications.Utilities.SyncList`1.Clear">
            <summary>
            Removes all items from the <see cref="T:WebApplications.Utilities.SyncList`1" />.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.SyncList`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.SyncList`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:WebApplications.Utilities.ThreadLocal">
            <summary>
            Contains useful information on the current Thread.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.ThreadLocal._random">
            <summary>
              A random number generator per thread, for thread safety.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.ThreadLocal.Random">
            <summary>
            Gets the random number generator unique to this thread..
            </summary>
            <value>The random number generator.</value>
        </member>
        <member name="T:WebApplications.Utilities.TimeHelpers">
            <summary>
            Helper methods for working with NodaTime objects.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.TimeHelpers._dateTimeZoneProvider">
            <summary>
            The current date time zone provider.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.TimeHelpers._isFromConfig">
            <summary>
            Whether <see cref="F:WebApplications.Utilities.TimeHelpers._dateTimeZoneProvider"/> was loaded from the config.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.TimeHelpers.InfiniteDuration">
            <summary>
            A constant used to specify an infinite waiting period, for methods that accept a <see cref="T:NodaTime.Duration"/> parameter.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.TimeHelpers.MaxDuration">
            <summary>
            A constant used to specify the maximum duration, for methods that accept a <see cref="T:NodaTime.Duration"/> parameter.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.TimeHelpers.MinDuration">
            <summary>
            A constant used to specify the minimum duration, for methods that accept a <see cref="T:NodaTime.Duration"/> parameter.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.TimeHelpers.MaxLocalDateTime">
            <summary>
            A constant used to specify the maximum local date time, for methods that accept a <see cref="T:NodaTime.LocalDateTime"/> parameter.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.TimeHelpers.MinLocalDateTime">
            <summary>
            A constant used to specify the minimum local date time, for methods that accept a <see cref="T:NodaTime.LocalDateTime"/> parameter.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.TimeHelpers.MaxLocalDate">
            <summary>
            A constant used to specify the maximum local date, for methods that accept a <see cref="T:NodaTime.LocalDate"/> parameter.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.TimeHelpers.MinLocalDate">
            <summary>
            A constant used to specify the minimum local date, for methods that accept a <see cref="T:NodaTime.LocalDate"/> parameter.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.TimeHelpers.MaxLocalTime">
            <summary>
            A constant used to specify the maximum local time, for methods that accept a <see cref="T:NodaTime.LocalTime"/> parameter.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.TimeHelpers.MinLocalTime">
            <summary>
            A constant used to specify the minimum local time, for methods that accept a <see cref="T:NodaTime.LocalTime"/> parameter.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.TimeHelpers.OneTick">
            <summary>
            The one tick <see cref="T:NodaTime.Duration"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.TimeHelpers.OneMillisecond">
            <summary>
            The one millisecond <see cref="T:NodaTime.Duration"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.TimeHelpers.OneSecond">
            <summary>
            The one second <see cref="T:NodaTime.Duration"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.TimeHelpers.OneMinute">
            <summary>
            The one minute <see cref="T:NodaTime.Duration"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.TimeHelpers.OneHour">
            <summary>
            The one hour <see cref="T:NodaTime.Duration"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.TimeHelpers.OneStandardDay">
            <summary>
            The one standard day <see cref="T:NodaTime.Duration"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.TimeHelpers.OneStandardWeek">
            <summary>
            The one standard week <see cref="T:NodaTime.Duration"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.TimeHelpers.OneTickPeriod">
            <summary>
            The one tick <see cref="T:NodaTime.Period"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.TimeHelpers.OneMillisecondPeriod">
            <summary>
            The one millisecond <see cref="T:NodaTime.Duration"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.TimeHelpers.OneSecondPeriod">
            <summary>
            The one second <see cref="T:NodaTime.Period"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.TimeHelpers.OneMinutePeriod">
            <summary>
            The one minute <see cref="T:NodaTime.Period"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.TimeHelpers.OneHourPeriod">
            <summary>
            The one hour <see cref="T:NodaTime.Period"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.TimeHelpers.OneDayPeriod">
            <summary>
            The one day <see cref="T:NodaTime.Period"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.TimeHelpers.OneWeekPeriod">
            <summary>
            The one week <see cref="T:NodaTime.Period"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.TimeHelpers.OneMonthPeriod">
            <summary>
            The one month <see cref="T:NodaTime.Period"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.TimeHelpers.OneYearPeriod">
            <summary>
            The one year <see cref="T:NodaTime.Period"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.TimeHelpers.FileTimeEpoch">
            <summary>
            The file time epoch, 12:00 A.M. January 1, 1601.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.TimeHelpers.#cctor">
            <summary>
            Initializes the <see cref="T:WebApplications.Utilities.TimeHelpers"/> class.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.TimeHelpers.OnActiveUtilityConfigurationChanged(WebApplications.Utilities.Configuration.UtilityConfiguration,WebApplications.Utilities.Configuration.ConfigurationSection{WebApplications.Utilities.Configuration.UtilityConfiguration}.ConfigurationChangedEventArgs)">
            <summary>
            Called when the utility configuration changes. If the <see cref="P:WebApplications.Utilities.Configuration.UtilityConfiguration.TimeZoneDB"/> property changes, the database will be reloaded.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:WebApplications.Utilities.Configuration.ConfigurationSection`1.ConfigurationChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:WebApplications.Utilities.TimeHelpers.InstantFromFileTimeUtc(System.Int64)">
            <summary>
            Gets an <see cref="T:NodaTime.Instant"/> from file time ticks.
            </summary>
            <param name="fileTimeTicks">The number of 100-nanosecond intervals that have elapsed since <see cref="F:WebApplications.Utilities.TimeHelpers.FileTimeEpoch"/>.</param>
            <returns></returns>
        </member>
        <member name="P:WebApplications.Utilities.TimeHelpers.DateTimeZoneProvider">
            <summary>
            Gets or sets the date time zone provider.
            </summary>
            <value>The date time zone provider.</value>
        </member>
        <member name="P:WebApplications.Utilities.TimeHelpers.Clock">
            <summary>
            Gets or sets the clock.
            </summary>
            <value>The clock.</value>
        </member>
        <member name="M:WebApplications.Utilities.TimeHelpers.SetDateTimeZoneProvider(System.String)">
            <summary>
            Sets the <see cref="P:WebApplications.Utilities.TimeHelpers.DateTimeZoneProvider"/> to the time zone database given.
            </summary>
            <param name="path">The path of the database file to load, or <see langword="null"/> to use the path in the configuration.
            If no path is given in the config, the default NodaTime <see cref="P:NodaTime.DateTimeZoneProviders.Tzdb"/> will be used.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.TimeHelpers.LoadTzdb(System.String)">
            <summary>
            Loads a time zone database.
            </summary>
            <param name="path">The path of the database file to load, or <see langword="null"/> to use the path in the configuration.
            If no path is given in the config, the default NodaTime <see cref="P:NodaTime.DateTimeZoneProviders.Tzdb"/> will be used.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.TimeHelpers.TotalMilliseconds(NodaTime.Duration)">
            <summary>
            Gets the value of the <see cref="T:NodaTime.Duration"/> expressed in whole and fractional milliseconds.
            </summary>
            <param name="duration">The duration.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:WebApplications.Utilities.TimeHelpers.Milliseconds(NodaTime.Duration)">
            <summary>
            Gets the milliseconds component of the <see cref="T:NodaTime.Duration"/>.
            </summary>
            <param name="duration">The duration.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:WebApplications.Utilities.TimeHelpers.TotalSeconds(NodaTime.Duration)">
            <summary>
            Gets the value of the <see cref="T:NodaTime.Duration"/> expressed in whole and fractional seconds.
            </summary>
            <param name="duration">The duration.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:WebApplications.Utilities.TimeHelpers.Seconds(NodaTime.Duration)">
            <summary>
            Gets the seconds component of the <see cref="T:NodaTime.Duration"/>.
            </summary>
            <param name="duration">The duration.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:WebApplications.Utilities.TimeHelpers.TotalMinutes(NodaTime.Duration)">
            <summary>
            Gets the value of the <see cref="T:NodaTime.Duration"/> expressed in whole and fractional minutes.
            </summary>
            <param name="duration">The duration.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:WebApplications.Utilities.TimeHelpers.Minutes(NodaTime.Duration)">
            <summary>
            Gets the minutes component of the <see cref="T:NodaTime.Duration"/>.
            </summary>
            <param name="duration">The duration.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:WebApplications.Utilities.TimeHelpers.TotalHours(NodaTime.Duration)">
            <summary>
            Gets the value of the <see cref="T:NodaTime.Duration"/> expressed in whole and fractional hours.
            </summary>
            <param name="duration">The duration.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:WebApplications.Utilities.TimeHelpers.Hours(NodaTime.Duration)">
            <summary>
            Gets the hours component of the <see cref="T:NodaTime.Duration"/>.
            </summary>
            <param name="duration">The duration.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:WebApplications.Utilities.TimeHelpers.TotalStandardDays(NodaTime.Duration)">
            <summary>
            Gets the value of the <see cref="T:NodaTime.Duration"/> expressed in whole and fractional standard days.
            </summary>
            <param name="duration">The duration.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:WebApplications.Utilities.TimeHelpers.StandardDays(NodaTime.Duration)">
            <summary>
            Gets the standard days component of the <see cref="T:NodaTime.Duration"/>.
            </summary>
            <param name="duration">The duration.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:WebApplications.Utilities.TimeHelpers.TotalStandardWeeks(NodaTime.Duration)">
            <summary>
            Gets the value of the <see cref="T:NodaTime.Duration"/> expressed in whole and fractional standard days.
            </summary>
            <param name="duration">The duration.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:WebApplications.Utilities.TimeHelpers.StandardWeeks(NodaTime.Duration)">
            <summary>
            Gets the standard weeks component of the <see cref="T:NodaTime.Duration"/>.
            </summary>
            <param name="duration">The duration.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:WebApplications.Utilities.TimeHelpers.FloorSecond(NodaTime.Instant)">
            <summary>
            Floors the specified instant to the second.
            </summary>
            <param name="instant">The instant.</param>
            <returns>Instant.</returns>
        </member>
        <member name="M:WebApplications.Utilities.TimeHelpers.CeilingSecond(NodaTime.Instant)">
            <summary>
            Ceilings the specified instant to the second.
            </summary>
            <param name="instant">The instant.</param>
            <returns>Instant.</returns>
        </member>
        <member name="M:WebApplications.Utilities.TimeHelpers.FloorMinute(NodaTime.Instant)">
            <summary>
            Floors the <see cref="T:NodaTime.Instant"/> to the nearest minute.
            </summary>
            <param name="instant">The instant.</param>
            <returns>Instant.</returns>
        </member>
        <member name="M:WebApplications.Utilities.TimeHelpers.CeilingMinute(NodaTime.Instant)">
            <summary>
            Ceilings the <see cref="T:NodaTime.Instant"/> to the nearest minute.
            </summary>
            <param name="instant">The instant.</param>
            <returns>Instant.</returns>
        </member>
        <member name="M:WebApplications.Utilities.TimeHelpers.FloorHour(NodaTime.Instant)">
            <summary>
            Floors the <see cref="T:NodaTime.Instant"/> to the nearest hour.
            </summary>
            <param name="instant">The instant.</param>
            <returns>Instant.</returns>
        </member>
        <member name="M:WebApplications.Utilities.TimeHelpers.CeilingHour(NodaTime.Instant)">
            <summary>
            Ceilings the <see cref="T:NodaTime.Instant"/> to the nearest hour.
            </summary>
            <param name="instant">The instant.</param>
            <returns>Instant.</returns>
        </member>
        <member name="M:WebApplications.Utilities.TimeHelpers.IsZero(NodaTime.Period)">
            <summary>
            Determines whether the specified period is zero.
            </summary>
            <param name="period">The period.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.TimeHelpers.IsPositive(NodaTime.Period,NodaTime.LocalDateTime)">
            <summary>
            Determines whether the specified period is positive, relative to a <see cref="T:NodaTime.LocalDateTime" />.
            </summary>
            <param name="period">The period.</param>
            <param name="local">The local.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.TimeHelpers.IsNegative(NodaTime.Period,NodaTime.LocalDateTime)">
            <summary>
            Determines whether the specified period is negative, relative to a <see cref="T:NodaTime.LocalDateTime" />.
            </summary>
            <param name="period">The period.</param>
            <param name="local">The local.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.TimeHelpers.IsPositive(NodaTime.Period,NodaTime.LocalDate)">
            <summary>
            Determines whether the specified period is positive, relative to a <see cref="T:NodaTime.LocalDateTime" />.
            </summary>
            <param name="period">The period.</param>
            <param name="local">The local.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.TimeHelpers.IsNegative(NodaTime.Period,NodaTime.LocalDate)">
            <summary>
            Determines whether the specified period is negative, relative to a <see cref="T:NodaTime.LocalDateTime" />.
            </summary>
            <param name="period">The period.</param>
            <param name="local">The local.</param>
            <returns></returns>
        </member>
        <member name="T:WebApplications.Utilities.TupleEnumerable">
            <summary>
            Provides a set of <see langword="static"/> methods for querying objects that implement <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.Tuple">tuples</see>.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.Empty``2">
            <summary>
            Returns an empty <see cref="T:WebApplications.Utilities.IEnumerable`2"/> that has the specified type arguments.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.AsTupleEnumerable``2(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}})">
            <summary>
            Returns the input typed as IEnumerable{T1, T2}.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.Empty``3">
            <summary>
            Returns an empty <see cref="T:WebApplications.Utilities.IEnumerable`3"/> that has the specified type arguments.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.AsTupleEnumerable``3(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1,``2}})">
            <summary>
            Returns the input typed as IEnumerable{T1, T2, T3}.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.Empty``4">
            <summary>
            Returns an empty <see cref="T:WebApplications.Utilities.IEnumerable`4"/> that has the specified type arguments.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.AsTupleEnumerable``4(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1,``2,``3}})">
            <summary>
            Returns the input typed as IEnumerable{T1, T2, T3, T4}.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.Empty``5">
            <summary>
            Returns an empty <see cref="T:WebApplications.Utilities.IEnumerable`5"/> that has the specified type arguments.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.AsTupleEnumerable``5(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1,``2,``3,``4}})">
            <summary>
            Returns the input typed as IEnumerable{T1, T2, T3, T4, T5}.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.Empty``6">
            <summary>
            Returns an empty <see cref="T:WebApplications.Utilities.IEnumerable`6"/> that has the specified type arguments.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.AsTupleEnumerable``6(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1,``2,``3,``4,``5}})">
            <summary>
            Returns the input typed as IEnumerable{T1, T2, T3, T4, T5, T6}.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.Empty``7">
            <summary>
            Returns an empty <see cref="T:WebApplications.Utilities.IEnumerable`7"/> that has the specified type arguments.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.AsTupleEnumerable``7(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1,``2,``3,``4,``5,``6}})">
            <summary>
            Returns the input typed as IEnumerable{T1, T2, T3, T4, T5, T6, T7}.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.Empty``8">
            <summary>
            Returns an empty <see cref="T:WebApplications.Utilities.IEnumerable`8"/> that has the specified type arguments.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.AsTupleEnumerable``8(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}}})">
            <summary>
            Returns the input typed as IEnumerable{T1, T2, T3, T4, T5, T6, T7, T8}.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.Empty``9">
            <summary>
            Returns an empty <see cref="T:WebApplications.Utilities.IEnumerable`9"/> that has the specified type arguments.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.AsTupleEnumerable``9(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}}})">
            <summary>
            Returns the input typed as IEnumerable{T1, T2, T3, T4, T5, T6, T7, T8, T9}.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.Empty``10">
            <summary>
            Returns an empty <see cref="T:WebApplications.Utilities.IEnumerable`10"/> that has the specified type arguments.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.AsTupleEnumerable``10(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}}})">
            <summary>
            Returns the input typed as IEnumerable{T1, T2, T3, T4, T5, T6, T7, T8, T9, T10}.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.Empty``11">
            <summary>
            Returns an empty <see cref="T:WebApplications.Utilities.IEnumerable`11"/> that has the specified type arguments.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.AsTupleEnumerable``11(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}}})">
            <summary>
            Returns the input typed as IEnumerable{T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11}.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.Empty``12">
            <summary>
            Returns an empty <see cref="T:WebApplications.Utilities.IEnumerable`12"/> that has the specified type arguments.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.AsTupleEnumerable``12(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}}})">
            <summary>
            Returns the input typed as IEnumerable{T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12}.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.Empty``13">
            <summary>
            Returns an empty <see cref="T:WebApplications.Utilities.IEnumerable`13"/> that has the specified type arguments.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.AsTupleEnumerable``13(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}}})">
            <summary>
            Returns the input typed as IEnumerable{T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13}.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.Empty``14">
            <summary>
            Returns an empty <see cref="T:WebApplications.Utilities.IEnumerable`14"/> that has the specified type arguments.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.AsTupleEnumerable``14(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}}})">
            <summary>
            Returns the input typed as IEnumerable{T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14}.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.Empty``15">
            <summary>
            Returns an empty <see cref="T:WebApplications.Utilities.IEnumerable`15"/> that has the specified type arguments.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.AsTupleEnumerable``15(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}}})">
            <summary>
            Returns the input typed as IEnumerable{T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15}.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.Empty``16">
            <summary>
            Returns an empty <see cref="T:WebApplications.Utilities.IEnumerable`16"/> that has the specified type arguments.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.AsTupleEnumerable``16(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}}})">
            <summary>
            Returns the input typed as IEnumerable{T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16}.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.Empty``17">
            <summary>
            Returns an empty <see cref="T:WebApplications.Utilities.IEnumerable`17"/> that has the specified type arguments.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.AsTupleEnumerable``17(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}}})">
            <summary>
            Returns the input typed as IEnumerable{T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17}.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.Empty``18">
            <summary>
            Returns an empty <see cref="T:WebApplications.Utilities.IEnumerable`18"/> that has the specified type arguments.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.AsTupleEnumerable``18(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}}})">
            <summary>
            Returns the input typed as IEnumerable{T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18}.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.Empty``19">
            <summary>
            Returns an empty <see cref="T:WebApplications.Utilities.IEnumerable`19"/> that has the specified type arguments.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.AsTupleEnumerable``19(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}}})">
            <summary>
            Returns the input typed as IEnumerable{T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19}.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.Empty``20">
            <summary>
            Returns an empty <see cref="T:WebApplications.Utilities.IEnumerable`20"/> that has the specified type arguments.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.AsTupleEnumerable``20(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}}})">
            <summary>
            Returns the input typed as IEnumerable{T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20}.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.Empty``21">
            <summary>
            Returns an empty <see cref="T:WebApplications.Utilities.IEnumerable`21"/> that has the specified type arguments.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.AsTupleEnumerable``21(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}}})">
            <summary>
            Returns the input typed as IEnumerable{T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21}.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.Empty``22">
            <summary>
            Returns an empty <see cref="T:WebApplications.Utilities.IEnumerable`22"/> that has the specified type arguments.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.AsTupleEnumerable``22(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20,System.Tuple{``21}}}}})">
            <summary>
            Returns the input typed as IEnumerable{T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22}.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.Empty``23">
            <summary>
            Returns an empty <see cref="T:WebApplications.Utilities.IEnumerable`23"/> that has the specified type arguments.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.AsTupleEnumerable``23(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20,System.Tuple{``21,``22}}}}})">
            <summary>
            Returns the input typed as IEnumerable{T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23}.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.Empty``24">
            <summary>
            Returns an empty <see cref="T:WebApplications.Utilities.IEnumerable`24"/> that has the specified type arguments.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.AsTupleEnumerable``24(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20,System.Tuple{``21,``22,``23}}}}})">
            <summary>
            Returns the input typed as IEnumerable{T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24}.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.Empty``25">
            <summary>
            Returns an empty <see cref="T:WebApplications.Utilities.IEnumerable`25"/> that has the specified type arguments.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.AsTupleEnumerable``25(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20,System.Tuple{``21,``22,``23,``24}}}}})">
            <summary>
            Returns the input typed as IEnumerable{T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25}.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.Empty``26">
            <summary>
            Returns an empty <see cref="T:WebApplications.Utilities.IEnumerable`26"/> that has the specified type arguments.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.AsTupleEnumerable``26(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20,System.Tuple{``21,``22,``23,``24,``25}}}}})">
            <summary>
            Returns the input typed as IEnumerable{T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26}.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.Empty``27">
            <summary>
            Returns an empty <see cref="T:WebApplications.Utilities.IEnumerable`27"/> that has the specified type arguments.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.AsTupleEnumerable``27(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20,System.Tuple{``21,``22,``23,``24,``25,``26}}}}})">
            <summary>
            Returns the input typed as IEnumerable{T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27}.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.Empty``28">
            <summary>
            Returns an empty <see cref="T:WebApplications.Utilities.IEnumerable`28"/> that has the specified type arguments.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.AsTupleEnumerable``28(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20,System.Tuple{``21,``22,``23,``24,``25,``26,``27}}}}})">
            <summary>
            Returns the input typed as IEnumerable{T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28}.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.Empty``29">
            <summary>
            Returns an empty <see cref="T:WebApplications.Utilities.IEnumerable`29"/> that has the specified type arguments.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.AsTupleEnumerable``29(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20,System.Tuple{``21,``22,``23,``24,``25,``26,``27,System.Tuple{``28}}}}}})">
            <summary>
            Returns the input typed as IEnumerable{T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29}.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.Empty``30">
            <summary>
            Returns an empty <see cref="T:WebApplications.Utilities.IEnumerable`30"/> that has the specified type arguments.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.AsTupleEnumerable``30(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20,System.Tuple{``21,``22,``23,``24,``25,``26,``27,System.Tuple{``28,``29}}}}}})">
            <summary>
            Returns the input typed as IEnumerable{T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30}.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.Empty``31">
            <summary>
            Returns an empty <see cref="T:WebApplications.Utilities.IEnumerable`31"/> that has the specified type arguments.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <typeparam name="T31">The type of item 31.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.AsTupleEnumerable``31(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20,System.Tuple{``21,``22,``23,``24,``25,``26,``27,System.Tuple{``28,``29,``30}}}}}})">
            <summary>
            Returns the input typed as IEnumerable{T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31}.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.Empty``32">
            <summary>
            Returns an empty <see cref="T:WebApplications.Utilities.IEnumerable`32"/> that has the specified type arguments.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <typeparam name="T31">The type of item 31.</typeparam>
            <typeparam name="T32">The type of item 32.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.AsTupleEnumerable``32(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20,System.Tuple{``21,``22,``23,``24,``25,``26,``27,System.Tuple{``28,``29,``30,``31}}}}}})">
            <summary>
            Returns the input typed as IEnumerable{T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32}.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.Empty``33">
            <summary>
            Returns an empty <see cref="T:WebApplications.Utilities.IEnumerable`33"/> that has the specified type arguments.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <typeparam name="T31">The type of item 31.</typeparam>
            <typeparam name="T32">The type of item 32.</typeparam>
            <typeparam name="T33">The type of item 33.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.AsTupleEnumerable``33(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20,System.Tuple{``21,``22,``23,``24,``25,``26,``27,System.Tuple{``28,``29,``30,``31,``32}}}}}})">
            <summary>
            Returns the input typed as IEnumerable{T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33}.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.Empty``34">
            <summary>
            Returns an empty <see cref="T:WebApplications.Utilities.IEnumerable`34"/> that has the specified type arguments.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <typeparam name="T31">The type of item 31.</typeparam>
            <typeparam name="T32">The type of item 32.</typeparam>
            <typeparam name="T33">The type of item 33.</typeparam>
            <typeparam name="T34">The type of item 34.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.AsTupleEnumerable``34(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20,System.Tuple{``21,``22,``23,``24,``25,``26,``27,System.Tuple{``28,``29,``30,``31,``32,``33}}}}}})">
            <summary>
            Returns the input typed as IEnumerable{T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34}.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.Empty``35">
            <summary>
            Returns an empty <see cref="T:WebApplications.Utilities.IEnumerable`35"/> that has the specified type arguments.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <typeparam name="T31">The type of item 31.</typeparam>
            <typeparam name="T32">The type of item 32.</typeparam>
            <typeparam name="T33">The type of item 33.</typeparam>
            <typeparam name="T34">The type of item 34.</typeparam>
            <typeparam name="T35">The type of item 35.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.TupleEnumerable.AsTupleEnumerable``35(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20,System.Tuple{``21,``22,``23,``24,``25,``26,``27,System.Tuple{``28,``29,``30,``31,``32,``33,``34}}}}}})">
            <summary>
            Returns the input typed as IEnumerable{T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35}.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.IEnumerable`2">
            <summary>
            An IEnumerable of <c>Tuple&lt;T1, T2&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
        </member>
        <member name="T:WebApplications.Utilities.IEnumerable`3">
            <summary>
            An IEnumerable of <c>Tuple&lt;T1, T2, T3&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
        </member>
        <member name="T:WebApplications.Utilities.IEnumerable`4">
            <summary>
            An IEnumerable of <c>Tuple&lt;T1, T2, T3, T4&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
        </member>
        <member name="T:WebApplications.Utilities.IEnumerable`5">
            <summary>
            An IEnumerable of <c>Tuple&lt;T1, T2, T3, T4, T5&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
        </member>
        <member name="T:WebApplications.Utilities.IEnumerable`6">
            <summary>
            An IEnumerable of <c>Tuple&lt;T1, T2, T3, T4, T5, T6&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
        </member>
        <member name="T:WebApplications.Utilities.IEnumerable`7">
            <summary>
            An IEnumerable of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
        </member>
        <member name="T:WebApplications.Utilities.IEnumerable`8">
            <summary>
            An IEnumerable of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
        </member>
        <member name="T:WebApplications.Utilities.IEnumerable`9">
            <summary>
            An IEnumerable of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
        </member>
        <member name="T:WebApplications.Utilities.IEnumerable`10">
            <summary>
            An IEnumerable of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
        </member>
        <member name="T:WebApplications.Utilities.IEnumerable`11">
            <summary>
            An IEnumerable of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
        </member>
        <member name="T:WebApplications.Utilities.IEnumerable`12">
            <summary>
            An IEnumerable of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
        </member>
        <member name="T:WebApplications.Utilities.IEnumerable`13">
            <summary>
            An IEnumerable of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
        </member>
        <member name="T:WebApplications.Utilities.IEnumerable`14">
            <summary>
            An IEnumerable of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
        </member>
        <member name="T:WebApplications.Utilities.IEnumerable`15">
            <summary>
            An IEnumerable of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
        </member>
        <member name="T:WebApplications.Utilities.IEnumerable`16">
            <summary>
            An IEnumerable of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
        </member>
        <member name="T:WebApplications.Utilities.IEnumerable`17">
            <summary>
            An IEnumerable of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
        </member>
        <member name="T:WebApplications.Utilities.IEnumerable`18">
            <summary>
            An IEnumerable of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
        </member>
        <member name="T:WebApplications.Utilities.IEnumerable`19">
            <summary>
            An IEnumerable of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
        </member>
        <member name="T:WebApplications.Utilities.IEnumerable`20">
            <summary>
            An IEnumerable of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
        </member>
        <member name="T:WebApplications.Utilities.IEnumerable`21">
            <summary>
            An IEnumerable of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
        </member>
        <member name="T:WebApplications.Utilities.IEnumerable`22">
            <summary>
            An IEnumerable of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
        </member>
        <member name="T:WebApplications.Utilities.IEnumerable`23">
            <summary>
            An IEnumerable of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
        </member>
        <member name="T:WebApplications.Utilities.IEnumerable`24">
            <summary>
            An IEnumerable of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
        </member>
        <member name="T:WebApplications.Utilities.IEnumerable`25">
            <summary>
            An IEnumerable of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
        </member>
        <member name="T:WebApplications.Utilities.IEnumerable`26">
            <summary>
            An IEnumerable of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25, T26&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
        </member>
        <member name="T:WebApplications.Utilities.IEnumerable`27">
            <summary>
            An IEnumerable of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25, T26, T27&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
        </member>
        <member name="T:WebApplications.Utilities.IEnumerable`28">
            <summary>
            An IEnumerable of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25, T26, T27, T28&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
        </member>
        <member name="T:WebApplications.Utilities.IEnumerable`29">
            <summary>
            An IEnumerable of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25, T26, T27, T28, Tuple&lt;T29&gt;&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
        </member>
        <member name="T:WebApplications.Utilities.IEnumerable`30">
            <summary>
            An IEnumerable of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25, T26, T27, T28, Tuple&lt;T29, T30&gt;&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
        </member>
        <member name="T:WebApplications.Utilities.IEnumerable`31">
            <summary>
            An IEnumerable of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25, T26, T27, T28, Tuple&lt;T29, T30, T31&gt;&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <typeparam name="T31">The type of item 31.</typeparam>
        </member>
        <member name="T:WebApplications.Utilities.IEnumerable`32">
            <summary>
            An IEnumerable of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25, T26, T27, T28, Tuple&lt;T29, T30, T31, T32&gt;&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <typeparam name="T31">The type of item 31.</typeparam>
            <typeparam name="T32">The type of item 32.</typeparam>
        </member>
        <member name="T:WebApplications.Utilities.IEnumerable`33">
            <summary>
            An IEnumerable of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25, T26, T27, T28, Tuple&lt;T29, T30, T31, T32, T33&gt;&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <typeparam name="T31">The type of item 31.</typeparam>
            <typeparam name="T32">The type of item 32.</typeparam>
            <typeparam name="T33">The type of item 33.</typeparam>
        </member>
        <member name="T:WebApplications.Utilities.IEnumerable`34">
            <summary>
            An IEnumerable of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25, T26, T27, T28, Tuple&lt;T29, T30, T31, T32, T33, T34&gt;&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <typeparam name="T31">The type of item 31.</typeparam>
            <typeparam name="T32">The type of item 32.</typeparam>
            <typeparam name="T33">The type of item 33.</typeparam>
            <typeparam name="T34">The type of item 34.</typeparam>
        </member>
        <member name="T:WebApplications.Utilities.IEnumerable`35">
            <summary>
            An IEnumerable of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25, T26, T27, T28, Tuple&lt;T29, T30, T31, T32, T33, T34, T35&gt;&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <typeparam name="T31">The type of item 31.</typeparam>
            <typeparam name="T32">The type of item 32.</typeparam>
            <typeparam name="T33">The type of item 33.</typeparam>
            <typeparam name="T34">The type of item 34.</typeparam>
            <typeparam name="T35">The type of item 35.</typeparam>
        </member>
        <member name="T:WebApplications.Utilities.Impersonator">
            <summary>
            Allows code to be executed under the security context of a specified user account.
            </summary>
            <remarks>
            See http://platinumdogs.me/2008/10/30/net-c-impersonation-with-network-credentials/
            </remarks>
        </member>
        <member name="T:WebApplications.Utilities.Impersonator.LogonType">
            <summary>
            The types of logon operation that can be performed.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Impersonator.LogonType.Interactive">
            <summary>
            This logon type is intended for users who will be interactively using the computer, such as a user being
             logged on by a terminal server, remote shell, or similar process. This logon type has the additional 
            expense of caching logon information for disconnected operations; therefore, it is inappropriate for 
            some client/server applications, such as a mail server.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Impersonator.LogonType.Network">
            <summary>
            This logon type is intended for high performance servers to authenticate plaintext passwords. 
            Credentials are not cached for this logon type.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Impersonator.LogonType.Batch">
            <summary>
            This logon type is intended for batch servers, where processes may be executing on behalf of a user 
            without their direct intervention. This type is also for higher performance servers that process many 
            plaintext authentication attempts at a time, such as mail or web servers.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Impersonator.LogonType.Service">
            <summary>
            Indicates a service-type logon. The account provided must have the service privilege enabled.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Impersonator.LogonType.Unlock">
            <summary>
            <para>GINAs are no longer supported.</para>
            <para><b>Windows Server 2003 and Windows XP:</b> This logon type is for GINA DLLs that log on users who will be 
            interactively using the computer. This logon type can generate a unique audit record that shows when 
            the workstation was unlocked.</para>
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Impersonator.LogonType.NetworkCleartext">
            <summary>
            This logon type preserves the name and password in the authentication package, which allows the server to make 
            connections to other network servers while impersonating the client. A server can accept plaintext credentials 
            from a client, create an <see cref="T:WebApplications.Utilities.Impersonator"/>, verify that the user can access the system across the network, and still 
            communicate with other servers.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Impersonator.LogonType.NewCredentials">
            <summary>
            This logon type allows the caller to clone its current token and specify new credentials for outbound connections. 
            The new logon session has the same local identifier but uses different credentials for other network connections.
            This logon type is supported only by the <see cref="F:WebApplications.Utilities.Impersonator.LogonProvider.WinNT50"/> logon provider.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Impersonator.LogonProvider">
            <summary>
            The logon providers.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Impersonator.LogonProvider.Default">
            <summary>
            Use the standard logon provider for the system. The default security provider is negotiate, unless you pass 
            null for the domain name and the user name is not in UPN format. In this case, the default provider is NTLM.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Impersonator.LogonProvider.WinNT35">
            <summary>
            Use the NT 3.51 logon provider.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Impersonator.LogonProvider.WinNT40">
            <summary>
            Use the NTLM logon provider.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Impersonator.LogonProvider.WinNT50">
            <summary>
            Use the negotiate logon provider.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Impersonator.#ctor(System.String,System.String,WebApplications.Utilities.Impersonator.LogonType,WebApplications.Utilities.Impersonator.LogonProvider)">
            <summary>
            Begins impersonation with the given credentials, Logon type and Logon provider.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
            <param name="logonType">Type of the logon.</param>
            <param name="logonProvider">The logon provider.</param>
            <exception cref="T:System.ComponentModel.Win32Exception">
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Impersonator.#ctor(System.String,System.String,System.String,WebApplications.Utilities.Impersonator.LogonType,WebApplications.Utilities.Impersonator.LogonProvider)">
            <summary>
            Begins impersonation with the given credentials, Logon type and Logon provider.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
            <param name="domainName">Name of the domain.</param>
            <param name="logonType">Type of the logon.</param>
            <param name="logonProvider">The logon provider.</param>
            <exception cref="T:System.ComponentModel.Win32Exception">
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Impersonator.Init(System.String,System.String,System.String,WebApplications.Utilities.Impersonator.LogonType,WebApplications.Utilities.Impersonator.LogonProvider)">
            <summary>
            Initializes the impersonator.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
            <param name="domainName">Name of the domain.</param>
            <param name="logonType">Type of the logon.</param>
            <param name="logonProvider">The logon provider.</param>
            <exception cref="T:System.ComponentModel.Win32Exception">
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Impersonator.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.List`2">
            <summary>
            A List of <c>Tuple&lt;T1, T2&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.List`2.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`2"/> class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than 0. </exception>
        </member>
        <member name="M:WebApplications.Utilities.List`2.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`2"/> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.List`2.Add(`0,`1)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.List`2" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`2.Get(System.Int32,`0@,`1@)">
            <summary>
            Gets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to get.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`2.Set(System.Int32,`0,`1)">
            <summary>
            Sets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to set.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
        </member>
        <member name="T:WebApplications.Utilities.List`3">
            <summary>
            A List of <c>Tuple&lt;T1, T2, T3&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.List`3.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`3"/> class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than 0. </exception>
        </member>
        <member name="M:WebApplications.Utilities.List`3.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`3"/> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.List`3.Add(`0,`1,`2)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.List`3" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`3.Get(System.Int32,`0@,`1@,`2@)">
            <summary>
            Gets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to get.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`3.Set(System.Int32,`0,`1,`2)">
            <summary>
            Sets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to set.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
        </member>
        <member name="T:WebApplications.Utilities.List`4">
            <summary>
            A List of <c>Tuple&lt;T1, T2, T3, T4&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.List`4.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`4"/> class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than 0. </exception>
        </member>
        <member name="M:WebApplications.Utilities.List`4.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`4"/> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.List`4.Add(`0,`1,`2,`3)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.List`4" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`4.Get(System.Int32,`0@,`1@,`2@,`3@)">
            <summary>
            Gets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to get.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`4.Set(System.Int32,`0,`1,`2,`3)">
            <summary>
            Sets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to set.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
        </member>
        <member name="T:WebApplications.Utilities.List`5">
            <summary>
            A List of <c>Tuple&lt;T1, T2, T3, T4, T5&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.List`5.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`5"/> class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than 0. </exception>
        </member>
        <member name="M:WebApplications.Utilities.List`5.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`5"/> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.List`5.Add(`0,`1,`2,`3,`4)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.List`5" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`5.Get(System.Int32,`0@,`1@,`2@,`3@,`4@)">
            <summary>
            Gets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to get.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`5.Set(System.Int32,`0,`1,`2,`3,`4)">
            <summary>
            Sets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to set.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
        </member>
        <member name="T:WebApplications.Utilities.List`6">
            <summary>
            A List of <c>Tuple&lt;T1, T2, T3, T4, T5, T6&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.List`6.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`6"/> class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than 0. </exception>
        </member>
        <member name="M:WebApplications.Utilities.List`6.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`6"/> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.List`6.Add(`0,`1,`2,`3,`4,`5)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.List`6" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`6.Get(System.Int32,`0@,`1@,`2@,`3@,`4@,`5@)">
            <summary>
            Gets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to get.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`6.Set(System.Int32,`0,`1,`2,`3,`4,`5)">
            <summary>
            Sets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to set.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
        </member>
        <member name="T:WebApplications.Utilities.List`7">
            <summary>
            A List of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.List`7.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`7"/> class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than 0. </exception>
        </member>
        <member name="M:WebApplications.Utilities.List`7.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`7"/> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.List`7.Add(`0,`1,`2,`3,`4,`5,`6)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.List`7" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`7.Get(System.Int32,`0@,`1@,`2@,`3@,`4@,`5@,`6@)">
            <summary>
            Gets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to get.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`7.Set(System.Int32,`0,`1,`2,`3,`4,`5,`6)">
            <summary>
            Sets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to set.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
        </member>
        <member name="T:WebApplications.Utilities.List`8">
            <summary>
            A List of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.List`8.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`8"/> class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than 0. </exception>
        </member>
        <member name="M:WebApplications.Utilities.List`8.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`8"/> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.List`8.Add(`0,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.List`8" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`8.Get(System.Int32,`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@)">
            <summary>
            Gets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to get.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`8.Set(System.Int32,`0,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Sets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to set.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
        </member>
        <member name="T:WebApplications.Utilities.List`9">
            <summary>
            A List of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.List`9.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`9"/> class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than 0. </exception>
        </member>
        <member name="M:WebApplications.Utilities.List`9.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`9"/> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.List`9.Add(`0,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.List`9" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`9.Get(System.Int32,`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@)">
            <summary>
            Gets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to get.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`9.Set(System.Int32,`0,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Sets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to set.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
        </member>
        <member name="T:WebApplications.Utilities.List`10">
            <summary>
            A List of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.List`10.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`10"/> class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than 0. </exception>
        </member>
        <member name="M:WebApplications.Utilities.List`10.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`10"/> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.List`10.Add(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.List`10" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`10.Get(System.Int32,`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@)">
            <summary>
            Gets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to get.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`10.Set(System.Int32,`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Sets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to set.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
        </member>
        <member name="T:WebApplications.Utilities.List`11">
            <summary>
            A List of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.List`11.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`11"/> class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than 0. </exception>
        </member>
        <member name="M:WebApplications.Utilities.List`11.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`11"/> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.List`11.Add(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.List`11" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`11.Get(System.Int32,`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@)">
            <summary>
            Gets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to get.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`11.Set(System.Int32,`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Sets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to set.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
        </member>
        <member name="T:WebApplications.Utilities.List`12">
            <summary>
            A List of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.List`12.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`12"/> class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than 0. </exception>
        </member>
        <member name="M:WebApplications.Utilities.List`12.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`12"/> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.List`12.Add(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.List`12" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`12.Get(System.Int32,`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@)">
            <summary>
            Gets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to get.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`12.Set(System.Int32,`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Sets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to set.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
        </member>
        <member name="T:WebApplications.Utilities.List`13">
            <summary>
            A List of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.List`13.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`13"/> class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than 0. </exception>
        </member>
        <member name="M:WebApplications.Utilities.List`13.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`13"/> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.List`13.Add(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.List`13" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`13.Get(System.Int32,`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@)">
            <summary>
            Gets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to get.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`13.Set(System.Int32,`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Sets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to set.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
        </member>
        <member name="T:WebApplications.Utilities.List`14">
            <summary>
            A List of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.List`14.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`14"/> class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than 0. </exception>
        </member>
        <member name="M:WebApplications.Utilities.List`14.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`14"/> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.List`14.Add(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.List`14" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`14.Get(System.Int32,`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@)">
            <summary>
            Gets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to get.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`14.Set(System.Int32,`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Sets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to set.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
        </member>
        <member name="T:WebApplications.Utilities.List`15">
            <summary>
            A List of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.List`15.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`15"/> class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than 0. </exception>
        </member>
        <member name="M:WebApplications.Utilities.List`15.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`15"/> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.List`15.Add(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.List`15" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`15.Get(System.Int32,`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@)">
            <summary>
            Gets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to get.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`15.Set(System.Int32,`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Sets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to set.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
        </member>
        <member name="T:WebApplications.Utilities.List`16">
            <summary>
            A List of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.List`16.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`16"/> class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than 0. </exception>
        </member>
        <member name="M:WebApplications.Utilities.List`16.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`16"/> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.List`16.Add(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.List`16" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`16.Get(System.Int32,`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@)">
            <summary>
            Gets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to get.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`16.Set(System.Int32,`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
            <summary>
            Sets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to set.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
        </member>
        <member name="T:WebApplications.Utilities.List`17">
            <summary>
            A List of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.List`17.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`17"/> class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than 0. </exception>
        </member>
        <member name="M:WebApplications.Utilities.List`17.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`17"/> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.List`17.Add(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.List`17" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`17.Get(System.Int32,`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@)">
            <summary>
            Gets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to get.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`17.Set(System.Int32,`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16)">
            <summary>
            Sets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to set.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
        </member>
        <member name="T:WebApplications.Utilities.List`18">
            <summary>
            A List of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.List`18.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`18"/> class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than 0. </exception>
        </member>
        <member name="M:WebApplications.Utilities.List`18.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`18"/> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.List`18.Add(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.List`18" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`18.Get(System.Int32,`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@)">
            <summary>
            Gets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to get.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`18.Set(System.Int32,`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17)">
            <summary>
            Sets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to set.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
        </member>
        <member name="T:WebApplications.Utilities.List`19">
            <summary>
            A List of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.List`19.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`19"/> class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than 0. </exception>
        </member>
        <member name="M:WebApplications.Utilities.List`19.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`19"/> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.List`19.Add(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.List`19" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`19.Get(System.Int32,`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@)">
            <summary>
            Gets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to get.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`19.Set(System.Int32,`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18)">
            <summary>
            Sets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to set.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
        </member>
        <member name="T:WebApplications.Utilities.List`20">
            <summary>
            A List of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.List`20.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`20"/> class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than 0. </exception>
        </member>
        <member name="M:WebApplications.Utilities.List`20.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`20"/> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.List`20.Add(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.List`20" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`20.Get(System.Int32,`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@)">
            <summary>
            Gets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to get.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`20.Set(System.Int32,`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19)">
            <summary>
            Sets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to set.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
        </member>
        <member name="T:WebApplications.Utilities.List`21">
            <summary>
            A List of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.List`21.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`21"/> class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than 0. </exception>
        </member>
        <member name="M:WebApplications.Utilities.List`21.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`21"/> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.List`21.Add(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.List`21" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`21.Get(System.Int32,`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@)">
            <summary>
            Gets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to get.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`21.Set(System.Int32,`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20)">
            <summary>
            Sets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to set.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
        </member>
        <member name="T:WebApplications.Utilities.List`22">
            <summary>
            A List of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.List`22.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`22"/> class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than 0. </exception>
        </member>
        <member name="M:WebApplications.Utilities.List`22.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`22"/> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.List`22.Add(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.List`22" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`22.Get(System.Int32,`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@)">
            <summary>
            Gets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to get.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`22.Set(System.Int32,`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21)">
            <summary>
            Sets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to set.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
        </member>
        <member name="T:WebApplications.Utilities.List`23">
            <summary>
            A List of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.List`23.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`23"/> class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than 0. </exception>
        </member>
        <member name="M:WebApplications.Utilities.List`23.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21,`22}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`23"/> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.List`23.Add(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.List`23" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`23.Get(System.Int32,`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@)">
            <summary>
            Gets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to get.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`23.Set(System.Int32,`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22)">
            <summary>
            Sets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to set.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
        </member>
        <member name="T:WebApplications.Utilities.List`24">
            <summary>
            A List of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.List`24.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`24"/> class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than 0. </exception>
        </member>
        <member name="M:WebApplications.Utilities.List`24.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21,`22,`23}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`24"/> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.List`24.Add(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.List`24" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`24.Get(System.Int32,`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@)">
            <summary>
            Gets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to get.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`24.Set(System.Int32,`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23)">
            <summary>
            Sets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to set.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
        </member>
        <member name="T:WebApplications.Utilities.List`25">
            <summary>
            A List of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.List`25.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`25"/> class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than 0. </exception>
        </member>
        <member name="M:WebApplications.Utilities.List`25.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21,`22,`23,`24}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`25"/> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.List`25.Add(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.List`25" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`25.Get(System.Int32,`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@)">
            <summary>
            Gets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to get.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`25.Set(System.Int32,`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24)">
            <summary>
            Sets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to set.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
        </member>
        <member name="T:WebApplications.Utilities.List`26">
            <summary>
            A List of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25, T26&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.List`26.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`26"/> class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than 0. </exception>
        </member>
        <member name="M:WebApplications.Utilities.List`26.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21,`22,`23,`24,`25}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`26"/> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.List`26.Add(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.List`26" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`26.Get(System.Int32,`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@)">
            <summary>
            Gets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to get.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`26.Set(System.Int32,`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25)">
            <summary>
            Sets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to set.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
        </member>
        <member name="T:WebApplications.Utilities.List`27">
            <summary>
            A List of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25, T26, T27&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.List`27.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`27"/> class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than 0. </exception>
        </member>
        <member name="M:WebApplications.Utilities.List`27.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21,`22,`23,`24,`25,`26}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`27"/> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.List`27.Add(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.List`27" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`27.Get(System.Int32,`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@)">
            <summary>
            Gets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to get.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`27.Set(System.Int32,`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26)">
            <summary>
            Sets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to set.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
        </member>
        <member name="T:WebApplications.Utilities.List`28">
            <summary>
            A List of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25, T26, T27, T28&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.List`28.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`28"/> class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than 0. </exception>
        </member>
        <member name="M:WebApplications.Utilities.List`28.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21,`22,`23,`24,`25,`26,`27}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`28"/> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.List`28.Add(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.List`28" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`28.Get(System.Int32,`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@)">
            <summary>
            Gets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to get.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`28.Set(System.Int32,`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27)">
            <summary>
            Sets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to set.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
        </member>
        <member name="T:WebApplications.Utilities.List`29">
            <summary>
            A List of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25, T26, T27, T28, Tuple&lt;T29&gt;&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.List`29.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`29"/> class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than 0. </exception>
        </member>
        <member name="M:WebApplications.Utilities.List`29.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21,`22,`23,`24,`25,`26,`27,System.Tuple{`28}}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`29"/> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.List`29.Add(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.List`29" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`29.Get(System.Int32,`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@)">
            <summary>
            Gets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to get.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`29.Set(System.Int32,`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28)">
            <summary>
            Sets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to set.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
        </member>
        <member name="T:WebApplications.Utilities.List`30">
            <summary>
            A List of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25, T26, T27, T28, Tuple&lt;T29, T30&gt;&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.List`30.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`30"/> class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than 0. </exception>
        </member>
        <member name="M:WebApplications.Utilities.List`30.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21,`22,`23,`24,`25,`26,`27,System.Tuple{`28,`29}}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`30"/> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.List`30.Add(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.List`30" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`30.Get(System.Int32,`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@)">
            <summary>
            Gets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to get.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`30.Set(System.Int32,`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29)">
            <summary>
            Sets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to set.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
        </member>
        <member name="T:WebApplications.Utilities.List`31">
            <summary>
            A List of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25, T26, T27, T28, Tuple&lt;T29, T30, T31&gt;&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <typeparam name="T31">The type of item 31.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.List`31.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`31"/> class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than 0. </exception>
        </member>
        <member name="M:WebApplications.Utilities.List`31.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21,`22,`23,`24,`25,`26,`27,System.Tuple{`28,`29,`30}}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`31"/> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.List`31.Add(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.List`31" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`31.Get(System.Int32,`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@)">
            <summary>
            Gets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to get.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`31.Set(System.Int32,`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30)">
            <summary>
            Sets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to set.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
        </member>
        <member name="T:WebApplications.Utilities.List`32">
            <summary>
            A List of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25, T26, T27, T28, Tuple&lt;T29, T30, T31, T32&gt;&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <typeparam name="T31">The type of item 31.</typeparam>
            <typeparam name="T32">The type of item 32.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.List`32.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`32"/> class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than 0. </exception>
        </member>
        <member name="M:WebApplications.Utilities.List`32.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21,`22,`23,`24,`25,`26,`27,System.Tuple{`28,`29,`30,`31}}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`32"/> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.List`32.Add(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30,`31)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.List`32" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`32.Get(System.Int32,`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@,`31@)">
            <summary>
            Gets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to get.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`32.Set(System.Int32,`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30,`31)">
            <summary>
            Sets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to set.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
        </member>
        <member name="T:WebApplications.Utilities.List`33">
            <summary>
            A List of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25, T26, T27, T28, Tuple&lt;T29, T30, T31, T32, T33&gt;&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <typeparam name="T31">The type of item 31.</typeparam>
            <typeparam name="T32">The type of item 32.</typeparam>
            <typeparam name="T33">The type of item 33.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.List`33.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`33"/> class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than 0. </exception>
        </member>
        <member name="M:WebApplications.Utilities.List`33.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21,`22,`23,`24,`25,`26,`27,System.Tuple{`28,`29,`30,`31,`32}}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`33"/> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.List`33.Add(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30,`31,`32)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.List`33" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`33.Get(System.Int32,`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@,`31@,`32@)">
            <summary>
            Gets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to get.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`33.Set(System.Int32,`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30,`31,`32)">
            <summary>
            Sets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to set.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
        </member>
        <member name="T:WebApplications.Utilities.List`34">
            <summary>
            A List of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25, T26, T27, T28, Tuple&lt;T29, T30, T31, T32, T33, T34&gt;&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <typeparam name="T31">The type of item 31.</typeparam>
            <typeparam name="T32">The type of item 32.</typeparam>
            <typeparam name="T33">The type of item 33.</typeparam>
            <typeparam name="T34">The type of item 34.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.List`34.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`34"/> class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than 0. </exception>
        </member>
        <member name="M:WebApplications.Utilities.List`34.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21,`22,`23,`24,`25,`26,`27,System.Tuple{`28,`29,`30,`31,`32,`33}}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`34"/> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.List`34.Add(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30,`31,`32,`33)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.List`34" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
            <param name="item34">Item 34 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`34.Get(System.Int32,`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@,`31@,`32@,`33@)">
            <summary>
            Gets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to get.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
            <param name="item34">Item 34 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`34.Set(System.Int32,`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30,`31,`32,`33)">
            <summary>
            Sets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to set.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
            <param name="item34">Item 34 of the tuple.</param>
        </member>
        <member name="T:WebApplications.Utilities.List`35">
            <summary>
            A List of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25, T26, T27, T28, Tuple&lt;T29, T30, T31, T32, T33, T34, T35&gt;&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <typeparam name="T31">The type of item 31.</typeparam>
            <typeparam name="T32">The type of item 32.</typeparam>
            <typeparam name="T33">The type of item 33.</typeparam>
            <typeparam name="T34">The type of item 34.</typeparam>
            <typeparam name="T35">The type of item 35.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.List`35.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`35"/> class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than 0. </exception>
        </member>
        <member name="M:WebApplications.Utilities.List`35.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21,`22,`23,`24,`25,`26,`27,System.Tuple{`28,`29,`30,`31,`32,`33,`34}}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.List`35"/> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.List`35.Add(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30,`31,`32,`33,`34)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.List`35" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
            <param name="item34">Item 34 of the tuple.</param>
            <param name="item35">Item 35 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`35.Get(System.Int32,`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@,`31@,`32@,`33@,`34@)">
            <summary>
            Gets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to get.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
            <param name="item34">Item 34 of the tuple.</param>
            <param name="item35">Item 35 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.List`35.Set(System.Int32,`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30,`31,`32,`33,`34)">
            <summary>
            Sets the values of the tuple at the specified index.
            </summary>
            <param name="index">The zero-based index of the tuple to set.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
            <param name="item34">Item 34 of the tuple.</param>
            <param name="item35">Item 35 of the tuple.</param>
        </member>
        <member name="T:WebApplications.Utilities.Queue`2">
            <summary>
            A queue of <c>Tuple&lt;T1, T2&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Queue`2.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`2"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`2.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`2"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`2.Enqueue(`0,`1)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`2" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`2.Dequeue(`0@,`1@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`2"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`2.Peek(`0@,`1@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`2"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`2.TryDequeue(`0@,`1@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`2"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Queue`2.TryPeek(`0@,`1@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`2"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Queue`3">
            <summary>
            A queue of <c>Tuple&lt;T1, T2, T3&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Queue`3.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`3"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`3.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`3"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`3.Enqueue(`0,`1,`2)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`3" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`3.Dequeue(`0@,`1@,`2@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`3"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`3.Peek(`0@,`1@,`2@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`3"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`3.TryDequeue(`0@,`1@,`2@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`3"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Queue`3.TryPeek(`0@,`1@,`2@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`3"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Queue`4">
            <summary>
            A queue of <c>Tuple&lt;T1, T2, T3, T4&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Queue`4.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`4"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`4.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`4"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`4.Enqueue(`0,`1,`2,`3)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`4" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`4.Dequeue(`0@,`1@,`2@,`3@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`4"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`4.Peek(`0@,`1@,`2@,`3@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`4"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`4.TryDequeue(`0@,`1@,`2@,`3@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`4"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Queue`4.TryPeek(`0@,`1@,`2@,`3@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`4"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Queue`5">
            <summary>
            A queue of <c>Tuple&lt;T1, T2, T3, T4, T5&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Queue`5.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`5"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`5.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`5"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`5.Enqueue(`0,`1,`2,`3,`4)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`5" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`5.Dequeue(`0@,`1@,`2@,`3@,`4@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`5"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`5.Peek(`0@,`1@,`2@,`3@,`4@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`5"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`5.TryDequeue(`0@,`1@,`2@,`3@,`4@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`5"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Queue`5.TryPeek(`0@,`1@,`2@,`3@,`4@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`5"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Queue`6">
            <summary>
            A queue of <c>Tuple&lt;T1, T2, T3, T4, T5, T6&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Queue`6.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`6"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`6.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`6"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`6.Enqueue(`0,`1,`2,`3,`4,`5)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`6" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`6.Dequeue(`0@,`1@,`2@,`3@,`4@,`5@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`6"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`6.Peek(`0@,`1@,`2@,`3@,`4@,`5@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`6"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`6.TryDequeue(`0@,`1@,`2@,`3@,`4@,`5@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`6"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Queue`6.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`6"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Queue`7">
            <summary>
            A queue of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Queue`7.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`7"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`7.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`7"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`7.Enqueue(`0,`1,`2,`3,`4,`5,`6)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`7" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`7.Dequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`7"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`7.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`7"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`7.TryDequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`7"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Queue`7.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`7"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Queue`8">
            <summary>
            A queue of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Queue`8.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`8"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`8.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`8"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`8.Enqueue(`0,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`8" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`8.Dequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`8"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`8.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`8"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`8.TryDequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`8"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Queue`8.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`8"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Queue`9">
            <summary>
            A queue of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Queue`9.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`9"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`9.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`9"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`9.Enqueue(`0,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`9" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`9.Dequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`9"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`9.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`9"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`9.TryDequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`9"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Queue`9.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`9"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Queue`10">
            <summary>
            A queue of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Queue`10.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`10"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`10.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`10"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`10.Enqueue(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`10" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`10.Dequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`10"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`10.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`10"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`10.TryDequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`10"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Queue`10.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`10"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Queue`11">
            <summary>
            A queue of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Queue`11.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`11"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`11.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`11"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`11.Enqueue(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`11" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`11.Dequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`11"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`11.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`11"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`11.TryDequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`11"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Queue`11.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`11"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Queue`12">
            <summary>
            A queue of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Queue`12.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`12"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`12.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`12"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`12.Enqueue(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`12" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`12.Dequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`12"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`12.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`12"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`12.TryDequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`12"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Queue`12.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`12"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Queue`13">
            <summary>
            A queue of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Queue`13.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`13"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`13.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`13"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`13.Enqueue(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`13" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`13.Dequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`13"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`13.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`13"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`13.TryDequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`13"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Queue`13.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`13"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Queue`14">
            <summary>
            A queue of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Queue`14.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`14"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`14.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`14"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`14.Enqueue(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`14" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`14.Dequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`14"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`14.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`14"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`14.TryDequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`14"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Queue`14.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`14"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Queue`15">
            <summary>
            A queue of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Queue`15.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`15"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`15.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`15"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`15.Enqueue(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`15" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`15.Dequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`15"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`15.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`15"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`15.TryDequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`15"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Queue`15.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`15"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Queue`16">
            <summary>
            A queue of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Queue`16.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`16"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`16.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`16"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`16.Enqueue(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`16" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`16.Dequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`16"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`16.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`16"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`16.TryDequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`16"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Queue`16.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`16"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Queue`17">
            <summary>
            A queue of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Queue`17.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`17"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`17.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`17"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`17.Enqueue(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`17" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`17.Dequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`17"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`17.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`17"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`17.TryDequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`17"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Queue`17.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`17"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Queue`18">
            <summary>
            A queue of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Queue`18.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`18"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`18.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`18"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`18.Enqueue(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`18" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`18.Dequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`18"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`18.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`18"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`18.TryDequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`18"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Queue`18.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`18"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Queue`19">
            <summary>
            A queue of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Queue`19.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`19"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`19.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`19"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`19.Enqueue(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`19" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`19.Dequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`19"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`19.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`19"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`19.TryDequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`19"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Queue`19.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`19"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Queue`20">
            <summary>
            A queue of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Queue`20.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`20"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`20.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`20"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`20.Enqueue(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`20" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`20.Dequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`20"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`20.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`20"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`20.TryDequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`20"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Queue`20.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`20"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Queue`21">
            <summary>
            A queue of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Queue`21.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`21"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`21.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`21"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`21.Enqueue(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`21" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`21.Dequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`21"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`21.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`21"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`21.TryDequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`21"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Queue`21.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`21"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Queue`22">
            <summary>
            A queue of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Queue`22.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`22"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`22.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`22"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`22.Enqueue(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`22" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`22.Dequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`22"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`22.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`22"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`22.TryDequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`22"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Queue`22.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`22"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Queue`23">
            <summary>
            A queue of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Queue`23.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`23"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`23.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21,`22}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`23"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`23.Enqueue(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`23" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`23.Dequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`23"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`23.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`23"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`23.TryDequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`23"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Queue`23.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`23"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Queue`24">
            <summary>
            A queue of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Queue`24.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`24"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`24.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21,`22,`23}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`24"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`24.Enqueue(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`24" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`24.Dequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`24"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`24.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`24"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`24.TryDequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`24"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Queue`24.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`24"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Queue`25">
            <summary>
            A queue of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Queue`25.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`25"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`25.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21,`22,`23,`24}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`25"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`25.Enqueue(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`25" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`25.Dequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`25"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`25.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`25"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`25.TryDequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`25"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Queue`25.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`25"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Queue`26">
            <summary>
            A queue of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25, T26&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Queue`26.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`26"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`26.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21,`22,`23,`24,`25}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`26"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`26.Enqueue(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`26" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`26.Dequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`26"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`26.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`26"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`26.TryDequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`26"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Queue`26.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`26"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Queue`27">
            <summary>
            A queue of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25, T26, T27&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Queue`27.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`27"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`27.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21,`22,`23,`24,`25,`26}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`27"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`27.Enqueue(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`27" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`27.Dequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`27"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`27.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`27"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`27.TryDequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`27"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Queue`27.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`27"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Queue`28">
            <summary>
            A queue of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25, T26, T27, T28&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Queue`28.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`28"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`28.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21,`22,`23,`24,`25,`26,`27}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`28"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`28.Enqueue(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`28" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`28.Dequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`28"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`28.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`28"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`28.TryDequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`28"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Queue`28.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`28"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Queue`29">
            <summary>
            A queue of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25, T26, T27, T28, Tuple&lt;T29&gt;&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Queue`29.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`29"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`29.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21,`22,`23,`24,`25,`26,`27,System.Tuple{`28}}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`29"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`29.Enqueue(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`29" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`29.Dequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`29"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`29.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`29"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`29.TryDequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`29"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Queue`29.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`29"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Queue`30">
            <summary>
            A queue of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25, T26, T27, T28, Tuple&lt;T29, T30&gt;&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Queue`30.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`30"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`30.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21,`22,`23,`24,`25,`26,`27,System.Tuple{`28,`29}}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`30"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`30.Enqueue(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`30" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`30.Dequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`30"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`30.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`30"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`30.TryDequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`30"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Queue`30.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`30"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Queue`31">
            <summary>
            A queue of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25, T26, T27, T28, Tuple&lt;T29, T30, T31&gt;&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <typeparam name="T31">The type of item 31.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Queue`31.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`31"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`31.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21,`22,`23,`24,`25,`26,`27,System.Tuple{`28,`29,`30}}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`31"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`31.Enqueue(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`31" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`31.Dequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`31"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`31.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`31"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`31.TryDequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`31"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Queue`31.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`31"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Queue`32">
            <summary>
            A queue of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25, T26, T27, T28, Tuple&lt;T29, T30, T31, T32&gt;&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <typeparam name="T31">The type of item 31.</typeparam>
            <typeparam name="T32">The type of item 32.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Queue`32.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`32"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`32.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21,`22,`23,`24,`25,`26,`27,System.Tuple{`28,`29,`30,`31}}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`32"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`32.Enqueue(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30,`31)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`32" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`32.Dequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@,`31@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`32"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`32.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@,`31@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`32"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`32.TryDequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@,`31@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`32"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Queue`32.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@,`31@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`32"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Queue`33">
            <summary>
            A queue of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25, T26, T27, T28, Tuple&lt;T29, T30, T31, T32, T33&gt;&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <typeparam name="T31">The type of item 31.</typeparam>
            <typeparam name="T32">The type of item 32.</typeparam>
            <typeparam name="T33">The type of item 33.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Queue`33.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`33"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`33.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21,`22,`23,`24,`25,`26,`27,System.Tuple{`28,`29,`30,`31,`32}}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`33"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`33.Enqueue(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30,`31,`32)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`33" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`33.Dequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@,`31@,`32@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`33"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`33.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@,`31@,`32@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`33"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`33.TryDequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@,`31@,`32@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`33"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Queue`33.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@,`31@,`32@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`33"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Queue`34">
            <summary>
            A queue of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25, T26, T27, T28, Tuple&lt;T29, T30, T31, T32, T33, T34&gt;&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <typeparam name="T31">The type of item 31.</typeparam>
            <typeparam name="T32">The type of item 32.</typeparam>
            <typeparam name="T33">The type of item 33.</typeparam>
            <typeparam name="T34">The type of item 34.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Queue`34.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`34"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`34.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21,`22,`23,`24,`25,`26,`27,System.Tuple{`28,`29,`30,`31,`32,`33}}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`34"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`34.Enqueue(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30,`31,`32,`33)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`34" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
            <param name="item34">Item 34 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`34.Dequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@,`31@,`32@,`33@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`34"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
            <param name="item34">Item 34 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`34.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@,`31@,`32@,`33@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`34"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
            <param name="item34">Item 34 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`34.TryDequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@,`31@,`32@,`33@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`34"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
            <param name="item34">Item 34 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Queue`34.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@,`31@,`32@,`33@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`34"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
            <param name="item34">Item 34 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Queue`35">
            <summary>
            A queue of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25, T26, T27, T28, Tuple&lt;T29, T30, T31, T32, T33, T34, T35&gt;&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <typeparam name="T31">The type of item 31.</typeparam>
            <typeparam name="T32">The type of item 32.</typeparam>
            <typeparam name="T33">The type of item 33.</typeparam>
            <typeparam name="T34">The type of item 34.</typeparam>
            <typeparam name="T35">The type of item 35.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Queue`35.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`35"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`35.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21,`22,`23,`24,`25,`26,`27,System.Tuple{`28,`29,`30,`31,`32,`33,`34}}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Queue`35"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Queue`35.Enqueue(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30,`31,`32,`33,`34)">
            <summary>
            Inserts an object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`35" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
            <param name="item34">Item 34 of the tuple.</param>
            <param name="item35">Item 35 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`35.Dequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@,`31@,`32@,`33@,`34@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`35"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
            <param name="item34">Item 34 of the tuple.</param>
            <param name="item35">Item 35 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`35.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@,`31@,`32@,`33@,`34@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`35"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
            <param name="item34">Item 34 of the tuple.</param>
            <param name="item35">Item 35 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Queue`35.TryDequeue(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@,`31@,`32@,`33@,`34@)">
            <summary>
            Removes and returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`35"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
            <param name="item34">Item 34 of the tuple.</param>
            <param name="item35">Item 35 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Queue`35.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@,`31@,`32@,`33@,`34@)">
            <summary>
            Returns the object at the beginning of the <see cref="T:WebApplications.Utilities.Queue`35"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
            <param name="item34">Item 34 of the tuple.</param>
            <param name="item35">Item 35 of the tuple.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.ReferenceComparer`1">
            <summary>
            A reference equality comparer.
            </summary>
            <remarks>This class uses <see cref="M:System.Object.ReferenceEquals(System.Object,System.Object)"/> to determain reference equality and <see cref="M:System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode(System.Object)"/> for getting the hash code.</remarks>
            <typeparam name="T">The type of the objects to compare.</typeparam>
        </member>
        <member name="F:WebApplications.Utilities.ReferenceComparer`1.Default">
            <summary>
            The default comparer.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.ReferenceComparer`1.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:WebApplications.Utilities.ReferenceComparer`1"/> class from being created.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.ReferenceComparer`1.Equals(`0,`0)">
            <summary>
            Determines whether the specified objects are equal.
            </summary>
            <param name="x">The first object of type <typeparamref name="T" /> to compare.</param>
            <param name="y">The second object of type <typeparamref name="T" /> to compare.</param>
            <returns>
            true if the specified objects are reference equal; otherwise, false.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ReferenceComparer`1.GetHashCode(`0)">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <param name="obj">The object.</param>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:WebApplications.Utilities.Stack`2">
            <summary>
            A stack of <c>Tuple&lt;T1, T2&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Stack`2.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`2"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`2.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`2"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`2.Push(`0,`1)">
            <summary>
            Inserts an object at the top of the <see cref="T:WebApplications.Utilities.Stack`2" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`2.Pop(`0@,`1@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`2"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`2.Peek(`0@,`1@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`2"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`2.TryPop(`0@,`1@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`2"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Stack`2.TryPeek(`0@,`1@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`2"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Stack`3">
            <summary>
            A stack of <c>Tuple&lt;T1, T2, T3&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Stack`3.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`3"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`3.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`3"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`3.Push(`0,`1,`2)">
            <summary>
            Inserts an object at the top of the <see cref="T:WebApplications.Utilities.Stack`3" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`3.Pop(`0@,`1@,`2@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`3"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`3.Peek(`0@,`1@,`2@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`3"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`3.TryPop(`0@,`1@,`2@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`3"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Stack`3.TryPeek(`0@,`1@,`2@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`3"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Stack`4">
            <summary>
            A stack of <c>Tuple&lt;T1, T2, T3, T4&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Stack`4.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`4"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`4.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`4"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`4.Push(`0,`1,`2,`3)">
            <summary>
            Inserts an object at the top of the <see cref="T:WebApplications.Utilities.Stack`4" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`4.Pop(`0@,`1@,`2@,`3@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`4"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`4.Peek(`0@,`1@,`2@,`3@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`4"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`4.TryPop(`0@,`1@,`2@,`3@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`4"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Stack`4.TryPeek(`0@,`1@,`2@,`3@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`4"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Stack`5">
            <summary>
            A stack of <c>Tuple&lt;T1, T2, T3, T4, T5&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Stack`5.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`5"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`5.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`5"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`5.Push(`0,`1,`2,`3,`4)">
            <summary>
            Inserts an object at the top of the <see cref="T:WebApplications.Utilities.Stack`5" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`5.Pop(`0@,`1@,`2@,`3@,`4@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`5"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`5.Peek(`0@,`1@,`2@,`3@,`4@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`5"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`5.TryPop(`0@,`1@,`2@,`3@,`4@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`5"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Stack`5.TryPeek(`0@,`1@,`2@,`3@,`4@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`5"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Stack`6">
            <summary>
            A stack of <c>Tuple&lt;T1, T2, T3, T4, T5, T6&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Stack`6.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`6"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`6.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`6"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`6.Push(`0,`1,`2,`3,`4,`5)">
            <summary>
            Inserts an object at the top of the <see cref="T:WebApplications.Utilities.Stack`6" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`6.Pop(`0@,`1@,`2@,`3@,`4@,`5@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`6"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`6.Peek(`0@,`1@,`2@,`3@,`4@,`5@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`6"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`6.TryPop(`0@,`1@,`2@,`3@,`4@,`5@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`6"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Stack`6.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`6"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Stack`7">
            <summary>
            A stack of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Stack`7.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`7"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`7.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`7"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`7.Push(`0,`1,`2,`3,`4,`5,`6)">
            <summary>
            Inserts an object at the top of the <see cref="T:WebApplications.Utilities.Stack`7" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`7.Pop(`0@,`1@,`2@,`3@,`4@,`5@,`6@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`7"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`7.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`7"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`7.TryPop(`0@,`1@,`2@,`3@,`4@,`5@,`6@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`7"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Stack`7.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`7"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Stack`8">
            <summary>
            A stack of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Stack`8.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`8"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`8.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`8"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`8.Push(`0,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
            Inserts an object at the top of the <see cref="T:WebApplications.Utilities.Stack`8" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`8.Pop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`8"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`8.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`8"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`8.TryPop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`8"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Stack`8.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`8"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Stack`9">
            <summary>
            A stack of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Stack`9.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`9"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`9.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`9"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`9.Push(`0,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
            Inserts an object at the top of the <see cref="T:WebApplications.Utilities.Stack`9" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`9.Pop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`9"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`9.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`9"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`9.TryPop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`9"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Stack`9.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`9"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Stack`10">
            <summary>
            A stack of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Stack`10.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`10"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`10.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`10"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`10.Push(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
            Inserts an object at the top of the <see cref="T:WebApplications.Utilities.Stack`10" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`10.Pop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`10"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`10.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`10"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`10.TryPop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`10"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Stack`10.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`10"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Stack`11">
            <summary>
            A stack of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Stack`11.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`11"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`11.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`11"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`11.Push(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
            Inserts an object at the top of the <see cref="T:WebApplications.Utilities.Stack`11" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`11.Pop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`11"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`11.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`11"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`11.TryPop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`11"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Stack`11.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`11"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Stack`12">
            <summary>
            A stack of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Stack`12.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`12"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`12.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`12"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`12.Push(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
            Inserts an object at the top of the <see cref="T:WebApplications.Utilities.Stack`12" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`12.Pop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`12"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`12.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`12"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`12.TryPop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`12"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Stack`12.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`12"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Stack`13">
            <summary>
            A stack of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Stack`13.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`13"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`13.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`13"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`13.Push(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
            Inserts an object at the top of the <see cref="T:WebApplications.Utilities.Stack`13" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`13.Pop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`13"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`13.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`13"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`13.TryPop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`13"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Stack`13.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`13"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Stack`14">
            <summary>
            A stack of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Stack`14.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`14"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`14.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`14"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`14.Push(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
            Inserts an object at the top of the <see cref="T:WebApplications.Utilities.Stack`14" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`14.Pop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`14"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`14.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`14"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`14.TryPop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`14"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Stack`14.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`14"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Stack`15">
            <summary>
            A stack of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Stack`15.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`15"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`15.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`15"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`15.Push(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
            Inserts an object at the top of the <see cref="T:WebApplications.Utilities.Stack`15" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`15.Pop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`15"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`15.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`15"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`15.TryPop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`15"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Stack`15.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`15"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Stack`16">
            <summary>
            A stack of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Stack`16.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`16"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`16.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`16"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`16.Push(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
            <summary>
            Inserts an object at the top of the <see cref="T:WebApplications.Utilities.Stack`16" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`16.Pop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`16"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`16.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`16"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`16.TryPop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`16"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Stack`16.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`16"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Stack`17">
            <summary>
            A stack of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Stack`17.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`17"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`17.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`17"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`17.Push(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16)">
            <summary>
            Inserts an object at the top of the <see cref="T:WebApplications.Utilities.Stack`17" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`17.Pop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`17"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`17.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`17"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`17.TryPop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`17"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Stack`17.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`17"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Stack`18">
            <summary>
            A stack of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Stack`18.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`18"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`18.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`18"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`18.Push(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17)">
            <summary>
            Inserts an object at the top of the <see cref="T:WebApplications.Utilities.Stack`18" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`18.Pop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`18"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`18.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`18"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`18.TryPop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`18"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Stack`18.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`18"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Stack`19">
            <summary>
            A stack of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Stack`19.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`19"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`19.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`19"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`19.Push(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18)">
            <summary>
            Inserts an object at the top of the <see cref="T:WebApplications.Utilities.Stack`19" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`19.Pop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`19"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`19.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`19"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`19.TryPop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`19"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Stack`19.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`19"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Stack`20">
            <summary>
            A stack of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Stack`20.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`20"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`20.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`20"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`20.Push(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19)">
            <summary>
            Inserts an object at the top of the <see cref="T:WebApplications.Utilities.Stack`20" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`20.Pop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`20"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`20.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`20"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`20.TryPop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`20"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Stack`20.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`20"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Stack`21">
            <summary>
            A stack of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Stack`21.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`21"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`21.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`21"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`21.Push(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20)">
            <summary>
            Inserts an object at the top of the <see cref="T:WebApplications.Utilities.Stack`21" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`21.Pop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`21"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`21.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`21"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`21.TryPop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`21"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Stack`21.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`21"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Stack`22">
            <summary>
            A stack of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Stack`22.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`22"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`22.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`22"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`22.Push(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21)">
            <summary>
            Inserts an object at the top of the <see cref="T:WebApplications.Utilities.Stack`22" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`22.Pop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`22"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`22.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`22"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`22.TryPop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`22"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Stack`22.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`22"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Stack`23">
            <summary>
            A stack of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Stack`23.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`23"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`23.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21,`22}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`23"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`23.Push(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22)">
            <summary>
            Inserts an object at the top of the <see cref="T:WebApplications.Utilities.Stack`23" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`23.Pop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`23"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`23.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`23"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`23.TryPop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`23"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Stack`23.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`23"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Stack`24">
            <summary>
            A stack of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Stack`24.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`24"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`24.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21,`22,`23}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`24"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`24.Push(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23)">
            <summary>
            Inserts an object at the top of the <see cref="T:WebApplications.Utilities.Stack`24" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`24.Pop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`24"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`24.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`24"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`24.TryPop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`24"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Stack`24.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`24"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Stack`25">
            <summary>
            A stack of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Stack`25.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`25"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`25.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21,`22,`23,`24}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`25"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`25.Push(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24)">
            <summary>
            Inserts an object at the top of the <see cref="T:WebApplications.Utilities.Stack`25" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`25.Pop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`25"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`25.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`25"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`25.TryPop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`25"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Stack`25.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`25"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Stack`26">
            <summary>
            A stack of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25, T26&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Stack`26.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`26"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`26.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21,`22,`23,`24,`25}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`26"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`26.Push(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25)">
            <summary>
            Inserts an object at the top of the <see cref="T:WebApplications.Utilities.Stack`26" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`26.Pop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`26"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`26.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`26"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`26.TryPop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`26"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Stack`26.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`26"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Stack`27">
            <summary>
            A stack of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25, T26, T27&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Stack`27.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`27"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`27.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21,`22,`23,`24,`25,`26}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`27"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`27.Push(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26)">
            <summary>
            Inserts an object at the top of the <see cref="T:WebApplications.Utilities.Stack`27" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`27.Pop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`27"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`27.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`27"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`27.TryPop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`27"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Stack`27.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`27"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Stack`28">
            <summary>
            A stack of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25, T26, T27, T28&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Stack`28.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`28"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`28.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21,`22,`23,`24,`25,`26,`27}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`28"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`28.Push(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27)">
            <summary>
            Inserts an object at the top of the <see cref="T:WebApplications.Utilities.Stack`28" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`28.Pop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`28"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`28.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`28"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`28.TryPop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`28"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Stack`28.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`28"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Stack`29">
            <summary>
            A stack of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25, T26, T27, T28, Tuple&lt;T29&gt;&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Stack`29.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`29"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`29.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21,`22,`23,`24,`25,`26,`27,System.Tuple{`28}}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`29"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`29.Push(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28)">
            <summary>
            Inserts an object at the top of the <see cref="T:WebApplications.Utilities.Stack`29" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`29.Pop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`29"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`29.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`29"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`29.TryPop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`29"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Stack`29.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`29"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Stack`30">
            <summary>
            A stack of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25, T26, T27, T28, Tuple&lt;T29, T30&gt;&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Stack`30.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`30"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`30.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21,`22,`23,`24,`25,`26,`27,System.Tuple{`28,`29}}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`30"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`30.Push(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29)">
            <summary>
            Inserts an object at the top of the <see cref="T:WebApplications.Utilities.Stack`30" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`30.Pop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`30"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`30.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`30"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`30.TryPop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`30"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Stack`30.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`30"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Stack`31">
            <summary>
            A stack of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25, T26, T27, T28, Tuple&lt;T29, T30, T31&gt;&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <typeparam name="T31">The type of item 31.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Stack`31.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`31"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`31.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21,`22,`23,`24,`25,`26,`27,System.Tuple{`28,`29,`30}}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`31"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`31.Push(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30)">
            <summary>
            Inserts an object at the top of the <see cref="T:WebApplications.Utilities.Stack`31" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`31.Pop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`31"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`31.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`31"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`31.TryPop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`31"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Stack`31.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`31"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Stack`32">
            <summary>
            A stack of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25, T26, T27, T28, Tuple&lt;T29, T30, T31, T32&gt;&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <typeparam name="T31">The type of item 31.</typeparam>
            <typeparam name="T32">The type of item 32.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Stack`32.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`32"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`32.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21,`22,`23,`24,`25,`26,`27,System.Tuple{`28,`29,`30,`31}}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`32"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`32.Push(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30,`31)">
            <summary>
            Inserts an object at the top of the <see cref="T:WebApplications.Utilities.Stack`32" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`32.Pop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@,`31@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`32"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`32.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@,`31@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`32"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`32.TryPop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@,`31@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`32"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Stack`32.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@,`31@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`32"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Stack`33">
            <summary>
            A stack of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25, T26, T27, T28, Tuple&lt;T29, T30, T31, T32, T33&gt;&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <typeparam name="T31">The type of item 31.</typeparam>
            <typeparam name="T32">The type of item 32.</typeparam>
            <typeparam name="T33">The type of item 33.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Stack`33.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`33"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`33.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21,`22,`23,`24,`25,`26,`27,System.Tuple{`28,`29,`30,`31,`32}}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`33"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`33.Push(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30,`31,`32)">
            <summary>
            Inserts an object at the top of the <see cref="T:WebApplications.Utilities.Stack`33" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`33.Pop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@,`31@,`32@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`33"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`33.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@,`31@,`32@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`33"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`33.TryPop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@,`31@,`32@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`33"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Stack`33.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@,`31@,`32@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`33"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Stack`34">
            <summary>
            A stack of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25, T26, T27, T28, Tuple&lt;T29, T30, T31, T32, T33, T34&gt;&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <typeparam name="T31">The type of item 31.</typeparam>
            <typeparam name="T32">The type of item 32.</typeparam>
            <typeparam name="T33">The type of item 33.</typeparam>
            <typeparam name="T34">The type of item 34.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Stack`34.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`34"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`34.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21,`22,`23,`24,`25,`26,`27,System.Tuple{`28,`29,`30,`31,`32,`33}}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`34"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`34.Push(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30,`31,`32,`33)">
            <summary>
            Inserts an object at the top of the <see cref="T:WebApplications.Utilities.Stack`34" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
            <param name="item34">Item 34 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`34.Pop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@,`31@,`32@,`33@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`34"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
            <param name="item34">Item 34 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`34.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@,`31@,`32@,`33@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`34"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
            <param name="item34">Item 34 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`34.TryPop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@,`31@,`32@,`33@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`34"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
            <param name="item34">Item 34 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Stack`34.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@,`31@,`32@,`33@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`34"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
            <param name="item34">Item 34 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Stack`35">
            <summary>
            A stack of <c>Tuple&lt;T1, T2, T3, T4, T5, T6, T7, Tuple&lt;T8, T9, T10, T11, T12, T13, T14, Tuple&lt;T15, T16, T17, T18, T19, T20, T21, Tuple&lt;T22, T23, T24, T25, T26, T27, T28, Tuple&lt;T29, T30, T31, T32, T33, T34, T35&gt;&gt;&gt;&gt;&gt;</c>.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <typeparam name="T31">The type of item 31.</typeparam>
            <typeparam name="T32">The type of item 32.</typeparam>
            <typeparam name="T33">The type of item 33.</typeparam>
            <typeparam name="T34">The type of item 34.</typeparam>
            <typeparam name="T35">The type of item 35.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.Stack`35.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`35"/> class that is empty 
            and has the specified initial capacity or the default initial capacity, whichever is greater.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`35.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1,`2,`3,`4,`5,`6,System.Tuple{`7,`8,`9,`10,`11,`12,`13,System.Tuple{`14,`15,`16,`17,`18,`19,`20,System.Tuple{`21,`22,`23,`24,`25,`26,`27,System.Tuple{`28,`29,`30,`31,`32,`33,`34}}}}}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Stack`35"/> class that contains elements copied 
            from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection to copy elements from.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Stack`35.Push(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29,`30,`31,`32,`33,`34)">
            <summary>
            Inserts an object at the top of the <see cref="T:WebApplications.Utilities.Stack`35" />.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
            <param name="item34">Item 34 of the tuple.</param>
            <param name="item35">Item 35 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`35.Pop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@,`31@,`32@,`33@,`34@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`35"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
            <param name="item34">Item 34 of the tuple.</param>
            <param name="item35">Item 35 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`35.Peek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@,`31@,`32@,`33@,`34@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`35"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
            <param name="item34">Item 34 of the tuple.</param>
            <param name="item35">Item 35 of the tuple.</param>
        </member>
        <member name="M:WebApplications.Utilities.Stack`35.TryPop(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@,`31@,`32@,`33@,`34@)">
            <summary>
            Removes and returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`35"/>.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
            <param name="item34">Item 34 of the tuple.</param>
            <param name="item35">Item 35 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Stack`35.TryPeek(`0@,`1@,`2@,`3@,`4@,`5@,`6@,`7@,`8@,`9@,`10@,`11@,`12@,`13@,`14@,`15@,`16@,`17@,`18@,`19@,`20@,`21@,`22@,`23@,`24@,`25@,`26@,`27@,`28@,`29@,`30@,`31@,`32@,`33@,`34@)">
            <summary>
            Returns the object at the top of the <see cref="T:WebApplications.Utilities.Stack`35"/> without removing it.
            </summary>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
            <param name="item34">Item 34 of the tuple.</param>
            <param name="item35">Item 35 of the tuple.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.ExtendedTuple">
            <summary>
            Extension methods for tuples.
            </summary>
            <summary>
              Extension methods for <see cref="T:System.Tuple">tuples</see>.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Create``1(``0)">
            <summary>
            Used to create a tuple in nested format.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <param name="item1">Item 1 of the tuple.</param>
            <returns>A tuple with 1 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.ToTuple``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Used to create an enumeration of tuples from an enumeration of objects, by specifying how each item is extracted.
            </summary>
            <typeparam name="TInput">The input type.</typeparam>
            <typeparam name="T1">The type of item 1.</typeparam>
            <param name="inputEnumeration">The enumeration of inputs.</param>
            <param name="func1">Function that returns item 1 of the tuple.</param>
            <returns>A tuple with 1 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Decompose``1(System.Tuple{``0},``0@)">
            <summary>
            Decomposes the tuple into individual values.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <param name="tuple">The tuple to decompose.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <returns>The <paramref name="tuple" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Create``2(``0,``1)">
            <summary>
            Used to create a tuple in nested format.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <returns>A tuple with 2 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.ToTuple``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
            <summary>
            Used to create an enumeration of tuples from an enumeration of objects, by specifying how each item is extracted.
            </summary>
            <typeparam name="TInput">The input type.</typeparam>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <param name="inputEnumeration">The enumeration of inputs.</param>
            <param name="func1">Function that returns item 1 of the tuple.</param>
            <param name="func2">Function that returns item 2 of the tuple.</param>
            <returns>A tuple with 2 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Decompose``2(System.Tuple{``0,``1},``0@,``1@)">
            <summary>
            Decomposes the tuple into individual values.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <param name="tuple">The tuple to decompose.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <returns>The <paramref name="tuple" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Create``3(``0,``1,``2)">
            <summary>
            Used to create a tuple in nested format.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <returns>A tuple with 3 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.ToTuple``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,``3})">
            <summary>
            Used to create an enumeration of tuples from an enumeration of objects, by specifying how each item is extracted.
            </summary>
            <typeparam name="TInput">The input type.</typeparam>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <param name="inputEnumeration">The enumeration of inputs.</param>
            <param name="func1">Function that returns item 1 of the tuple.</param>
            <param name="func2">Function that returns item 2 of the tuple.</param>
            <param name="func3">Function that returns item 3 of the tuple.</param>
            <returns>A tuple with 3 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Decompose``3(System.Tuple{``0,``1,``2},``0@,``1@,``2@)">
            <summary>
            Decomposes the tuple into individual values.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <param name="tuple">The tuple to decompose.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <returns>The <paramref name="tuple" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Create``4(``0,``1,``2,``3)">
            <summary>
            Used to create a tuple in nested format.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <returns>A tuple with 4 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.ToTuple``5(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,``3},System.Func{``0,``4})">
            <summary>
            Used to create an enumeration of tuples from an enumeration of objects, by specifying how each item is extracted.
            </summary>
            <typeparam name="TInput">The input type.</typeparam>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <param name="inputEnumeration">The enumeration of inputs.</param>
            <param name="func1">Function that returns item 1 of the tuple.</param>
            <param name="func2">Function that returns item 2 of the tuple.</param>
            <param name="func3">Function that returns item 3 of the tuple.</param>
            <param name="func4">Function that returns item 4 of the tuple.</param>
            <returns>A tuple with 4 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Decompose``4(System.Tuple{``0,``1,``2,``3},``0@,``1@,``2@,``3@)">
            <summary>
            Decomposes the tuple into individual values.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <param name="tuple">The tuple to decompose.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <returns>The <paramref name="tuple" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Create``5(``0,``1,``2,``3,``4)">
            <summary>
            Used to create a tuple in nested format.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <returns>A tuple with 5 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.ToTuple``6(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,``3},System.Func{``0,``4},System.Func{``0,``5})">
            <summary>
            Used to create an enumeration of tuples from an enumeration of objects, by specifying how each item is extracted.
            </summary>
            <typeparam name="TInput">The input type.</typeparam>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <param name="inputEnumeration">The enumeration of inputs.</param>
            <param name="func1">Function that returns item 1 of the tuple.</param>
            <param name="func2">Function that returns item 2 of the tuple.</param>
            <param name="func3">Function that returns item 3 of the tuple.</param>
            <param name="func4">Function that returns item 4 of the tuple.</param>
            <param name="func5">Function that returns item 5 of the tuple.</param>
            <returns>A tuple with 5 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Decompose``5(System.Tuple{``0,``1,``2,``3,``4},``0@,``1@,``2@,``3@,``4@)">
            <summary>
            Decomposes the tuple into individual values.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <param name="tuple">The tuple to decompose.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <returns>The <paramref name="tuple" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Create``6(``0,``1,``2,``3,``4,``5)">
            <summary>
            Used to create a tuple in nested format.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <returns>A tuple with 6 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.ToTuple``7(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,``3},System.Func{``0,``4},System.Func{``0,``5},System.Func{``0,``6})">
            <summary>
            Used to create an enumeration of tuples from an enumeration of objects, by specifying how each item is extracted.
            </summary>
            <typeparam name="TInput">The input type.</typeparam>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <param name="inputEnumeration">The enumeration of inputs.</param>
            <param name="func1">Function that returns item 1 of the tuple.</param>
            <param name="func2">Function that returns item 2 of the tuple.</param>
            <param name="func3">Function that returns item 3 of the tuple.</param>
            <param name="func4">Function that returns item 4 of the tuple.</param>
            <param name="func5">Function that returns item 5 of the tuple.</param>
            <param name="func6">Function that returns item 6 of the tuple.</param>
            <returns>A tuple with 6 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Decompose``6(System.Tuple{``0,``1,``2,``3,``4,``5},``0@,``1@,``2@,``3@,``4@,``5@)">
            <summary>
            Decomposes the tuple into individual values.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <param name="tuple">The tuple to decompose.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <returns>The <paramref name="tuple" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Create``7(``0,``1,``2,``3,``4,``5,``6)">
            <summary>
            Used to create a tuple in nested format.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <returns>A tuple with 7 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.ToTuple``8(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,``3},System.Func{``0,``4},System.Func{``0,``5},System.Func{``0,``6},System.Func{``0,``7})">
            <summary>
            Used to create an enumeration of tuples from an enumeration of objects, by specifying how each item is extracted.
            </summary>
            <typeparam name="TInput">The input type.</typeparam>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <param name="inputEnumeration">The enumeration of inputs.</param>
            <param name="func1">Function that returns item 1 of the tuple.</param>
            <param name="func2">Function that returns item 2 of the tuple.</param>
            <param name="func3">Function that returns item 3 of the tuple.</param>
            <param name="func4">Function that returns item 4 of the tuple.</param>
            <param name="func5">Function that returns item 5 of the tuple.</param>
            <param name="func6">Function that returns item 6 of the tuple.</param>
            <param name="func7">Function that returns item 7 of the tuple.</param>
            <returns>A tuple with 7 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Decompose``7(System.Tuple{``0,``1,``2,``3,``4,``5,``6},``0@,``1@,``2@,``3@,``4@,``5@,``6@)">
            <summary>
            Decomposes the tuple into individual values.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <param name="tuple">The tuple to decompose.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <returns>The <paramref name="tuple" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)">
            <summary>
            Used to create a tuple in nested format.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <returns>A tuple with 8 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.ToTuple``9(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,``3},System.Func{``0,``4},System.Func{``0,``5},System.Func{``0,``6},System.Func{``0,``7},System.Func{``0,``8})">
            <summary>
            Used to create an enumeration of tuples from an enumeration of objects, by specifying how each item is extracted.
            </summary>
            <typeparam name="TInput">The input type.</typeparam>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <param name="inputEnumeration">The enumeration of inputs.</param>
            <param name="func1">Function that returns item 1 of the tuple.</param>
            <param name="func2">Function that returns item 2 of the tuple.</param>
            <param name="func3">Function that returns item 3 of the tuple.</param>
            <param name="func4">Function that returns item 4 of the tuple.</param>
            <param name="func5">Function that returns item 5 of the tuple.</param>
            <param name="func6">Function that returns item 6 of the tuple.</param>
            <param name="func7">Function that returns item 7 of the tuple.</param>
            <param name="func8">Function that returns item 8 of the tuple.</param>
            <returns>A tuple with 8 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Decompose``8(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@)">
            <summary>
            Decomposes the tuple into individual values.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <param name="tuple">The tuple to decompose.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <returns>The <paramref name="tuple" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Create``9(``0,``1,``2,``3,``4,``5,``6,``7,``8)">
            <summary>
            Used to create a tuple in nested format.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <returns>A tuple with 9 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.ToTuple``10(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,``3},System.Func{``0,``4},System.Func{``0,``5},System.Func{``0,``6},System.Func{``0,``7},System.Func{``0,``8},System.Func{``0,``9})">
            <summary>
            Used to create an enumeration of tuples from an enumeration of objects, by specifying how each item is extracted.
            </summary>
            <typeparam name="TInput">The input type.</typeparam>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <param name="inputEnumeration">The enumeration of inputs.</param>
            <param name="func1">Function that returns item 1 of the tuple.</param>
            <param name="func2">Function that returns item 2 of the tuple.</param>
            <param name="func3">Function that returns item 3 of the tuple.</param>
            <param name="func4">Function that returns item 4 of the tuple.</param>
            <param name="func5">Function that returns item 5 of the tuple.</param>
            <param name="func6">Function that returns item 6 of the tuple.</param>
            <param name="func7">Function that returns item 7 of the tuple.</param>
            <param name="func8">Function that returns item 8 of the tuple.</param>
            <param name="func9">Function that returns item 9 of the tuple.</param>
            <returns>A tuple with 9 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Decompose``9(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@)">
            <summary>
            Decomposes the tuple into individual values.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <param name="tuple">The tuple to decompose.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <returns>The <paramref name="tuple" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Create``10(``0,``1,``2,``3,``4,``5,``6,``7,``8,``9)">
            <summary>
            Used to create a tuple in nested format.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <returns>A tuple with 10 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.ToTuple``11(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,``3},System.Func{``0,``4},System.Func{``0,``5},System.Func{``0,``6},System.Func{``0,``7},System.Func{``0,``8},System.Func{``0,``9},System.Func{``0,``10})">
            <summary>
            Used to create an enumeration of tuples from an enumeration of objects, by specifying how each item is extracted.
            </summary>
            <typeparam name="TInput">The input type.</typeparam>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <param name="inputEnumeration">The enumeration of inputs.</param>
            <param name="func1">Function that returns item 1 of the tuple.</param>
            <param name="func2">Function that returns item 2 of the tuple.</param>
            <param name="func3">Function that returns item 3 of the tuple.</param>
            <param name="func4">Function that returns item 4 of the tuple.</param>
            <param name="func5">Function that returns item 5 of the tuple.</param>
            <param name="func6">Function that returns item 6 of the tuple.</param>
            <param name="func7">Function that returns item 7 of the tuple.</param>
            <param name="func8">Function that returns item 8 of the tuple.</param>
            <param name="func9">Function that returns item 9 of the tuple.</param>
            <param name="func10">Function that returns item 10 of the tuple.</param>
            <returns>A tuple with 10 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Decompose``10(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@)">
            <summary>
            Decomposes the tuple into individual values.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <param name="tuple">The tuple to decompose.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <returns>The <paramref name="tuple" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Create``11(``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10)">
            <summary>
            Used to create a tuple in nested format.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <returns>A tuple with 11 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.ToTuple``12(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,``3},System.Func{``0,``4},System.Func{``0,``5},System.Func{``0,``6},System.Func{``0,``7},System.Func{``0,``8},System.Func{``0,``9},System.Func{``0,``10},System.Func{``0,``11})">
            <summary>
            Used to create an enumeration of tuples from an enumeration of objects, by specifying how each item is extracted.
            </summary>
            <typeparam name="TInput">The input type.</typeparam>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <param name="inputEnumeration">The enumeration of inputs.</param>
            <param name="func1">Function that returns item 1 of the tuple.</param>
            <param name="func2">Function that returns item 2 of the tuple.</param>
            <param name="func3">Function that returns item 3 of the tuple.</param>
            <param name="func4">Function that returns item 4 of the tuple.</param>
            <param name="func5">Function that returns item 5 of the tuple.</param>
            <param name="func6">Function that returns item 6 of the tuple.</param>
            <param name="func7">Function that returns item 7 of the tuple.</param>
            <param name="func8">Function that returns item 8 of the tuple.</param>
            <param name="func9">Function that returns item 9 of the tuple.</param>
            <param name="func10">Function that returns item 10 of the tuple.</param>
            <param name="func11">Function that returns item 11 of the tuple.</param>
            <returns>A tuple with 11 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Decompose``11(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@)">
            <summary>
            Decomposes the tuple into individual values.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <param name="tuple">The tuple to decompose.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <returns>The <paramref name="tuple" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Create``12(``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11)">
            <summary>
            Used to create a tuple in nested format.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <returns>A tuple with 12 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.ToTuple``13(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,``3},System.Func{``0,``4},System.Func{``0,``5},System.Func{``0,``6},System.Func{``0,``7},System.Func{``0,``8},System.Func{``0,``9},System.Func{``0,``10},System.Func{``0,``11},System.Func{``0,``12})">
            <summary>
            Used to create an enumeration of tuples from an enumeration of objects, by specifying how each item is extracted.
            </summary>
            <typeparam name="TInput">The input type.</typeparam>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <param name="inputEnumeration">The enumeration of inputs.</param>
            <param name="func1">Function that returns item 1 of the tuple.</param>
            <param name="func2">Function that returns item 2 of the tuple.</param>
            <param name="func3">Function that returns item 3 of the tuple.</param>
            <param name="func4">Function that returns item 4 of the tuple.</param>
            <param name="func5">Function that returns item 5 of the tuple.</param>
            <param name="func6">Function that returns item 6 of the tuple.</param>
            <param name="func7">Function that returns item 7 of the tuple.</param>
            <param name="func8">Function that returns item 8 of the tuple.</param>
            <param name="func9">Function that returns item 9 of the tuple.</param>
            <param name="func10">Function that returns item 10 of the tuple.</param>
            <param name="func11">Function that returns item 11 of the tuple.</param>
            <param name="func12">Function that returns item 12 of the tuple.</param>
            <returns>A tuple with 12 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Decompose``12(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@)">
            <summary>
            Decomposes the tuple into individual values.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <param name="tuple">The tuple to decompose.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <returns>The <paramref name="tuple" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Create``13(``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12)">
            <summary>
            Used to create a tuple in nested format.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <returns>A tuple with 13 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.ToTuple``14(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,``3},System.Func{``0,``4},System.Func{``0,``5},System.Func{``0,``6},System.Func{``0,``7},System.Func{``0,``8},System.Func{``0,``9},System.Func{``0,``10},System.Func{``0,``11},System.Func{``0,``12},System.Func{``0,``13})">
            <summary>
            Used to create an enumeration of tuples from an enumeration of objects, by specifying how each item is extracted.
            </summary>
            <typeparam name="TInput">The input type.</typeparam>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <param name="inputEnumeration">The enumeration of inputs.</param>
            <param name="func1">Function that returns item 1 of the tuple.</param>
            <param name="func2">Function that returns item 2 of the tuple.</param>
            <param name="func3">Function that returns item 3 of the tuple.</param>
            <param name="func4">Function that returns item 4 of the tuple.</param>
            <param name="func5">Function that returns item 5 of the tuple.</param>
            <param name="func6">Function that returns item 6 of the tuple.</param>
            <param name="func7">Function that returns item 7 of the tuple.</param>
            <param name="func8">Function that returns item 8 of the tuple.</param>
            <param name="func9">Function that returns item 9 of the tuple.</param>
            <param name="func10">Function that returns item 10 of the tuple.</param>
            <param name="func11">Function that returns item 11 of the tuple.</param>
            <param name="func12">Function that returns item 12 of the tuple.</param>
            <param name="func13">Function that returns item 13 of the tuple.</param>
            <returns>A tuple with 13 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Decompose``13(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@)">
            <summary>
            Decomposes the tuple into individual values.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <param name="tuple">The tuple to decompose.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <returns>The <paramref name="tuple" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Create``14(``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13)">
            <summary>
            Used to create a tuple in nested format.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <returns>A tuple with 14 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.ToTuple``15(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,``3},System.Func{``0,``4},System.Func{``0,``5},System.Func{``0,``6},System.Func{``0,``7},System.Func{``0,``8},System.Func{``0,``9},System.Func{``0,``10},System.Func{``0,``11},System.Func{``0,``12},System.Func{``0,``13},System.Func{``0,``14})">
            <summary>
            Used to create an enumeration of tuples from an enumeration of objects, by specifying how each item is extracted.
            </summary>
            <typeparam name="TInput">The input type.</typeparam>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <param name="inputEnumeration">The enumeration of inputs.</param>
            <param name="func1">Function that returns item 1 of the tuple.</param>
            <param name="func2">Function that returns item 2 of the tuple.</param>
            <param name="func3">Function that returns item 3 of the tuple.</param>
            <param name="func4">Function that returns item 4 of the tuple.</param>
            <param name="func5">Function that returns item 5 of the tuple.</param>
            <param name="func6">Function that returns item 6 of the tuple.</param>
            <param name="func7">Function that returns item 7 of the tuple.</param>
            <param name="func8">Function that returns item 8 of the tuple.</param>
            <param name="func9">Function that returns item 9 of the tuple.</param>
            <param name="func10">Function that returns item 10 of the tuple.</param>
            <param name="func11">Function that returns item 11 of the tuple.</param>
            <param name="func12">Function that returns item 12 of the tuple.</param>
            <param name="func13">Function that returns item 13 of the tuple.</param>
            <param name="func14">Function that returns item 14 of the tuple.</param>
            <returns>A tuple with 14 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Decompose``14(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@)">
            <summary>
            Decomposes the tuple into individual values.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <param name="tuple">The tuple to decompose.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <returns>The <paramref name="tuple" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Create``15(``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14)">
            <summary>
            Used to create a tuple in nested format.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <returns>A tuple with 15 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.ToTuple``16(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,``3},System.Func{``0,``4},System.Func{``0,``5},System.Func{``0,``6},System.Func{``0,``7},System.Func{``0,``8},System.Func{``0,``9},System.Func{``0,``10},System.Func{``0,``11},System.Func{``0,``12},System.Func{``0,``13},System.Func{``0,``14},System.Func{``0,``15})">
            <summary>
            Used to create an enumeration of tuples from an enumeration of objects, by specifying how each item is extracted.
            </summary>
            <typeparam name="TInput">The input type.</typeparam>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <param name="inputEnumeration">The enumeration of inputs.</param>
            <param name="func1">Function that returns item 1 of the tuple.</param>
            <param name="func2">Function that returns item 2 of the tuple.</param>
            <param name="func3">Function that returns item 3 of the tuple.</param>
            <param name="func4">Function that returns item 4 of the tuple.</param>
            <param name="func5">Function that returns item 5 of the tuple.</param>
            <param name="func6">Function that returns item 6 of the tuple.</param>
            <param name="func7">Function that returns item 7 of the tuple.</param>
            <param name="func8">Function that returns item 8 of the tuple.</param>
            <param name="func9">Function that returns item 9 of the tuple.</param>
            <param name="func10">Function that returns item 10 of the tuple.</param>
            <param name="func11">Function that returns item 11 of the tuple.</param>
            <param name="func12">Function that returns item 12 of the tuple.</param>
            <param name="func13">Function that returns item 13 of the tuple.</param>
            <param name="func14">Function that returns item 14 of the tuple.</param>
            <param name="func15">Function that returns item 15 of the tuple.</param>
            <returns>A tuple with 15 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Decompose``15(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@)">
            <summary>
            Decomposes the tuple into individual values.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <param name="tuple">The tuple to decompose.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <returns>The <paramref name="tuple" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Create``16(``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15)">
            <summary>
            Used to create a tuple in nested format.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <returns>A tuple with 16 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.ToTuple``17(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,``3},System.Func{``0,``4},System.Func{``0,``5},System.Func{``0,``6},System.Func{``0,``7},System.Func{``0,``8},System.Func{``0,``9},System.Func{``0,``10},System.Func{``0,``11},System.Func{``0,``12},System.Func{``0,``13},System.Func{``0,``14},System.Func{``0,``15},System.Func{``0,``16})">
            <summary>
            Used to create an enumeration of tuples from an enumeration of objects, by specifying how each item is extracted.
            </summary>
            <typeparam name="TInput">The input type.</typeparam>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <param name="inputEnumeration">The enumeration of inputs.</param>
            <param name="func1">Function that returns item 1 of the tuple.</param>
            <param name="func2">Function that returns item 2 of the tuple.</param>
            <param name="func3">Function that returns item 3 of the tuple.</param>
            <param name="func4">Function that returns item 4 of the tuple.</param>
            <param name="func5">Function that returns item 5 of the tuple.</param>
            <param name="func6">Function that returns item 6 of the tuple.</param>
            <param name="func7">Function that returns item 7 of the tuple.</param>
            <param name="func8">Function that returns item 8 of the tuple.</param>
            <param name="func9">Function that returns item 9 of the tuple.</param>
            <param name="func10">Function that returns item 10 of the tuple.</param>
            <param name="func11">Function that returns item 11 of the tuple.</param>
            <param name="func12">Function that returns item 12 of the tuple.</param>
            <param name="func13">Function that returns item 13 of the tuple.</param>
            <param name="func14">Function that returns item 14 of the tuple.</param>
            <param name="func15">Function that returns item 15 of the tuple.</param>
            <param name="func16">Function that returns item 16 of the tuple.</param>
            <returns>A tuple with 16 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Decompose``16(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@)">
            <summary>
            Decomposes the tuple into individual values.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <param name="tuple">The tuple to decompose.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <returns>The <paramref name="tuple" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Create``17(``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16)">
            <summary>
            Used to create a tuple in nested format.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <returns>A tuple with 17 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.ToTuple``18(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,``3},System.Func{``0,``4},System.Func{``0,``5},System.Func{``0,``6},System.Func{``0,``7},System.Func{``0,``8},System.Func{``0,``9},System.Func{``0,``10},System.Func{``0,``11},System.Func{``0,``12},System.Func{``0,``13},System.Func{``0,``14},System.Func{``0,``15},System.Func{``0,``16},System.Func{``0,``17})">
            <summary>
            Used to create an enumeration of tuples from an enumeration of objects, by specifying how each item is extracted.
            </summary>
            <typeparam name="TInput">The input type.</typeparam>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <param name="inputEnumeration">The enumeration of inputs.</param>
            <param name="func1">Function that returns item 1 of the tuple.</param>
            <param name="func2">Function that returns item 2 of the tuple.</param>
            <param name="func3">Function that returns item 3 of the tuple.</param>
            <param name="func4">Function that returns item 4 of the tuple.</param>
            <param name="func5">Function that returns item 5 of the tuple.</param>
            <param name="func6">Function that returns item 6 of the tuple.</param>
            <param name="func7">Function that returns item 7 of the tuple.</param>
            <param name="func8">Function that returns item 8 of the tuple.</param>
            <param name="func9">Function that returns item 9 of the tuple.</param>
            <param name="func10">Function that returns item 10 of the tuple.</param>
            <param name="func11">Function that returns item 11 of the tuple.</param>
            <param name="func12">Function that returns item 12 of the tuple.</param>
            <param name="func13">Function that returns item 13 of the tuple.</param>
            <param name="func14">Function that returns item 14 of the tuple.</param>
            <param name="func15">Function that returns item 15 of the tuple.</param>
            <param name="func16">Function that returns item 16 of the tuple.</param>
            <param name="func17">Function that returns item 17 of the tuple.</param>
            <returns>A tuple with 17 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Decompose``17(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@)">
            <summary>
            Decomposes the tuple into individual values.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <param name="tuple">The tuple to decompose.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <returns>The <paramref name="tuple" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Create``18(``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17)">
            <summary>
            Used to create a tuple in nested format.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <returns>A tuple with 18 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.ToTuple``19(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,``3},System.Func{``0,``4},System.Func{``0,``5},System.Func{``0,``6},System.Func{``0,``7},System.Func{``0,``8},System.Func{``0,``9},System.Func{``0,``10},System.Func{``0,``11},System.Func{``0,``12},System.Func{``0,``13},System.Func{``0,``14},System.Func{``0,``15},System.Func{``0,``16},System.Func{``0,``17},System.Func{``0,``18})">
            <summary>
            Used to create an enumeration of tuples from an enumeration of objects, by specifying how each item is extracted.
            </summary>
            <typeparam name="TInput">The input type.</typeparam>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <param name="inputEnumeration">The enumeration of inputs.</param>
            <param name="func1">Function that returns item 1 of the tuple.</param>
            <param name="func2">Function that returns item 2 of the tuple.</param>
            <param name="func3">Function that returns item 3 of the tuple.</param>
            <param name="func4">Function that returns item 4 of the tuple.</param>
            <param name="func5">Function that returns item 5 of the tuple.</param>
            <param name="func6">Function that returns item 6 of the tuple.</param>
            <param name="func7">Function that returns item 7 of the tuple.</param>
            <param name="func8">Function that returns item 8 of the tuple.</param>
            <param name="func9">Function that returns item 9 of the tuple.</param>
            <param name="func10">Function that returns item 10 of the tuple.</param>
            <param name="func11">Function that returns item 11 of the tuple.</param>
            <param name="func12">Function that returns item 12 of the tuple.</param>
            <param name="func13">Function that returns item 13 of the tuple.</param>
            <param name="func14">Function that returns item 14 of the tuple.</param>
            <param name="func15">Function that returns item 15 of the tuple.</param>
            <param name="func16">Function that returns item 16 of the tuple.</param>
            <param name="func17">Function that returns item 17 of the tuple.</param>
            <param name="func18">Function that returns item 18 of the tuple.</param>
            <returns>A tuple with 18 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Decompose``18(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@)">
            <summary>
            Decomposes the tuple into individual values.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <param name="tuple">The tuple to decompose.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <returns>The <paramref name="tuple" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Create``19(``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18)">
            <summary>
            Used to create a tuple in nested format.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <returns>A tuple with 19 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.ToTuple``20(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,``3},System.Func{``0,``4},System.Func{``0,``5},System.Func{``0,``6},System.Func{``0,``7},System.Func{``0,``8},System.Func{``0,``9},System.Func{``0,``10},System.Func{``0,``11},System.Func{``0,``12},System.Func{``0,``13},System.Func{``0,``14},System.Func{``0,``15},System.Func{``0,``16},System.Func{``0,``17},System.Func{``0,``18},System.Func{``0,``19})">
            <summary>
            Used to create an enumeration of tuples from an enumeration of objects, by specifying how each item is extracted.
            </summary>
            <typeparam name="TInput">The input type.</typeparam>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <param name="inputEnumeration">The enumeration of inputs.</param>
            <param name="func1">Function that returns item 1 of the tuple.</param>
            <param name="func2">Function that returns item 2 of the tuple.</param>
            <param name="func3">Function that returns item 3 of the tuple.</param>
            <param name="func4">Function that returns item 4 of the tuple.</param>
            <param name="func5">Function that returns item 5 of the tuple.</param>
            <param name="func6">Function that returns item 6 of the tuple.</param>
            <param name="func7">Function that returns item 7 of the tuple.</param>
            <param name="func8">Function that returns item 8 of the tuple.</param>
            <param name="func9">Function that returns item 9 of the tuple.</param>
            <param name="func10">Function that returns item 10 of the tuple.</param>
            <param name="func11">Function that returns item 11 of the tuple.</param>
            <param name="func12">Function that returns item 12 of the tuple.</param>
            <param name="func13">Function that returns item 13 of the tuple.</param>
            <param name="func14">Function that returns item 14 of the tuple.</param>
            <param name="func15">Function that returns item 15 of the tuple.</param>
            <param name="func16">Function that returns item 16 of the tuple.</param>
            <param name="func17">Function that returns item 17 of the tuple.</param>
            <param name="func18">Function that returns item 18 of the tuple.</param>
            <param name="func19">Function that returns item 19 of the tuple.</param>
            <returns>A tuple with 19 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Decompose``19(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@)">
            <summary>
            Decomposes the tuple into individual values.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <param name="tuple">The tuple to decompose.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <returns>The <paramref name="tuple" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Create``20(``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19)">
            <summary>
            Used to create a tuple in nested format.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <returns>A tuple with 20 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.ToTuple``21(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,``3},System.Func{``0,``4},System.Func{``0,``5},System.Func{``0,``6},System.Func{``0,``7},System.Func{``0,``8},System.Func{``0,``9},System.Func{``0,``10},System.Func{``0,``11},System.Func{``0,``12},System.Func{``0,``13},System.Func{``0,``14},System.Func{``0,``15},System.Func{``0,``16},System.Func{``0,``17},System.Func{``0,``18},System.Func{``0,``19},System.Func{``0,``20})">
            <summary>
            Used to create an enumeration of tuples from an enumeration of objects, by specifying how each item is extracted.
            </summary>
            <typeparam name="TInput">The input type.</typeparam>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <param name="inputEnumeration">The enumeration of inputs.</param>
            <param name="func1">Function that returns item 1 of the tuple.</param>
            <param name="func2">Function that returns item 2 of the tuple.</param>
            <param name="func3">Function that returns item 3 of the tuple.</param>
            <param name="func4">Function that returns item 4 of the tuple.</param>
            <param name="func5">Function that returns item 5 of the tuple.</param>
            <param name="func6">Function that returns item 6 of the tuple.</param>
            <param name="func7">Function that returns item 7 of the tuple.</param>
            <param name="func8">Function that returns item 8 of the tuple.</param>
            <param name="func9">Function that returns item 9 of the tuple.</param>
            <param name="func10">Function that returns item 10 of the tuple.</param>
            <param name="func11">Function that returns item 11 of the tuple.</param>
            <param name="func12">Function that returns item 12 of the tuple.</param>
            <param name="func13">Function that returns item 13 of the tuple.</param>
            <param name="func14">Function that returns item 14 of the tuple.</param>
            <param name="func15">Function that returns item 15 of the tuple.</param>
            <param name="func16">Function that returns item 16 of the tuple.</param>
            <param name="func17">Function that returns item 17 of the tuple.</param>
            <param name="func18">Function that returns item 18 of the tuple.</param>
            <param name="func19">Function that returns item 19 of the tuple.</param>
            <param name="func20">Function that returns item 20 of the tuple.</param>
            <returns>A tuple with 20 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Decompose``20(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@)">
            <summary>
            Decomposes the tuple into individual values.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <param name="tuple">The tuple to decompose.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <returns>The <paramref name="tuple" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Create``21(``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19,``20)">
            <summary>
            Used to create a tuple in nested format.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <returns>A tuple with 21 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.ToTuple``22(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,``3},System.Func{``0,``4},System.Func{``0,``5},System.Func{``0,``6},System.Func{``0,``7},System.Func{``0,``8},System.Func{``0,``9},System.Func{``0,``10},System.Func{``0,``11},System.Func{``0,``12},System.Func{``0,``13},System.Func{``0,``14},System.Func{``0,``15},System.Func{``0,``16},System.Func{``0,``17},System.Func{``0,``18},System.Func{``0,``19},System.Func{``0,``20},System.Func{``0,``21})">
            <summary>
            Used to create an enumeration of tuples from an enumeration of objects, by specifying how each item is extracted.
            </summary>
            <typeparam name="TInput">The input type.</typeparam>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <param name="inputEnumeration">The enumeration of inputs.</param>
            <param name="func1">Function that returns item 1 of the tuple.</param>
            <param name="func2">Function that returns item 2 of the tuple.</param>
            <param name="func3">Function that returns item 3 of the tuple.</param>
            <param name="func4">Function that returns item 4 of the tuple.</param>
            <param name="func5">Function that returns item 5 of the tuple.</param>
            <param name="func6">Function that returns item 6 of the tuple.</param>
            <param name="func7">Function that returns item 7 of the tuple.</param>
            <param name="func8">Function that returns item 8 of the tuple.</param>
            <param name="func9">Function that returns item 9 of the tuple.</param>
            <param name="func10">Function that returns item 10 of the tuple.</param>
            <param name="func11">Function that returns item 11 of the tuple.</param>
            <param name="func12">Function that returns item 12 of the tuple.</param>
            <param name="func13">Function that returns item 13 of the tuple.</param>
            <param name="func14">Function that returns item 14 of the tuple.</param>
            <param name="func15">Function that returns item 15 of the tuple.</param>
            <param name="func16">Function that returns item 16 of the tuple.</param>
            <param name="func17">Function that returns item 17 of the tuple.</param>
            <param name="func18">Function that returns item 18 of the tuple.</param>
            <param name="func19">Function that returns item 19 of the tuple.</param>
            <param name="func20">Function that returns item 20 of the tuple.</param>
            <param name="func21">Function that returns item 21 of the tuple.</param>
            <returns>A tuple with 21 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Decompose``21(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@)">
            <summary>
            Decomposes the tuple into individual values.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <param name="tuple">The tuple to decompose.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <returns>The <paramref name="tuple" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Create``22(``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19,``20,``21)">
            <summary>
            Used to create a tuple in nested format.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <returns>A tuple with 22 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.ToTuple``23(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,``3},System.Func{``0,``4},System.Func{``0,``5},System.Func{``0,``6},System.Func{``0,``7},System.Func{``0,``8},System.Func{``0,``9},System.Func{``0,``10},System.Func{``0,``11},System.Func{``0,``12},System.Func{``0,``13},System.Func{``0,``14},System.Func{``0,``15},System.Func{``0,``16},System.Func{``0,``17},System.Func{``0,``18},System.Func{``0,``19},System.Func{``0,``20},System.Func{``0,``21},System.Func{``0,``22})">
            <summary>
            Used to create an enumeration of tuples from an enumeration of objects, by specifying how each item is extracted.
            </summary>
            <typeparam name="TInput">The input type.</typeparam>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <param name="inputEnumeration">The enumeration of inputs.</param>
            <param name="func1">Function that returns item 1 of the tuple.</param>
            <param name="func2">Function that returns item 2 of the tuple.</param>
            <param name="func3">Function that returns item 3 of the tuple.</param>
            <param name="func4">Function that returns item 4 of the tuple.</param>
            <param name="func5">Function that returns item 5 of the tuple.</param>
            <param name="func6">Function that returns item 6 of the tuple.</param>
            <param name="func7">Function that returns item 7 of the tuple.</param>
            <param name="func8">Function that returns item 8 of the tuple.</param>
            <param name="func9">Function that returns item 9 of the tuple.</param>
            <param name="func10">Function that returns item 10 of the tuple.</param>
            <param name="func11">Function that returns item 11 of the tuple.</param>
            <param name="func12">Function that returns item 12 of the tuple.</param>
            <param name="func13">Function that returns item 13 of the tuple.</param>
            <param name="func14">Function that returns item 14 of the tuple.</param>
            <param name="func15">Function that returns item 15 of the tuple.</param>
            <param name="func16">Function that returns item 16 of the tuple.</param>
            <param name="func17">Function that returns item 17 of the tuple.</param>
            <param name="func18">Function that returns item 18 of the tuple.</param>
            <param name="func19">Function that returns item 19 of the tuple.</param>
            <param name="func20">Function that returns item 20 of the tuple.</param>
            <param name="func21">Function that returns item 21 of the tuple.</param>
            <param name="func22">Function that returns item 22 of the tuple.</param>
            <returns>A tuple with 22 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Decompose``22(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20,System.Tuple{``21}}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@,``21@)">
            <summary>
            Decomposes the tuple into individual values.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <param name="tuple">The tuple to decompose.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <returns>The <paramref name="tuple" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Create``23(``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19,``20,``21,``22)">
            <summary>
            Used to create a tuple in nested format.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <returns>A tuple with 23 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.ToTuple``24(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,``3},System.Func{``0,``4},System.Func{``0,``5},System.Func{``0,``6},System.Func{``0,``7},System.Func{``0,``8},System.Func{``0,``9},System.Func{``0,``10},System.Func{``0,``11},System.Func{``0,``12},System.Func{``0,``13},System.Func{``0,``14},System.Func{``0,``15},System.Func{``0,``16},System.Func{``0,``17},System.Func{``0,``18},System.Func{``0,``19},System.Func{``0,``20},System.Func{``0,``21},System.Func{``0,``22},System.Func{``0,``23})">
            <summary>
            Used to create an enumeration of tuples from an enumeration of objects, by specifying how each item is extracted.
            </summary>
            <typeparam name="TInput">The input type.</typeparam>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <param name="inputEnumeration">The enumeration of inputs.</param>
            <param name="func1">Function that returns item 1 of the tuple.</param>
            <param name="func2">Function that returns item 2 of the tuple.</param>
            <param name="func3">Function that returns item 3 of the tuple.</param>
            <param name="func4">Function that returns item 4 of the tuple.</param>
            <param name="func5">Function that returns item 5 of the tuple.</param>
            <param name="func6">Function that returns item 6 of the tuple.</param>
            <param name="func7">Function that returns item 7 of the tuple.</param>
            <param name="func8">Function that returns item 8 of the tuple.</param>
            <param name="func9">Function that returns item 9 of the tuple.</param>
            <param name="func10">Function that returns item 10 of the tuple.</param>
            <param name="func11">Function that returns item 11 of the tuple.</param>
            <param name="func12">Function that returns item 12 of the tuple.</param>
            <param name="func13">Function that returns item 13 of the tuple.</param>
            <param name="func14">Function that returns item 14 of the tuple.</param>
            <param name="func15">Function that returns item 15 of the tuple.</param>
            <param name="func16">Function that returns item 16 of the tuple.</param>
            <param name="func17">Function that returns item 17 of the tuple.</param>
            <param name="func18">Function that returns item 18 of the tuple.</param>
            <param name="func19">Function that returns item 19 of the tuple.</param>
            <param name="func20">Function that returns item 20 of the tuple.</param>
            <param name="func21">Function that returns item 21 of the tuple.</param>
            <param name="func22">Function that returns item 22 of the tuple.</param>
            <param name="func23">Function that returns item 23 of the tuple.</param>
            <returns>A tuple with 23 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Decompose``23(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20,System.Tuple{``21,``22}}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@,``21@,``22@)">
            <summary>
            Decomposes the tuple into individual values.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <param name="tuple">The tuple to decompose.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <returns>The <paramref name="tuple" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Create``24(``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19,``20,``21,``22,``23)">
            <summary>
            Used to create a tuple in nested format.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <returns>A tuple with 24 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.ToTuple``25(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,``3},System.Func{``0,``4},System.Func{``0,``5},System.Func{``0,``6},System.Func{``0,``7},System.Func{``0,``8},System.Func{``0,``9},System.Func{``0,``10},System.Func{``0,``11},System.Func{``0,``12},System.Func{``0,``13},System.Func{``0,``14},System.Func{``0,``15},System.Func{``0,``16},System.Func{``0,``17},System.Func{``0,``18},System.Func{``0,``19},System.Func{``0,``20},System.Func{``0,``21},System.Func{``0,``22},System.Func{``0,``23},System.Func{``0,``24})">
            <summary>
            Used to create an enumeration of tuples from an enumeration of objects, by specifying how each item is extracted.
            </summary>
            <typeparam name="TInput">The input type.</typeparam>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <param name="inputEnumeration">The enumeration of inputs.</param>
            <param name="func1">Function that returns item 1 of the tuple.</param>
            <param name="func2">Function that returns item 2 of the tuple.</param>
            <param name="func3">Function that returns item 3 of the tuple.</param>
            <param name="func4">Function that returns item 4 of the tuple.</param>
            <param name="func5">Function that returns item 5 of the tuple.</param>
            <param name="func6">Function that returns item 6 of the tuple.</param>
            <param name="func7">Function that returns item 7 of the tuple.</param>
            <param name="func8">Function that returns item 8 of the tuple.</param>
            <param name="func9">Function that returns item 9 of the tuple.</param>
            <param name="func10">Function that returns item 10 of the tuple.</param>
            <param name="func11">Function that returns item 11 of the tuple.</param>
            <param name="func12">Function that returns item 12 of the tuple.</param>
            <param name="func13">Function that returns item 13 of the tuple.</param>
            <param name="func14">Function that returns item 14 of the tuple.</param>
            <param name="func15">Function that returns item 15 of the tuple.</param>
            <param name="func16">Function that returns item 16 of the tuple.</param>
            <param name="func17">Function that returns item 17 of the tuple.</param>
            <param name="func18">Function that returns item 18 of the tuple.</param>
            <param name="func19">Function that returns item 19 of the tuple.</param>
            <param name="func20">Function that returns item 20 of the tuple.</param>
            <param name="func21">Function that returns item 21 of the tuple.</param>
            <param name="func22">Function that returns item 22 of the tuple.</param>
            <param name="func23">Function that returns item 23 of the tuple.</param>
            <param name="func24">Function that returns item 24 of the tuple.</param>
            <returns>A tuple with 24 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Decompose``24(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20,System.Tuple{``21,``22,``23}}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@,``21@,``22@,``23@)">
            <summary>
            Decomposes the tuple into individual values.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <param name="tuple">The tuple to decompose.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <returns>The <paramref name="tuple" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Create``25(``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19,``20,``21,``22,``23,``24)">
            <summary>
            Used to create a tuple in nested format.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <returns>A tuple with 25 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.ToTuple``26(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,``3},System.Func{``0,``4},System.Func{``0,``5},System.Func{``0,``6},System.Func{``0,``7},System.Func{``0,``8},System.Func{``0,``9},System.Func{``0,``10},System.Func{``0,``11},System.Func{``0,``12},System.Func{``0,``13},System.Func{``0,``14},System.Func{``0,``15},System.Func{``0,``16},System.Func{``0,``17},System.Func{``0,``18},System.Func{``0,``19},System.Func{``0,``20},System.Func{``0,``21},System.Func{``0,``22},System.Func{``0,``23},System.Func{``0,``24},System.Func{``0,``25})">
            <summary>
            Used to create an enumeration of tuples from an enumeration of objects, by specifying how each item is extracted.
            </summary>
            <typeparam name="TInput">The input type.</typeparam>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <param name="inputEnumeration">The enumeration of inputs.</param>
            <param name="func1">Function that returns item 1 of the tuple.</param>
            <param name="func2">Function that returns item 2 of the tuple.</param>
            <param name="func3">Function that returns item 3 of the tuple.</param>
            <param name="func4">Function that returns item 4 of the tuple.</param>
            <param name="func5">Function that returns item 5 of the tuple.</param>
            <param name="func6">Function that returns item 6 of the tuple.</param>
            <param name="func7">Function that returns item 7 of the tuple.</param>
            <param name="func8">Function that returns item 8 of the tuple.</param>
            <param name="func9">Function that returns item 9 of the tuple.</param>
            <param name="func10">Function that returns item 10 of the tuple.</param>
            <param name="func11">Function that returns item 11 of the tuple.</param>
            <param name="func12">Function that returns item 12 of the tuple.</param>
            <param name="func13">Function that returns item 13 of the tuple.</param>
            <param name="func14">Function that returns item 14 of the tuple.</param>
            <param name="func15">Function that returns item 15 of the tuple.</param>
            <param name="func16">Function that returns item 16 of the tuple.</param>
            <param name="func17">Function that returns item 17 of the tuple.</param>
            <param name="func18">Function that returns item 18 of the tuple.</param>
            <param name="func19">Function that returns item 19 of the tuple.</param>
            <param name="func20">Function that returns item 20 of the tuple.</param>
            <param name="func21">Function that returns item 21 of the tuple.</param>
            <param name="func22">Function that returns item 22 of the tuple.</param>
            <param name="func23">Function that returns item 23 of the tuple.</param>
            <param name="func24">Function that returns item 24 of the tuple.</param>
            <param name="func25">Function that returns item 25 of the tuple.</param>
            <returns>A tuple with 25 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Decompose``25(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20,System.Tuple{``21,``22,``23,``24}}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@,``21@,``22@,``23@,``24@)">
            <summary>
            Decomposes the tuple into individual values.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <param name="tuple">The tuple to decompose.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <returns>The <paramref name="tuple" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Create``26(``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19,``20,``21,``22,``23,``24,``25)">
            <summary>
            Used to create a tuple in nested format.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <returns>A tuple with 26 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.ToTuple``27(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,``3},System.Func{``0,``4},System.Func{``0,``5},System.Func{``0,``6},System.Func{``0,``7},System.Func{``0,``8},System.Func{``0,``9},System.Func{``0,``10},System.Func{``0,``11},System.Func{``0,``12},System.Func{``0,``13},System.Func{``0,``14},System.Func{``0,``15},System.Func{``0,``16},System.Func{``0,``17},System.Func{``0,``18},System.Func{``0,``19},System.Func{``0,``20},System.Func{``0,``21},System.Func{``0,``22},System.Func{``0,``23},System.Func{``0,``24},System.Func{``0,``25},System.Func{``0,``26})">
            <summary>
            Used to create an enumeration of tuples from an enumeration of objects, by specifying how each item is extracted.
            </summary>
            <typeparam name="TInput">The input type.</typeparam>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <param name="inputEnumeration">The enumeration of inputs.</param>
            <param name="func1">Function that returns item 1 of the tuple.</param>
            <param name="func2">Function that returns item 2 of the tuple.</param>
            <param name="func3">Function that returns item 3 of the tuple.</param>
            <param name="func4">Function that returns item 4 of the tuple.</param>
            <param name="func5">Function that returns item 5 of the tuple.</param>
            <param name="func6">Function that returns item 6 of the tuple.</param>
            <param name="func7">Function that returns item 7 of the tuple.</param>
            <param name="func8">Function that returns item 8 of the tuple.</param>
            <param name="func9">Function that returns item 9 of the tuple.</param>
            <param name="func10">Function that returns item 10 of the tuple.</param>
            <param name="func11">Function that returns item 11 of the tuple.</param>
            <param name="func12">Function that returns item 12 of the tuple.</param>
            <param name="func13">Function that returns item 13 of the tuple.</param>
            <param name="func14">Function that returns item 14 of the tuple.</param>
            <param name="func15">Function that returns item 15 of the tuple.</param>
            <param name="func16">Function that returns item 16 of the tuple.</param>
            <param name="func17">Function that returns item 17 of the tuple.</param>
            <param name="func18">Function that returns item 18 of the tuple.</param>
            <param name="func19">Function that returns item 19 of the tuple.</param>
            <param name="func20">Function that returns item 20 of the tuple.</param>
            <param name="func21">Function that returns item 21 of the tuple.</param>
            <param name="func22">Function that returns item 22 of the tuple.</param>
            <param name="func23">Function that returns item 23 of the tuple.</param>
            <param name="func24">Function that returns item 24 of the tuple.</param>
            <param name="func25">Function that returns item 25 of the tuple.</param>
            <param name="func26">Function that returns item 26 of the tuple.</param>
            <returns>A tuple with 26 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Decompose``26(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20,System.Tuple{``21,``22,``23,``24,``25}}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@,``21@,``22@,``23@,``24@,``25@)">
            <summary>
            Decomposes the tuple into individual values.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <param name="tuple">The tuple to decompose.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <returns>The <paramref name="tuple" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Create``27(``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19,``20,``21,``22,``23,``24,``25,``26)">
            <summary>
            Used to create a tuple in nested format.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <returns>A tuple with 27 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.ToTuple``28(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,``3},System.Func{``0,``4},System.Func{``0,``5},System.Func{``0,``6},System.Func{``0,``7},System.Func{``0,``8},System.Func{``0,``9},System.Func{``0,``10},System.Func{``0,``11},System.Func{``0,``12},System.Func{``0,``13},System.Func{``0,``14},System.Func{``0,``15},System.Func{``0,``16},System.Func{``0,``17},System.Func{``0,``18},System.Func{``0,``19},System.Func{``0,``20},System.Func{``0,``21},System.Func{``0,``22},System.Func{``0,``23},System.Func{``0,``24},System.Func{``0,``25},System.Func{``0,``26},System.Func{``0,``27})">
            <summary>
            Used to create an enumeration of tuples from an enumeration of objects, by specifying how each item is extracted.
            </summary>
            <typeparam name="TInput">The input type.</typeparam>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <param name="inputEnumeration">The enumeration of inputs.</param>
            <param name="func1">Function that returns item 1 of the tuple.</param>
            <param name="func2">Function that returns item 2 of the tuple.</param>
            <param name="func3">Function that returns item 3 of the tuple.</param>
            <param name="func4">Function that returns item 4 of the tuple.</param>
            <param name="func5">Function that returns item 5 of the tuple.</param>
            <param name="func6">Function that returns item 6 of the tuple.</param>
            <param name="func7">Function that returns item 7 of the tuple.</param>
            <param name="func8">Function that returns item 8 of the tuple.</param>
            <param name="func9">Function that returns item 9 of the tuple.</param>
            <param name="func10">Function that returns item 10 of the tuple.</param>
            <param name="func11">Function that returns item 11 of the tuple.</param>
            <param name="func12">Function that returns item 12 of the tuple.</param>
            <param name="func13">Function that returns item 13 of the tuple.</param>
            <param name="func14">Function that returns item 14 of the tuple.</param>
            <param name="func15">Function that returns item 15 of the tuple.</param>
            <param name="func16">Function that returns item 16 of the tuple.</param>
            <param name="func17">Function that returns item 17 of the tuple.</param>
            <param name="func18">Function that returns item 18 of the tuple.</param>
            <param name="func19">Function that returns item 19 of the tuple.</param>
            <param name="func20">Function that returns item 20 of the tuple.</param>
            <param name="func21">Function that returns item 21 of the tuple.</param>
            <param name="func22">Function that returns item 22 of the tuple.</param>
            <param name="func23">Function that returns item 23 of the tuple.</param>
            <param name="func24">Function that returns item 24 of the tuple.</param>
            <param name="func25">Function that returns item 25 of the tuple.</param>
            <param name="func26">Function that returns item 26 of the tuple.</param>
            <param name="func27">Function that returns item 27 of the tuple.</param>
            <returns>A tuple with 27 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Decompose``27(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20,System.Tuple{``21,``22,``23,``24,``25,``26}}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@,``21@,``22@,``23@,``24@,``25@,``26@)">
            <summary>
            Decomposes the tuple into individual values.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <param name="tuple">The tuple to decompose.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <returns>The <paramref name="tuple" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Create``28(``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19,``20,``21,``22,``23,``24,``25,``26,``27)">
            <summary>
            Used to create a tuple in nested format.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <returns>A tuple with 28 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.ToTuple``29(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,``3},System.Func{``0,``4},System.Func{``0,``5},System.Func{``0,``6},System.Func{``0,``7},System.Func{``0,``8},System.Func{``0,``9},System.Func{``0,``10},System.Func{``0,``11},System.Func{``0,``12},System.Func{``0,``13},System.Func{``0,``14},System.Func{``0,``15},System.Func{``0,``16},System.Func{``0,``17},System.Func{``0,``18},System.Func{``0,``19},System.Func{``0,``20},System.Func{``0,``21},System.Func{``0,``22},System.Func{``0,``23},System.Func{``0,``24},System.Func{``0,``25},System.Func{``0,``26},System.Func{``0,``27},System.Func{``0,``28})">
            <summary>
            Used to create an enumeration of tuples from an enumeration of objects, by specifying how each item is extracted.
            </summary>
            <typeparam name="TInput">The input type.</typeparam>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <param name="inputEnumeration">The enumeration of inputs.</param>
            <param name="func1">Function that returns item 1 of the tuple.</param>
            <param name="func2">Function that returns item 2 of the tuple.</param>
            <param name="func3">Function that returns item 3 of the tuple.</param>
            <param name="func4">Function that returns item 4 of the tuple.</param>
            <param name="func5">Function that returns item 5 of the tuple.</param>
            <param name="func6">Function that returns item 6 of the tuple.</param>
            <param name="func7">Function that returns item 7 of the tuple.</param>
            <param name="func8">Function that returns item 8 of the tuple.</param>
            <param name="func9">Function that returns item 9 of the tuple.</param>
            <param name="func10">Function that returns item 10 of the tuple.</param>
            <param name="func11">Function that returns item 11 of the tuple.</param>
            <param name="func12">Function that returns item 12 of the tuple.</param>
            <param name="func13">Function that returns item 13 of the tuple.</param>
            <param name="func14">Function that returns item 14 of the tuple.</param>
            <param name="func15">Function that returns item 15 of the tuple.</param>
            <param name="func16">Function that returns item 16 of the tuple.</param>
            <param name="func17">Function that returns item 17 of the tuple.</param>
            <param name="func18">Function that returns item 18 of the tuple.</param>
            <param name="func19">Function that returns item 19 of the tuple.</param>
            <param name="func20">Function that returns item 20 of the tuple.</param>
            <param name="func21">Function that returns item 21 of the tuple.</param>
            <param name="func22">Function that returns item 22 of the tuple.</param>
            <param name="func23">Function that returns item 23 of the tuple.</param>
            <param name="func24">Function that returns item 24 of the tuple.</param>
            <param name="func25">Function that returns item 25 of the tuple.</param>
            <param name="func26">Function that returns item 26 of the tuple.</param>
            <param name="func27">Function that returns item 27 of the tuple.</param>
            <param name="func28">Function that returns item 28 of the tuple.</param>
            <returns>A tuple with 28 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Decompose``28(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20,System.Tuple{``21,``22,``23,``24,``25,``26,``27}}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@,``21@,``22@,``23@,``24@,``25@,``26@,``27@)">
            <summary>
            Decomposes the tuple into individual values.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <param name="tuple">The tuple to decompose.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <returns>The <paramref name="tuple" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Create``29(``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19,``20,``21,``22,``23,``24,``25,``26,``27,``28)">
            <summary>
            Used to create a tuple in nested format.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <returns>A tuple with 29 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.ToTuple``30(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,``3},System.Func{``0,``4},System.Func{``0,``5},System.Func{``0,``6},System.Func{``0,``7},System.Func{``0,``8},System.Func{``0,``9},System.Func{``0,``10},System.Func{``0,``11},System.Func{``0,``12},System.Func{``0,``13},System.Func{``0,``14},System.Func{``0,``15},System.Func{``0,``16},System.Func{``0,``17},System.Func{``0,``18},System.Func{``0,``19},System.Func{``0,``20},System.Func{``0,``21},System.Func{``0,``22},System.Func{``0,``23},System.Func{``0,``24},System.Func{``0,``25},System.Func{``0,``26},System.Func{``0,``27},System.Func{``0,``28},System.Func{``0,``29})">
            <summary>
            Used to create an enumeration of tuples from an enumeration of objects, by specifying how each item is extracted.
            </summary>
            <typeparam name="TInput">The input type.</typeparam>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <param name="inputEnumeration">The enumeration of inputs.</param>
            <param name="func1">Function that returns item 1 of the tuple.</param>
            <param name="func2">Function that returns item 2 of the tuple.</param>
            <param name="func3">Function that returns item 3 of the tuple.</param>
            <param name="func4">Function that returns item 4 of the tuple.</param>
            <param name="func5">Function that returns item 5 of the tuple.</param>
            <param name="func6">Function that returns item 6 of the tuple.</param>
            <param name="func7">Function that returns item 7 of the tuple.</param>
            <param name="func8">Function that returns item 8 of the tuple.</param>
            <param name="func9">Function that returns item 9 of the tuple.</param>
            <param name="func10">Function that returns item 10 of the tuple.</param>
            <param name="func11">Function that returns item 11 of the tuple.</param>
            <param name="func12">Function that returns item 12 of the tuple.</param>
            <param name="func13">Function that returns item 13 of the tuple.</param>
            <param name="func14">Function that returns item 14 of the tuple.</param>
            <param name="func15">Function that returns item 15 of the tuple.</param>
            <param name="func16">Function that returns item 16 of the tuple.</param>
            <param name="func17">Function that returns item 17 of the tuple.</param>
            <param name="func18">Function that returns item 18 of the tuple.</param>
            <param name="func19">Function that returns item 19 of the tuple.</param>
            <param name="func20">Function that returns item 20 of the tuple.</param>
            <param name="func21">Function that returns item 21 of the tuple.</param>
            <param name="func22">Function that returns item 22 of the tuple.</param>
            <param name="func23">Function that returns item 23 of the tuple.</param>
            <param name="func24">Function that returns item 24 of the tuple.</param>
            <param name="func25">Function that returns item 25 of the tuple.</param>
            <param name="func26">Function that returns item 26 of the tuple.</param>
            <param name="func27">Function that returns item 27 of the tuple.</param>
            <param name="func28">Function that returns item 28 of the tuple.</param>
            <param name="func29">Function that returns item 29 of the tuple.</param>
            <returns>A tuple with 29 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Decompose``29(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20,System.Tuple{``21,``22,``23,``24,``25,``26,``27,System.Tuple{``28}}}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@,``21@,``22@,``23@,``24@,``25@,``26@,``27@,``28@)">
            <summary>
            Decomposes the tuple into individual values.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <param name="tuple">The tuple to decompose.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <returns>The <paramref name="tuple" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Create``30(``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19,``20,``21,``22,``23,``24,``25,``26,``27,``28,``29)">
            <summary>
            Used to create a tuple in nested format.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <returns>A tuple with 30 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.ToTuple``31(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,``3},System.Func{``0,``4},System.Func{``0,``5},System.Func{``0,``6},System.Func{``0,``7},System.Func{``0,``8},System.Func{``0,``9},System.Func{``0,``10},System.Func{``0,``11},System.Func{``0,``12},System.Func{``0,``13},System.Func{``0,``14},System.Func{``0,``15},System.Func{``0,``16},System.Func{``0,``17},System.Func{``0,``18},System.Func{``0,``19},System.Func{``0,``20},System.Func{``0,``21},System.Func{``0,``22},System.Func{``0,``23},System.Func{``0,``24},System.Func{``0,``25},System.Func{``0,``26},System.Func{``0,``27},System.Func{``0,``28},System.Func{``0,``29},System.Func{``0,``30})">
            <summary>
            Used to create an enumeration of tuples from an enumeration of objects, by specifying how each item is extracted.
            </summary>
            <typeparam name="TInput">The input type.</typeparam>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <param name="inputEnumeration">The enumeration of inputs.</param>
            <param name="func1">Function that returns item 1 of the tuple.</param>
            <param name="func2">Function that returns item 2 of the tuple.</param>
            <param name="func3">Function that returns item 3 of the tuple.</param>
            <param name="func4">Function that returns item 4 of the tuple.</param>
            <param name="func5">Function that returns item 5 of the tuple.</param>
            <param name="func6">Function that returns item 6 of the tuple.</param>
            <param name="func7">Function that returns item 7 of the tuple.</param>
            <param name="func8">Function that returns item 8 of the tuple.</param>
            <param name="func9">Function that returns item 9 of the tuple.</param>
            <param name="func10">Function that returns item 10 of the tuple.</param>
            <param name="func11">Function that returns item 11 of the tuple.</param>
            <param name="func12">Function that returns item 12 of the tuple.</param>
            <param name="func13">Function that returns item 13 of the tuple.</param>
            <param name="func14">Function that returns item 14 of the tuple.</param>
            <param name="func15">Function that returns item 15 of the tuple.</param>
            <param name="func16">Function that returns item 16 of the tuple.</param>
            <param name="func17">Function that returns item 17 of the tuple.</param>
            <param name="func18">Function that returns item 18 of the tuple.</param>
            <param name="func19">Function that returns item 19 of the tuple.</param>
            <param name="func20">Function that returns item 20 of the tuple.</param>
            <param name="func21">Function that returns item 21 of the tuple.</param>
            <param name="func22">Function that returns item 22 of the tuple.</param>
            <param name="func23">Function that returns item 23 of the tuple.</param>
            <param name="func24">Function that returns item 24 of the tuple.</param>
            <param name="func25">Function that returns item 25 of the tuple.</param>
            <param name="func26">Function that returns item 26 of the tuple.</param>
            <param name="func27">Function that returns item 27 of the tuple.</param>
            <param name="func28">Function that returns item 28 of the tuple.</param>
            <param name="func29">Function that returns item 29 of the tuple.</param>
            <param name="func30">Function that returns item 30 of the tuple.</param>
            <returns>A tuple with 30 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Decompose``30(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20,System.Tuple{``21,``22,``23,``24,``25,``26,``27,System.Tuple{``28,``29}}}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@,``21@,``22@,``23@,``24@,``25@,``26@,``27@,``28@,``29@)">
            <summary>
            Decomposes the tuple into individual values.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <param name="tuple">The tuple to decompose.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <returns>The <paramref name="tuple" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Create``31(``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19,``20,``21,``22,``23,``24,``25,``26,``27,``28,``29,``30)">
            <summary>
            Used to create a tuple in nested format.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <typeparam name="T31">The type of item 31.</typeparam>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <returns>A tuple with 31 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.ToTuple``32(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,``3},System.Func{``0,``4},System.Func{``0,``5},System.Func{``0,``6},System.Func{``0,``7},System.Func{``0,``8},System.Func{``0,``9},System.Func{``0,``10},System.Func{``0,``11},System.Func{``0,``12},System.Func{``0,``13},System.Func{``0,``14},System.Func{``0,``15},System.Func{``0,``16},System.Func{``0,``17},System.Func{``0,``18},System.Func{``0,``19},System.Func{``0,``20},System.Func{``0,``21},System.Func{``0,``22},System.Func{``0,``23},System.Func{``0,``24},System.Func{``0,``25},System.Func{``0,``26},System.Func{``0,``27},System.Func{``0,``28},System.Func{``0,``29},System.Func{``0,``30},System.Func{``0,``31})">
            <summary>
            Used to create an enumeration of tuples from an enumeration of objects, by specifying how each item is extracted.
            </summary>
            <typeparam name="TInput">The input type.</typeparam>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <typeparam name="T31">The type of item 31.</typeparam>
            <param name="inputEnumeration">The enumeration of inputs.</param>
            <param name="func1">Function that returns item 1 of the tuple.</param>
            <param name="func2">Function that returns item 2 of the tuple.</param>
            <param name="func3">Function that returns item 3 of the tuple.</param>
            <param name="func4">Function that returns item 4 of the tuple.</param>
            <param name="func5">Function that returns item 5 of the tuple.</param>
            <param name="func6">Function that returns item 6 of the tuple.</param>
            <param name="func7">Function that returns item 7 of the tuple.</param>
            <param name="func8">Function that returns item 8 of the tuple.</param>
            <param name="func9">Function that returns item 9 of the tuple.</param>
            <param name="func10">Function that returns item 10 of the tuple.</param>
            <param name="func11">Function that returns item 11 of the tuple.</param>
            <param name="func12">Function that returns item 12 of the tuple.</param>
            <param name="func13">Function that returns item 13 of the tuple.</param>
            <param name="func14">Function that returns item 14 of the tuple.</param>
            <param name="func15">Function that returns item 15 of the tuple.</param>
            <param name="func16">Function that returns item 16 of the tuple.</param>
            <param name="func17">Function that returns item 17 of the tuple.</param>
            <param name="func18">Function that returns item 18 of the tuple.</param>
            <param name="func19">Function that returns item 19 of the tuple.</param>
            <param name="func20">Function that returns item 20 of the tuple.</param>
            <param name="func21">Function that returns item 21 of the tuple.</param>
            <param name="func22">Function that returns item 22 of the tuple.</param>
            <param name="func23">Function that returns item 23 of the tuple.</param>
            <param name="func24">Function that returns item 24 of the tuple.</param>
            <param name="func25">Function that returns item 25 of the tuple.</param>
            <param name="func26">Function that returns item 26 of the tuple.</param>
            <param name="func27">Function that returns item 27 of the tuple.</param>
            <param name="func28">Function that returns item 28 of the tuple.</param>
            <param name="func29">Function that returns item 29 of the tuple.</param>
            <param name="func30">Function that returns item 30 of the tuple.</param>
            <param name="func31">Function that returns item 31 of the tuple.</param>
            <returns>A tuple with 31 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Decompose``31(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20,System.Tuple{``21,``22,``23,``24,``25,``26,``27,System.Tuple{``28,``29,``30}}}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@,``21@,``22@,``23@,``24@,``25@,``26@,``27@,``28@,``29@,``30@)">
            <summary>
            Decomposes the tuple into individual values.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <typeparam name="T31">The type of item 31.</typeparam>
            <param name="tuple">The tuple to decompose.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <returns>The <paramref name="tuple" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Create``32(``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19,``20,``21,``22,``23,``24,``25,``26,``27,``28,``29,``30,``31)">
            <summary>
            Used to create a tuple in nested format.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <typeparam name="T31">The type of item 31.</typeparam>
            <typeparam name="T32">The type of item 32.</typeparam>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <returns>A tuple with 32 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.ToTuple``33(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,``3},System.Func{``0,``4},System.Func{``0,``5},System.Func{``0,``6},System.Func{``0,``7},System.Func{``0,``8},System.Func{``0,``9},System.Func{``0,``10},System.Func{``0,``11},System.Func{``0,``12},System.Func{``0,``13},System.Func{``0,``14},System.Func{``0,``15},System.Func{``0,``16},System.Func{``0,``17},System.Func{``0,``18},System.Func{``0,``19},System.Func{``0,``20},System.Func{``0,``21},System.Func{``0,``22},System.Func{``0,``23},System.Func{``0,``24},System.Func{``0,``25},System.Func{``0,``26},System.Func{``0,``27},System.Func{``0,``28},System.Func{``0,``29},System.Func{``0,``30},System.Func{``0,``31},System.Func{``0,``32})">
            <summary>
            Used to create an enumeration of tuples from an enumeration of objects, by specifying how each item is extracted.
            </summary>
            <typeparam name="TInput">The input type.</typeparam>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <typeparam name="T31">The type of item 31.</typeparam>
            <typeparam name="T32">The type of item 32.</typeparam>
            <param name="inputEnumeration">The enumeration of inputs.</param>
            <param name="func1">Function that returns item 1 of the tuple.</param>
            <param name="func2">Function that returns item 2 of the tuple.</param>
            <param name="func3">Function that returns item 3 of the tuple.</param>
            <param name="func4">Function that returns item 4 of the tuple.</param>
            <param name="func5">Function that returns item 5 of the tuple.</param>
            <param name="func6">Function that returns item 6 of the tuple.</param>
            <param name="func7">Function that returns item 7 of the tuple.</param>
            <param name="func8">Function that returns item 8 of the tuple.</param>
            <param name="func9">Function that returns item 9 of the tuple.</param>
            <param name="func10">Function that returns item 10 of the tuple.</param>
            <param name="func11">Function that returns item 11 of the tuple.</param>
            <param name="func12">Function that returns item 12 of the tuple.</param>
            <param name="func13">Function that returns item 13 of the tuple.</param>
            <param name="func14">Function that returns item 14 of the tuple.</param>
            <param name="func15">Function that returns item 15 of the tuple.</param>
            <param name="func16">Function that returns item 16 of the tuple.</param>
            <param name="func17">Function that returns item 17 of the tuple.</param>
            <param name="func18">Function that returns item 18 of the tuple.</param>
            <param name="func19">Function that returns item 19 of the tuple.</param>
            <param name="func20">Function that returns item 20 of the tuple.</param>
            <param name="func21">Function that returns item 21 of the tuple.</param>
            <param name="func22">Function that returns item 22 of the tuple.</param>
            <param name="func23">Function that returns item 23 of the tuple.</param>
            <param name="func24">Function that returns item 24 of the tuple.</param>
            <param name="func25">Function that returns item 25 of the tuple.</param>
            <param name="func26">Function that returns item 26 of the tuple.</param>
            <param name="func27">Function that returns item 27 of the tuple.</param>
            <param name="func28">Function that returns item 28 of the tuple.</param>
            <param name="func29">Function that returns item 29 of the tuple.</param>
            <param name="func30">Function that returns item 30 of the tuple.</param>
            <param name="func31">Function that returns item 31 of the tuple.</param>
            <param name="func32">Function that returns item 32 of the tuple.</param>
            <returns>A tuple with 32 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Decompose``32(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20,System.Tuple{``21,``22,``23,``24,``25,``26,``27,System.Tuple{``28,``29,``30,``31}}}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@,``21@,``22@,``23@,``24@,``25@,``26@,``27@,``28@,``29@,``30@,``31@)">
            <summary>
            Decomposes the tuple into individual values.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <typeparam name="T31">The type of item 31.</typeparam>
            <typeparam name="T32">The type of item 32.</typeparam>
            <param name="tuple">The tuple to decompose.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <returns>The <paramref name="tuple" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Create``33(``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19,``20,``21,``22,``23,``24,``25,``26,``27,``28,``29,``30,``31,``32)">
            <summary>
            Used to create a tuple in nested format.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <typeparam name="T31">The type of item 31.</typeparam>
            <typeparam name="T32">The type of item 32.</typeparam>
            <typeparam name="T33">The type of item 33.</typeparam>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
            <returns>A tuple with 33 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.ToTuple``34(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,``3},System.Func{``0,``4},System.Func{``0,``5},System.Func{``0,``6},System.Func{``0,``7},System.Func{``0,``8},System.Func{``0,``9},System.Func{``0,``10},System.Func{``0,``11},System.Func{``0,``12},System.Func{``0,``13},System.Func{``0,``14},System.Func{``0,``15},System.Func{``0,``16},System.Func{``0,``17},System.Func{``0,``18},System.Func{``0,``19},System.Func{``0,``20},System.Func{``0,``21},System.Func{``0,``22},System.Func{``0,``23},System.Func{``0,``24},System.Func{``0,``25},System.Func{``0,``26},System.Func{``0,``27},System.Func{``0,``28},System.Func{``0,``29},System.Func{``0,``30},System.Func{``0,``31},System.Func{``0,``32},System.Func{``0,``33})">
            <summary>
            Used to create an enumeration of tuples from an enumeration of objects, by specifying how each item is extracted.
            </summary>
            <typeparam name="TInput">The input type.</typeparam>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <typeparam name="T31">The type of item 31.</typeparam>
            <typeparam name="T32">The type of item 32.</typeparam>
            <typeparam name="T33">The type of item 33.</typeparam>
            <param name="inputEnumeration">The enumeration of inputs.</param>
            <param name="func1">Function that returns item 1 of the tuple.</param>
            <param name="func2">Function that returns item 2 of the tuple.</param>
            <param name="func3">Function that returns item 3 of the tuple.</param>
            <param name="func4">Function that returns item 4 of the tuple.</param>
            <param name="func5">Function that returns item 5 of the tuple.</param>
            <param name="func6">Function that returns item 6 of the tuple.</param>
            <param name="func7">Function that returns item 7 of the tuple.</param>
            <param name="func8">Function that returns item 8 of the tuple.</param>
            <param name="func9">Function that returns item 9 of the tuple.</param>
            <param name="func10">Function that returns item 10 of the tuple.</param>
            <param name="func11">Function that returns item 11 of the tuple.</param>
            <param name="func12">Function that returns item 12 of the tuple.</param>
            <param name="func13">Function that returns item 13 of the tuple.</param>
            <param name="func14">Function that returns item 14 of the tuple.</param>
            <param name="func15">Function that returns item 15 of the tuple.</param>
            <param name="func16">Function that returns item 16 of the tuple.</param>
            <param name="func17">Function that returns item 17 of the tuple.</param>
            <param name="func18">Function that returns item 18 of the tuple.</param>
            <param name="func19">Function that returns item 19 of the tuple.</param>
            <param name="func20">Function that returns item 20 of the tuple.</param>
            <param name="func21">Function that returns item 21 of the tuple.</param>
            <param name="func22">Function that returns item 22 of the tuple.</param>
            <param name="func23">Function that returns item 23 of the tuple.</param>
            <param name="func24">Function that returns item 24 of the tuple.</param>
            <param name="func25">Function that returns item 25 of the tuple.</param>
            <param name="func26">Function that returns item 26 of the tuple.</param>
            <param name="func27">Function that returns item 27 of the tuple.</param>
            <param name="func28">Function that returns item 28 of the tuple.</param>
            <param name="func29">Function that returns item 29 of the tuple.</param>
            <param name="func30">Function that returns item 30 of the tuple.</param>
            <param name="func31">Function that returns item 31 of the tuple.</param>
            <param name="func32">Function that returns item 32 of the tuple.</param>
            <param name="func33">Function that returns item 33 of the tuple.</param>
            <returns>A tuple with 33 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Decompose``33(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20,System.Tuple{``21,``22,``23,``24,``25,``26,``27,System.Tuple{``28,``29,``30,``31,``32}}}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@,``21@,``22@,``23@,``24@,``25@,``26@,``27@,``28@,``29@,``30@,``31@,``32@)">
            <summary>
            Decomposes the tuple into individual values.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <typeparam name="T31">The type of item 31.</typeparam>
            <typeparam name="T32">The type of item 32.</typeparam>
            <typeparam name="T33">The type of item 33.</typeparam>
            <param name="tuple">The tuple to decompose.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
            <returns>The <paramref name="tuple" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Create``34(``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19,``20,``21,``22,``23,``24,``25,``26,``27,``28,``29,``30,``31,``32,``33)">
            <summary>
            Used to create a tuple in nested format.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <typeparam name="T31">The type of item 31.</typeparam>
            <typeparam name="T32">The type of item 32.</typeparam>
            <typeparam name="T33">The type of item 33.</typeparam>
            <typeparam name="T34">The type of item 34.</typeparam>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
            <param name="item34">Item 34 of the tuple.</param>
            <returns>A tuple with 34 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.ToTuple``35(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,``3},System.Func{``0,``4},System.Func{``0,``5},System.Func{``0,``6},System.Func{``0,``7},System.Func{``0,``8},System.Func{``0,``9},System.Func{``0,``10},System.Func{``0,``11},System.Func{``0,``12},System.Func{``0,``13},System.Func{``0,``14},System.Func{``0,``15},System.Func{``0,``16},System.Func{``0,``17},System.Func{``0,``18},System.Func{``0,``19},System.Func{``0,``20},System.Func{``0,``21},System.Func{``0,``22},System.Func{``0,``23},System.Func{``0,``24},System.Func{``0,``25},System.Func{``0,``26},System.Func{``0,``27},System.Func{``0,``28},System.Func{``0,``29},System.Func{``0,``30},System.Func{``0,``31},System.Func{``0,``32},System.Func{``0,``33},System.Func{``0,``34})">
            <summary>
            Used to create an enumeration of tuples from an enumeration of objects, by specifying how each item is extracted.
            </summary>
            <typeparam name="TInput">The input type.</typeparam>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <typeparam name="T31">The type of item 31.</typeparam>
            <typeparam name="T32">The type of item 32.</typeparam>
            <typeparam name="T33">The type of item 33.</typeparam>
            <typeparam name="T34">The type of item 34.</typeparam>
            <param name="inputEnumeration">The enumeration of inputs.</param>
            <param name="func1">Function that returns item 1 of the tuple.</param>
            <param name="func2">Function that returns item 2 of the tuple.</param>
            <param name="func3">Function that returns item 3 of the tuple.</param>
            <param name="func4">Function that returns item 4 of the tuple.</param>
            <param name="func5">Function that returns item 5 of the tuple.</param>
            <param name="func6">Function that returns item 6 of the tuple.</param>
            <param name="func7">Function that returns item 7 of the tuple.</param>
            <param name="func8">Function that returns item 8 of the tuple.</param>
            <param name="func9">Function that returns item 9 of the tuple.</param>
            <param name="func10">Function that returns item 10 of the tuple.</param>
            <param name="func11">Function that returns item 11 of the tuple.</param>
            <param name="func12">Function that returns item 12 of the tuple.</param>
            <param name="func13">Function that returns item 13 of the tuple.</param>
            <param name="func14">Function that returns item 14 of the tuple.</param>
            <param name="func15">Function that returns item 15 of the tuple.</param>
            <param name="func16">Function that returns item 16 of the tuple.</param>
            <param name="func17">Function that returns item 17 of the tuple.</param>
            <param name="func18">Function that returns item 18 of the tuple.</param>
            <param name="func19">Function that returns item 19 of the tuple.</param>
            <param name="func20">Function that returns item 20 of the tuple.</param>
            <param name="func21">Function that returns item 21 of the tuple.</param>
            <param name="func22">Function that returns item 22 of the tuple.</param>
            <param name="func23">Function that returns item 23 of the tuple.</param>
            <param name="func24">Function that returns item 24 of the tuple.</param>
            <param name="func25">Function that returns item 25 of the tuple.</param>
            <param name="func26">Function that returns item 26 of the tuple.</param>
            <param name="func27">Function that returns item 27 of the tuple.</param>
            <param name="func28">Function that returns item 28 of the tuple.</param>
            <param name="func29">Function that returns item 29 of the tuple.</param>
            <param name="func30">Function that returns item 30 of the tuple.</param>
            <param name="func31">Function that returns item 31 of the tuple.</param>
            <param name="func32">Function that returns item 32 of the tuple.</param>
            <param name="func33">Function that returns item 33 of the tuple.</param>
            <param name="func34">Function that returns item 34 of the tuple.</param>
            <returns>A tuple with 34 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Decompose``34(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20,System.Tuple{``21,``22,``23,``24,``25,``26,``27,System.Tuple{``28,``29,``30,``31,``32,``33}}}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@,``21@,``22@,``23@,``24@,``25@,``26@,``27@,``28@,``29@,``30@,``31@,``32@,``33@)">
            <summary>
            Decomposes the tuple into individual values.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <typeparam name="T31">The type of item 31.</typeparam>
            <typeparam name="T32">The type of item 32.</typeparam>
            <typeparam name="T33">The type of item 33.</typeparam>
            <typeparam name="T34">The type of item 34.</typeparam>
            <param name="tuple">The tuple to decompose.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
            <param name="item34">Item 34 of the tuple.</param>
            <returns>The <paramref name="tuple" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Create``35(``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16,``17,``18,``19,``20,``21,``22,``23,``24,``25,``26,``27,``28,``29,``30,``31,``32,``33,``34)">
            <summary>
            Used to create a tuple in nested format.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <typeparam name="T31">The type of item 31.</typeparam>
            <typeparam name="T32">The type of item 32.</typeparam>
            <typeparam name="T33">The type of item 33.</typeparam>
            <typeparam name="T34">The type of item 34.</typeparam>
            <typeparam name="T35">The type of item 35.</typeparam>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
            <param name="item34">Item 34 of the tuple.</param>
            <param name="item35">Item 35 of the tuple.</param>
            <returns>A tuple with 35 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.ToTuple``36(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``0,``3},System.Func{``0,``4},System.Func{``0,``5},System.Func{``0,``6},System.Func{``0,``7},System.Func{``0,``8},System.Func{``0,``9},System.Func{``0,``10},System.Func{``0,``11},System.Func{``0,``12},System.Func{``0,``13},System.Func{``0,``14},System.Func{``0,``15},System.Func{``0,``16},System.Func{``0,``17},System.Func{``0,``18},System.Func{``0,``19},System.Func{``0,``20},System.Func{``0,``21},System.Func{``0,``22},System.Func{``0,``23},System.Func{``0,``24},System.Func{``0,``25},System.Func{``0,``26},System.Func{``0,``27},System.Func{``0,``28},System.Func{``0,``29},System.Func{``0,``30},System.Func{``0,``31},System.Func{``0,``32},System.Func{``0,``33},System.Func{``0,``34},System.Func{``0,``35})">
            <summary>
            Used to create an enumeration of tuples from an enumeration of objects, by specifying how each item is extracted.
            </summary>
            <typeparam name="TInput">The input type.</typeparam>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <typeparam name="T31">The type of item 31.</typeparam>
            <typeparam name="T32">The type of item 32.</typeparam>
            <typeparam name="T33">The type of item 33.</typeparam>
            <typeparam name="T34">The type of item 34.</typeparam>
            <typeparam name="T35">The type of item 35.</typeparam>
            <param name="inputEnumeration">The enumeration of inputs.</param>
            <param name="func1">Function that returns item 1 of the tuple.</param>
            <param name="func2">Function that returns item 2 of the tuple.</param>
            <param name="func3">Function that returns item 3 of the tuple.</param>
            <param name="func4">Function that returns item 4 of the tuple.</param>
            <param name="func5">Function that returns item 5 of the tuple.</param>
            <param name="func6">Function that returns item 6 of the tuple.</param>
            <param name="func7">Function that returns item 7 of the tuple.</param>
            <param name="func8">Function that returns item 8 of the tuple.</param>
            <param name="func9">Function that returns item 9 of the tuple.</param>
            <param name="func10">Function that returns item 10 of the tuple.</param>
            <param name="func11">Function that returns item 11 of the tuple.</param>
            <param name="func12">Function that returns item 12 of the tuple.</param>
            <param name="func13">Function that returns item 13 of the tuple.</param>
            <param name="func14">Function that returns item 14 of the tuple.</param>
            <param name="func15">Function that returns item 15 of the tuple.</param>
            <param name="func16">Function that returns item 16 of the tuple.</param>
            <param name="func17">Function that returns item 17 of the tuple.</param>
            <param name="func18">Function that returns item 18 of the tuple.</param>
            <param name="func19">Function that returns item 19 of the tuple.</param>
            <param name="func20">Function that returns item 20 of the tuple.</param>
            <param name="func21">Function that returns item 21 of the tuple.</param>
            <param name="func22">Function that returns item 22 of the tuple.</param>
            <param name="func23">Function that returns item 23 of the tuple.</param>
            <param name="func24">Function that returns item 24 of the tuple.</param>
            <param name="func25">Function that returns item 25 of the tuple.</param>
            <param name="func26">Function that returns item 26 of the tuple.</param>
            <param name="func27">Function that returns item 27 of the tuple.</param>
            <param name="func28">Function that returns item 28 of the tuple.</param>
            <param name="func29">Function that returns item 29 of the tuple.</param>
            <param name="func30">Function that returns item 30 of the tuple.</param>
            <param name="func31">Function that returns item 31 of the tuple.</param>
            <param name="func32">Function that returns item 32 of the tuple.</param>
            <param name="func33">Function that returns item 33 of the tuple.</param>
            <param name="func34">Function that returns item 34 of the tuple.</param>
            <param name="func35">Function that returns item 35 of the tuple.</param>
            <returns>A tuple with 35 items (using nested tuples where necessary).</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.Decompose``35(System.Tuple{``0,``1,``2,``3,``4,``5,``6,System.Tuple{``7,``8,``9,``10,``11,``12,``13,System.Tuple{``14,``15,``16,``17,``18,``19,``20,System.Tuple{``21,``22,``23,``24,``25,``26,``27,System.Tuple{``28,``29,``30,``31,``32,``33,``34}}}}},``0@,``1@,``2@,``3@,``4@,``5@,``6@,``7@,``8@,``9@,``10@,``11@,``12@,``13@,``14@,``15@,``16@,``17@,``18@,``19@,``20@,``21@,``22@,``23@,``24@,``25@,``26@,``27@,``28@,``29@,``30@,``31@,``32@,``33@,``34@)">
            <summary>
            Decomposes the tuple into individual values.
            </summary>
            <typeparam name="T1">The type of item 1.</typeparam>
            <typeparam name="T2">The type of item 2.</typeparam>
            <typeparam name="T3">The type of item 3.</typeparam>
            <typeparam name="T4">The type of item 4.</typeparam>
            <typeparam name="T5">The type of item 5.</typeparam>
            <typeparam name="T6">The type of item 6.</typeparam>
            <typeparam name="T7">The type of item 7.</typeparam>
            <typeparam name="T8">The type of item 8.</typeparam>
            <typeparam name="T9">The type of item 9.</typeparam>
            <typeparam name="T10">The type of item 10.</typeparam>
            <typeparam name="T11">The type of item 11.</typeparam>
            <typeparam name="T12">The type of item 12.</typeparam>
            <typeparam name="T13">The type of item 13.</typeparam>
            <typeparam name="T14">The type of item 14.</typeparam>
            <typeparam name="T15">The type of item 15.</typeparam>
            <typeparam name="T16">The type of item 16.</typeparam>
            <typeparam name="T17">The type of item 17.</typeparam>
            <typeparam name="T18">The type of item 18.</typeparam>
            <typeparam name="T19">The type of item 19.</typeparam>
            <typeparam name="T20">The type of item 20.</typeparam>
            <typeparam name="T21">The type of item 21.</typeparam>
            <typeparam name="T22">The type of item 22.</typeparam>
            <typeparam name="T23">The type of item 23.</typeparam>
            <typeparam name="T24">The type of item 24.</typeparam>
            <typeparam name="T25">The type of item 25.</typeparam>
            <typeparam name="T26">The type of item 26.</typeparam>
            <typeparam name="T27">The type of item 27.</typeparam>
            <typeparam name="T28">The type of item 28.</typeparam>
            <typeparam name="T29">The type of item 29.</typeparam>
            <typeparam name="T30">The type of item 30.</typeparam>
            <typeparam name="T31">The type of item 31.</typeparam>
            <typeparam name="T32">The type of item 32.</typeparam>
            <typeparam name="T33">The type of item 33.</typeparam>
            <typeparam name="T34">The type of item 34.</typeparam>
            <typeparam name="T35">The type of item 35.</typeparam>
            <param name="tuple">The tuple to decompose.</param>
            <param name="item1">Item 1 of the tuple.</param>
            <param name="item2">Item 2 of the tuple.</param>
            <param name="item3">Item 3 of the tuple.</param>
            <param name="item4">Item 4 of the tuple.</param>
            <param name="item5">Item 5 of the tuple.</param>
            <param name="item6">Item 6 of the tuple.</param>
            <param name="item7">Item 7 of the tuple.</param>
            <param name="item8">Item 8 of the tuple.</param>
            <param name="item9">Item 9 of the tuple.</param>
            <param name="item10">Item 10 of the tuple.</param>
            <param name="item11">Item 11 of the tuple.</param>
            <param name="item12">Item 12 of the tuple.</param>
            <param name="item13">Item 13 of the tuple.</param>
            <param name="item14">Item 14 of the tuple.</param>
            <param name="item15">Item 15 of the tuple.</param>
            <param name="item16">Item 16 of the tuple.</param>
            <param name="item17">Item 17 of the tuple.</param>
            <param name="item18">Item 18 of the tuple.</param>
            <param name="item19">Item 19 of the tuple.</param>
            <param name="item20">Item 20 of the tuple.</param>
            <param name="item21">Item 21 of the tuple.</param>
            <param name="item22">Item 22 of the tuple.</param>
            <param name="item23">Item 23 of the tuple.</param>
            <param name="item24">Item 24 of the tuple.</param>
            <param name="item25">Item 25 of the tuple.</param>
            <param name="item26">Item 26 of the tuple.</param>
            <param name="item27">Item 27 of the tuple.</param>
            <param name="item28">Item 28 of the tuple.</param>
            <param name="item29">Item 29 of the tuple.</param>
            <param name="item30">Item 30 of the tuple.</param>
            <param name="item31">Item 31 of the tuple.</param>
            <param name="item32">Item 32 of the tuple.</param>
            <param name="item33">Item 33 of the tuple.</param>
            <param name="item34">Item 34 of the tuple.</param>
            <param name="item35">Item 35 of the tuple.</param>
            <returns>The <paramref name="tuple" />.</returns>
        </member>
        <member name="F:WebApplications.Utilities.ExtendedTuple._tupleIndexers">
            <summary>
              A cache for indexers (by tuple type), so that when requested they can be retrieved rather than recomputed.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.ExtendedTuple._tupleTypes">
            <summary>
              A cache of the item types for a tuple (by tuple type), so that when requested they can be retrieved rather than recomputed.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.ExtendedTuple._tupleIterators">
            <summary>
              A cache of the iterators (by tuple type) so that when requested they can be retrieved rather than recomputed.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.GetTupleItem``2(``0,System.Int32)">
            <summary>
              Retrieves the item at the index specified.
            </summary>
            <typeparam name="TTuple">The tuple type.</typeparam>
            <typeparam name="TItem">The item type.</typeparam>
            <param name="tuple">The tuple.</param>
            <param name="index">The index of the item to retrieve.</param>
            <returns>The item located at the <paramref name="index"/> specified.</returns>
            <exception cref="T:System.InvalidCastException">
              The item located at <paramref name="index"/> cannot be cast to type <typeparamref name="TItem"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.GetTupleIndexer``1(``0)">
            <summary>
              Gets the indexer for the specified <see cref="T:System.Tuple"/>.
            </summary>
            <typeparam name="T">The tuple type.</typeparam>
            <param name="tuple">The tuple whose indexer we want.</param>
            <returns>
              A function that takes an index and retrieves the corresponding item from the specified <paramref name="tuple"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.GetTupleIndexer(System.Type)">
            <summary>
              Retrieves the indexer for type of <see cref="T:System.Tuple"/> specified.
            </summary>
            <param name="tupleType">The type of the tuple.</param>
            <returns>The indexer (as a function) for the <paramref name="tupleType"/> specified</returns>
            <remarks>
              <para>Supports standard tuple extension, where TRest is itself a <see cref="T:System.Tuple"/>.</para>
              <para>For example index 7 (indices are zero-indexed so that is the 8th item) of a tuple of type:
              Tuple&lt;int, int, int, int, int, int, int, <b>Tuple&lt;string&gt;</b>&gt; is the equivalent of
              <b>tuple.Rest.Item1</b> and is of type <see cref="T:System.String"/>.</para>
              <para>The item at index 7 of a tuple of type Tuple&lt;int, int, int, int, int, int, int, <b>string&gt;</b>
              is the equivalent of <b>tuple.Rest</b> and is of type <see cref="T:System.String"/>.</para>
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.GetIndexType``1(``0,System.Int32)">
            <summary>
              Gets the type of the item at the specified index.
            </summary>
            <typeparam name="T">The tuple type.</typeparam>
            <param name="tuple">The tuple.</param>
            <param name="index">The item index.</param>
            <returns>The type of the item at the specified <paramref name="index"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.GetIndexTypes``1(``0)">
            <summary>
              Gets an <see cref="T:System.Array"/> of the types for all the items in the <see cref="T:System.Tuple"/>.
            </summary>
            <typeparam name="T">The tuple type.</typeparam>
            <param name="tuple">The tuple.</param>
            <returns>
              An <see cref="T:System.Array"/> containing all the item types of the specified <paramref name="tuple"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.GetIndexTypes(System.Type)">
            <summary>
              Gets an <see cref="T:System.Array"/> representation of all the types in the <see cref="T:System.Tuple"/>.
            </summary>
            <param name="tupleType">The tuple type.</param>
            <returns>
              An <see cref="T:System.Array"/> containing all the item types of the specified <paramref name="tupleType"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.GetTupleIterator``1(``0)">
            <summary>
            Gets the <see cref="T:System.Tuple">tuple</see>'s iterator.
            </summary>
            <typeparam name="T">The tuple type.</typeparam>
            <param name="tuple">The tuple.</param>
            <returns>An enumerator that can be used to iterate through all the items in the collection.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple.GetTupleIterator(System.Type)">
            <summary>
              Gets a function that accepts a <see cref="T:System.Tuple"/> and returns an iterator.
            </summary>
            <param name="tupleType">The type of the tuple.</param>
            <returns>A function that takes a <see cref="T:System.Tuple"/> and returns the enumerator.</returns>
        </member>
        <member name="T:WebApplications.Utilities.ExtendedTuple`1">
            <summary>
              Provides additional information and accessors for a <see cref="F:WebApplications.Utilities.ExtendedTuple`1.Tuple"/>.
            </summary>
            <typeparam name="T">The tuple type.</typeparam>
        </member>
        <member name="F:WebApplications.Utilities.ExtendedTuple`1.Indexer">
            <summary>
              Accepts a <see cref="F:WebApplications.Utilities.ExtendedTuple`1.Tuple"/> and an index and returns the item at that index.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.ExtendedTuple`1._types">
            <summary>
              An <see cref="T:System.Array"/> containing the types of all the items in the <see cref="F:WebApplications.Utilities.ExtendedTuple`1.Tuple"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.ExtendedTuple`1.Size">
            <summary>
              Accepts a <see cref="F:WebApplications.Utilities.ExtendedTuple`1.Tuple"/> and returns its size (the number of items).
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.ExtendedTuple`1.Tuple">
            <summary>
              Holds the instance of the extended <see cref="F:WebApplications.Utilities.ExtendedTuple`1.Tuple"/>.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple`1.#cctor">
            <summary>
              Initialises the current <see cref="F:WebApplications.Utilities.ExtendedTuple`1.Tuple"/> type.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple`1.#ctor(`0)">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.ExtendedTuple`1"/> class.
            </summary>
            <param name="tuple">The <see cref="F:WebApplications.Utilities.ExtendedTuple`1.Tuple"/> to extend.</param>
        </member>
        <member name="P:WebApplications.Utilities.ExtendedTuple`1.Types">
            <summary>
              Gets the types of all the items in the <see cref="F:WebApplications.Utilities.ExtendedTuple`1.Tuple"/>.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.ExtendedTuple`1.Item(System.Int32)">
            <summary>
              Retrieves the item at the index specified.
            </summary>
            <returns>The item located at the index specified.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple`1.GetEnumerator">
            <summary>
              Returns an enumerator that iterates through all the items in the collection.
            </summary>
            <returns>
              An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through all the items in the collection.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple`1.GetIndexType(System.Int32)">
            <summary>
              Retrieves the item's type using the index specified.
            </summary>
            <param name="index">The item index.</param>
            <returns>The type of the item at the <paramref name="index"/> specified.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedTuple`1.GetItem``1(System.Int32)">
            <summary>
              Retrieves the item at the index specified.
            </summary>
            <typeparam name="TItem">The item type.</typeparam>
            <param name="index">The item index.</param>
            <returns>The item located at the <paramref name="index"/> specified.</returns>
            <exception cref="T:System.InvalidCastException">
              The item located at <paramref name="index"/> cannot be cast to type <typeparamref name="TItem"/>.
            </exception>
        </member>
        <member name="T:WebApplications.Utilities.Financials.Financial">
            <summary>
            Represents a financial value and currency binding.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Financials.Financial.#ctor(WebApplications.Utilities.Globalization.CurrencyInfo,System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Financials.Financial"/> class.
            </summary>
            <param name="currency">The currency.</param>
            <param name="amount">The amount.</param>
        </member>
        <member name="P:WebApplications.Utilities.Financials.Financial.Currency">
            <summary>
            Gets or sets the currency.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Financials.Financial.Amount">
            <summary>
            Gets or sets the amount.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Financials.Financial.Equals(WebApplications.Utilities.Financials.Financial)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            <see langword="true"/> if the current object is equal to the other parameter; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Financials.Financial.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <param name="format">The format style: "I" for the value followed by the ISO currency code, "C" for a culture specific currency format.</param>
            <param name="provider">The format provider.</param>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
            <exception cref="T:System.FormatException">The format string is not supported.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Financials.Financial.Exchange(WebApplications.Utilities.Globalization.CurrencyInfo,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Exchanges the specified currency.
            </summary>
            <param name="currency">The currency.</param>
            <param name="exchangeRate">The exchange rate.</param>
            <param name="inputCharge">The input charge.</param>
            <param name="outputCharge">The output charge.</param>
            <returns>A <see cref="T:WebApplications.Utilities.Financials.Financial"/> with the exchange rate and charges applied.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Financials.Financial.Sum(System.Collections.Generic.IEnumerable{WebApplications.Utilities.Financials.Financial})">
            <summary>
            Sums the amounts specified financials.
            </summary>
            <param name="financials">The financials.</param>
            <returns><see cref="T:WebApplications.Utilities.Financials.Financial"/> object with an amount of the specified financials summed.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Financials.Financial.Average(System.Collections.Generic.IEnumerable{WebApplications.Utilities.Financials.Financial})">
            <summary>
            Averages the specified financials.
            </summary>
            <param name="financials">The financials.</param>
            <returns><see cref="T:WebApplications.Utilities.Financials.Financial"/> object with an amount of the specified financials averaged.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Financials.Financial.op_Addition(WebApplications.Utilities.Financials.Financial,WebApplications.Utilities.Financials.Financial)">
            <summary>
            Implements the operator +.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Financials.Financial.op_Addition(WebApplications.Utilities.Financials.Financial,System.Decimal)">
            <summary>
            Implements the operator +.
            </summary>
            <param name="financial">The financial.</param>
            <param name="amount">The amount.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Financials.Financial.op_Subtraction(WebApplications.Utilities.Financials.Financial,WebApplications.Utilities.Financials.Financial)">
            <summary>
            Implements the operator -.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Financials.Financial.op_Subtraction(WebApplications.Utilities.Financials.Financial,System.Decimal)">
            <summary>
            Implements the operator -.
            </summary>
            <param name="financial">The financial.</param>
            <param name="amount">The amount.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Financials.Financial.op_LessThan(WebApplications.Utilities.Financials.Financial,WebApplications.Utilities.Financials.Financial)">
            <summary>
            Implements the operator &lt;.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Financials.Financial.op_GreaterThan(WebApplications.Utilities.Financials.Financial,WebApplications.Utilities.Financials.Financial)">
            <summary>
            Implements the operator &gt;.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Financials.Financial.op_LessThanOrEqual(WebApplications.Utilities.Financials.Financial,WebApplications.Utilities.Financials.Financial)">
            <summary>
            Implements the operator &lt;=.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Financials.Financial.op_GreaterThanOrEqual(WebApplications.Utilities.Financials.Financial,WebApplications.Utilities.Financials.Financial)">
            <summary>
            Implements the operator &gt;=.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Financials.Financial.op_Equality(WebApplications.Utilities.Financials.Financial,WebApplications.Utilities.Financials.Financial)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Financials.Financial.op_Inequality(WebApplications.Utilities.Financials.Financial,WebApplications.Utilities.Financials.Financial)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Financials.Financial.op_Multiply(WebApplications.Utilities.Financials.Financial,WebApplications.Utilities.Financials.Financial)">
            <summary>
            Implements the operator *.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Financials.Financial.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Financials.Financial.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Financials.Financial.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Financials.Financial.ToString(System.String)">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <param name="format">The format style: "I" for the value followed by the ISO currency code, "C" for a culture specific currency format.</param>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Financials.Financial.FormatCurrency(System.Globalization.CultureInfo)">
            <summary>
            Formats the currency.
            </summary>
            <param name="culture">The culture.</param>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Financials.Financial.ValidateCurrenciesMatch(WebApplications.Utilities.Globalization.CurrencyInfo,WebApplications.Utilities.Globalization.CurrencyInfo,System.String)">
            <summary>
            Validates the currencies match.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <param name="operation">The operation.</param>
        </member>
        <member name="T:WebApplications.Utilities.Graphic">
            <summary>
            Holds image data and supports out typing of images.  Prevents unnecessary loading of images when passing data
            around, and makes much safer use of streams.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Graphic.Data">
            <summary>
            The data.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Graphic.Format">
            <summary>
            The format of the image.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Graphic.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Graphic" /> class from a system image.
            </summary>
            <param name="encodedData">The encoded data.</param>
        </member>
        <member name="M:WebApplications.Utilities.Graphic.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Graphic" /> class from a system image.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:WebApplications.Utilities.Graphic.#ctor(System.Drawing.Image)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Graphic" /> class from a system image.
            </summary>
            <param name="image">The image.</param>
        </member>
        <member name="P:WebApplications.Utilities.Graphic.Encoded">
            <summary>
            Gets the image as a Base 64 encoded string.
            </summary>
            <value>The encoded.</value>
        </member>
        <member name="M:WebApplications.Utilities.Graphic.Equals(WebApplications.Utilities.Graphic)">
            <summary>
            Equalses the specified other.
            </summary>
            <param name="other">The other.</param>
            <returns><c>true</c> if equal, <c>false</c> otherwise</returns>
        </member>
        <member name="M:WebApplications.Utilities.Graphic.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <see langword="true" /> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Graphic.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Graphic.GetImage">
            <summary>
            Gets a <see cref="T:System.Drawing.Image"/>.
            </summary>
            <returns>System.Drawing.Image.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Graphic.ToDataUrl">
            <summary>
            Gets the data URL for the graphic.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.Graphic.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:WebApplications.Utilities.GraphicExtensions">
            <summary>
            Extension methods for Graphics.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.GraphicExtensions._graphicFormatsByGuid">
            <summary>
            Maps underlying image format GUIDs to their enumeration equivalent.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.GraphicExtensions._graphicFormats">
            <summary>
            Maps the image format enumeration to the system equivalent.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.GraphicExtensions.ToGraphicFormat(System.Drawing.Imaging.ImageFormat)">
            <summary>
            Converts a system image format to the Traveller enumeration equivalent.
            </summary>
            <param name="format">The format.</param>
            <returns>ImageFormat.</returns>
        </member>
        <member name="M:WebApplications.Utilities.GraphicExtensions.ToImageFormat(WebApplications.Utilities.GraphicFormat)">
            <summary>
            Get the system image format from the Traveller enumeration.
            </summary>
            <param name="format">The format.</param>
            <returns>System.Drawing.Imaging.ImageFormat.</returns>
        </member>
        <member name="M:WebApplications.Utilities.GraphicExtensions.GetGraphicFormat(System.Byte[])">
            <summary>
            Gets the image format from the header of the image data.
            </summary>
            <param name="bytes">The bytes.</param>
            <returns>ImageFormat.</returns>
            <exception cref="T:System.InvalidOperationException"></exception>
            <remarks>
            See (amongst others) http://www.garykessler.net/library/file_sigs.html
            </remarks>
        </member>
        <member name="T:WebApplications.Utilities.GraphicFormat">
            <summary>
            Supported image formats.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.GraphicFormat.Bmp">
            <summary>
            The bitmap (BMP) image format
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.GraphicFormat.Emf">
            <summary>
            The enhanced metafile (EMF) image format.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.GraphicFormat.Wmf">
            <summary>
            The the Windows metafile (WMF) image format.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.GraphicFormat.Gif">
            <summary>
            The Graphics Interchange Format (GIF) image format.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.GraphicFormat.Jpeg">
            <summary>
            The the Joint Photographic Experts Group (JPEG) image format.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.GraphicFormat.Png">
            <summary>
            The the W3C Portable Network Graphics (PNG) image format.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.GraphicFormat.Tiff">
            <summary>
            The the Tagged Image File Format (TIFF) image format.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.GraphicFormat.Icon">
            <summary>
            The the Windows icon image format.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Grouping`2">
            <summary>
            Implements <see cref="T:System.Linq.IGrouping`2" />.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Grouping`2._keyValuePair">
            <summary>
            The key value pair.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Grouping`2.#ctor(System.Collections.Generic.KeyValuePair{`0,System.Collections.Generic.List{`1}})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Grouping`2" /> class.
            </summary>
            <param name="keyValuePair">The key value pair.</param>
        </member>
        <member name="M:WebApplications.Utilities.Grouping`2.#ctor(`0,System.Collections.Generic.List{`1})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Grouping`2" /> class.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The values.</param>
        </member>
        <member name="P:WebApplications.Utilities.Grouping`2.Key">
            <summary>
            Gets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="M:WebApplications.Utilities.Grouping`2.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Grouping`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:WebApplications.Utilities.HashCollection`1">
            <summary>
            Implements a <see cref="T:System.Collections.Generic.HashSet`1" /> with <see cref="T:System.Collections.ICollection" /> support, allowing extraction of non-generic
            information.
            </summary>
            <typeparam name="T">The object type.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.HashCollection`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.HashCollection`1" /> class.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.HashCollection`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.HashCollection`1" /> class.
            </summary>
            <param name="comparer">The comparer.</param>
        </member>
        <member name="M:WebApplications.Utilities.HashCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Implementation Notes:
            Since resizes are relatively expensive (require rehashing), this attempts to minimize
            the need to resize by setting the initial capacity based on size of collection.
            </summary>
            <param name="collection">The collection.</param>
        </member>
        <member name="M:WebApplications.Utilities.HashCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Implementation Notes:
            Since resizes are relatively expensive (require rehashing), this attempts to minimize
            the need to resize by setting the initial capacity based on size of collection.
            </summary>
            <param name="collection">The collection.</param>
            <param name="comparer">The comparer.</param>
        </member>
        <member name="M:WebApplications.Utilities.HashCollection`1.Equals(WebApplications.Utilities.HashCollection{`0})">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.HashCollection`1.Equals(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.HashCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies th.
            </summary>
            <param name="array">The array.</param>
            <param name="arrayIndex">Index of the array.</param>
        </member>
        <member name="P:WebApplications.Utilities.HashCollection`1.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets the sync root.
            </summary>
            <value>The sync root.</value>
        </member>
        <member name="P:WebApplications.Utilities.HashCollection`1.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets the is synchronized.
            </summary>
            <value>The is synchronized.</value>
        </member>
        <member name="M:WebApplications.Utilities.HashCollection`1.WebApplications#Utilities#ISet#Add(System.Object)">
            <summary>
            Adds an element to the current set and returns a value to indicate if the element was successfully added.
            </summary>
            <param name="item">The element to add to the set.</param>
            <returns>true if the element is added to the set; false if the element is already in the set.</returns>
        </member>
        <member name="M:WebApplications.Utilities.HashCollection`1.Remove(System.Object)">
            <summary>
            Removes an element to the current set and returns a value to indicate if the element was successfully added.
            </summary>
            <param name="item">The element to add to the set.</param>
            <returns>true if the element is added to the set; false if the element is already in the set.</returns>
        </member>
        <member name="M:WebApplications.Utilities.HashCollection`1.Contains(System.Object)">
            <summary>
            Determines whether the set contains the specified item.
            </summary>
            <param name="item">The item.</param>
            <returns>
                <see langword="true" /> if the set contains the specified item; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.HashCollection`1.WebApplications#Utilities#ISet#UnionWith(System.Collections.IEnumerable)">
            <summary>
            Modifies the current set so that it contains all elements that are present in either the current set or the specified
            collection.
            </summary>
            <param name="other">The collection to compare to the current set.</param>
        </member>
        <member name="M:WebApplications.Utilities.HashCollection`1.WebApplications#Utilities#ISet#IntersectWith(System.Collections.IEnumerable)">
            <summary>
            Modifies the current set so that it contains only elements that are also in a specified collection.
            </summary>
            <param name="other">The collection to compare to the current set.</param>
        </member>
        <member name="M:WebApplications.Utilities.HashCollection`1.WebApplications#Utilities#ISet#ExceptWith(System.Collections.IEnumerable)">
            <summary>
            Removes all elements in the specified collection from the current set.
            </summary>
            <param name="other">The collection of items to remove from the set.</param>
        </member>
        <member name="P:WebApplications.Utilities.HashCollection`1.System#Collections#ICollection#Count">
            <summary>
            Gets the number of elements that are contained in a set.
            </summary>
            <value>The count.</value>
        </member>
        <member name="M:WebApplications.Utilities.HashCollection`1.WebApplications#Utilities#ISet#SymmetricExceptWith(System.Collections.IEnumerable)">
            <summary>
            Modifies the current set so that it contains only elements that are present either in the current set or in the
            specified collection, but not both.
            </summary>
            <param name="other">The collection to compare to the current set.</param>
        </member>
        <member name="M:WebApplications.Utilities.HashCollection`1.Union(System.Collections.IEnumerable)">
            <summary>
            Creates a new set that contains all elements that are present in either the current set or the specified collection.
            </summary>
            <param name="other">The collection to compare to the current set.</param>
            <returns>ISet.</returns>
        </member>
        <member name="M:WebApplications.Utilities.HashCollection`1.Intersect(System.Collections.IEnumerable)">
            <summary>
            Creates a new set that contains only elements that are also in a specified collection.
            </summary>
            <param name="other">The collection to compare to the current set.</param>
            <returns>ISet.</returns>
        </member>
        <member name="M:WebApplications.Utilities.HashCollection`1.Except(System.Collections.IEnumerable)">
            <summary>
            Creates a new set that contains only elements that are not in a specified collection.
            </summary>
            <param name="other">The collection of items to remove from the set.</param>
            <returns>ISet.</returns>
        </member>
        <member name="M:WebApplications.Utilities.HashCollection`1.WebApplications#Utilities#ISet#IsSubsetOf(System.Collections.IEnumerable)">
            <summary>
            Determines whether a set is a subset of a specified collection.
            </summary>
            <param name="other">The collection to compare to the current set.</param>
            <returns>
            true if the current set is a subset of <paramref name="other" />; otherwise, false.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.HashCollection`1.WebApplications#Utilities#ISet#IsSupersetOf(System.Collections.IEnumerable)">
            <summary>
            Determines whether the current set is a superset of a specified collection.
            </summary>
            <param name="other">The collection to compare to the current set.</param>
            <returns>
            true if the current set is a superset of <paramref name="other" />; otherwise, false.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.HashCollection`1.WebApplications#Utilities#ISet#IsProperSupersetOf(System.Collections.IEnumerable)">
            <summary>
            Determines whether the current set is a proper (strict) superset of a specified collection.
            </summary>
            <param name="other">The collection to compare to the current set.</param>
            <returns>
            true if the current set is a proper superset of <paramref name="other" />; otherwise, false.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.HashCollection`1.WebApplications#Utilities#ISet#IsProperSubsetOf(System.Collections.IEnumerable)">
            <summary>
            Determines whether the current set is a proper (strict) subset of a specified collection.
            </summary>
            <param name="other">The collection to compare to the current set.</param>
            <returns>
            true if the current set is a proper subset of <paramref name="other" />; otherwise, false.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.HashCollection`1.WebApplications#Utilities#ISet#Overlaps(System.Collections.IEnumerable)">
            <summary>
            Determines whether the current set overlaps with the specified collection.
            </summary>
            <param name="other">The collection to compare to the current set.</param>
            <returns>
            true if the current set and <paramref name="other" /> share at least one common element; otherwise, false.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.HashCollection`1.WebApplications#Utilities#ISet#SetEquals(System.Collections.IEnumerable)">
            <summary>
            Determines whether the current set and the specified collection contain the same elements.
            </summary>
            <param name="other">The collection to compare to the current set.</param>
            <returns>
            true if the current set is equal to <paramref name="other" />; otherwise, false.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.HashCollection`1.WebApplications#Utilities#ISet#Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>ISet.</returns>
        </member>
        <member name="M:WebApplications.Utilities.HashCollection`1.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>HashCollection.</returns>
        </member>
        <member name="P:WebApplications.Utilities.HashCollection`1.Type">
            <summary>
            Gets the type of the objects stored in the set.
            </summary>
            <value>The type.</value>
        </member>
        <member name="M:WebApplications.Utilities.HashCollection`1.Equals(WebApplications.Utilities.ISet)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.HashCollection`1.Equals(System.Collections.IEnumerable)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.HashCollection`1.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>
                <see langword="true" /> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise,
                <see langword="false" />.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.HashCollection`1.op_Equality(WebApplications.Utilities.HashCollection{`0},WebApplications.Utilities.HashCollection{`0})">
            <summary>
            Implements the ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:WebApplications.Utilities.HashCollection`1.op_Inequality(WebApplications.Utilities.HashCollection{`0},WebApplications.Utilities.HashCollection{`0})">
            <summary>
            Implements the !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:WebApplications.Utilities.HashCollection`1.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:WebApplications.Utilities.HashCollection`1.System#Collections#Generic#IEnumerable{System#Object}#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:WebApplications.Utilities.HashCollection`1.ToString">
            <summary>
            Returns a string representation of the collection.
            </summary>
            <returns>A string representation of the collection.</returns>
        </member>
        <member name="T:WebApplications.Utilities.HashedByteArray">
            <summary>
            Holds a readonly byte array with an associated hash for rapid true equality comparison and dictionary
            insertion.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.HashedByteArray.LargePrime">
            <summary>
            A large prime number.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.HashedByteArray.SmallPrime">
            <summary>
            A small prime number.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.HashedByteArray._hash">
            <summary>
            Holds the hash for the associated data.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.HashedByteArray.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.HashedByteArray"/> class from a base-64 encoded string.
            </summary>
            <param name="encoded">The base-64 encoded string.</param>
        </member>
        <member name="M:WebApplications.Utilities.HashedByteArray.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.HashedByteArray"/> class.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:WebApplications.Utilities.HashedByteArray.#ctor(System.Byte[],System.Lazy{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.HashedByteArray" /> class.
            </summary>
            <param name="data">The data.</param>
            <param name="encoded">The encoded data.</param>
            <exception cref="T:System.ArgumentNullException">data</exception>
        </member>
        <member name="P:WebApplications.Utilities.HashedByteArray.Encoded">
            <summary>
            Gets the encoded version of the byte[].
            </summary>
            <value>The encoded.</value>
        </member>
        <member name="P:WebApplications.Utilities.HashedByteArray.Length">
            <summary>
            Gets the length.
            </summary>
            <value>The length.</value>
        </member>
        <member name="P:WebApplications.Utilities.HashedByteArray.LongLength">
            <summary>
            Gets the long length.
            </summary>
            <value>The length.</value>
        </member>
        <member name="P:WebApplications.Utilities.HashedByteArray.Item(System.Int32)">
            <summary>
            Allows retrieval of the bytes from the byte array.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.HashedByteArray.Equals(System.Byte[])">
            <summary>
            Indicates whether the current hashed byte array is equal to a given <paramref name="other"/> byte array.
            </summary>
            <param name="other">The other.</param>
            <returns><c>true</c> if this hashed byte array is equal to the <paramref name="other"/> byte array, <c>false</c> otherwise</returns>
        </member>
        <member name="M:WebApplications.Utilities.HashedByteArray.Equals(WebApplications.Utilities.HashedByteArray)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.</returns>
        </member>
        <member name="M:WebApplications.Utilities.HashedByteArray.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:WebApplications.Utilities.HashedByteArray.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:WebApplications.Utilities.HashedByteArray.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="P:WebApplications.Utilities.HashedByteArray.HashCode">
            <summary>
            Returns a long hash code for this instance.
            </summary>
            <returns>A long hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table, provides better seperation that the standard
            integer hash code.</returns>
        </member>
        <member name="M:WebApplications.Utilities.HashedByteArray.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns><see langword="true" /> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.HashedByteArray.op_Equality(WebApplications.Utilities.HashedByteArray,WebApplications.Utilities.HashedByteArray)">
            <summary>
            Implements the ==.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:WebApplications.Utilities.HashedByteArray.op_Inequality(WebApplications.Utilities.HashedByteArray,WebApplications.Utilities.HashedByteArray)">
            <summary>
            Implements the !=.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:WebApplications.Utilities.HashedByteArray.op_Implicit(System.Byte[])~WebApplications.Utilities.HashedByteArray">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Byte[]"/> to <see cref="T:WebApplications.Utilities.HashedByteArray"/>.
            </summary>
            <param name="bytes">The bytes.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:WebApplications.Utilities.HashedByteArray.op_Implicit(WebApplications.Utilities.HashedByteArray)~System.Byte[]">
            <summary>
            Performs an implicit conversion from <see cref="T:WebApplications.Utilities.HashedByteArray"/> to <see cref="T:System.Byte[]"/>.
            </summary>
            <param name="hashedByteArray">The hashed byte array.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="T:WebApplications.Utilities.IOptional">
            <summary>
            Interface for an object that has an optional value.
            </summary>
            <remarks>
            This interface should only ever be implemented by <see cref="T:WebApplications.Utilities.Optional`1" />, hence it is internal.
            </remarks>
        </member>
        <member name="P:WebApplications.Utilities.IOptional.IsAssigned">
            <summary>
            Gets a value indicating whether this instance is assigned.
            </summary>
            <value>
                <see langword="true" /> if this instance is assigned; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:WebApplications.Utilities.IOptional.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:WebApplications.Utilities.IOptional`1">
            <summary>
            Interface for an object that has an optional value.
            </summary>
            <remarks>
            This interface should only ever be implemented by <see cref="T:WebApplications.Utilities.Optional`1" />, hence it is internal.
            </remarks>
        </member>
        <member name="P:WebApplications.Utilities.IOptional`1.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:WebApplications.Utilities.IOrderedLookup`2">
            <summary>
            Implements a lookup where the order of keys is maintained.
            </summary>
            <typeparam name="TKey">The key type.</typeparam>
            <typeparam name="TElement">The element type.</typeparam>
        </member>
        <member name="P:WebApplications.Utilities.IOrderedLookup`2.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.IEnumerable`1"/> sequence of values indexed by a specified key.
            </summary>
            <returns>
            The <see cref="T:System.Collections.Generic.IEnumerable`1"/> sequence of values indexed by the specified key.
            </returns>
            <param name="key">The key of the desired sequence of values.</param>
        </member>
        <member name="T:WebApplications.Utilities.ISet">
            <summary>
            Non-generic version of <see cref="T:System.Collections.Generic.ISet`1" />
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.ISet.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.ISet.Add(System.Object)">
            <summary>
            Adds an element to the current set and returns a value to indicate if the element was successfully added.
            </summary>
            <returns>
            true if the element is added to the set; false if the element is already in the set.
            </returns>
            <param name="item">The element to add to the set.</param>
        </member>
        <member name="M:WebApplications.Utilities.ISet.Remove(System.Object)">
            <summary>
            Removes an element to the current set and returns a value to indicate if the element was successfully added.
            </summary>
            <returns>
            true if the element is added to the set; false if the element is already in the set.
            </returns>
            <param name="item">The element to add to the set.</param>
        </member>
        <member name="M:WebApplications.Utilities.ISet.Contains(System.Object)">
            <summary>
            Determines whether the set contains the specified item.
            </summary>
            <param name="item">The item.</param>
            <returns>
                <see langword="true" /> if the set contains the specified item; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ISet.UnionWith(System.Collections.IEnumerable)">
            <summary>
            Modifies the current set so that it contains all elements that are present in either the current set or the specified
            collection.
            </summary>
            <param name="other">The collection to compare to the current set.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="other" /> is null.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.ISet.IntersectWith(System.Collections.IEnumerable)">
            <summary>
            Modifies the current set so that it contains only elements that are also in a specified collection.
            </summary>
            <param name="other">The collection to compare to the current set.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="other" /> is null.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.ISet.ExceptWith(System.Collections.IEnumerable)">
            <summary>
            Removes all elements in the specified collection from the current set.
            </summary>
            <param name="other">The collection of items to remove from the set.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="other" /> is null.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.ISet.SymmetricExceptWith(System.Collections.IEnumerable)">
            <summary>
            Modifies the current set so that it contains only elements that are present either in the current set or in the
            specified collection, but not both.
            </summary>
            <param name="other">The collection to compare to the current set.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="other" /> is null.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.ISet.Union(System.Collections.IEnumerable)">
            <summary>
            Creates a new set that contains all elements that are present in either the current set or the specified collection.
            </summary>
            <param name="other">The collection to compare to the current set.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="other" /> is null.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.ISet.Intersect(System.Collections.IEnumerable)">
            <summary>
            Creates a new set that contains only elements that are also in a specified collection.
            </summary>
            <param name="other">The collection to compare to the current set.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="other" /> is null.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.ISet.Except(System.Collections.IEnumerable)">
            <summary>
            Creates a new set that contains only elements that are not in a specified collection.
            </summary>
            <param name="other">The collection of items to remove from the set.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="other" /> is null.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.ISet.IsSubsetOf(System.Collections.IEnumerable)">
            <summary>
            Determines whether a set is a subset of a specified collection.
            </summary>
            <returns>
            true if the current set is a subset of <paramref name="other" />; otherwise, false.
            </returns>
            <param name="other">The collection to compare to the current set.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="other" /> is null.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.ISet.IsSupersetOf(System.Collections.IEnumerable)">
            <summary>
            Determines whether the current set is a superset of a specified collection.
            </summary>
            <returns>
            true if the current set is a superset of <paramref name="other" />; otherwise, false.
            </returns>
            <param name="other">The collection to compare to the current set.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="other" /> is null.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.ISet.IsProperSupersetOf(System.Collections.IEnumerable)">
            <summary>
            Determines whether the current set is a proper (strict) superset of a specified collection.
            </summary>
            <returns>
            true if the current set is a proper superset of <paramref name="other" />; otherwise, false.
            </returns>
            <param name="other">The collection to compare to the current set. </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="other" /> is null.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.ISet.IsProperSubsetOf(System.Collections.IEnumerable)">
            <summary>
            Determines whether the current set is a proper (strict) subset of a specified collection.
            </summary>
            <returns>
            true if the current set is a proper subset of <paramref name="other" />; otherwise, false.
            </returns>
            <param name="other">The collection to compare to the current set.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="other" /> is null.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.ISet.Overlaps(System.Collections.IEnumerable)">
            <summary>
            Determines whether the current set overlaps with the specified collection.
            </summary>
            <returns>
            true if the current set and <paramref name="other" /> share at least one common element; otherwise, false.
            </returns>
            <param name="other">The collection to compare to the current set.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="other" /> is null.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.ISet.SetEquals(System.Collections.IEnumerable)">
            <summary>
            Determines whether the current set and the specified collection contain the same elements.
            </summary>
            <returns>
            true if the current set is equal to <paramref name="other" />; otherwise, false.
            </returns>
            <param name="other">The collection to compare to the current set.</param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="other" /> is null.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.ISet.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>ISet.</returns>
        </member>
        <member name="P:WebApplications.Utilities.ISet.Type">
            <summary>
            Gets the type of the objects stored in the set.
            </summary>
            <value>The type.</value>
        </member>
        <member name="T:WebApplications.Utilities.KeyComparer`2">
            <summary>
            Equality comparer for <see cref="T:System.Collections.Generic.KeyValuePair`2"/> that only considers keys.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="F:WebApplications.Utilities.KeyComparer`2.Default">
            <summary>
            The default <see cref="T:System.Collections.Generic.KeyValuePair`2"/>.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.KeyComparer`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Prevents multiple instances of the <see cref="T:WebApplications.Utilities.KeyComparer`2"/> class from being created.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.KeyComparer`2.Equals(System.Collections.Generic.KeyValuePair{`0,`1},System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Determines whether the specified objects have equal keys.
            </summary>
            <param name="x">The first object of type <see cref="T:System.Collections.Generic.KeyValuePair`2"/> to compare.</param>
            <param name="y">The second object of type <see cref="T:System.Collections.Generic.KeyValuePair`2"/> to compare.</param>
            <returns>true if the specified objects are equal; otherwise, false.</returns>
        </member>
        <member name="M:WebApplications.Utilities.KeyComparer`2.GetHashCode(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> for which a hash code is to be returned.</param>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Lookup`2">
            <summary>
            Implements <see cref="T:System.Linq.ILookup`2" />, and supports adding elements individually.
            </summary>
            <typeparam name="TKey">The type of the T key.</typeparam>
            <typeparam name="TElement">The type of the T element.</typeparam>
        </member>
        <member name="F:WebApplications.Utilities.Lookup`2._data">
            <summary>
            The underlying data.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Lookup`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Lookup`2" /> class.
            </summary>
            <param name="capacity">The capacity.</param>
            <param name="comparer">The comparer.</param>
        </member>
        <member name="P:WebApplications.Utilities.Lookup`2.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:WebApplications.Utilities.Lookup`2.ValuesCount">
            <summary>
            Gets the values count.
            </summary>
            <value>The values count.</value>
        </member>
        <member name="P:WebApplications.Utilities.Lookup`2.Item(`0)">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.IEnumerable`1" /> with the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns>IEnumerable{.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Lookup`2.TryGetValues(`0,System.Collections.Generic.IEnumerable{`1}@)">
            <summary>
            Tries to get the values with the given key.
            </summary>
            <param name="key">The key.</param>
            <param name="values">The values.</param>
            <returns><see langword="true" /> if the key was found, <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Lookup`2.Contains(`0)">
            <summary>
            Determines whether [contains] [the specified key].
            </summary>
            <param name="key">The key.</param>
            <returns>
                <see langword="true" /> if [contains] [the specified key]; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Lookup`2.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Lookup`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Lookup`2.Add(`0,`1)">
            <summary>
            Adds the specified key value pair.
            </summary>
            <param name="key">The key.</param>
            <param name="element">The element.</param>
        </member>
        <member name="M:WebApplications.Utilities.Lookup`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Adds the specified key value pair.
            </summary>
            <param name="keyValuePair">The key value pair.</param>
        </member>
        <member name="M:WebApplications.Utilities.Lookup`2.AddRange(`0,System.Collections.Generic.IEnumerable{`1})">
            <summary>
            Adds the specified values.
            </summary>
            <param name="key">The key.</param>
            <param name="elements">The elements.</param>
        </member>
        <member name="M:WebApplications.Utilities.Lookup`2.AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>
            Adds the specified values.
            </summary>
            <param name="elements">The elements.</param>
        </member>
        <member name="M:WebApplications.Utilities.Lookup`2.Remove(`0)">
            <summary>
            Removes all elements corresponding to a given key.
            </summary>
            <param name="key">The key</param>
        </member>
        <member name="M:WebApplications.Utilities.Lookup`2.Remove(`0,`1)">
            <summary>
            Removes the first occurrence of a specified element corresponding to a given key.
            </summary>
            <param name="key">The key</param>
            <param name="element">The element</param>
        </member>
        <member name="M:WebApplications.Utilities.Lookup`2.Clear">
            <summary>
            Removes all the keys and values from the lookup.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Optional`1">
            <summary>
            Holds an optional value.
            </summary>
            <typeparam name="T">The underlying type.</typeparam>
            <remarks>
            This is used for setting optional properties.
            </remarks>
        </member>
        <member name="T:WebApplications.Utilities.Optional`1.TryDelegate`2">
            <summary>
            The delegate used for methods that return true when successful.
            </summary>
            <typeparam name="TIn">The type of the input.</typeparam>
            <typeparam name="TOut">The type of the T out.</typeparam>
            <param name="input">The input.</param>
            <param name="output">The output.</param>
            <returns>
                <c>true</c> if successful, <c>false</c> otherwise
            </returns>
        </member>
        <member name="F:WebApplications.Utilities.Optional`1.Unassigned">
            <summary>
            Returns the optional indicating a value is not assigned.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Optional`1.DefaultAssigned">
            <summary>
            Returns the optional indicating a value is assigned to it's default value.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Optional`1.#ctor(`0,System.Boolean)">
            <summary>
            Create a new Optional object with the specified value, indicating if it
            has been set
            </summary>
            <param name="value">The value to for the optional item.</param>
            <param name="isAssigned">
            Value to indicate if it has been set (defaults to <see langword="false" />.
            </param>
        </member>
        <member name="M:WebApplications.Utilities.Optional`1.#ctor(`0)">
            <summary>
            Create a new Optional object with the specified value, indicating that it
            has been set
            </summary>
            <param name="value">The value to for the optional item.</param>
        </member>
        <member name="M:WebApplications.Utilities.Optional`1.CompareTo(WebApplications.Utilities.Optional{`0})">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has the
            following meanings: Value Meaning Less than zero This object is less than the <paramref name="other" /> parameter.Zero
            This object is equal to <paramref name="other" />. Greater than zero This object is greater than
                <paramref name="other" />.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Optional`1.CompareTo(`0)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has the
            following meanings: Value Meaning Less than zero This object is less than the <paramref name="other" /> parameter.Zero
            This object is equal to <paramref name="other" />. Greater than zero This object is greater than
                <paramref name="other" />.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Optional`1.Equals(WebApplications.Utilities.Optional{`0})">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Optional`1.Equals(`0)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
        </member>
        <member name="P:WebApplications.Utilities.Optional`1.IsAssigned">
            <summary>
            Whether the value is assigned.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Optional`1.IsNull">
            <summary>
            Gets a value indicating whether this instance is null.
            </summary>
            <value>
                <see langword="true" /> if this instance is null; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:WebApplications.Utilities.Optional`1.Value">
            <summary>
            The value if assigned; otherwise <see langword="default{T}" />.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Optional`1.WebApplications#Utilities#IOptional#Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:WebApplications.Utilities.Optional`1.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns>
                <see langword="true" /> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise,
                <see langword="false" />.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Optional`1.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Optional`1.op_Implicit(`0)~WebApplications.Utilities.Optional{`0}">
            <summary>
            Creates an optional value from a value.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the operator.</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Optional`1.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Optional`1.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Optional`1.op_Explicit(WebApplications.Utilities.Optional{`0})~`0">
            <summary>
            Retrieves the value from an optional value.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the operator.</returns>
            <remarks>
                <para>
            This ignores the <see cref="F:WebApplications.Utilities.Optional`1._isAssigned" /> property and returns whatever
            value is in the underlying <see cref="F:WebApplications.Utilities.Optional`1._value" /> property.
                </para>
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.Optional`1.op_Equality(WebApplications.Utilities.Optional{`0},WebApplications.Utilities.Optional{`0})">
            <summary>
            Implements the ==.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Optional`1.op_Inequality(WebApplications.Utilities.Optional{`0},WebApplications.Utilities.Optional{`0})">
            <summary>
            Implements the !=.
            </summary>
            <param name="a">A.</param>
            <param name="b">The b.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Optional`1.AssignIfNotNull(`0)">
            <summary>
            Returns an assigned value if not null, otherwise returns <see cref="F:WebApplications.Utilities.Optional`1.Unassigned" />.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.Optional`1.UnassignedOnError(System.Func{`0},System.Boolean)">
            <summary>
            Returns an assigned value if not null, otherwise returns <see cref="F:WebApplications.Utilities.Optional`1.Unassigned" />.
            </summary>
            <param name="valueFunction">The value.</param>
            <param name="unassignedOnNull">
            if set to <c>true</c> returns <see cref="F:WebApplications.Utilities.Optional`1.Unassigned" /> if <paramref name="valueFunction" /> returns
                <see langword="null" />.
            </param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.Optional`1.UnassignedOnFailure``2(WebApplications.Utilities.Optional{`0}.TryDelegate{``0,``1},``0,System.Boolean)">
            <summary>
            Returns the assigned value if the supplied try function returns true for the specified input.
            </summary>
            <typeparam name="TIn">The type of the input.</typeparam>
            <typeparam name="TOut">The type of the output.</typeparam>
            <param name="tryFunction">The try function.</param>
            <param name="input">The input.</param>
            <param name="unassignedOnNull">
            if set to <c>true</c> returns <see cref="F:WebApplications.Utilities.Optional`1.Unassigned" /> if <paramref name="tryFunction" /> outputs a
                <see langword="null" />,
            even when it returns <see langword="true" />.
            </param>
            <returns>Optional{`0}.</returns>
        </member>
        <member name="T:WebApplications.Utilities.OrderedLookup`2">
            <summary>
            Implements a lookup where the order of keys is maintained.
            </summary>
            <typeparam name="TKey">The key type.</typeparam>
            <typeparam name="TElement">The element type.</typeparam>
        </member>
        <member name="F:WebApplications.Utilities.OrderedLookup`2._keys">
            <summary>
            The underlying keys mapped to the list index.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.OrderedLookup`2._values">
            <summary>
            The values in order.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.OrderedLookup`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Lookup`2" /> class.
            </summary>
            <param name="capacity">The capacity.</param>
            <param name="comparer">The comparer.</param>
        </member>
        <member name="M:WebApplications.Utilities.OrderedLookup`2.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:WebApplications.Utilities.OrderedLookup`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:WebApplications.Utilities.OrderedLookup`2.Contains(`0)">
            <summary>
            Determines whether [contains] [the specified key].
            </summary>
            <param name="key">The key.</param>
            <returns>
                <see langword="true" /> if [contains] [the specified key]; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="P:WebApplications.Utilities.OrderedLookup`2.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:WebApplications.Utilities.OrderedLookup`2.ValuesCount">
            <summary>
            Gets the values count.
            </summary>
            <value>The values count.</value>
        </member>
        <member name="P:WebApplications.Utilities.OrderedLookup`2.Item(`0)">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.IEnumerable`1" /> with the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns>IEnumerable{.</returns>
        </member>
        <member name="P:WebApplications.Utilities.OrderedLookup`2.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.IEnumerable`1"/> with the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns>IEnumerable{.</returns>
        </member>
        <member name="M:WebApplications.Utilities.OrderedLookup`2.Add(`0,`1)">
            <summary>
            Adds the specified key value pair.
            </summary>
            <param name="key">The key.</param>
            <param name="element">The element.</param>
        </member>
        <member name="M:WebApplications.Utilities.OrderedLookup`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Adds the specified key value pair.
            </summary>
            <param name="keyValuePair">The key value pair.</param>
        </member>
        <member name="M:WebApplications.Utilities.OrderedLookup`2.AddRange(`0,System.Collections.Generic.IEnumerable{`1})">
            <summary>
            Adds the specified values.
            </summary>
            <param name="key">The key.</param>
            <param name="elements">The elements.</param>
        </member>
        <member name="M:WebApplications.Utilities.OrderedLookup`2.AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>
            Adds the specified values.
            </summary>
            <param name="elements">The elements.</param>
        </member>
        <member name="M:WebApplications.Utilities.OrderedLookup`2.TryGetValues(`0,System.Collections.Generic.IEnumerable{`1}@)">
            <summary>
            Attempts to get the values with the given key.
            </summary>
            <param name="key">The key.</param>
            <param name="values">The values.</param>
            <returns><see langword="true" /> if the key was found, <see langword="false" /> otherwise.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.ApmWrap_Unwrap_ResultWrongType">
            <summary>
              Looks up a localized string similar to Result is the wrong type.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.AsyncDebounced_DurationNegative">
            <summary>
              Looks up a localized string similar to Duration cannot be negative.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.AsyncDebounced_MinimumGapNegative">
            <summary>
              Looks up a localized string similar to Minimum gap cannot be negative.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.AsyncResult_SetAsCompleted_CanOnlySetResultOnce">
            <summary>
              Looks up a localized string similar to You can set a result only once.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.BufferedAction_BufferedAction_Invalid_Duration">
            <summary>
              Looks up a localized string similar to The specified duration must be greater than zero..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.CachingQueue_ExpiryTooShort">
            <summary>
              Looks up a localized string similar to The cache expiry must be at least 1s..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.CachingQueue_MaxEntriesLessThanOne">
            <summary>
              Looks up a localized string similar to The maximum entries must be at least 1..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.CancelableTask_CancelableTask_NullTask">
            <summary>
              Looks up a localized string similar to The action returned a null Task.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.CharComparer_Compare_Invalid_Arguments">
            <summary>
              Looks up a localized string similar to The specified parameters are not comparable..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.ColorHelper_SetName_NameNullOrWhitespace">
            <summary>
              Looks up a localized string similar to Name cannot be null or whitespace.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.CombGuid_InvalidDateTime_TooEarly">
            <summary>
              Looks up a localized string similar to The date time supplied to a CombGuid cannot be before &apos;{0}&apos; UTC..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.ComparerBuilder_Compare_Incomparable">
            <summary>
              Looks up a localized string similar to The objects cannot be compared..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.ConfigurationElement_Init_Invalid_Configuration_Property_Type">
            <summary>
              Looks up a localized string similar to The Utilities configuration system cannot be mixed with non-extended configuration elements.  The &apos;{0}&apos; type does not descend from one of the enhanced configuration element types..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.ConfigurationElementCollection_SetElement_KeyMismatch">
            <summary>
              Looks up a localized string similar to Cannot set a configuration element collection using a key &apos;{0}&apos; that does not match the configuration element&apos;s key &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.ConfigurationSection_Save_No_Configuration">
            <summary>
              Looks up a localized string similar to The current configuration section is not associated with a configuration..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.ConstructorConfigurationElement_GetConstructor_CannotFindConstructor">
            <summary>
              Looks up a localized string similar to The configuration system could not find a constructor with the relevant parameters when trying to create an object of type &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.ConstructorConfigurationElement_GetConstructor_ConstructorIsAmbiguous">
            <summary>
              Looks up a localized string similar to The configuration system found a number of potential constructor matches when trying to create an object of type &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.ConstructorConfigurationElement_GetConstructor_CreatedTypeNotAssignable">
            <summary>
              Looks up a localized string similar to The configuration system cannot assign the created type &apos;{0}&apos; to the required type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.ConstructorConfigurationElement_GetConstructor_Missing_Type">
            <summary>
              Looks up a localized string similar to Cannot create an instance of the object as no type was specified..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.ContextStack_Dispose_CannotCloseCleanerRegion">
            <summary>
              Looks up a localized string similar to Cannot close the ContextStack cleaner region on thread &apos;{0}&apos; as it was created on thread &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.ContextStack_Dispose_CannotCloseRegion">
            <summary>
              Looks up a localized string similar to Cannot close the ContextStack region on thread &apos;{0}&apos; as it was created on thread &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.CultureHelper_CultureInfoCannotBeNull">
            <summary>
              Looks up a localized string similar to Parameter &apos;cultureInfo&apos; can not be null.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.CultureHelper_CurrencyIsoCannotBeNull">
            <summary>
              Looks up a localized string similar to Parameter &apos;currencyISO&apos; can not be null.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.CultureHelper_IsoCodeCannotBeNull">
            <summary>
              Looks up a localized string similar to Parameter &apos;isoCode&apos; can not be null.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.CultureHelper_NameCannotBeNull">
            <summary>
              Looks up a localized string similar to Parameter &apos;name&apos; can not be null.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.CultureHelper_RegionInfoCannotBeNull">
            <summary>
              Looks up a localized string similar to Parameter &apos;regionInfo&apos; can not be null.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.CurrencyInfo_ToString">
            <summary>
              Looks up a localized string similar to Currency: {0}, Code: {1}, ISO: {2}.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.CurrencyInfoProvider_CurrencyInfoProvider_DataInvalid">
            <summary>
              Looks up a localized string similar to Could not load the currency information from the ISO 4217 file &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.CurrencyInfoProvider_CurrencyInfoProvider_FileNotFound">
            <summary>
              Looks up a localized string similar to The specified path to the ISO 4217 file &apos;{0}&apos; does not exist..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.CurrencyInfoProvider_CurrencyInfoProvider_LoadError">
            <summary>
              Looks up a localized string similar to A fatal exception occurred whilst trying to load the ISO 4217 file &apos;{0}..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.CyclicQueue_QueueEmpty">
            <summary>
              Looks up a localized string similar to Queue empty..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.DependencyGraph_Add_SelfDepends">
            <summary>
              Looks up a localized string similar to An object cannot have a dependency on itself..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.DependencyGraph_ValueNotInGraph">
            <summary>
              Looks up a localized string similar to The value given is not in the graph.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.DurationConverter_ConvertFrom_CannotParse">
            <summary>
              Looks up a localized string similar to Cannot parse the string &apos;{0}&apos; to a Duration..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.EnhancedMemoryCache_Clear_CannotSafelyFlush">
            <summary>
              Looks up a localized string similar to Cannot safely flush the default enhanced memory cache..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.EnhancedMemoryCache_Dispose_CannotSafelyDispose">
            <summary>
              Looks up a localized string similar to Cannot safely dispose the default enhanced memory cache..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.ExpressionExtensions_ActionReturnsNonVoid">
            <summary>
              Looks up a localized string similar to The action expression is expected to return void..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.ExpressionExtensions_ForEach_SourceNotEnumerable">
            <summary>
              Looks up a localized string similar to The source enumerable is not of an enumerable type.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.ExpressionExtensions_FuncReturnsVoid">
            <summary>
              Looks up a localized string similar to The function expression is expected to not return void..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.ExpressionExtensions_GetDelegateExpression_ParameterCountMismatch">
            <summary>
              Looks up a localized string similar to The expression does not have the same number of parameters as the delegate..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.ExpressionExtensions_GetDelegateExpression_TypeMustBeDelegate">
            <summary>
              Looks up a localized string similar to The type parameter must be derived from System.Delegate..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.ExpressionExtensions_ParameterCount">
            <summary>
              Looks up a localized string similar to The expression had the wrong number of parameters..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.ExtendedEnumGeneric_Clear_CouldNotClearFlags">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; value of the {1} enum does could not be cleared with the value &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.ExtendedEnumGeneric_Combine_CouldNotCombineFlags">
            <summary>
              Looks up a localized string similar to Could not combine flags of type &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.ExtendedEnumGeneric_DoesNotContainName">
            <summary>
              Looks up a localized string similar to The {0} enum does not contain the name &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.ExtendedEnumGeneric_DoesNotContainRawValue">
            <summary>
              Looks up a localized string similar to The {0} enum does not contain the raw value &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.ExtendedEnumGeneric_DoesNotContainValue">
            <summary>
              Looks up a localized string similar to The {0} enum does not contain the value &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.ExtendedEnumGeneric_Intersect_CouldNotIntersectFlags">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; value of the {1} enum does could not be intersected with the value &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.ExtendedEnumGeneric_Invert_CouldNotInvertFlags">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; value of the {1} enum does could not be inverted..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.ExtendedEnumGeneric_Set_CouldNotSetFlags">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; value of the {1} enum could not be set with the value &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.ExtendedEnumGeneric_SplitFlags_CouldNotSplitFlags">
            <summary>
              Looks up a localized string similar to Could not split flags &apos;{0}&apos; of type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.ExtendedEnumGeneric_TypeIsFlagEnum">
            <summary>
              Looks up a localized string similar to Type {0} is a flag enum..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.ExtendedEnumGeneric_TypeIsNotAnEnum">
            <summary>
              Looks up a localized string similar to Type {0} is not an enum..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.ExtendedEnumGeneric_TypeIsNotFlagEnum">
            <summary>
              Looks up a localized string similar to Type {0} is not a flag enum..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.ExtendedTuple_CannotCastItemAtIndex">
            <summary>
              Looks up a localized string similar to Cannot cast item at index {0} of Tuple from type {1} to type {2}..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.ExtendedTuple_CouldNotFindProperty">
            <summary>
              Looks up a localized string similar to The tuple &apos;{0}&apos; does not have a &apos;{1}&apos; property..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.ExtendedTuple_MoreThanEightGenericArguments">
            <summary>
              Looks up a localized string similar to The tuple &apos;{0}&apos; has more than 8 generic arguments, which is unsupported..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.ExtendedTuple_TypeIsNotValidTuple">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; is not a valid tuple type..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.Extensions_EmbeddedXml_CouldntLoadEmbeddedResource">
            <summary>
              Looks up a localized string similar to Could not load embedded resource &apos;{0}&apos; from the &apos;{1}&apos; assembly..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.Extensions_EmbeddedXml_Exception">
            <summary>
              Looks up a localized string similar to Could not load embedded resource &apos;{0}&apos; from the &apos;{1}&apos; assembly. {2}.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.Extensions_TopologicalSortEdges_DependencyCyclesFound">
            <summary>
              Looks up a localized string similar to Dependency cycles found in enumeration, cannot sort topologically..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.Financial_Currencies_Do_Not_Match">
            <summary>
              Looks up a localized string similar to The currency of the first operand &apos;{0}&apos; did not match that of the second &apos;{1}&apos; during an {2} operation..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.Financial_Sum_EmptyEnumeration">
            <summary>
              Looks up a localized string similar to The financials argument contains no elements..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.FinancialRange_CurrenciesMustMatch">
            <summary>
              Looks up a localized string similar to The currencies in the financial parameters must match..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.FormatBuilder_ReadOnly">
            <summary>
              Looks up a localized string similar to Cannot modify a read only FormatBuilder..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.FormatBuilder_TagNullOrEmpty">
            <summary>
              Looks up a localized string similar to Tag cannot be null or empty.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.FormatWriter_IsClosed">
            <summary>
              Looks up a localized string similar to Cannot write to a closed FormatWriter..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.Impersonator_Impersonator_InvalidUsername">
            <summary>
              Looks up a localized string similar to Invalid username..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.InfoHelper_GetMemberInfoInternal_NotFound">
            <summary>
              Looks up a localized string similar to MemberInfo not found in expression.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.InfoHelper_GetMemberInfoInternal_T_NotFound">
            <summary>
              Looks up a localized string similar to {0} not found in expression.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.InstantConverter_ConvertFrom_CannotParse">
            <summary>
              Looks up a localized string similar to Cannot parse the string &apos;{0}&apos; to an Instant..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.LimitedConcurrentQueue_LimitedConcurrentQueue_Maximum_Capacity">
            <summary>
              Looks up a localized string similar to Maximum capacity is {0}..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.LimitedConcurrentQueue_LimitedConcurrentQueue_Minimum_Capacity">
            <summary>
              Looks up a localized string similar to Minimum capacity is 1..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.LimitedConcurrentQueue_SyncRoot_ICollection_SyncRoot_Unsupported">
            <summary>
              Looks up a localized string similar to ICollection.SyncRoot unsupported..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.List_Get_TupleNull">
            <summary>
              Looks up a localized string similar to The tuple was null..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.LocalDateRange_DurationCannotHaveTime">
            <summary>
              Looks up a localized string similar to Duration cannot have time component.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.LocalDateRange_StepCannotHaveTime">
            <summary>
              Looks up a localized string similar to Step cannot have time component.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.LocalDateTimeConverter_ConvertFrom_CannotParse">
            <summary>
              Looks up a localized string similar to Cannot parse the string &apos;{0}&apos; to a LocalDateTime..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.LocalRange_DurationMustBePositive">
            <summary>
              Looks up a localized string similar to Duration must be positive.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.LocalRange_StepMustBePositive">
            <summary>
              Looks up a localized string similar to Step must be positive.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.LocalTimeRange_DurationCannotHaveDate">
            <summary>
              Looks up a localized string similar to Duration cannot have date component.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.LocalTimeRange_StepCannotHaveDate">
            <summary>
              Looks up a localized string similar to Step cannot have date component.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.ParameterReplacerVisitor_ExpressionCountMismatch">
            <summary>
              Looks up a localized string similar to The number of parameter replacement expressions &apos;{0}&apos; does not match the number of parameters in the lambda expression &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.PeriodConverter_ConvertFrom_CannotParse">
            <summary>
              Looks up a localized string similar to Cannot parse the string &apos;{0}&apos; to a Period..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.PInfo_TypeProperty_CannotConvertValueStrToDestinationType">
            <summary>
              Looks up a localized string similar to The configuration system couldn&apos;t convert the value &apos;{0}&apos; for the parameter &apos;{1}&apos; to type &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.PInfo_TypeProperty_CannotCreateDefaultTypeConverter">
            <summary>
              Looks up a localized string similar to Cannot create a default type converter for parameter &apos;{0}&apos; of type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.PInfo_TypeProperty_ConverterCannotConvertFromString">
            <summary>
              Looks up a localized string similar to Converter of type &apos;{0}&apos; cannot convert from string for parameter &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.PInfo_TypeProperty_ConveterReturnedNullForNonNullableType">
            <summary>
              Looks up a localized string similar to Converter of type &apos;{0}&apos; returned null value for parameter &apos;{1}&apos; which is of non-nullable type &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.PInfo_TypeProperty_TypeNotAssignableFromConvertedType">
            <summary>
              Looks up a localized string similar to Converter of type &apos;{0}&apos; returned value of type &apos;{1}&apos; for parameter &apos;{2}&apos; which is of type &apos;{3}&apos; and not assignable from type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.PInfo_ValueProperty_NoValueSet">
            <summary>
              Looks up a localized string similar to No value set for parameter &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.Queue_TupleNull">
            <summary>
              Looks up a localized string similar to The tuple at the beginning of the queue was null..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.Range_StartGreaterThanEnd">
            <summary>
              Looks up a localized string similar to The start &apos;{0}&apos; must not be greater than the end &apos;{1}&apos; for a range of &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.Reflection_Convert_ConversionFailed">
            <summary>
              Looks up a localized string similar to Could not convert the expression of type &apos;{0}&apos; to an expression of type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.Reflection_ExpressionFunc_FunctionReturnedNull">
            <summary>
              Looks up a localized string similar to Function returned null.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.Reflection_GetAction_IncorrectParameterCount">
            <summary>
              Looks up a localized string similar to Can not create a lambda action from &apos;{0}&apos;, incorrect parameter count..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.Reflection_GetAction_ParameterNotAssignable">
            <summary>
              Looks up a localized string similar to Can not create a lambda action from &apos;{0}&apos;, cannot assign type &apos;{1}&apos; to parameter of type &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.Reflection_GetFunc_IncorrectParameterCount">
            <summary>
              Looks up a localized string similar to Can not create a lambda function from &apos;{0}&apos;, incorrect parameter count..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.Reflection_GetFunc_MethodHasNoReturnType">
            <summary>
              Looks up a localized string similar to Can not create a lambda function from &apos;{0}&apos;, as it is a method with no return type, use Action&lt;&gt;() instead..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.Reflection_GetFunc_MethodIsStaticConstructor">
            <summary>
              Looks up a localized string similar to Can not create a lambda function from &apos;{0}&apos;, as it is a static constructor..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.Reflection_GetFunc_NoFuncTypesSpecified">
            <summary>
              Looks up a localized string similar to Can not create a lambda function from &apos;{0}&apos;, no parameter/return types specified..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.Reflection_GetFunc_ParameterNotAssignable">
            <summary>
              Looks up a localized string similar to Can not create a lambda function from &apos;{0}&apos;, cannot assign type &apos;{1}&apos; to parameter of type &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.Reflection_GetFunc_ReturnTypeNotAssignable">
            <summary>
              Looks up a localized string similar to Can not create a lambda function from &apos;{0}&apos;, cannot assign return type {1} to {2}..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.Reflection_ImplementsInterface_MustBeInterface">
            <summary>
              Looks up a localized string similar to The type must be an interface.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.ResettableLazy_CreateValue_ValueFactoryAccessedValue">
            <summary>
              Looks up a localized string similar to ValueFactory attempted to access the Value property of this instance..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.ResettableLazy_GetCtorFunc_NoDefaultCtor">
            <summary>
              Looks up a localized string similar to The lazily-initialized type does not have a public, parameterless constructor..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.ResettableLazy_ToString_ValueNotCreated">
            <summary>
              Looks up a localized string similar to Value is not created..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.SemanticVersion_Parse_Invalid">
            <summary>
              Looks up a localized string similar to The specified semantic version string was not valid..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.SemanticVersion_SemanticVersion_BuildInvalid">
            <summary>
              Looks up a localized string similar to The build string contains invalid characters.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.SemanticVersion_SemanticVersion_MajorNegative">
            <summary>
              Looks up a localized string similar to The major version number can not be negative..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.SemanticVersion_SemanticVersion_MinorNegative">
            <summary>
              Looks up a localized string similar to The minor version number can not be negative..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.SemanticVersion_SemanticVersion_PatchNegative">
            <summary>
              Looks up a localized string similar to The patch version number can not be negative..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.SemanticVersion_SemanticVersion_PreReleaseInvalid">
            <summary>
              Looks up a localized string similar to The pre-release string contains invalid characters..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.SimplifiedTypeNameConverter_ConvertFrom_Unknown_Type">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; type was not found..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.SimplifiedTypeNameConverter_ConvertTo_Invalid_Type">
            <summary>
              Looks up a localized string similar to Specified value must be a type..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.Stack_TupleNull">
            <summary>
              Looks up a localized string similar to The tuple at the top of the stack was null..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.StringDifferences_StringDifferences_Character_Token_Strategy_Invalid">
            <summary>
              Looks up a localized string similar to The Character token strategy is not supported for this constructor..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.StringDifferences_StringDifferences_IgnoreWhiteSpace_Invalid">
            <summary>
              Looks up a localized string similar to Cannot use the &apos;IgnoreWhiteSpace&apos; text option with any text tokenization strategy other than &apos;Character&apos; as it would correct prevent tokenization..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.TaskExtensions_After_AntecedentTaskCancelled">
            <summary>
              Looks up a localized string similar to Antecedent task was cancelled..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.TaskExtensions_After_AntecedentTaskInFaultedState">
            <summary>
              Looks up a localized string similar to Antecedent task was in faulted state, without an error..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.TaskExtensions_After_AntecedentTaskInvalidState">
            <summary>
              Looks up a localized string similar to The antecedent task was not in a valid state..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.TaskExtensions_AfterAll_AntecedentTaskCancelled">
            <summary>
              Looks up a localized string similar to An antecedent task was cancelled..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.TaskExtensions_AfterAll_AntecedentTaskInFaultedState">
            <summary>
              Looks up a localized string similar to Antecedent task was in faulted state, without an error..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.TaskExtensions_AfterAll_AntecedentTaskInvalidState">
            <summary>
              Looks up a localized string similar to The antecedent task was not in a valid state..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.TaskExtensions_SetFromTask_TaskStateFaulted">
            <summary>
              Looks up a localized string similar to The task was in a faulted state, but no exceptions were available..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.TaskExtensions_SetFromTask_TaskWasNotCompleted">
            <summary>
              Looks up a localized string similar to The task was not completed..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.TimeHelper_TimeHelper_TimeZoneDB_Failed">
            <summary>
              Looks up a localized string similar to A fatal exception occurred whilst trying to load the TimeZone DB &apos;{0}..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.TimeHelper_TimeHelper_TimeZoneDB_Not_Found">
            <summary>
              Looks up a localized string similar to The specified path to the time zone database &apos;{0}&apos; does not exist..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.TimeSpanRange_AutoStep_DeltaNegative">
            <summary>
              Looks up a localized string similar to The delta must be greater than or equal to zero..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.TriState_ExplicitBoolConversion_CannotCastUnknownState">
            <summary>
              Looks up a localized string similar to Cannot cast an unknown TriState to a Boolean.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.TriState_ExplicitByteConversion_ValueGreaterThanThree">
            <summary>
              Looks up a localized string similar to Cannot cast byte &apos;{0}&apos; to TriState, value must be less than 3..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.TriState_ToString_FormatException">
            <summary>
              Looks up a localized string similar to The {0} format string is not supported..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.UtilityExtensions_SourceEmpty">
            <summary>
              Looks up a localized string similar to The source must not be empty.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.Validator_MinGreaterThanMax">
            <summary>
              Looks up a localized string similar to The minimum value is greater than the maximum value..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.Validator_Validate_ValueNotInRange">
            <summary>
              Looks up a localized string similar to The value &apos;{0}&apos; is not in the range &apos;{1} to {2}&apos;..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.Validator_Validate_ValueNotOutsideRange">
            <summary>
              Looks up a localized string similar to The value &apos;{0}&apos; is not outside the range &apos;{1} to {2}&apos;..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.Validator_Validate_WrongType">
            <summary>
              Looks up a localized string similar to The value is not of the correct type..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.VariableLengthEncoding_Decode_Buffer_Overflow">
            <summary>
              Looks up a localized string similar to The encoding was invalid, ran out of bytes before getting an end of encoding byte..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.VariableLengthEncoding_Encode_Buffer_Overflow">
            <summary>
              Looks up a localized string similar to Could not encode the value as the buffer ran out of space..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.WeakConcurrentDictionary_Add_KeyAlreadyExists">
            <summary>
              Looks up a localized string similar to Key already exists..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.WeakConcurrentDictionary_Add_KeyTypeIncorrect">
            <summary>
              Looks up a localized string similar to Type of key is incorrect..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.WeakConcurrentDictionary_Add_ValueTypeIncorrect">
            <summary>
              Looks up a localized string similar to Type of value is incorrect.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.WeakConcurrentDictionary_CopyTo_InvalidArrayType">
            <summary>
              Looks up a localized string similar to Invalid array type..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.WeakConcurrentDictionary_KeyIsNull">
            <summary>
              Looks up a localized string similar to The key cannot be null..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.Window_Window_ReadOnly_Data">
            <summary>
              Looks up a localized string similar to The data must not be readonly - consider using ReadOnlyWindow&lt;T&gt; instead..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.XmlConfigurationSection_SetElement_Element_Name_Mismatch">
            <summary>
              Looks up a localized string similar to The element name &apos;{0}&apos; does not match the specified element name &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.XmlConfigurationSection_SetElement_ReadOnly">
            <summary>
              Looks up a localized string similar to The configuration element&apos;s child element cannot be modified as the configuration element is read only..
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Resources.ZonedDateTimeConverter_ConvertFrom_CannotParse">
            <summary>
              Looks up a localized string similar to Cannot parse the string &apos;{0}&apos; to a ZonedDateTime..
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.SemanticVersion">
            <summary>
            Stores a semantic version number for a program.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.SemanticVersion._validChars">
            <summary>
            The characters that are valid in the pre-release and build part strings
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.SemanticVersion._dotDelimiter">
            <summary>
            The dot delimiter for splitting pre-release parts
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.SemanticVersion.Zero">
            <summary>
            Version zero
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.SemanticVersion.Any">
            <summary>
            Wildcard version
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.SemanticVersion.#ctor(WebApplications.Utilities.Optional{System.Int32},WebApplications.Utilities.Optional{System.Int32},WebApplications.Utilities.Optional{System.Int32},WebApplications.Utilities.Optional{System.String},WebApplications.Utilities.Optional{System.String},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.SemanticVersion" /> class.
            </summary>
            <param name="major">The major version number.</param>
            <param name="minor">The minor version number.</param>
            <param name="patch">The patch version number.</param>
            <param name="preRelease">The optional pre-release version.</param>
            <param name="build">The optional build version.</param>
            <param name="isPartial">if set to <see langword="true" /> [is partial].</param>
        </member>
        <member name="M:WebApplications.Utilities.SemanticVersion.#ctor(WebApplications.Utilities.Optional{System.Int32},WebApplications.Utilities.Optional{System.Int32},WebApplications.Utilities.Optional{System.Int32},WebApplications.Utilities.Optional{System.String},WebApplications.Utilities.Optional{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.SemanticVersion" /> class.
            </summary>
            <param name="major">The major version number.</param>
            <param name="minor">The minor version number.</param>
            <param name="patch">The patch version number.</param>
            <param name="preRelease">The pre-release version.</param>
            <param name="build">The build version.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            major;The major version number can not be negative.
            or
            minor;The minor version number can not be negative.
            or
            patch;The patch version number can not be negative.
            or
            preRelease;The pre-release string contains invalid characters.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.SemanticVersion.#ctor(System.Version,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.SemanticVersion" /> class from a <see cref="T:System.Version" />.
            A version of 1.2.3.4 will become <c>1.2.3[-preRelease]+build.4</c>, where <c>[-preRelease]</c> will be the
            <paramref name="preRelease"/> if it was specified and not null.
            </summary>
            <param name="version">The system version.</param>
            <param name="preRelease">The optional preRelease version.</param>
        </member>
        <member name="M:WebApplications.Utilities.SemanticVersion.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserializes a <see cref="T:WebApplications.Utilities.SemanticVersion"/> class.
            </summary>
            <param name="info">The information.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:WebApplications.Utilities.SemanticVersion.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
        </member>
        <member name="M:WebApplications.Utilities.SemanticVersion.IsValidPart(System.String)">
            <summary>
            Determines whether a pre-release string is valid.
            </summary>
            <param name="part">The part.</param>
            <returns><see langword="true" /> if the pre-release string is valid; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="F:WebApplications.Utilities.SemanticVersion.Major">
            <summary>
            Gets the major version number.
            </summary>
            <value>
            The value of this property is a non-negative integer for the major
            version number.
            </value>
        </member>
        <member name="F:WebApplications.Utilities.SemanticVersion.Minor">
            <summary>
            Gets the minor version number.
            </summary>
            <value>
            The value of this property is a non-negative integer for the minor
            version number.
            </value>
        </member>
        <member name="F:WebApplications.Utilities.SemanticVersion.Patch">
            <summary>
            Gets the patch version number.
            </summary>
            <value>
            The value of this property is a non-negative integer for the patch
            version number.
            </value>
        </member>
        <member name="F:WebApplications.Utilities.SemanticVersion.PreRelease">
            <summary>
            Gets the pre-release version component.
            </summary>
            <value>
            The value of this property is a string containing the pre-release
            identifier.
            </value>
        </member>
        <member name="F:WebApplications.Utilities.SemanticVersion.Build">
            <summary>
            Gets the build number.
            </summary>
            <value>
            The value of this property is a string containing the build
            identifier for the version number.
            </value>
        </member>
        <member name="F:WebApplications.Utilities.SemanticVersion.IsPartial">
            <summary>
            Gets a value indicating whether some parts of the version are unassigned.
            </summary>
            <value>
            <see langword="true" /> if some parts of the version are unassigned; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="M:WebApplications.Utilities.SemanticVersion.GetFull">
            <summary>
            Gets a full semantic version from this version. If this version is not partial,
            this version will be returned. Otherwise, any unassigned parts will have their default
            value (0 and null).
            </summary>
            <returns><c>this</c> if this version <see cref="F:WebApplications.Utilities.SemanticVersion.IsPartial">is partial</see>. Otherwise,
            a new version with no unspecified parts.</returns>
        </member>
        <member name="M:WebApplications.Utilities.SemanticVersion.op_Equality(WebApplications.Utilities.SemanticVersion,WebApplications.Utilities.SemanticVersion)">
            <summary>
            Compares two <see cref="T:WebApplications.Utilities.SemanticVersion"/> objects for equality.
            </summary>
            <param name="version">
            The first <see cref="T:WebApplications.Utilities.SemanticVersion"/> object to compare.
            </param>
            <param name="other">
            The second semantic version object to compare.
            </param>
            <returns>
            <b>True</b> if the objects are equal, or <b>false</b> if the
            objects are not equal.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.SemanticVersion.op_Inequality(WebApplications.Utilities.SemanticVersion,WebApplications.Utilities.SemanticVersion)">
            <summary>
            Compares two <see cref="T:WebApplications.Utilities.SemanticVersion"/> objects for equality.
            </summary>
            <param name="version">
            The first <see cref="T:WebApplications.Utilities.SemanticVersion"/> object to compare.
            </param>
            <param name="other">
            The second <see cref="T:WebApplications.Utilities.SemanticVersion"/> object to compare.
            </param>
            <returns>
            <b>True</b> if the objects are not equal, or <b>false</b> if the
            objects are equal.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.SemanticVersion.op_LessThan(WebApplications.Utilities.SemanticVersion,WebApplications.Utilities.SemanticVersion)">
            <summary>
            Compares two <see cref="T:WebApplications.Utilities.SemanticVersion"/> objects to determine if
            the first object logically precedes the second object.
            </summary>
            <param name="version">
            The first <see cref="T:WebApplications.Utilities.SemanticVersion"/> object to compare.
            </param>
            <param name="other">
            The second <see cref="T:WebApplications.Utilities.SemanticVersion"/> object to compare.
            </param>
            <returns>
            <b>True</b> if <paramref name="version"/> precedes 
            <paramref name="other"/>, otherwise <b>false</b>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.SemanticVersion.op_GreaterThan(WebApplications.Utilities.SemanticVersion,WebApplications.Utilities.SemanticVersion)">
            <summary>
            Compares two <see cref="T:WebApplications.Utilities.SemanticVersion"/> object to determine if
            the first object logically follows the second object.
            </summary>
            <param name="version">
            The first <see cref="T:WebApplications.Utilities.SemanticVersion"/> object to compare.
            </param>
            <param name="other">
            The second <see cref="T:WebApplications.Utilities.SemanticVersion"/> object to compare.
            </param>
            <returns>
            <b>True</b> if <paramref name="version"/> follows
            <paramref name="other"/>, otherwise <b>false</b>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.SemanticVersion.op_LessThanOrEqual(WebApplications.Utilities.SemanticVersion,WebApplications.Utilities.SemanticVersion)">
            <summary>
            Compares two <see cref="T:WebApplications.Utilities.SemanticVersion"/> objects to determine if
            the first object logically precedes or is equal to the second object.
            </summary>
            <param name="version">
            The first <see cref="T:WebApplications.Utilities.SemanticVersion"/> object to compare.
            </param>
            <param name="other">
            The second <see cref="T:WebApplications.Utilities.SemanticVersion"/> object to compare.
            </param>
            <returns>
            <b>True</b> if <paramref name="version"/> if equal to or precedes 
            <paramref name="other"/>, otherwise <b>false</b>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.SemanticVersion.op_GreaterThanOrEqual(WebApplications.Utilities.SemanticVersion,WebApplications.Utilities.SemanticVersion)">
            <summary>
            Compares two <see cref="T:WebApplications.Utilities.SemanticVersion"/> object to determine if
            the first object logically follows or is equal to the second object.
            </summary>
            <param name="version">
            The first <see cref="T:WebApplications.Utilities.SemanticVersion"/> object to compare.
            </param>
            <param name="other">
            The second <see cref="T:WebApplications.Utilities.SemanticVersion"/> object to compare.
            </param>
            <returns>
            <b>True</b> if <paramref name="version"/> if equal to or follows
            <paramref name="other"/>, otherwise <b>false</b>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.SemanticVersion.op_Explicit(WebApplications.Utilities.SemanticVersion)~System.Version">
            <summary>
            Casts a <see cref="T:WebApplications.Utilities.SemanticVersion"/> to a <see cref="T:System.Version"/>.
            </summary>
            <param name="version">The version.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.SemanticVersion.op_Implicit(System.Version)~WebApplications.Utilities.SemanticVersion">
            <summary>
            Casts a <see cref="T:System.Version"/> to a <see cref="T:WebApplications.Utilities.SemanticVersion"/>.
            </summary>
            <param name="version">The version.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.SemanticVersion.CompareTo(System.Object)">
            <summary>
            Compares two objects.
            </summary>
            <param name="obj">
            The object to compare to this object.
            </param>
            <returns>
            Returns a value that indicates the relative order of the objects
            that are being compared.
            <list type="table">
            <listheader>
            <term>Value</term>
            <description>Meaning</description>
            </listheader>
            <item>
            <term>Less than zero</term>
            <description>
            This instance precedes <paramref name="obj"/> in the sort order.
            </description>
            </item>
            <item>
            <term>Zero</term>
            <description>
            This instance occurs in the same position in the sort order as
            <paramref name="obj"/>.
            </description>
            </item>
            <item>
            <term>Greater than zero</term>
            <description>
            This instance follows <paramref name="obj"/> in the sort order.
            </description>
            </item>
            </list>
            </returns>
            <exception cref="T:System.ArgumentException">
            <paramref name="obj"/> is not a <see cref="T:WebApplications.Utilities.SemanticVersion"/>
            object.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.SemanticVersion.CompareTo(WebApplications.Utilities.SemanticVersion)">
            <summary>
            Compares the current object with another 
            <see cref="T:WebApplications.Utilities.SemanticVersion"/> object.
            </summary>
            <param name="other">
            The other <see cref="T:WebApplications.Utilities.SemanticVersion"/> object to compare to this
            instance.
            </param>
            <returns>
            Returns a value that indicates the relative order of the objects
            that are being compared.
            <list type="table">
            <listheader>
            <term>Value</term>
            <description>Meaning</description>
            </listheader>
            <item>
            <term>Less than zero</term>
            <description>
            This instance precedes <paramref name="other"/> in the sort order.
            </description>
            </item>
            <item>
            <term>Zero</term>
            <description>
            This instance occurs in the same position in the sort order as
            <paramref name="other"/>.
            </description>
            </item>
            <item>
            <term>Greater than zero</term>
            <description>
            This instance follows <paramref name="other"/> in the sort order.
            </description>
            </item>
            </list>
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.SemanticVersion.Matches(WebApplications.Utilities.SemanticVersion)">
            <summary>
            Gets if the <paramref name="other"/> version matches this version. Any unassigned parts
            on either side are considered equal.
            </summary>
            <param name="other">The other.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.SemanticVersion.Equals(System.Object)">
            <summary>
            Compares this instance to another object for equality.
            </summary>
            <param name="obj">
            The object to compare to this instance.
            </param>
            <returns>
            <b>True</b> if the objects are equal, or <b>false</b> if the
            objects are not equal.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.SemanticVersion.Equals(WebApplications.Utilities.SemanticVersion)">
            <summary>
            Compares this instance to another <see cref="T:WebApplications.Utilities.SemanticVersion"/>
            object for equality.
            </summary>
            <param name="other">
            The <see cref="T:WebApplications.Utilities.SemanticVersion"/> object to compare to this
            instance.
            </param>
            <returns>
            <b>True</b> if the objects are equal, or false if the objects are
            not equal.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.SemanticVersion.GetHashCode">
            <summary>
            Calculates the hash code for the object.
            </summary>
            <returns>
            The hash code for the object.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.SemanticVersion.ToString">
            <summary>
            Returns the string representation of the semantic version number.
            </summary>
            <returns>
            The semantic version number.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.SemanticVersion.ComparePrereleaseVersions(WebApplications.Utilities.Optional{System.String},WebApplications.Utilities.Optional{System.String})">
            <summary>
            Compares two pre-release version values to determine precedence.
            </summary>
            <param name="identifier1">
            The first identifier to compare.
            </param>
            <param name="identifier2">
            The second identifier to compare.
            </param>
            <returns>
            Returns a value that indicates the relative order of the objects
            that are being compared.
            <list type="table">
            <listheader>
            <term>Value</term>
            <description>Meaning</description>
            </listheader>
            <item>
            <term>Less than zero</term>
            <description>
            <paramref name="identifier1"/> precedes 
            <paramref name="identifier2"/> in the sort order.
            </description>
            </item>
            <item>
            <term>Zero</term>
            <description>
            The identifiers occur in the same position in the sort order.
            </description>
            </item>
            <item>
            <term>Greater than zero</term>
            <description>
            <paramref name="identifier1"/> follows 
            <paramref name="identifier2"/> in the sort order.
            </description>
            </item>
            </list>
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.SemanticVersion.Parse(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:WebApplications.Utilities.SemanticVersion" /> class.
            </summary>
            <param name="version">The semantic version number to be parsed.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">version;The specified semantic version string was not valid.</exception>
        </member>
        <member name="M:WebApplications.Utilities.SemanticVersion.TryParse(System.String,WebApplications.Utilities.SemanticVersion@)">
            <summary>
            Creates a new instance of the <see cref="T:WebApplications.Utilities.SemanticVersion" /> class.
            </summary>
            <param name="version">The semantic version number to be parsed.</param>
            <param name="semanticVersion">The semantic version.</param>
            <returns><see langword="true" /> if the version was parsed successfully, <see langword="false" /> otherwise.</returns>
        </member>
        <member name="T:WebApplications.Utilities.TaskExtensions">
            <summary>
             Extensions to the reflection namespace.
            </summary>
            <summary>
              Extension methods for <see cref="T:System.Threading.Tasks.Task"/> and <see cref="T:System.Threading.Tasks.TaskCompletionSource`1"/>.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.FromAsync``1(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``0},System.Object,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler,System.Threading.CancellationToken)">
            <summary>
            Converts APM to TPL, but supports cancellation.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="beginMethod">The begin method.</param>
            <param name="endMethod">The end method.</param>
            <param name="asyncState">State of the async.</param>
            <param name="cancellationMethod">The cancellation method.</param>
            <param name="creationOptions">The creation options.</param>
            <param name="scheduler">The scheduler.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.FromAsync``2(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``1},``0,System.Object,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler,System.Threading.CancellationToken)">
            <summary>
            Converts APM to TPL, but supports cancellation.
            </summary>
            <typeparam name="TArg1">The type of argument 1.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="beginMethod">The begin method.</param>
            <param name="endMethod">The end method.</param>
            <param name="arg1">Argument 1 of the begin call.</param>
            <param name="asyncState">State of the async.</param>
            <param name="cancellationMethod">The cancellation method.</param>
            <param name="creationOptions">The creation options.</param>
            <param name="scheduler">The scheduler.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.FromAsync``3(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``2},``0,``1,System.Object,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler,System.Threading.CancellationToken)">
            <summary>
            Converts APM to TPL, but supports cancellation.
            </summary>
            <typeparam name="TArg1">The type of argument 1.</typeparam>
            <typeparam name="TArg2">The type of argument 2.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="beginMethod">The begin method.</param>
            <param name="endMethod">The end method.</param>
            <param name="arg1">Argument 1 of the begin call.</param>
            <param name="arg2">Argument 2 of the begin call.</param>
            <param name="asyncState">State of the async.</param>
            <param name="cancellationMethod">The cancellation method.</param>
            <param name="creationOptions">The creation options.</param>
            <param name="scheduler">The scheduler.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.FromAsync``4(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``3},``0,``1,``2,System.Object,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler,System.Threading.CancellationToken)">
            <summary>
            Converts APM to TPL, but supports cancellation.
            </summary>
            <typeparam name="TArg1">The type of argument 1.</typeparam>
            <typeparam name="TArg2">The type of argument 2.</typeparam>
            <typeparam name="TArg3">The type of argument 3.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="beginMethod">The begin method.</param>
            <param name="endMethod">The end method.</param>
            <param name="arg1">Argument 1 of the begin call.</param>
            <param name="arg2">Argument 2 of the begin call.</param>
            <param name="arg3">Argument 3 of the begin call.</param>
            <param name="asyncState">State of the async.</param>
            <param name="cancellationMethod">The cancellation method.</param>
            <param name="creationOptions">The creation options.</param>
            <param name="scheduler">The scheduler.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.FromAsync``5(System.Func{``0,``1,``2,``3,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``4},``0,``1,``2,``3,System.Object,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler,System.Threading.CancellationToken)">
            <summary>
            Converts APM to TPL, but supports cancellation.
            </summary>
            <typeparam name="TArg1">The type of argument 1.</typeparam>
            <typeparam name="TArg2">The type of argument 2.</typeparam>
            <typeparam name="TArg3">The type of argument 3.</typeparam>
            <typeparam name="TArg4">The type of argument 4.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="beginMethod">The begin method.</param>
            <param name="endMethod">The end method.</param>
            <param name="arg1">Argument 1 of the begin call.</param>
            <param name="arg2">Argument 2 of the begin call.</param>
            <param name="arg3">Argument 3 of the begin call.</param>
            <param name="arg4">Argument 4 of the begin call.</param>
            <param name="asyncState">State of the async.</param>
            <param name="cancellationMethod">The cancellation method.</param>
            <param name="creationOptions">The creation options.</param>
            <param name="scheduler">The scheduler.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.FromAsync``6(System.Func{``0,``1,``2,``3,``4,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``5},``0,``1,``2,``3,``4,System.Object,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler,System.Threading.CancellationToken)">
            <summary>
            Converts APM to TPL, but supports cancellation.
            </summary>
            <typeparam name="TArg1">The type of argument 1.</typeparam>
            <typeparam name="TArg2">The type of argument 2.</typeparam>
            <typeparam name="TArg3">The type of argument 3.</typeparam>
            <typeparam name="TArg4">The type of argument 4.</typeparam>
            <typeparam name="TArg5">The type of argument 5.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="beginMethod">The begin method.</param>
            <param name="endMethod">The end method.</param>
            <param name="arg1">Argument 1 of the begin call.</param>
            <param name="arg2">Argument 2 of the begin call.</param>
            <param name="arg3">Argument 3 of the begin call.</param>
            <param name="arg4">Argument 4 of the begin call.</param>
            <param name="arg5">Argument 5 of the begin call.</param>
            <param name="asyncState">State of the async.</param>
            <param name="cancellationMethod">The cancellation method.</param>
            <param name="creationOptions">The creation options.</param>
            <param name="scheduler">The scheduler.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.FromAsync``7(System.Func{``0,``1,``2,``3,``4,``5,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``6},``0,``1,``2,``3,``4,``5,System.Object,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler,System.Threading.CancellationToken)">
            <summary>
            Converts APM to TPL, but supports cancellation.
            </summary>
            <typeparam name="TArg1">The type of argument 1.</typeparam>
            <typeparam name="TArg2">The type of argument 2.</typeparam>
            <typeparam name="TArg3">The type of argument 3.</typeparam>
            <typeparam name="TArg4">The type of argument 4.</typeparam>
            <typeparam name="TArg5">The type of argument 5.</typeparam>
            <typeparam name="TArg6">The type of argument 6.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="beginMethod">The begin method.</param>
            <param name="endMethod">The end method.</param>
            <param name="arg1">Argument 1 of the begin call.</param>
            <param name="arg2">Argument 2 of the begin call.</param>
            <param name="arg3">Argument 3 of the begin call.</param>
            <param name="arg4">Argument 4 of the begin call.</param>
            <param name="arg5">Argument 5 of the begin call.</param>
            <param name="arg6">Argument 6 of the begin call.</param>
            <param name="asyncState">State of the async.</param>
            <param name="cancellationMethod">The cancellation method.</param>
            <param name="creationOptions">The creation options.</param>
            <param name="scheduler">The scheduler.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.FromAsync``8(System.Func{``0,``1,``2,``3,``4,``5,``6,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``7},``0,``1,``2,``3,``4,``5,``6,System.Object,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler,System.Threading.CancellationToken)">
            <summary>
            Converts APM to TPL, but supports cancellation.
            </summary>
            <typeparam name="TArg1">The type of argument 1.</typeparam>
            <typeparam name="TArg2">The type of argument 2.</typeparam>
            <typeparam name="TArg3">The type of argument 3.</typeparam>
            <typeparam name="TArg4">The type of argument 4.</typeparam>
            <typeparam name="TArg5">The type of argument 5.</typeparam>
            <typeparam name="TArg6">The type of argument 6.</typeparam>
            <typeparam name="TArg7">The type of argument 7.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="beginMethod">The begin method.</param>
            <param name="endMethod">The end method.</param>
            <param name="arg1">Argument 1 of the begin call.</param>
            <param name="arg2">Argument 2 of the begin call.</param>
            <param name="arg3">Argument 3 of the begin call.</param>
            <param name="arg4">Argument 4 of the begin call.</param>
            <param name="arg5">Argument 5 of the begin call.</param>
            <param name="arg6">Argument 6 of the begin call.</param>
            <param name="arg7">Argument 7 of the begin call.</param>
            <param name="asyncState">State of the async.</param>
            <param name="cancellationMethod">The cancellation method.</param>
            <param name="creationOptions">The creation options.</param>
            <param name="scheduler">The scheduler.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.FromAsync``9(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``8},``0,``1,``2,``3,``4,``5,``6,``7,System.Object,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler,System.Threading.CancellationToken)">
            <summary>
            Converts APM to TPL, but supports cancellation.
            </summary>
            <typeparam name="TArg1">The type of argument 1.</typeparam>
            <typeparam name="TArg2">The type of argument 2.</typeparam>
            <typeparam name="TArg3">The type of argument 3.</typeparam>
            <typeparam name="TArg4">The type of argument 4.</typeparam>
            <typeparam name="TArg5">The type of argument 5.</typeparam>
            <typeparam name="TArg6">The type of argument 6.</typeparam>
            <typeparam name="TArg7">The type of argument 7.</typeparam>
            <typeparam name="TArg8">The type of argument 8.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="beginMethod">The begin method.</param>
            <param name="endMethod">The end method.</param>
            <param name="arg1">Argument 1 of the begin call.</param>
            <param name="arg2">Argument 2 of the begin call.</param>
            <param name="arg3">Argument 3 of the begin call.</param>
            <param name="arg4">Argument 4 of the begin call.</param>
            <param name="arg5">Argument 5 of the begin call.</param>
            <param name="arg6">Argument 6 of the begin call.</param>
            <param name="arg7">Argument 7 of the begin call.</param>
            <param name="arg8">Argument 8 of the begin call.</param>
            <param name="asyncState">State of the async.</param>
            <param name="cancellationMethod">The cancellation method.</param>
            <param name="creationOptions">The creation options.</param>
            <param name="scheduler">The scheduler.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.FromAsync``10(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Object,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler,System.Threading.CancellationToken)">
            <summary>
            Converts APM to TPL, but supports cancellation.
            </summary>
            <typeparam name="TArg1">The type of argument 1.</typeparam>
            <typeparam name="TArg2">The type of argument 2.</typeparam>
            <typeparam name="TArg3">The type of argument 3.</typeparam>
            <typeparam name="TArg4">The type of argument 4.</typeparam>
            <typeparam name="TArg5">The type of argument 5.</typeparam>
            <typeparam name="TArg6">The type of argument 6.</typeparam>
            <typeparam name="TArg7">The type of argument 7.</typeparam>
            <typeparam name="TArg8">The type of argument 8.</typeparam>
            <typeparam name="TArg9">The type of argument 9.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="beginMethod">The begin method.</param>
            <param name="endMethod">The end method.</param>
            <param name="arg1">Argument 1 of the begin call.</param>
            <param name="arg2">Argument 2 of the begin call.</param>
            <param name="arg3">Argument 3 of the begin call.</param>
            <param name="arg4">Argument 4 of the begin call.</param>
            <param name="arg5">Argument 5 of the begin call.</param>
            <param name="arg6">Argument 6 of the begin call.</param>
            <param name="arg7">Argument 7 of the begin call.</param>
            <param name="arg8">Argument 8 of the begin call.</param>
            <param name="arg9">Argument 9 of the begin call.</param>
            <param name="asyncState">State of the async.</param>
            <param name="cancellationMethod">The cancellation method.</param>
            <param name="creationOptions">The creation options.</param>
            <param name="scheduler">The scheduler.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.FromAsync``11(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Object,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler,System.Threading.CancellationToken)">
            <summary>
            Converts APM to TPL, but supports cancellation.
            </summary>
            <typeparam name="TArg1">The type of argument 1.</typeparam>
            <typeparam name="TArg2">The type of argument 2.</typeparam>
            <typeparam name="TArg3">The type of argument 3.</typeparam>
            <typeparam name="TArg4">The type of argument 4.</typeparam>
            <typeparam name="TArg5">The type of argument 5.</typeparam>
            <typeparam name="TArg6">The type of argument 6.</typeparam>
            <typeparam name="TArg7">The type of argument 7.</typeparam>
            <typeparam name="TArg8">The type of argument 8.</typeparam>
            <typeparam name="TArg9">The type of argument 9.</typeparam>
            <typeparam name="TArg10">The type of argument 10.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="beginMethod">The begin method.</param>
            <param name="endMethod">The end method.</param>
            <param name="arg1">Argument 1 of the begin call.</param>
            <param name="arg2">Argument 2 of the begin call.</param>
            <param name="arg3">Argument 3 of the begin call.</param>
            <param name="arg4">Argument 4 of the begin call.</param>
            <param name="arg5">Argument 5 of the begin call.</param>
            <param name="arg6">Argument 6 of the begin call.</param>
            <param name="arg7">Argument 7 of the begin call.</param>
            <param name="arg8">Argument 8 of the begin call.</param>
            <param name="arg9">Argument 9 of the begin call.</param>
            <param name="arg10">Argument 10 of the begin call.</param>
            <param name="asyncState">State of the async.</param>
            <param name="cancellationMethod">The cancellation method.</param>
            <param name="creationOptions">The creation options.</param>
            <param name="scheduler">The scheduler.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.FromAsync``12(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Object,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler,System.Threading.CancellationToken)">
            <summary>
            Converts APM to TPL, but supports cancellation.
            </summary>
            <typeparam name="TArg1">The type of argument 1.</typeparam>
            <typeparam name="TArg2">The type of argument 2.</typeparam>
            <typeparam name="TArg3">The type of argument 3.</typeparam>
            <typeparam name="TArg4">The type of argument 4.</typeparam>
            <typeparam name="TArg5">The type of argument 5.</typeparam>
            <typeparam name="TArg6">The type of argument 6.</typeparam>
            <typeparam name="TArg7">The type of argument 7.</typeparam>
            <typeparam name="TArg8">The type of argument 8.</typeparam>
            <typeparam name="TArg9">The type of argument 9.</typeparam>
            <typeparam name="TArg10">The type of argument 10.</typeparam>
            <typeparam name="TArg11">The type of argument 11.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="beginMethod">The begin method.</param>
            <param name="endMethod">The end method.</param>
            <param name="arg1">Argument 1 of the begin call.</param>
            <param name="arg2">Argument 2 of the begin call.</param>
            <param name="arg3">Argument 3 of the begin call.</param>
            <param name="arg4">Argument 4 of the begin call.</param>
            <param name="arg5">Argument 5 of the begin call.</param>
            <param name="arg6">Argument 6 of the begin call.</param>
            <param name="arg7">Argument 7 of the begin call.</param>
            <param name="arg8">Argument 8 of the begin call.</param>
            <param name="arg9">Argument 9 of the begin call.</param>
            <param name="arg10">Argument 10 of the begin call.</param>
            <param name="arg11">Argument 11 of the begin call.</param>
            <param name="asyncState">State of the async.</param>
            <param name="cancellationMethod">The cancellation method.</param>
            <param name="creationOptions">The creation options.</param>
            <param name="scheduler">The scheduler.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.FromAsync``13(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Object,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler,System.Threading.CancellationToken)">
            <summary>
            Converts APM to TPL, but supports cancellation.
            </summary>
            <typeparam name="TArg1">The type of argument 1.</typeparam>
            <typeparam name="TArg2">The type of argument 2.</typeparam>
            <typeparam name="TArg3">The type of argument 3.</typeparam>
            <typeparam name="TArg4">The type of argument 4.</typeparam>
            <typeparam name="TArg5">The type of argument 5.</typeparam>
            <typeparam name="TArg6">The type of argument 6.</typeparam>
            <typeparam name="TArg7">The type of argument 7.</typeparam>
            <typeparam name="TArg8">The type of argument 8.</typeparam>
            <typeparam name="TArg9">The type of argument 9.</typeparam>
            <typeparam name="TArg10">The type of argument 10.</typeparam>
            <typeparam name="TArg11">The type of argument 11.</typeparam>
            <typeparam name="TArg12">The type of argument 12.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="beginMethod">The begin method.</param>
            <param name="endMethod">The end method.</param>
            <param name="arg1">Argument 1 of the begin call.</param>
            <param name="arg2">Argument 2 of the begin call.</param>
            <param name="arg3">Argument 3 of the begin call.</param>
            <param name="arg4">Argument 4 of the begin call.</param>
            <param name="arg5">Argument 5 of the begin call.</param>
            <param name="arg6">Argument 6 of the begin call.</param>
            <param name="arg7">Argument 7 of the begin call.</param>
            <param name="arg8">Argument 8 of the begin call.</param>
            <param name="arg9">Argument 9 of the begin call.</param>
            <param name="arg10">Argument 10 of the begin call.</param>
            <param name="arg11">Argument 11 of the begin call.</param>
            <param name="arg12">Argument 12 of the begin call.</param>
            <param name="asyncState">State of the async.</param>
            <param name="cancellationMethod">The cancellation method.</param>
            <param name="creationOptions">The creation options.</param>
            <param name="scheduler">The scheduler.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.FromAsync``14(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Object,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler,System.Threading.CancellationToken)">
            <summary>
            Converts APM to TPL, but supports cancellation.
            </summary>
            <typeparam name="TArg1">The type of argument 1.</typeparam>
            <typeparam name="TArg2">The type of argument 2.</typeparam>
            <typeparam name="TArg3">The type of argument 3.</typeparam>
            <typeparam name="TArg4">The type of argument 4.</typeparam>
            <typeparam name="TArg5">The type of argument 5.</typeparam>
            <typeparam name="TArg6">The type of argument 6.</typeparam>
            <typeparam name="TArg7">The type of argument 7.</typeparam>
            <typeparam name="TArg8">The type of argument 8.</typeparam>
            <typeparam name="TArg9">The type of argument 9.</typeparam>
            <typeparam name="TArg10">The type of argument 10.</typeparam>
            <typeparam name="TArg11">The type of argument 11.</typeparam>
            <typeparam name="TArg12">The type of argument 12.</typeparam>
            <typeparam name="TArg13">The type of argument 13.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="beginMethod">The begin method.</param>
            <param name="endMethod">The end method.</param>
            <param name="arg1">Argument 1 of the begin call.</param>
            <param name="arg2">Argument 2 of the begin call.</param>
            <param name="arg3">Argument 3 of the begin call.</param>
            <param name="arg4">Argument 4 of the begin call.</param>
            <param name="arg5">Argument 5 of the begin call.</param>
            <param name="arg6">Argument 6 of the begin call.</param>
            <param name="arg7">Argument 7 of the begin call.</param>
            <param name="arg8">Argument 8 of the begin call.</param>
            <param name="arg9">Argument 9 of the begin call.</param>
            <param name="arg10">Argument 10 of the begin call.</param>
            <param name="arg11">Argument 11 of the begin call.</param>
            <param name="arg12">Argument 12 of the begin call.</param>
            <param name="arg13">Argument 13 of the begin call.</param>
            <param name="asyncState">State of the async.</param>
            <param name="cancellationMethod">The cancellation method.</param>
            <param name="creationOptions">The creation options.</param>
            <param name="scheduler">The scheduler.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.FromAsync``15(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Object,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler,System.Threading.CancellationToken)">
            <summary>
            Converts APM to TPL, but supports cancellation.
            </summary>
            <typeparam name="TArg1">The type of argument 1.</typeparam>
            <typeparam name="TArg2">The type of argument 2.</typeparam>
            <typeparam name="TArg3">The type of argument 3.</typeparam>
            <typeparam name="TArg4">The type of argument 4.</typeparam>
            <typeparam name="TArg5">The type of argument 5.</typeparam>
            <typeparam name="TArg6">The type of argument 6.</typeparam>
            <typeparam name="TArg7">The type of argument 7.</typeparam>
            <typeparam name="TArg8">The type of argument 8.</typeparam>
            <typeparam name="TArg9">The type of argument 9.</typeparam>
            <typeparam name="TArg10">The type of argument 10.</typeparam>
            <typeparam name="TArg11">The type of argument 11.</typeparam>
            <typeparam name="TArg12">The type of argument 12.</typeparam>
            <typeparam name="TArg13">The type of argument 13.</typeparam>
            <typeparam name="TArg14">The type of argument 14.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="beginMethod">The begin method.</param>
            <param name="endMethod">The end method.</param>
            <param name="arg1">Argument 1 of the begin call.</param>
            <param name="arg2">Argument 2 of the begin call.</param>
            <param name="arg3">Argument 3 of the begin call.</param>
            <param name="arg4">Argument 4 of the begin call.</param>
            <param name="arg5">Argument 5 of the begin call.</param>
            <param name="arg6">Argument 6 of the begin call.</param>
            <param name="arg7">Argument 7 of the begin call.</param>
            <param name="arg8">Argument 8 of the begin call.</param>
            <param name="arg9">Argument 9 of the begin call.</param>
            <param name="arg10">Argument 10 of the begin call.</param>
            <param name="arg11">Argument 11 of the begin call.</param>
            <param name="arg12">Argument 12 of the begin call.</param>
            <param name="arg13">Argument 13 of the begin call.</param>
            <param name="arg14">Argument 14 of the begin call.</param>
            <param name="asyncState">State of the async.</param>
            <param name="cancellationMethod">The cancellation method.</param>
            <param name="creationOptions">The creation options.</param>
            <param name="scheduler">The scheduler.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.SetFromTask(System.Threading.Tasks.TaskCompletionSource{System.Boolean},System.Threading.Tasks.Task)">
            <summary>
              Sets the result of a <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task"/> via a
              different <see cref="T:System.Threading.Tasks.Task"/>.
            </summary>
            <param name="tcs">The task completion source.</param>
            <param name="task">
              The task used to set the result of the <paramref name="tcs"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
              <para><paramref name="tcs"/> was a <see langword="null"/>.</para>
              <para>-or-</para>
              <para><paramref name="task"/> was a <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
              <para>The <see cref="T:System.Threading.Tasks.TaskStatus"/> was in a faulted state and
              was completed due to an unhandled exception. The exception couldn't be retrieved.</para>
              <para>-or-</para>
              <para>The task was not completed.</para>
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.SetFromTask``1(System.Threading.Tasks.TaskCompletionSource{``0},System.Threading.Tasks.Task{``0})">
            <summary>
              Sets the result of a <see cref="P:System.Threading.Tasks.TaskCompletionSource`1.Task"/> with a
              <see cref="T:System.Threading.Tasks.Task`1"/>.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="tcs">The task completion source.</param>
            <param name="task">
              The task used to set the result of the <paramref name="tcs"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">
              <para><paramref name="tcs"/> was a <see langword="null"/>.</para>
              <para>-or-</para>
              <para><paramref name="task"/> was a <see langword="null"/>.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
              <para>The <see cref="T:System.Threading.Tasks.TaskStatus"/> was in a faulted state
              and was completed due to an unhandled exception. The exception couldn't be retrieved.</para>
              <para>-or-</para>
              <para>The task was not completed.</para>
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.WithAsyncCallback(System.Threading.Tasks.Task,System.AsyncCallback,System.Object)">
            <summary>
              Performs an <see cref="T:System.AsyncCallback">async callback</see> once a task is complete
              (preserving the state).
            </summary>
            <param name="task">The task.</param>
            <param name="callback">The method to be called once the task is complete.</param>
            <param name="state">
              The object to use as the underlying <see cref="T:System.Threading.Tasks.Task"/>'s state.
            </param>
            <returns>The passed in <paramref name="task"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="task"/> is a <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.WithAsyncCallback``1(System.Threading.Tasks.Task{``0},System.AsyncCallback,System.Object)">
            <summary>
              Performs an <see cref="T:System.AsyncCallback">async callback</see> once a task is complete
              (preserving the task's state).
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="task">The task.</param>
            <param name="callback">The method to be called once the task is complete.</param>
            <param name="state">
              The object to use as the underlying <see cref="T:System.Threading.Tasks.Task`1"/>'s state.
            </param>
            <returns>The passed in <paramref name="task"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.Safe(System.Func{System.Threading.Tasks.Task})">
            <summary>
              Takes a function that creates a <see cref="T:System.Threading.Tasks.Task"/> and wraps it so that it will always return a <see cref="T:System.Threading.Tasks.Task"/>.
              If the passed in function throws an exception then this is turned into a <see cref="T:System.Threading.Tasks.Task"/> that throws the exception.
            </summary>
            <param name="taskCreator">A function that creates a task.</param>
            <returns>
              The created <see cref="T:System.Threading.Tasks.Task"/>.
              If the <paramref name="taskCreator"/> threw an exception then the returned task is a task
              that will throw that exception.
            </returns>
            <remarks>
              This is particularly vital for APM where the exception needs to propagate to the end call.
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.Safe``1(System.Func{System.Threading.Tasks.Task{``0}})">
            <summary>
              Takes a function that creates a <see cref="T:System.Threading.Tasks.Task`1">Task</see>
              and wraps it so that it will always return a <see cref="T:System.Threading.Tasks.Task`1">Task</see>.
              If the passed in function throws an exception then this is turned into a
              <see cref="T:System.Threading.Tasks.Task`1">Task</see> that throws the exception.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="taskCreator">A function that creates a task.</param>
            <returns>
              <para>The created <see cref="T:System.Threading.Tasks.Task`1">Task</see>.</para>
              <para>If the <paramref name="taskCreator"/> threw an exception then the returned task is a task
              that will throw that exception.</para>
            </returns>
            <remarks>
              This is particularly vital for APM where the exception needs to propagate to the end call.
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.After``2(System.Threading.Tasks.Task{``0},System.Func{System.Threading.Tasks.Task{``0},``1})">
            <summary>
              Creates a task continuation if necessary but supports a null antecedent.
              Also handles errors and cancellation of the original task.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="task">The task.</param>
            <param name="continuation">The continuation.</param>
            <returns>The continuation task.</returns>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">Antecedent task was cancelled.</exception>
            <exception cref="T:System.InvalidOperationException">
              <para>The <see cref="T:System.Threading.Tasks.TaskStatus"/> was in a faulted state.
              No exception could be retrieved.</para>
              <para>-or-</para>
              <para>The antecedent task was in an invalid state.</para>
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.After``2(System.Threading.Tasks.Task{``0},System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.Tasks.TaskCreationOptions)">
            <summary>
              Creates a task continuation if necessary but supports a null antecedent.
              Also handles errors and cancellation of the original task.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="task">The task.</param>
            <param name="continuation">The continuation.</param>
            <param name="creationOptions">
              The creation options, which can be used to control the behaviour of the task.
            </param>
            <returns>The continuation task.</returns>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">Antecedent task was cancelled.</exception>
            <exception cref="T:System.InvalidOperationException">
              <para>The <see cref="T:System.Threading.Tasks.TaskStatus"/> was in a faulted state.
              No exception could be retrieved.</para>
              <para>-or-</para>
              <para>The antecedent task was in an invalid state.</para>
            </exception>
            <remarks>
              An exception will be thrown if <paramref name="task"/> is ended prematurely by an exception.
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.AfterAll``2(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task{``0}},System.Func{System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task{``0}},``1},System.Threading.Tasks.TaskCreationOptions)">
            <summary>
              Creates a task continuation if necessary but supports zero antecedents.
              Also handles errors and cancellation of the original task.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <typeparam name="TNewResult">The type of the new result.</typeparam>
            <param name="tasks">The tasks.</param>
            <param name="continuation">The continuation.</param>
            <param name="creationOptions">
              The creation options, which can be used to control the behaviour of the task.
            </param>
            <returns>The continuation task.</returns>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">An antecedent task was cancelled.</exception>
            <exception cref="T:System.InvalidOperationException">
              <para>The <see cref="T:System.Threading.Tasks.TaskStatus"/> was in a faulted state.
              No exception could be retrieved.</para>
              <para>-or-</para>
              <para>The antecedent task was in an invalid state.</para>
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.GetEquivalentContinuationOptions(System.Threading.Tasks.TaskCreationOptions)">
            <summary>
              Gets the equivalent <see cref="T:System.Threading.Tasks.TaskContinuationOptions"/> from the specified
              <see cref="T:System.Threading.Tasks.TaskCreationOptions"/>.
            </summary>
            <param name="creationOptions">
              The creation options, which can be used to control the behaviour of the task.
            </param>
            <returns>
              The equivalent <see cref="T:System.Threading.Tasks.TaskContinuationOptions"/> from the
              <paramref name="creationOptions"/> specified.
            </returns>
            <remarks>
              Useful for quickly passing a <see cref="T:System.Threading.Tasks.Task"/>'s
              <see cref="T:System.Threading.Tasks.TaskCreationOptions">creation options</see> to a continuation.
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.WaitAny(System.Threading.WaitHandle,System.Threading.WaitHandle[])">
            <summary>
              Combines all wait handles into a single, <see cref="T:System.Threading.WaitHandle"/>
              that is signalled when any handle has been signalled.
            </summary>
            <param name="handle">The wait handle.</param>
            <param name="handles">The handles.</param>
            <returns>
              The combined wait <paramref name="handles"/> as a single <see cref="T:System.Threading.WaitHandle"/> object.
            </returns>
            <exception cref="T:System.Security.SecurityException">
              The caller does not have the required permission.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.WaitAll(System.Threading.WaitHandle,System.Threading.WaitHandle[])">
            <summary>
              Combines all wait handles into a single, <see cref="T:System.Threading.WaitHandle"/>
              that is signalled when all handles have been signalled.
            </summary>
            <param name="handle">The wait handle.</param>
            <param name="handles">The handles to combine.</param>
            <returns>
              The combined wait <paramref name="handles"/> as a single <see cref="T:System.Threading.WaitHandle"/> object.
            </returns>
            <exception cref="T:System.Security.SecurityException">
              The caller does not have the required permission.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.WaitAllCallback(System.Threading.ManualResetEvent,System.Collections.Generic.Queue{System.Threading.WaitHandle})">
            <summary>
              The callback for <see cref="M:WebApplications.Utilities.TaskExtensions.WaitAll(System.Threading.WaitHandle,System.Threading.WaitHandle[])"/>.
            </summary>
            <param name="newHandle">The new combined handle.</param>
            <param name="handleQueue">A FIFO (first-in, first-out) collection of handle objects.</param>
            <exception cref="T:System.Security.SecurityException">
              The caller does not have the required permission.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.FromAsync``1(System.IAsyncResult,System.Func{System.IAsyncResult,``0},System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler,System.Threading.CancellationToken)">
            <summary>
              Converts APM to TPL, supports task cancellation.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="asyncResult">The async result.</param>
            <param name="endMethod">The method to execute once the async method completes.</param>
            <param name="cancellationMethod">The method to run if cancellation is requested.</param>
            <param name="creationOptions">
              The creation options, which can be used to control the task behaviour.
            </param>
            <param name="scheduler">
              <para>The scheduler, handles all the scheduling logic.</para>
              <para>By default this uses <see cref="P:System.Threading.Tasks.TaskScheduler.Default"/>.</para>
            </param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
              The <see cref="T:System.Threading.Tasks.Task`1">Task&lt;TResult&gt;</see> created by
              <see cref="T:System.Threading.Tasks.TaskCompletionSource`1">TaskCompletionSource&lt;TResult&gt;</see>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.ConfigureAwait(System.Threading.CancellationToken,System.Boolean)">
            <summary>
            Configures an awaiter used to await cancellation on a <see cref="T:System.Threading.CancellationToken" />.
            </summary>
            <param name="token">The cancellation token.</param>
            <param name="continueOnCapturedContext"><see langword="true"/> to attempt to marshal the continuation back to the original context captured; otherwise, <see langword="false"/>.</param>
            <returns> An object used to await the <see cref="T:System.Threading.CancellationToken" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.ConfigureAwait(WebApplications.Utilities.Threading.ITokenSource,System.Boolean)">
            <summary>
            Configures an awaiter used to await cancellation on an <see cref="T:WebApplications.Utilities.Threading.ITokenSource" />.
            </summary>
            <param name="tokenSource">The token source.</param>
            <param name="continueOnCapturedContext"><see langword="true"/> to attempt to marshal the continuation back to the original context captured; otherwise, <see langword="false"/>.</param>
            <returns> An object used to await the <see cref="T:WebApplications.Utilities.Threading.ITokenSource" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.ConfigureAwait(WebApplications.Utilities.Threading.CancelableTokenSource,System.Boolean)">
            <summary>
            Configures an awaiter used to await cancellation on a <see cref="T:WebApplications.Utilities.Threading.CancelableTokenSource" />.
            </summary>
            <param name="tokenSource">The token source.</param>
            <param name="continueOnCapturedContext"><see langword="true" /> to attempt to marshal the continuation back to the original context captured; otherwise, <see langword="false" />.</param>
            <returns>
            An object used to await the <see cref="T:WebApplications.Utilities.Threading.CancelableTokenSource" />.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.ConfigureAwait(System.Threading.WaitHandle,System.Boolean)">
            <summary>
            Configures an awaiter used to await cancellation on a <see cref="T:System.Threading.WaitHandle" />.
            </summary>
            <param name="handle">The handle.</param>
            <param name="continueOnCapturedContext"><see langword="true" /> to attempt to marshal the continuation back to the original context captured; otherwise, <see langword="false" />.</param>
            <returns>
            An object used to await the <see cref="T:System.Threading.WaitHandle" />.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.GetAwaiter(System.Threading.CancellationToken)">
            <summary>
            Gets an awaiter used to await cancellation on a <see cref="T:System.Threading.CancellationToken" />.
            </summary>
            <param name="token">The cancellation token.</param>
            <returns>The awaiter.</returns>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.GetAwaiter(WebApplications.Utilities.Threading.ITokenSource)">
            <summary>
            Gets an awaiter used to await cancellation on an <see cref="T:WebApplications.Utilities.Threading.ITokenSource" />.
            </summary>
            <param name="tokenSource">The token source.</param>
            <returns>The awaiter.</returns>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.GetAwaiter(System.Threading.CancellationTokenSource)">
            <summary>
            Gets an awaiter used to await cancellation on a <see cref="T:System.Threading.CancellationTokenSource" />.
            </summary>
            <param name="tokenSource">The token source.</param>
            <returns>The awaiter.</returns>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.GetAwaiter(System.Threading.WaitHandle)">
            <summary>
            Provides await functionality for ordinary <see cref="T:System.Threading.WaitHandle"/>s.
            </summary>
            <param name="handle">The handle to wait on.</param>
            <returns>The awaiter.</returns>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.ToTask(System.Threading.WaitHandle,System.Threading.CancellationToken)">
            <summary>
            Creates a TPL Task that is marked as completed when a <see cref="T:System.Threading.WaitHandle" /> is signaled.
            </summary>
            <param name="handle">The handle whose signal triggers the task to be completed.</param>
            <param name="token">The cancellation token.</param>
            <returns>
            A Task that is completed after the handle is signaled.
            </returns>
            <remarks>
            There is a (brief) time delay between when the handle is signaled and when the task is marked as completed.
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.ToTask(System.Exception)">
            <summary>
            Creates a Task from an exception
            </summary>
            <param name="exception">The exception.</param>
            <returns>A task.</returns>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.ToTask``1(System.Exception)">
            <summary>
            Creates a Task from an exception
            </summary>
            <typeparam name="TResult">The type of the T result.</typeparam>
            <param name="exception">The exception.</param>
            <returns>A task.</returns>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.WithCancellation(System.Threading.Tasks.Task,System.Threading.CancellationToken)">
            <summary>
            Adds cancellation support to a task that is otherwise not cancelable.
            </summary>
            <param name="task">The task.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An awaitable task</returns>
            <remarks><para>This should be used with caution, as it doesn't stop the underlying task, which continues to execute, instead it stops you waiting for it.
            This can be desirable behaviour when used properly, but it must be understood that the underlying task is still running and so care should be
            taken to not make use of any shared resources, etc.</para>
            <para>See http://blogs.msdn.com/b/pfxteam/archive/2012/10/05/how-do-i-cancel-non-cancelable-async-operations.aspx for more information.</para></remarks>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.WithCancellationInternal(System.Threading.Tasks.Task,System.Threading.CancellationToken)">
            <summary>
            Adds cancellation support to a task that is otherwise not cancelable.
            </summary>
            <param name="task">The task.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException"></exception>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.WithCancellation``1(System.Threading.Tasks.Task{``0},System.Threading.CancellationToken)">
            <summary>
            Adds cancellation support to a task that is otherwise not cancelable.
            </summary>
            <typeparam name="T">The task result.</typeparam>
            <param name="task">The task.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An awaitable task</returns>
            <remarks>
            <para>This should be used with caution, as it doesn't stop the underlying task, which continues to execute, instead it stops you waiting for it.
            This can be desirable behaviour when used properly, but it must be understood that the underlying task is still running and so care should be
            taken to not make use of any shared resources, etc.</para>
            <para>See http://blogs.msdn.com/b/pfxteam/archive/2012/10/05/how-do-i-cancel-non-cancelable-async-operations.aspx for more information.</para>
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.WithCancellationInternal``1(System.Threading.Tasks.Task{``0},System.Threading.CancellationToken)">
            <summary>
            Adds cancellation support to a task that is otherwise not cancelable.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="task">The task.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException"></exception>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.WithTimeout(System.Threading.CancellationToken,System.TimeSpan)">
            <summary>
            Adds a timeout to an existing <see cref="T:System.Threading.CancellationToken"/>.
            </summary>
            <param name="token">The cancellation token.</param>
            <param name="timeout">The timeout.</param>
            <returns>A token source that will be cancelled after the timeout period has passed.</returns>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.WithTimeout(System.Threading.CancellationToken,NodaTime.Duration)">
            <summary>
            Adds a timeout to an existing <see cref="T:System.Threading.CancellationToken"/>.
            </summary>
            <param name="token">The cancellation token.</param>
            <param name="timeout">The timeout.</param>
            <returns>A token source that will be cancelled after the timeout period has passed.</returns>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.WithTimeout(System.Threading.CancellationToken,System.Int32)">
            <summary>
            Adds a timeout to an existing <see cref="T:System.Threading.CancellationToken"/>.
            </summary>
            <param name="token">The token.</param>
            <param name="milliseconds">The timeout in milliseconds.</param>
            <returns>A token source that will be cancelled after the timeout period has passed.</returns>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.CreateLinked(System.Threading.CancellationToken,System.Threading.CancellationToken)">
            <summary>
            Creates a token source that will be cancelled when either of the given tokens has been cancelled.
            </summary>
            <param name="token1">The first token.</param>
            <param name="token2">The second token.</param>
            <returns>A token source that will be cancelled when either of the given tokens have been cancelled.</returns>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.CreateLinked(System.Threading.CancellationToken,System.Threading.CancellationToken[])">
            <summary>
            Creates a token source that will be cancelled when any of the given tokens have been cancelled.
            </summary>
            <param name="token">The first token.</param>
            <param name="tokens">The any remaining tokens.</param>
            <returns>A token source that will be cancelled when any of the given tokens have been cancelled.</returns>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.CreateCancelableLinked(System.Threading.CancellationToken,System.Threading.CancellationToken)">
            <summary>
            Creates a cancelable token source that will be cancelled when either of the given tokens has been cancelled.
            </summary>
            <param name="token1">The first token.</param>
            <param name="token2">The second token.</param>
            <returns>A token source that will be cancelled when either of the given tokens have been cancelled.</returns>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.CreateCancelableLinked(System.Threading.CancellationToken,System.Threading.CancellationToken[])">
            <summary>
            Creates a cancelable token source that will be cancelled when any of the given tokens have been cancelled.
            </summary>
            <param name="token">The first token.</param>
            <param name="tokens">The any remaining tokens.</param>
            <returns>A token source that will be cancelled when any of the given tokens have been cancelled.</returns>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.ToCancelable(System.Threading.CancellationToken)">
            <summary>
            Gets an <see cref="T:WebApplications.Utilities.Threading.ICancelableTokenSource"/> for a <see cref="T:System.Threading.CancellationToken"/>.
            </summary>
            <param name="token">The token.</param>
            <returns>A token source that can be cancelled and will be cancelled if the <paramref name="token"/> is cancelled.</returns>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.ToCancelable(System.Threading.CancellationTokenSource)">
            <summary>
            Gets an <see cref="T:WebApplications.Utilities.Threading.ICancelableTokenSource" /> for a <see cref="T:System.Threading.CancellationToken" />.
            </summary>
            <param name="cts">The CTS.</param>
            <returns>
            A token source that can be cancelled and will be cancelled if the <paramref name="cts" /> is cancelled.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.ToTokenSource(System.Threading.CancellationToken)">
            <summary>
            Gets an <see cref="T:WebApplications.Utilities.Threading.ITokenSource"/> for the <paramref name="token"/>.
            </summary>
            <param name="token">The token.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.ToTokenSource(System.Threading.CancellationTokenSource)">
            <summary>
            Gets an <see cref="T:WebApplications.Utilities.Threading.ITokenSource" /> for a <see cref="T:System.Threading.CancellationTokenSource" />.
            </summary>
            <param name="cts">The CancellationTokenSource.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.CancelAfter(System.Threading.CancellationTokenSource,NodaTime.Duration)">
            <summary>
            Schedules a cancel operation on the <see cref="T:System.Threading.CancellationTokenSource" /> after the specified duration.
            </summary>
            <param name="cts">The <see cref="T:System.Threading.CancellationTokenSource"/>.</param>
            <param name="delay">The duration to wait before canceling this <see cref="T:System.Threading.CancellationTokenSource" />.</param>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.GetAwaiter(System.Threading.SynchronizationContext)">
            <summary>
            Gets the awaiter for a <see cref="T:System.Threading.SynchronizationContext"/>.
            </summary>
            <param name="context">The context.</param>
            <returns>SynchronizationContextAwaiter.</returns>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.Invoke(System.Threading.SynchronizationContext,System.Action)">
            <summary>
            Invokes the action on the specified context.
            </summary>
            <param name="context">The context.</param>
            <param name="callback">The callback.</param>
        </member>
        <member name="M:WebApplications.Utilities.TaskExtensions.Invoke``1(System.Threading.SynchronizationContext,System.Func{``0})">
            <summary>
            Invokes the function on the specified context.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="context">The context.</param>
            <param name="callback">The callback.</param>
            <returns>T.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Enumerations.TruncateOptions">
            <summary>
              These flags are used to control how a string is truncated in the
              <see cref="M:WebApplications.Utilities.UtilityExtensions.Truncate(System.String,System.Int32,WebApplications.Utilities.Enumerations.TruncateOptions,System.String,System.Int32)">Truncate</see> extension method.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Enumerations.TruncateOptions.None">
            <summary>
              Use the default functionality.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Enumerations.TruncateOptions.FinishWord">
            <summary>
              Do not allow words to be cut off midway through.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Enumerations.TruncateOptions.AllowLastWordToGoOverMaxLength">
            <summary>
              Allow the last word to go over the specified maximum length.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Enumerations.TruncateOptions.IncludeEllipsis">
            <summary>
              Include an ellipsis character at the end of the result.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Enumerations.TriState">
            <summary>
              Handy tristate, useful where bools are just not enough!
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Enumerations.TriState.Style">
            <summary>
              Sets the style for the <see cref="T:WebApplications.Utilities.Enumerations.TriState"/>'s formatting.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Enumerations.TriState.Style.YesUnknownNo">
            <summary>
              States are displayed as Yes/Unknown/No.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Enumerations.TriState.Style.TrueUndefinedFalse">
            <summary>
              States are displayed as True/Undefined/False.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Enumerations.TriState.Style.NegativeEqualPositive">
            <summary>
              States are displayed as Negative/Equal/Positive.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Enumerations.TriState.No">
            <summary>
              State: No.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Enumerations.TriState.False">
            <summary>
              State: False.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Enumerations.TriState.Negative">
            <summary>
              State: Negative.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Enumerations.TriState.Unknown">
            <summary>
              State: Unknown.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Enumerations.TriState.Undefined">
            <summary>
              State: Undefined.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Enumerations.TriState.Equal">
            <summary>
              State: Equal.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Enumerations.TriState.Yes">
            <summary>
              State: Yes.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Enumerations.TriState.True">
            <summary>
              State: True.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Enumerations.TriState.Positive">
            <summary>
              State: Positive.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Enumerations.TriState._state">
            <summary>
              Stores the underlying state.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Enumerations.TriState.#ctor(System.Byte)">
            <summary>
              Used internally to create the different states.
            </summary>
            <param name="state">The underlying state.</param>
        </member>
        <member name="M:WebApplications.Utilities.Enumerations.TriState.ToString(System.String,System.IFormatProvider)">
            <summary>
              Formats the value of the current instance using the specified format.
            </summary>
            <param name="format">
              <para>The format to use.</para>
              <list type="bullet">
                <item><description>G - Yes/Unknown/No. If the format string is null or empty then G is used.</description></item>
                <item><description>Y - Yes/Unknown/No.</description></item>
                <item><description>T - True/Undefined/False.</description></item>
                <item><description>N - Positive/Equal/Negative.</description></item>
              </list>
              <para>If the format is not one of the above it will try and parse it to a <see cref="T:WebApplications.Utilities.Enumerations.TriState.Style"/>.</para>
            </param>
            <param name="formatProvider">
              The provider to use to format the value. Specify <see langword="null"/> to obtain the numeric format information
              from the current locale setting of the operating system.
            </param>
            <returns>The value of the current instance in the format specified.</returns>
            <exception cref="T:System.FormatException">
              The format must be one of the following:
              <list type="bullet">
                <item><description>G</description></item>
                <item><description>Y</description></item>
                <item><description>T</description></item>
                <item><description>N</description></item>
              </list>
            </exception>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:WebApplications.Utilities.Enumerations.TriState.ToString">
            <summary>
              Returns a <see cref="T:System.String"/> that represents this instance.
              Uses the default format of Style.YesUnknownNo.
            </summary>
            <returns>
              A <see cref="T:System.String"/> representation of this instance in the default Yes/Unknown/No format.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Enumerations.TriState.ToString(WebApplications.Utilities.Enumerations.TriState.Style)">
            <summary>
              Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <param name="style">The formatting style.</param>
            <returns>
              A <see cref="T:System.String"/> representation of this instance in the chosen <paramref name="style"/>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
              The <paramref name="style"/> specified is invalid.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Enumerations.TriState.op_Explicit(WebApplications.Utilities.Enumerations.TriState)~System.Boolean">
            <summary>
              Performs an explicit conversion from a tristate to a <see cref="T:System.Boolean"/>.
            </summary>
            <param name="state">The tristate to convert.</param>
            <returns>The result of the conversion.</returns>
            <exception cref="T:System.InvalidCastException">
              Cannot cast the <paramref name="state"/> if it's TriState.Unknown.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Enumerations.TriState.op_Implicit(System.Boolean)~WebApplications.Utilities.Enumerations.TriState">
            <summary>
              Performs an implicit conversion from a <see cref="T:System.Boolean"/> to a tristate.
            </summary>
            <param name="boolean">The bool to convert.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Enumerations.TriState.op_Implicit(WebApplications.Utilities.Enumerations.TriState)~System.Byte">
            <summary>
              Performs an implicit conversion from a tristate to a <see cref="T:System.Byte"/>.
            </summary>
            <param name="state">The tristate to convert.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Enumerations.TriState.op_Explicit(System.Byte)~WebApplications.Utilities.Enumerations.TriState">
            <summary>
              Performs an explicit conversion from a <see cref="T:System.Byte"/> to a tristate.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Enumerations.TriState.op_Implicit(WebApplications.Utilities.Enumerations.TriState)~System.Int32">
            <summary>
              Performs an implicit conversion from a tristate to an <see cref="T:System.Int32"/>.
            </summary>
            <param name="state">The tristate to convert.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Enumerations.TriState.op_Implicit(System.Int32)~WebApplications.Utilities.Enumerations.TriState">
            <summary>
              Performs an implicit conversion from an <see cref="T:System.Int32"/> to a tristate.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="T:WebApplications.Utilities.ExtendedEnum">
            <summary>
              Extension methods for <see cref="T:System.Enum"/>s.
            </summary>
            <seealso cref="T:WebApplications.Utilities.ExtendedEnum`1"/>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum.ToEnum``1(System.SByte,System.Boolean)">
            <summary>
              Gets the enum that corresponds to the specified <see cref="T:System.SByte"/> value.
            </summary>
            <typeparam name="TEnum">The enum type.</typeparam>
            <param name="value">The numerical value.</param>
            <param name="includeImplicit">
              <para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
              <para>By default this is set to <see langword="false"/>.</para>
            </param>
            <returns>
              The enum of type <typeparamref name="TEnum"/> that corresponds to the <paramref name="value"/> specified.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
              The enum of type <typeparamref name="TEnum"/> doesn't contain the raw <paramref name="value"/> specified.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum.ToEnum``1(System.Byte,System.Boolean)">
            <summary>
              Gets the enum that corresponds to the specified <see cref="T:System.Byte"/> value.
            </summary>
            <typeparam name="TEnum">The enum type.</typeparam>
            <param name="value">The numerical value.</param>
            <param name="includeImplicit">
              <para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
              <para>By default this is set to <see langword="false"/>.</para>
            </param>
            <returns>
              The enum of type <typeparamref name="TEnum"/> that corresponds to the <paramref name="value"/> specified.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
              The enum of type <typeparamref name="TEnum"/> doesn't contain the raw <paramref name="value"/> specified.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum.ToEnum``1(System.UInt16,System.Boolean)">
            <summary>
              Gets the enum that corresponds to the specified <see cref="T:System.UInt16"/> value.
            </summary>
            <typeparam name="TEnum">The enum type.</typeparam>
            <param name="value">The numerical value.</param>
            <param name="includeImplicit">
              <para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
              <para>By default this is set to <see langword="false"/>.</para>
            </param>
            <returns>
            The enum of type <typeparamref name="TEnum"/> that corresponds to the <paramref name="value"/> specified.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
              The enum of type <typeparamref name="TEnum"/> doesn't contain the raw <paramref name="value"/> specified.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum.ToEnum``1(System.Int16,System.Boolean)">
            <summary>
              Gets the enum that corresponds to the specified <see cref="T:System.Int16"/> value.
            </summary>
            <typeparam name="TEnum">The enum type.</typeparam>
            <param name="value">The numerical value.</param>
            <param name="includeImplicit">
              <para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
              <para>By default this is set to <see langword="false"/>.</para>
            </param>
            <returns>
              The enum of type <typeparamref name="TEnum"/> that corresponds to the <paramref name="value"/> specified.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
              The enum of type <typeparamref name="TEnum"/> doesn't contain the raw <paramref name="value"/> specified.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum.ToEnum``1(System.UInt32,System.Boolean)">
            <summary>
              Gets the enum that corresponds to the specified <see cref="T:System.UInt32"/> value.
            </summary>
            <typeparam name="TEnum">The enum type.</typeparam>
            <param name="value">The numerical value.</param>
            <param name="includeImplicit">
              <para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
              <para>By default this is set to <see langword="false"/>.</para>
            </param>
            <returns>
              The enum of type <typeparamref name="TEnum"/> that corresponds to the <paramref name="value"/> specified.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
              The enum of type <typeparamref name="TEnum"/> doesn't contain the raw <paramref name="value"/> specified.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum.ToEnum``1(System.Int32,System.Boolean)">
            <summary>
              Gets the enum that corresponds to the specified <see cref="T:System.Int32"/> value.
            </summary>
            <typeparam name="TEnum">The enum type.</typeparam>
            <param name="value">The numerical value.</param>
            <param name="includeImplicit">
              <para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
              <para>By default this is set to <see langword="false"/>.</para>
            </param>
            <returns>
              The enum of type <typeparamref name="TEnum"/> that corresponds to the <paramref name="value"/> specified.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
              The enum of type <typeparamref name="TEnum"/> doesn't contain the raw <paramref name="value"/> specified.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum.ToEnum``1(System.UInt64,System.Boolean)">
            <summary>
              Gets the enum that corresponds to the specified <see cref="T:System.UInt64"/> value.
            </summary>
            <typeparam name="TEnum">The enum type.</typeparam>
            <param name="value">The numerical value.</param>
            <param name="includeImplicit">
              <para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
              <para>By default this is set to <see langword="false"/>.</para>
            </param>
            <returns>
              The enum of type <typeparamref name="TEnum"/> that corresponds to the <paramref name="value"/> specified.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
              The enum of type <typeparamref name="TEnum"/> doesn't contain the raw <paramref name="value"/> specified.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum.ToEnum``1(System.Int64,System.Boolean)">
            <summary>
              Gets the enum that corresponds to the specified <see cref="T:System.Int64"/> value.
            </summary>
            <typeparam name="TEnum">The enum type.</typeparam>
            <param name="value">The numerical value.</param>
            <param name="includeImplicit">
              <para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
              <para>By default this is set to <see langword="false"/>.</para>
            </param>
            <returns>
              The enum of type <typeparamref name="TEnum"/> that corresponds to the <paramref name="value"/> specified.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
              The enum of type <typeparamref name="TEnum"/> doesn't contain the raw <paramref name="value"/> specified.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum.IsCombinationFlag``1(``0,System.Boolean)">
            <summary>
              Gets a <see cref="T:System.Boolean"/> indicating whether the specified value is a combination flag.
            </summary>
            <typeparam name="TEnum">The type of the enum.</typeparam>
            <param name="value">The enum value.</param>
            <param name="includeImplicit">
              <para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
              <para>By default this is set to <see langword="false"/>.</para></param>
            <returns>
              Returns <see langword="true"/> if <paramref name="value"/> is a combination flag; otherwise returns <see langword="false"/>.
            </returns>
            <example>
            Example of a combination flag:
            <code>
              [Flags]
              private enum Days
              {
                  None = 0,
                  Fri = 1,
                  Sat = 1 &lt;&lt; 1,
                  Sun = 1 &lt;&lt; 2,
                  Weekend = Sat | Sun    // Combination flag
              };
            
              Console.WriteLine(Days.Fri.IsCombinationFlag());        // Outputs false
              Console.WriteLine(Days.Weekend.IsCombinationFlag());    // Outputs true
            </code>
            </example>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum.NumberOfFlags``1(``0,System.Boolean)">
            <summary>
              Gets the number of flags defined in a flag enum.
            </summary>
            <typeparam name="TEnum">The enum type.</typeparam>
            <param name="value">The enum value.</param>
            <param name="includeImplicit">
              <para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
              <para>By default this is set to <see langword="false"/>.</para>
            </param>
            <returns>The number of flags.</returns>
            <example>
            <code>
              [Flags]
              private enum Days
              {
                  None = 0,
                  Fri = 1,
                  Sat = 1 &lt;&lt; 1,
                  Sun = 1 &lt;&lt; 2,
                  Weekend = Sat | Sun
              };
            
              Console.WriteLine(Days.Weekend.NumberOfFlags());    // Outputs 2
              Console.WriteLine(Days.Fri.NumberOfFlags());        // Outputs 1
            </code>
            </example>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum.IsAll``1(``0)">
            <summary>
              Indicates whether the specified value was a flag enum and is the equivalent of setting all flags for that type.
            </summary>
            <typeparam name="TEnum">The type of the enum.</typeparam>
            <param name="value">The enum value.</param>
            <returns>
              Returns <see langword="true"/> if <paramref name="value"/> is all the flags for the type <typeparamref name="TEnum"/>;
              otherwise returns <see langword="false"/>.
            </returns>
            <example>
            <code>
              [Flags]
              private enum Days
              {
                  None = 0,
                  Fri = 1,
                  Sat = 1 &lt;&lt; 1,
                  Sun = 1 &lt;&lt; 2,
                  Weekend = Sat | Sun
              };
            
              Console.WriteLine(Days.Weekend.IsAll());                        // Outputs false
              Console.WriteLine((Days.Sat | Days.Sun).IsAll());               // Outputs false
              Console.WriteLine((Days.Fri | Days.Weekend).IsAll());           // Outputs true
              Console.WriteLine((Days.Fri | Days.Sat | Days.Sun).IsAll());    // Outputs true
            </code>
            </example>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum.IsNone``1(``0)">
            <summary>
              Indicates whether the specified value is a flag enum and is the equivalent of setting no flags.
            </summary>
            <typeparam name="TEnum">The enum type.</typeparam>
            <param name="value">The enum value.</param>
            <returns>
              Returns <see langword="true"/> if the specified value is none; otherwise returns <see langword="false"/>.
            </returns>
            <remarks>
              Flag enums should contain a zero value constant that represents no flags being set.
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum.GetValueDetail``1(``0,System.Boolean)">
            <summary>
              Gets the enum's <see cref="T:WebApplications.Utilities.ExtendedEnum`1.ValueDetail">ValueDetail</see>.
            </summary>
            <typeparam name="TEnum">The enum type.</typeparam>
            <param name="value">The enum value.</param>
            <param name="includeImplicit">
            <para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
            <para>By default this is set to <see langword="false"/>.</para>
            </param>
            <returns>The <see cref="T:WebApplications.Utilities.ExtendedEnum`1.ValueDetail">ValueDetail</see>.</returns>
            <example>
            <code>
              [Flags]
              private enum Days
              {
                  None = 0,
                  Fri = 1,
                  Sat = 1 &lt;&lt; 1,
                  Sun = 1 &lt;&lt; 2,
                  Weekend = Sat | Sun
              };
            
              Console.WriteLine(Days.Weekend.GetValueDetail());   // Outputs 'Weekend' = 3 [2 flags]
              Console.WriteLine(Days.Sat.GetValueDetail());       // Outputs 'Sat' = 2
            </code>
            </example>
            <exception cref="T:System.ArgumentOutOfRangeException">
              The enum of type <typeparamref name="TEnum"/> doesn't contain the <paramref name="value"/> specified.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum.TryGetValueDetail``1(``0,WebApplications.Utilities.ExtendedEnum{``0}.ValueDetail@,System.Boolean)">
            <summary>
              Tries to get the enum's <see cref="T:WebApplications.Utilities.ExtendedEnum`1.ValueDetail">ValueDetail</see>.
            </summary>
            <typeparam name="TEnum">The enum type.</typeparam>
            <param name="value">The enum value.</param>
            <param name="valueDetail">
              <para>The value detail.</para>
              <para>If a value detail isn't found then the output is <see langword="null">null</see>.</para>
            </param>
            <param name="includeImplicit">
              <para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
              <para>By default this is set to <see langword="false"/>.</para>
            </param>
            <returns>
              Returns <see langword="true"/> if the <paramref name="valueDetail"/> was found; otherwise returns <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum.TryGetLong``1(``0,System.Int64@,System.Boolean)">
            <summary>
            Gets the <see cref="T:System.Int64" /> value equivalent of an enum
            </summary>
            <typeparam name="TEnum">The enum type.</typeparam>
            <param name="value">The enum value.</param>
            <param name="vLong">The long value.</param>
            <param name="includeImplicit"><para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
            <para>By default this is set to <see langword="false"/>.</para></param>
            <returns>
            Returns <see langword="true" /> if the <paramref name="value" /> was found; otherwise returns <see langword="false" />.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum.GetName``1(``0,System.Boolean)">
            <summary>
              Gets the name of the enum.
            </summary>
            <typeparam name="TEnum">The enum type.</typeparam>
            <param name="value">The enum value.</param>
            <param name="includeImplicit">
              <para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
              <para>By default this is set to <see langword="false"/>.</para>
            </param>
            <returns>A <see cref="T:System.String"/> containing the enum's name.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum.TryGetName``1(``0,System.String@,System.Boolean)">
            <summary>
              Tries to get the name of an enum.
            </summary>
            <typeparam name="TEnum">The enum type.</typeparam>
            <param name="value">The enum value.</param>
            <param name="name">
              <para>The name.</para>
              <para>If a name isn't found then the output is <see langword="null"/>.</para>
            </param>
            <param name="includeImplicit">
              <para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
              <para>By default this is set to <see langword="false"/>.</para>
            </param>
            <returns>
              Returns <see langword="true"/> if the name was found; otherwise returns <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum.GetDescription``1(``0)">
            <summary>
              Gets the enum's <see cref="T:System.ComponentModel.DescriptionAttribute"/>.
            </summary>
            <typeparam name="TEnum">The enum type.</typeparam>
            <param name="value">The enum value.</param>
            <returns>A <see cref="T:System.String"/> containing the description (if any).</returns>
            <example>
            <code>
              [Flags]
              private enum Days
              {
                 None,
                 Fri = 1,
                 Sat = 1 &lt;&lt; 1,
                 Sun = 1 &lt;&lt; 2,
                 [Description("The best days of the week.")] Weekend = Fri | Sat
              };
            
              Console.WriteLine(Days.Weekend.GetDescription());   // Outputs "The best days of the week"
            </code>
            </example>
            <remarks>
              If more than one enum of the same type has the same integral value all of their descriptions will
              be concatenated into a single result, each on a new line.
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum.TryGetDescription``1(``0,System.String@)">
            <summary>
              Tries to get the enum's <see cref="T:System.ComponentModel.DescriptionAttribute"/>.
            </summary>
            <typeparam name="TEnum">The enum type.</typeparam>
            <param name="value">The enum value.</param>
            <param name="name">
              <para>The description.</para>
              <para>If no description is found then the output is an <see cref="F:System.String.Empty">empty string</see>.</para>
            </param>
            <returns>
              Returns <see langword="true"/> if a description was found; otherwise returns <see langword="false"/>.
            </returns>
            <remarks>
              If more than one enum of the same type has the same integral value all of their descriptions will
              be concatenated into a single result, each on a new line.
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum.AreSet``1(``0,``0,System.Boolean)">
            <summary>
              Determines whether the specified flags are set on the value.
            </summary>
            <typeparam name="TEnum">The enum type.</typeparam>
            <param name="value">The enum value.</param>
            <param name="flags">The flags to check.</param>
            <param name="includeImplicit">
              <para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
              <para>By default this is set to <see langword="false"/>.</para>
            </param>
            <returns>
              Returns <see langword="true"/> if all the specified <paramref name="flags"/> are set; otherwise returns <see langword="false"/>.
            </returns>
            <example>
            <code>
              [Flags]
              private enum Days
              {
                 None,
                 Fri = 1,
                 Sat = 1 &lt;&lt; 1,
                 Sun = 1 &lt;&lt; 2,
                 Weekend = Fri | Sat
              };
            
              Console.WriteLine(Days.Weekend.AreSet(Days.Sun | Days.Fri));  // False
              Console.WriteLine(Days.Weekend.AreSet(Days.Sun));             // False
              Console.WriteLine(Days.Weekend.AreSet(Days.Fri));             // True
            </code>
            </example>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum.AreClear``1(``0,``0,System.Boolean)">
            <summary>
              Determines whether the specified flags are clear of the value.
            </summary>
            <typeparam name="TEnum">The enum type.</typeparam>
            <param name="value">The enum value.</param>
            <param name="flags">The flags to check.</param>
            <param name="includeImplicit">
              <para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
              <para>By default this is set to <see langword="false"/>.</para>
            </param>
            <returns>
              Returns <see langword="true"/> if the <paramref name="flags"/> are clear of the specified enum;
              otherwise returns <see langword="false"/>.
            </returns>
            <example>
            <code>
              [Flags]
              private enum Days
              {
                 None,
                 Fri = 1,
                 Sat = 1 &lt;&lt; 1,
                 Sun = 1 &lt;&lt; 2,
                 Weekend = Fri | Sat
              };
            
              Console.WriteLine(Days.Weekend.AreClear(Days.Fri));               // False
              Console.WriteLine(Days.Weekend.AreClear(Days.Fri | Days.Sun));    // False
              Console.WriteLine(Days.Weekend.AreClear(Days.Sun));               // True
              Console.WriteLine(Days.Weekend.AreClear(Days.Sun | Days.None));   // True
            </code>
            </example>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum.Set``1(``0,``0,System.Boolean)">
            <summary>
              Sets the flags on the value.
            </summary>
            <typeparam name="TEnum">The enum type.</typeparam>
            <param name="value">The enum value.</param>
            <param name="flags">The flags to set.</param>
            <param name="includeImplicit">
              <para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
              <para>By default this is set to <see langword="false"/>.</para>
            </param>
            <returns>The result of the <paramref name="flags"/> set to <paramref name="value"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
              The <paramref name="value"/> cannot be set with the <paramref name="flags"/> specified.
            </exception>
            <exception cref="T:System.ArgumentException">
              <para><typeparamref name="TEnum"/> is not an enum.</para>
              <para>-or-</para>
              <para><typeparamref name="TEnum"/> is not a flag enum.</para>
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum.TrySet``1(``0,``0,``0@,System.Boolean)">
            <summary>
              Tries to set the specified flags on the value.
            </summary>
            <typeparam name="TEnum">The enum type.</typeparam>
            <param name="value">The enum value.</param>
            <param name="flags">The flags to set.</param>
            <param name="result">
              The result of the <paramref name="flags"/> set to <paramref name="value"/>.
            </param>
            <param name="includeImplicit">
              <para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
              <para>By default this is set to <see langword="false"/>.</para>
            </param>
            <returns>
              Returns <see langword="true"/> if the flags can be set; otherwise returns <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum.Clear``1(``0,``0,System.Boolean)">
            <summary>
              Clears the specified flags on the value.
            </summary>
            <typeparam name="TEnum">The enum type.</typeparam>
            <param name="value">The enum value.</param>
            <param name="flags">The flags to clear.</param>
            <param name="includeImplicit">
              <para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
              <para>By default this is set to <see langword="false"/>.</para>
            </param>
            <returns>
              The result of the <paramref name="flags"/> cleared from <paramref name="value"/>.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
              The enum cannot be cleared of the specified <paramref name="flags"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
              <para><typeparamref name="TEnum"/> is not an enum.</para>
              <para>-or-</para>
              <para><typeparamref name="TEnum"/> is not a flag enum.</para>
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum.TryClear``1(``0,``0,``0@,System.Boolean)">
            <summary>
              Tries to clear the flags on the value.
            </summary>
            <typeparam name="TEnum">The enum type.</typeparam>
            <param name="value">The enum value.</param>
            <param name="flags">The flags to clear.</param>
            <param name="result">
              The result of the <paramref name="flags"/> cleared from <paramref name="value"/>.
            </param>
            <param name="includeImplicit">
              <para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
              <para>By default this is set to <see langword="false"/>.</para>
            </param>
            <returns>
              Returns <see langword="true"/> if the flags can be cleared; otherwise returns <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum.Intersect``1(``0,``0,System.Boolean)">
            <summary>
              Gets the intersection of the enum and the specified flags (returns a flags which are set on both).
            </summary>
            <typeparam name="TEnum">The enum type.</typeparam>
            <param name="value">The enum value.</param>
            <param name="flags">The flags.</param>
            <param name="includeImplicit">
              <para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
              <para>By default this is set to <see langword="false"/>.</para>
            </param>
            <returns>
              The intersection of <paramref name="value"/> and <paramref name="flags"/>.
            </returns>
            <exception cref="T:System.ArgumentException">
              <para><typeparamref name="TEnum"/> is not an enum.</para>
              <para>-or-</para>
              <para><typeparamref name="TEnum"/> is not a flag enum.</para>
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
              The <paramref name="value"/> type could not be intersected with the <paramref name="flags"/> specified.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum.TryIntersect``1(``0,``0,``0@,System.Boolean)">
            <summary>
              Tries to get the intersection of the enum and the specified flags (returns a flags which are set on both).
            </summary>
            <typeparam name="TEnum">The enum type.</typeparam>
            <param name="value">The enum value.</param>
            <param name="flags">The flags.</param>
            <param name="result">The intersection of <paramref name="value"/> and <paramref name="flags"/>.</param>
            <param name="includeImplicit">
              <para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
              <para>By default this is set to <see langword="false"/>.</para>
            </param>
            <returns>
              Returns <see langword="true"/> if the flags can be intersected; otherwise returns <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum.Invert``1(``0,System.Boolean)">
            <summary>
              Inverts all the valid flags.
            </summary>
            <typeparam name="TEnum">The enum type.</typeparam>
            <param name="value">The enum value.</param>
            <param name="includeImplicit">
              <para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
              <para>By default this is set to <see langword="false"/>.</para>
            </param>
            <returns>The inverted flags for the specified <paramref name="value"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
              The <paramref name="value"/> provided could not be inverted.
            </exception>
            <exception cref="T:System.ArgumentException">
              <para><typeparamref name="TEnum"/> is not an enum.</para>
              <para>-or-</para>
              <para><typeparamref name="TEnum"/> is not a flag enum.</para>
            </exception>
            <example>
            <code>
              [Flags]
              private enum Days
              {
                 None,
                 Fri = 1,
                 Sat = 1 &lt;&lt; 1,
                 Sun = 1 &lt;&lt; 2,
                 Weekend = Fri | Sat,
                 All = Sun | Weekend
              };
            
              Console.WriteLine(ExtendedEnum&lt;Days&gt;.Invert(Days.All));       // Outputs None
              Console.WriteLine(ExtendedEnum&lt;Days&gt;.Invert(Days.Weekend));   // Outputs Sun
            </code>
            </example>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum.TryInvert``1(``0,``0@,System.Boolean)">
            <summary>
              Tries to invert all the valid flags.
            </summary>
            <typeparam name="TEnum">The enum type.</typeparam>
            <param name="value">The enum value.</param>
            <param name="result">
              The inverted flags for the specified <paramref name="value"/>.
            </param>
            <param name="includeImplicit">
              <para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
              <para>By default this is set to <see langword="false"/>.</para>
            </param>
            <returns>
              Returns <see langword="true"/> if the flags can be inverted; otherwise returns <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum.Combine``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
            <summary>
              Combines all of the specified flags.
            </summary>
            <typeparam name="TEnum">The enum type.</typeparam>
            <param name="flags">The flags.</param>
            <param name="includeImplicit">
              <para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
              <para>By default this is set to <see langword="false"/>.</para>
            </param>
            <returns>The combined <paramref name="flags"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
              The flags of type <typeparamref name="TEnum"/> cannot be combined.
            </exception>
            <exception cref="T:System.ArgumentException">
              <para><typeparamref name="TEnum"/> is not an enum.</para>
              <para>-or-</para>
              <para><typeparamref name="TEnum"/> is not a flag enum.</para>
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum.TryCombine``1(System.Collections.Generic.IEnumerable{``0},``0@,System.Boolean)">
            <summary>
              Tries to combine all of the specified flags.
            </summary>
            <typeparam name="TEnum">The enum type.</typeparam>
            <param name="flags">The flags.</param>
            <param name="result">
              <para>The combined <paramref name="flags"/>.</para>
              <para>If unsuccessful then this returns an enum with the raw value of zero.</para>
            </param>
            <param name="includeImplicit">
              <para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
              <para>By default this is set to <see langword="false"/>.</para>
            </param>
            <returns>
              Returns <see langword="true"/> if the flags can be inverted; otherwise returns <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum.SplitFlags``1(``0,System.Boolean,System.Boolean)">
            <summary>
              Splits the specified flags.
            </summary>
            <typeparam name="TEnum">The enum type.</typeparam>
            <param name="flags">The flags to split.</param>
            <param name="includeImplicit">
              <para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
              <para>By default this is set to false.</para>
            </param>
            <param name="includeCombinations">
              <para>If set to <see langword="true"/> will split into the minimum number of flags (allows combinations).</para>
              <para>By default this is set to <see langword="false"/>.</para>
            </param>
            <returns>The result of the split <paramref name="flags"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
              Couldn't split the <paramref name="flags"/> for type <typeparamref name="TEnum"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
              <para><typeparamref name="TEnum"/> is not an enum.</para>
              <para>-or-</para>
              <para><typeparamref name="TEnum"/> is not a flag enum.</para>
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum.TrySplitFlags``1(``0,System.Collections.Generic.IEnumerable{``0}@,System.Boolean,System.Boolean)">
            <summary>
              Tries to split all the specified flags.
            </summary>
            <typeparam name="TEnum">The enum type.</typeparam>
            <param name="flags">The flags to split.</param>
            <param name="result">
              <para>The result of the split <paramref name="flags"/>.</para>
              <para>The default result if the split fails is <see cref="M:System.Linq.Enumerable.Empty``1"/>.</para>
            </param>
            <param name="includeImplicit">
              <para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
              <para>By default this is set to <see langword="false"/>.</para>
            </param>
            <param name="includeCombinations">
              <para>If set to <see langword="true"/> will split into the minimum number of flags (allows combinations).</para>
              <para>By default this is set to <see langword="false"/>.</para>
            </param>
            <returns>
              Returns <see langword="true"/> if the flags can be split successfully; otherwise returns <see langword="false"/>.
            </returns>
        </member>
        <member name="T:WebApplications.Utilities.ExtendedEnum`1">
            <summary>
            Stores additional information about an <see cref="T:System.Enum"/> type including the names of its enumerations,
            their <see cref="T:System.ComponentModel.DescriptionAttribute">descriptions</see> (if any), its values
            and its raw values as a <see cref="T:System.Int64"/>.
            </summary>
            <typeparam name="TEnum">The enum type.</typeparam>
        </member>
        <member name="F:WebApplications.Utilities.ExtendedEnum`1.IsEnum">
            <summary>
            A <see cref="T:System.Boolean"/> for whether the type is actually an enum.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.ExtendedEnum`1.IsFlag">
            <summary>
            A <see cref="T:System.Boolean"/> for whether the enum is a flag enum.
            </summary>
            <remarks>
            For flag enums define enumeration constants in powers of two, this is so individual flags in combined
            enumeration constants don't overlap.
            </remarks>
            <seealso cref="T:System.FlagsAttribute"/>
        </member>
        <member name="F:WebApplications.Utilities.ExtendedEnum`1.ValueDetails">
            <summary>
            The enumerator for all explicitly defined enum values.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.ExtendedEnum`1.ValueDetailsReversed">
            <summary>
            Contains the value details cached in reverse.
            </summary>
            <remarks>
            This is used for performance at the cost of a small memory hit, without a pre-reversed collection every time
            a build occurred a copy would need to be made by LINQ to reverse.
            </remarks>
        </member>
        <member name="P:WebApplications.Utilities.ExtendedEnum`1.IndividualValueDetails">
            <summary>
            The enumerator for all explicitly defined non-combination enum values.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.ExtendedEnum`1.CombinedValueDetails">
            <summary>
            The enumerator for all explicitly defined combination enum values.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.ExtendedEnum`1.Values">
            <summary>
            The enumerator for all explicitly defined enum values.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.ExtendedEnum`1.IndividualValues">
            <summary>
            <para>The enumerator for all explicitly defined individual enum values.</para>
            <para>This is identical to <see cref="P:WebApplications.Utilities.ExtendedEnum`1.Values"/> for a non-flag enum.</para>
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.ExtendedEnum`1.CombinationValues">
            <summary>
            <para>The enumerator for all explicitly defined combination enum values.</para>
            <para>This is empty for a non-flag enum.</para>
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.ExtendedEnum`1.RawValues">
            <summary>
            The enumerator for all explicitly defined enum values (the raw value).
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.ExtendedEnum`1.IndividualRawValues">
            <summary>
            <para>The enumerator for all explicitly defined individual enum values (the raw value).</para>
            <para>This is identical to <see cref="P:WebApplications.Utilities.ExtendedEnum`1.RawValues"/> for a non-flag enum.</para>
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.ExtendedEnum`1.CombinationRawValues">
            <summary>
            <para>The enumerator for all explicitly defined combination enum values (the raw value).</para>
            <para>This is empty for a non-flag enum.</para>
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.ExtendedEnum`1.Names">
            <summary>
            The enumerator for all explicitly defined enum names.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.ExtendedEnum`1.IndividualNames">
            <summary>
            <para>The enumerator for all explicitly defined individual enum names.</para>
            <para>This is identical to <see cref="P:WebApplications.Utilities.ExtendedEnum`1.Names"/> for a non-flag enum.</para>
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.ExtendedEnum`1.CombinationNames">
            <summary>
            <para>The enumerator for all explicitly defined combination enum names.</para>
            <para>This is empty for a non-flag enum.</para>
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.ExtendedEnum`1._noneValueDetail">
            <summary>
            The <see cref="T:WebApplications.Utilities.ExtendedEnum`1.ValueDetail"/> that represents no flags set.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.ExtendedEnum`1.NoneValueDetail">
            <summary>
            Returns the <see cref="T:WebApplications.Utilities.ExtendedEnum`1.ValueDetail"/> that represents no flags set.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.ExtendedEnum`1.ExplicitNone">
            <summary>
            Returns <see langword="true"/> if the enum is a flag enum and there is an explicit definition for no flags being set.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.ExtendedEnum`1.NoneValue">
            <summary>
            Returns the value that represents no flags being set.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.ExtendedEnum`1.NoneName">
            <summary>
            Returns the enum name that represents no flags being set.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.ExtendedEnum`1.NoneRawValue">
            <summary>
            Returns the raw integral value that represents no flags being set.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.ExtendedEnum`1._allValueDetail">
            <summary>
            A <see cref="T:WebApplications.Utilities.ExtendedEnum`1.ValueDetail"/> that represents all of the flags being set.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.ExtendedEnum`1.AllValueDetails">
            <summary>
            Returns the <see cref="T:WebApplications.Utilities.ExtendedEnum`1.ValueDetail"/> that represents all of the flags being set.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.ExtendedEnum`1.ExplicitAll">
            <summary>
            Returns <see langword="true"/> if the enum is a flag enum and all the flags are defined explicitly.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.ExtendedEnum`1.AllValue">
            <summary>
            Returns a value that represents all flags being set.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.ExtendedEnum`1.AllName">
            <summary>
            Returns the name of the <see cref="T:WebApplications.Utilities.ExtendedEnum`1.ValueDetail"/> that represents all of the flags being set.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.ExtendedEnum`1.AllRawValue">
            <summary>
            Returns the raw integral value that represents all of the flags being set.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.ExtendedEnum`1._valueLookup">
            <summary>
            Looks up the <see cref="T:WebApplications.Utilities.ExtendedEnum`1.ValueDetail"/> from its value (the enum).
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.ExtendedEnum`1._rawValueLookup">
            <summary>
            Looks up the <see cref="T:WebApplications.Utilities.ExtendedEnum`1.ValueDetail"/> from its raw value.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.ExtendedEnum`1._nameLookup">
            <summary>
            Looks up the <see cref="T:WebApplications.Utilities.ExtendedEnum`1.ValueDetail"/> from its name.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.ExtendedEnum`1._implicitLookup">
            <summary>
            A cache of the implicit value details so that when requested they can be retrieved rather than recomputed.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.#cctor">
            <summary>
            Gets information about an enumeration.
            </summary>
            <remarks>
            Static constructors are called automatically before the first instance is created or if any static members are referenced.
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.Check(WebApplications.Utilities.Enumerations.TriState)">
            <summary>
            Checks that the <see cref="T:System.Object"/> is an enum as well as whether the object is/isn't a flag (depending on the
            parameter specified). An exception is thrown if the object is <b>not</b> an enum or if the object is/isn't a flag. 
            </summary>
            <param name="isFlag">
            <list type="bullet">
            <item><description>If set to <see cref="F:WebApplications.Utilities.Enumerations.TriState.Yes"/> check that the object is an enum and that it <b>is</b> a flag.</description></item>
            <item><description>If set to <see cref="F:WebApplications.Utilities.Enumerations.TriState.No"/> check that the object is an enum and that it <b>is not</b> a flag.</description></item>
            <item><description>If no value is specified then only check that the object is an enum.</description></item>
            </list></param>
            <example><code>
            [Flags]
            private enum Days
            {
                Mon,
                Tues,
                Wed,
                Thurs,
                Fri
            };
            
            ExtendedEnum&lt;Days&gt;.Check();               // Checks if Days is an enum. If it isn't an exception will be thrown.
            ExtendedEnum&lt;Days&gt;.Check(TriState.Yes);   // Also checks if Days is a flag. If it is NOT a flag or is NOT an enum then an exception will be thrown.
            ExtendedEnum&lt;Days&gt;.Check(TriState.No);    // Also checks if Days isn't a flag. If it IS a flag or is NOT an enum then an exception will be thrown.
            </code></example>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.TryGetImplicitValueDetail(System.Int64,WebApplications.Utilities.ExtendedEnum{`0}.ValueDetail@)">
            <summary>
            Tries to get an implicit enum's <see cref="T:WebApplications.Utilities.ExtendedEnum`1.ValueDetail"/> with the specified <see cref="T:System.Int64"/> value.
            </summary>
            <param name="rawValue">The raw value.</param>
            <param name="valueDetail"><para>The value detail.</para>
            <para>If it fails to get the value then the output is a <see langword="null"/>.</para></param>
            <returns>Returns <see langword="true"/> if successful; otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.CreateImplicitValueDetail(System.Int64)">
            <summary>
            Creates an implicit enum's <see cref="T:WebApplications.Utilities.ExtendedEnum`1.ValueDetail"/> with the specified <see cref="T:System.Int64"/> value.
            </summary>
            <param name="rawValue">The raw value.</param>
            <returns>The new <see cref="T:WebApplications.Utilities.ExtendedEnum`1.ValueDetail"/>.</returns>
            <remarks>
            This does not check the validity of the raw value nor does it cache the result, it is used internally by
            the constructor and <see cref="M:WebApplications.Utilities.ExtendedEnum`1.TryGetImplicitValueDetail(System.Int64,WebApplications.Utilities.ExtendedEnum{`0}.ValueDetail@)"/>once they have determined that a new implicit
            <see cref="T:WebApplications.Utilities.ExtendedEnum`1.ValueDetail"/> is required.
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.TryGetImplicitLong(System.String,System.Int64@)">
            <summary>
            Tries to get the <see cref="T:System.Int64"/> equivalent of an implicit enum using the specified name.
            </summary>
            <param name="name">The name.</param>
            <param name="rawValue"><para>The raw value.</para>
            <para>The output is zero by default if no implicit enum is found.</para></param>
            <returns>Returns <see langword="true"/> if successful; otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.IsDefined(System.Int64,System.Boolean)">
            <summary>
            Determines whether the specified integral value is defined in the enumeration.
            </summary>
            <param name="rawValue">The raw value.</param>
            <param name="includeImplicit"><para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
            <para>By default this is set to <see langword="false"/>.</para></param>
            <returns>Returns <see langword="true"/> if the specified value is defined; otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.IsDefined(System.String,System.Boolean)">
            <summary>
            Determines whether the specified name is defined in the enumeration.
            </summary>
            <param name="name">The name.</param>
            <param name="includeImplicit"><para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
            <para>By default this is set to <see langword="false"/>.</para></param>
            <returns>Returns <see langword="true"/> if the specified name is defined; otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.IsDefined(`0,System.Boolean)">
            <summary>
            Determines whether the specified value is defined in the enumeration.
            </summary>
            <param name="value">The value.</param>
            <param name="includeImplicit"><para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
            <para>By default this is set to <see langword="false"/>.</para></param>
            <returns>Returns <see langword="true"/> if the specified value is defined; otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.GetValueDetail(`0,System.Boolean)">
            <summary>
            Gets the <see cref="T:WebApplications.Utilities.ExtendedEnum`1.ValueDetail"/> from the enum value specified.
            </summary>
            <param name="value">The enum value.</param>
            <param name="includeImplicit"><para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
            <para>By default this is set to <see langword="false"/>.</para></param>
            <returns>The <see cref="T:WebApplications.Utilities.ExtendedEnum`1.ValueDetail"/> that corresponds to the <paramref name="value"/> specified.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The enum type doesn't contain the <paramref name="value"/> specified.</exception>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.GetValueDetail(System.Int64,System.Boolean)">
            <summary>
            Gets the <see cref="T:WebApplications.Utilities.ExtendedEnum`1.ValueDetail"/> from the raw value specified.
            </summary>
            <param name="rawValue">The raw value.</param>
            <param name="includeImplicit"><para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
            <para>By default this is set to <see langword="false"/>.</para></param>
            <returns>The <see cref="T:WebApplications.Utilities.ExtendedEnum`1.ValueDetail"/> that corresponds to the <paramref name="rawValue"/> specified.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The enum type doesn't contain the <paramref name="rawValue"/> specified.</exception>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.GetValueDetail(System.String,System.Boolean)">
            <summary>
            Gets the <see cref="T:WebApplications.Utilities.ExtendedEnum`1.ValueDetail"/> from the name specified.
            </summary>
            <param name="name">The name.</param>
            <param name="includeImplicit"><para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
            <para>By default this is set to <see langword="false"/>.</para></param>
            <returns>The <see cref="T:WebApplications.Utilities.ExtendedEnum`1.ValueDetail"/> that corresponds to the <paramref name="name"/> specified.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The enum type doesn't contain the <paramref name="name"/> specified.</exception>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.TryGetValueDetail(`0,WebApplications.Utilities.ExtendedEnum{`0}.ValueDetail@,System.Boolean)">
            <summary>
            Tries to get the <see cref="T:WebApplications.Utilities.ExtendedEnum`1.ValueDetail"/> from the enum value specified.
            </summary>
            <param name="value">The enum value.</param>
            <param name="valueDetail"><para>The value detail.</para>
            <para>If a value detail isn't found then the output is <see langword="null">null</see>.</para></param>
            <param name="includeImplicit"><para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
            <para>By default this is set to <see langword="false"/>.</para></param>
            <returns>Returns <see langword="true"/> if the value detail was found; otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.TryGetValueDetail(System.Int64,WebApplications.Utilities.ExtendedEnum{`0}.ValueDetail@,System.Boolean)">
            <summary>
            Tries to get the <see cref="T:WebApplications.Utilities.ExtendedEnum`1.ValueDetail"/> from the raw value specified.
            </summary>
            <param name="rawValue">The raw value.</param>
            <param name="valueDetail"><para>The value detail.</para>
            <para>If a value detail isn't found then the output is <see langword="null">null</see>.</para></param>
            <param name="includeImplicit"><para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
            <para>By default this is set to <see langword="false"/>.</para></param>
            <returns>Returns <see langword="true"/> if the value detail was found; otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.TryGetValueDetail(System.String,WebApplications.Utilities.ExtendedEnum{`0}.ValueDetail@,System.Boolean)">
            <summary>
            Tries to get the <see cref="T:WebApplications.Utilities.ExtendedEnum`1.ValueDetail"/> from the name specified.
            </summary>
            <param name="name">The name.</param>
            <param name="valueDetail"><para>The value detail.</para>
            <para>If a value detail isn't found then the output is <see langword="null">null</see>.</para></param>
            <param name="includeImplicit"><para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
            <para>By default this is set to <see langword="false"/>.</para></param>
            <returns>Returns <see langword="true"/> if the value detail was found; otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.GetLong(`0,System.Boolean)">
            <summary>
            Gets the raw value equivalent of an enum value.
            </summary>
            <param name="value">The enum value.</param>
            <param name="includeImplicit"><para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
            <para>By default this is set to <see langword="false"/>.</para></param>
            <returns>The <see cref="T:System.Int64"/> value.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The enum type doesn't contain the <paramref name="value"/> specified.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.GetLong(System.String,System.Boolean)">
            <summary>
            Gets the raw value equivalent of an enum using the name specified.
            </summary>
            <param name="name">The name.</param>
            <param name="includeImplicit"><para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
            <para>By default this is set to <see langword="false"/>.</para></param>
            <returns>The <see cref="T:System.Int64"/> value.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The enum type doesn't contain a value by the <paramref name="name"/> specified.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.TryGetLong(`0,System.Int64@,System.Boolean)">
            <summary>
            Tries to get the raw value equivalent of an enum value.
            </summary>
            <param name="value">The enum value.</param>
            <param name="rawValue"><para>The raw value.</para>
            <para>If no value is found then the output is zero.</para></param>
            <param name="includeImplicit"><para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
            <para>By default this is set to <see langword="false"/>.</para></param>
            <returns>Returns <see langword="true"/> if the value was found; otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.TryGetLong(System.String,System.Int64@,System.Boolean)">
            <summary>
            Tries to get the raw value equivalent from the name specified.
            </summary>
            <param name="name">The name.</param>
            <param name="rawValue"><para>The raw value.</para>
            <para>If no value is found then the output is zero.</para></param>
            <param name="includeImplicit"><para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
            <para>By default this is set to <see langword="false"/>.</para></param>
            <returns>Returns <see langword="true"/> if the value was found; otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.GetName(`0,System.Boolean)">
            <summary>
            Gets the name from the enum value specified.
            </summary>
            <param name="value">The enum value.</param>
            <param name="includeImplicit"><para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
            <para>By default this is set to <see langword="false"/>.</para></param>
            <returns>The name that corresponds to the <paramref name="value"/> specified.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The enum type doesn't contain the <paramref name="value"/> specified.</exception>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.GetName(System.Int64,System.Boolean)">
            <summary>
            Gets the name from the raw value specified.
            </summary>
            <param name="rawValue">The raw value.</param>
            <param name="includeImplicit"><para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
            <para>By default this is set to <see langword="false"/>.</para></param>
            <returns>The name that corresponds to the <paramref name="rawValue"/> specified.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The enum type doesn't contain the <paramref name="rawValue"/> specified.</exception>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.TryGetName(`0,System.String@,System.Boolean)">
            <summary>
            Tries to get the name for the enum value specified.
            </summary>
            <param name="value">The enum value.</param>
            <param name="name"><para>The name.</para>
            <para>If no name is found the output is a <see langword="null">null</see> string.</para></param>
            <param name="includeImplicit"><para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
            <para>By default this is set to <see langword="false"/>.</para></param>
            <returns>Returns <see langword="true"/> if the name was found; otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.TryGetName(System.Int64,System.String@,System.Boolean)">
            <summary>
            Tries to get the name using the raw value specified.
            </summary>
            <param name="rawValue">The raw value.</param>
            <param name="name"><para>The name.</para>
            <para>If no name is found the output is a <see langword="null">null</see> string.</para></param>
            <param name="includeImplicit"><para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
            <para>By default this is set to <see langword="false"/>.</para></param>
            <returns>Returns <see langword="true"/> if the name was found; otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.GetValue(System.String,System.Boolean)">
            <summary>
            Gets the enum value from the name specified.
            </summary>
            <param name="name">The name.</param>
            <param name="includeImplicit"><para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
            <para>By default this is set to <see langword="false"/>.</para></param>
            <returns>The enum value.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The enum type doesn't contain a value with the <paramref name="name"/> specified.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.GetValue(System.Int64,System.Boolean)">
            <summary>
            Gets the enum value from the raw value specified.
            </summary>
            <param name="rawValue">The raw value.</param>
            <param name="includeImplicit"><para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
            <para>By default this is set to <see langword="false"/>.</para></param>
            <returns>The enum value.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The enum type doesn't contain a value with the <paramref name="rawValue"/> specified.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.TryGetValue(System.String,`0@,System.Boolean)">
            <summary>
            Tries to get the enum value using the name specified.
            </summary>
            <param name="name">The name.</param>
            <param name="value"><para>The enum value.</para>
            <para>If no value is found then the output is the default value of the type.</para></param>
            <param name="includeImplicit"><para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
            <para>By default this is set to <see langword="false"/>.</para></param>
            <returns>Returns <see langword="true"/> if the value was found; otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.TryGetValue(System.Int64,`0@,System.Boolean)">
            <summary>
            Tries to get the enum value using the raw value specified.
            </summary>
            <param name="rawValue">The raw value.</param>
            <param name="value"><para>The enum value.</para>
            <para>If no value is found then the output is the default value of the type.</para></param>
            <param name="includeImplicit"><para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
            <para>By default this is set to <see langword="false"/>.</para></param>
            <returns>Returns <see langword="true"/> if the value was found; otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.GetDescription(`0)">
            <summary>
            Gets the description for the enum value specified.
            </summary>
            <param name="value">The enum value.</param>
            <returns>The description.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The enum type doesn't contain the <paramref name="value"/> specified.</exception>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.GetDescription(System.Int64)">
            <summary>
            Gets the description using the raw value specified.
            </summary>
            <param name="rawValue">The raw value.</param>
            <returns>The description.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The enum type doesn't contain the <paramref name="rawValue"/> specified.</exception>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.GetDescription(System.String)">
            <summary>
            Gets the description using the name specified.
            </summary>
            <param name="name">The name.</param>
            <returns>The description.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The enum type doesn't contain a value with the <paramref name="name"/> specified.</exception>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.TryGetDescription(`0,System.String@)">
            <summary>
            Tries to get the description from the enum value specified.
            </summary>
            <param name="value">The value.</param>
            <param name="description"><para>The description.</para>
            <para>If no value is found then the output is an <see cref="F:System.String.Empty">empty string</see>.</para></param>
            <returns>Returns <see langword="true"/> if the value was found; otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.TryGetDescription(System.Int64,System.String@)">
            <summary>
            Tries to get the description using the raw value specified.
            </summary>
            <param name="rawValue">The raw value.</param>
            <param name="description"><para>The description.</para>
            <para>If no value is found then the output is an <see cref="F:System.String.Empty">empty string</see>.</para></param>
            <returns>Returns <see langword="true"/> if the value was found; otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.TryGetDescription(System.String,System.String@)">
            <summary>
            Tries to get the description using the name specified.
            </summary>
            <param name="name">The name.</param>
            <param name="description"><para>The description.</para>
            <para>If no value is found then the output is an <see cref="F:System.String.Empty">empty string</see>.</para></param>
            <returns>Returns <see langword="true"/> if the value was found; otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.Parse(System.String)">
            <summary>
            Parse the enum from a <see cref="T:System.String"/> representation.
            </summary>
            <param name="value">The string representation.</param>
            <returns>The enum value.</returns>
            <example><code>
            [Flags]
            private enum Days
            {
               None,
               Fri = 1,
               Sat = 1 &lt;&lt; 1,
               Sun = 1 &lt;&lt; 2,
               Weekend = Fri | Sat
            };
            
            Days parsedValue = ExtendedEnum&lt;Days&gt;.Parse("Sat");
            </code></example>
            <exception cref="T:System.ArgumentException">
            <para>The <see cref="T:System.Object"/> is not an enum.</para>
            <para>-or-</para>
            <para>The requested name (<paramref name="value"/>) was invalid.</para>
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.Parse(System.String,System.Boolean)">
            <summary>
            Parse the enum from a <see cref="T:System.String"/> representation.
            </summary>
            <param name="value">The string representation.</param>
            <param name="ignoreCase">If set to <see langword="true"/> case sensitivity is ignored.</param>
            <returns>The enum value.</returns>
            <example><code>
            [Flags]
            private enum Days
            {
               None,
               Fri = 1,
               Sat = 1 &lt;&lt; 1,
               Sun = 1 &lt;&lt; 2,
               Weekend = Fri | Sat
            };
            
            Days parsedValue = ExtendedEnum&lt;Days&gt;.Parse("sat", true);
            </code></example>
            <exception cref="T:System.ArgumentException">
            <para>The <see cref="T:System.Object"/> is not an enum.</para>
            <para>-or-</para>
            <para>The requested name (<paramref name="value"/>) was invalid.</para>
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.TryParse(System.String,`0@)">
            <summary>
            Tries to parse the enum from a <see cref="T:System.String"/> representation.
            </summary>
            <param name="value">The string representation.</param>
            <param name="result">The result.</param>
            <returns>Returns <see langword="true"/> if parsed successfully; otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.TryParse(System.String,System.Boolean,`0@)">
            <summary>
            Tries to parse the enum from a <see cref="T:System.String"/> representation.
            </summary>
            <param name="value">The string representation.</param>
            <param name="ignoreCase">If set to <see langword="true"/> case sensitivity is ignored.</param>
            <param name="result">The result.</param>
            <returns>Returns <see langword="true"/> if parsed successfully; otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.AreSet(`0,`0,System.Boolean)">
            <summary>
            Determines whether the specified flags are set on the value.
            </summary>
            <param name="value">The enum value.</param>
            <param name="flags">The flags.</param>
            <param name="includeImplicit"><para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
            <para>By default this is set to <see langword="false"/>.</para></param>
            <returns>Returns <see langword="true"/> if the specified flags are set; otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.AreClear(`0,`0,System.Boolean)">
            <summary>
            Determines whether the specified flags are clear of the value.
            </summary>
            <param name="value">The enum value.</param>
            <param name="flags">The flags.</param>
            <param name="includeImplicit"><para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
            <para>By default this is set to <see langword="false"/>.</para></param>
            <returns>Returns <see langword="true"/> if the specified flags are set; otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.Set(`0,`0,System.Boolean)">
            <summary>
            Sets the flags on the value.
            </summary>
            <param name="value">The enum.</param>
            <param name="flags">The flags.</param>
            <param name="includeImplicit"><para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
            <para>By default this is set to <see langword="false"/>.</para></param>
            <returns>The result of the <paramref name="flags"/> set to <paramref name="value"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> cannot be set with the <paramref name="flags"/> specified.
            </exception>
            <exception cref="T:System.ArgumentException">
            <para>The <paramref name="value"/> type is not an enum.</para>
            <para>-or-</para>
            <para>The <paramref name="value"/> type is not an enum.</para>
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.TrySet(`0,`0,`0@,System.Boolean)">
            <summary>
            Tries to set the flags on the value.
            </summary>
            <param name="value">The value.</param>
            <param name="flags">The flags.</param>
            <param name="result">The result of the <paramref name="flags"/> set to <paramref name="value"/>.</param>
            <param name="includeImplicit"><para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
            <para>By default this is set to <see langword="false"/>.</para></param>
            <returns>Returns <see langword="true"/> if the flags can be set; otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.Clear(`0,`0,System.Boolean)">
            <summary>
            Clears the flags on the value.
            </summary>
            <param name="value">The value.</param>
            <param name="flags">The flags.</param>
            <param name="includeImplicit"><para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
            <para>By default this is set to <see langword="false"/>.</para></param>
            <returns>The result of the <paramref name="flags"/> cleared from <paramref name="value"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The enum cannot be cleared of the specified <paramref name="flags"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <para>The <paramref name="value"/> type is not an enum.</para>
            <para> </para><para>-or-</para><para> </para>
            <para>The <paramref name="value"/> type is not an enum.</para>
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.TryClear(`0,`0,`0@,System.Boolean)">
            <summary>
            Tries to clear the flags on the value.
            </summary>
            <param name="value">The enum value.</param>
            <param name="flags">The flags.</param>
            <param name="result">The result of the <paramref name="flags"/> cleared from <paramref name="value"/>.</param>
            <param name="includeImplicit"><para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
            <para>By default this is set to <see langword="false"/>.</para></param>
            <returns>Returns <see langword="true"/> if the flags can be cleared; otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.Intersect(`0,`0,System.Boolean)">
            <summary>
            Gets the intersection of the enum and the flags, that is it returns a value which only has flags that were set on both.
            </summary>
            <param name="value">The enum value.</param>
            <param name="flags">The flags.</param>
            <param name="includeImplicit"><para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
            <para>By default this is set to <see langword="false"/>.</para></param>
            <returns>The intersection of <paramref name="value"/> and <paramref name="flags"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> type could not be intersected with the <paramref name="flags"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <para>The <paramref name="value"/> type is not an enum.</para>
            <para>-or-</para>
            <para>The <paramref name="value"/> type is not an enum.</para>
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.TryIntersect(`0,`0,`0@,System.Boolean)">
            <summary>
            Tries to get the intersection of the enum and the flags, that is it returns a value which only has flags that were set on both.
            </summary>
            <param name="value">The enum value.</param>
            <param name="flags">The flags.</param>
            <param name="result">The intersection of <paramref name="value"/> and <paramref name="flags"/>.</param>
            <param name="includeImplicit"><para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
            <para>By default this is set to <see langword="false"/>.</para></param>
            <returns>Returns <see langword="true"/> if the flags can be intersected; otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.Invert(`0,System.Boolean)">
            <summary>
            Inverts all the valid flags.
            </summary>
            <param name="value">The value.</param>
            <param name="includeImplicit"><para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
            <para>By default this is set to <see langword="false"/>.</para></param>
            <returns>The inverted flags for the specified <paramref name="value"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> provided could not be inverted.
            </exception>
            <exception cref="T:System.ArgumentException">
            <para>The <paramref name="value"/> type is not an enum.</para>
            <para>-or-</para>
            <para>The <paramref name="value"/> type is not an enum.</para>
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.TryInvert(`0,`0@,System.Boolean)">
            <summary>
            Inverts all the valid flags.
            </summary>
            <param name="value">The enum value.</param>
            <param name="result">The inverted flags for the specified <paramref name="value"/>.</param>
            <param name="includeImplicit"><para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
            <para>By default this is set to <see langword="false"/>.</para></param>
            <returns>Returns <see langword="true"/> if the flags can be inverted; otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.Combine(System.Collections.Generic.IEnumerable{`0},System.Boolean)">
            <summary>
            Combines all of the specified flags.
            </summary>
            <param name="flags">The flags to combine.</param>
            <param name="includeImplicit"><para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
            <para>By default this is set to <see langword="false"/>.</para></param>
            <returns>The combined <paramref name="flags"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The flags of type <typeparamref name="TEnum"/> cannot be combined.
            </exception>
            <exception cref="T:System.ArgumentException">
            <para><typeparamref name="TEnum"/> is not an enum.</para>
            <para>-or-</para>
            <para><typeparamref name="TEnum"/> is not a flag enum.</para>
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.TryCombine(System.Collections.Generic.IEnumerable{`0},`0@,System.Boolean)">
            <summary>
            Tries to combine all of the specified flags.
            </summary>
            <param name="flags">The flags to combine.</param>
            <param name="result"><para>The combined <paramref name="flags"/>.</para>
            <para>If unsuccessful then this returns an enum with the raw value of zero.</para></param>
            <param name="includeImplicit"><para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
            <para>By default this is set to <see langword="false"/>.</para></param>
            <returns>Returns <see langword="true"/> if the flags can be inverted; otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.SplitFlags(`0,System.Boolean,System.Boolean)">
            <summary>
            Splits the specified flags.
            </summary>
            <param name="flags">The flags to split.</param>
            <param name="includeImplicit"><para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
            <para>By default this is set to <see langword="false"/>.</para></param>
            <param name="includeCombinations">If set to <see langword="true"/> will split into the minimum number of flags (allows combinations).</param>
            <returns>The result of the split <paramref name="flags"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Couldn't split the <paramref name="flags"/> for type <typeparamref name="TEnum"/>.
            </exception>
            <exception cref="T:System.ArgumentException">
            <para><typeparamref name="TEnum"/> is not an enum.</para>
            <para>-or-</para>
            <para><typeparamref name="TEnum"/> is not a flag enum.</para>
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.TrySplitFlags(`0,System.Collections.Generic.IEnumerable{`0}@,System.Boolean,System.Boolean)">
            <summary>
            Tries to split all the specified flags.
            </summary>
            <param name="flags">The flags to split.</param>
            <param name="result">The result of the split <paramref name="flags"/>.
            <para>The default result if the split fails is <see cref="M:System.Linq.Enumerable.Empty``1"/>.</para></param>
            <param name="includeImplicit"><para>If set to <see langword="true"/> includes implicit values of flag enums.</para>
            <para>By default this is set to <see langword="false"/>.</para></param>
            <param name="includeCombinations"><para>If set to <see langword="true"/> will split into the minimum number of flags (allows combinations).</para>
            <para>By default this is set to <see langword="false"/>.</para></param>
            <returns>Returns <see langword="true"/> if the flags can be split successfully; otherwise returns <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.ExtendedEnum`1.ValueDetail">
            <summary>
            Holds details about enum values.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.ExtendedEnum`1.ValueDetail.Flags">
            <summary>
            The number of flags.
            </summary>
            <remarks>
            If this is a non-flag enum then this value will always be 1.
            </remarks>
        </member>
        <member name="F:WebApplications.Utilities.ExtendedEnum`1.ValueDetail.IsExplicit">
            <summary>
            Whether the value is explicitly defined.
            </summary>
            <remarks>
            If this is a non-flag enum then this value will always be <see langword="true"/>.
            </remarks>
        </member>
        <member name="F:WebApplications.Utilities.ExtendedEnum`1.ValueDetail.RawValue">
            <summary>
            The raw value of the enum as a <see cref="T:System.Int64"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.ExtendedEnum`1.ValueDetail.Value">
            <summary>
            The actual enum value.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.ExtendedEnum`1.ValueDetail._names">
            <summary>
            All known value names.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.ValueDetail.#ctor(`0,System.Int64,System.UInt16,System.String,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.ExtendedEnum`1.ValueDetail"/> struct.
            </summary>
            <param name="value">The enum value.</param>
            <param name="rawValue">The raw value.</param>
            <param name="flags">The flags.</param>
            <param name="name">The name.</param>
            <param name="isExplicit">If set to <see langword="true"/> [is explicit].</param>
            <param name="description">The description (if any).</param>
            <remarks></remarks>
        </member>
        <member name="P:WebApplications.Utilities.ExtendedEnum`1.ValueDetail.IsCombination">
            <summary>
            Whether the flag enum is a combination of values.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.ExtendedEnum`1.ValueDetail.Name">
            <summary>
            The value name.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.ExtendedEnum`1.ValueDetail.AllNames">
            <summary>
            Returns a list of the known names for the value.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.ExtendedEnum`1.ValueDetail.Count">
            <summary>
            Returns a count of the value's known names.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.ExtendedEnum`1.ValueDetail.Description">
            <summary>
            The value's description attribute (if any).
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.ValueDetail.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the value names.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.ValueDetail.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the value details.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.ValueDetail.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> representation of this instance.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.ExtendedEnum`1.ValueDetail.AddDefinition(System.String,System.String)">
            <summary>
            Adds the specified name to the value's known names.
            </summary>
            <param name="name">The name.</param>
            <param name="description">The description.</param>
            <remarks>Descriptions are separated by a <see cref="P:System.Environment.NewLine"/>.</remarks>
        </member>
        <member name="T:WebApplications.Utilities.InitialisedSingleton`2">
            <summary>
              The base class for an initialised singleton.
            </summary>
            <typeparam name="TKey">The singleton key type.</typeparam>
            <typeparam name="TSingleton">The singleton type.</typeparam>
            <remarks>
              An initialised singleton performs the majority of work after construction.
            </remarks>
        </member>
        <member name="F:WebApplications.Utilities.InitialisedSingleton`2._initialisationLock">
            <summary>
              The initialisation lock object.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.InitialisedSingleton`2.#ctor(`0)">
            <summary>
              Initialises a new instance of the <see cref="T:WebApplications.Utilities.InitialisedSingleton`2"/> class.
            </summary>
            <param name="key">The singleton key.</param>
            <remarks>
              A singleton can be created more than once however only one created object will 'win'.
            </remarks>
        </member>
        <member name="P:WebApplications.Utilities.InitialisedSingleton`2.IsInitialised">
            <summary>
              Returns a <see cref="T:System.Boolean"/> value that indicates whether or not this singleton has been initialised yet.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.InitialisedSingleton`2.GetSingleton(`0)">
            <summary>
              Creates the singleton.
            </summary>
            <param name="key">The singleton key.</param>
            <remarks>
              Uses optimistic locking to ensure that the singleton is only initialised once.
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.InitialisedSingleton`2.Initialise">
            <summary>
              Override this in the inheriting class to initialise the singleton.
            </summary>
            <remarks>
              This function is called once, and only once, on singleton creation.
            </remarks>
        </member>
        <member name="T:WebApplications.Utilities.Location.DistanceCalculation">
            <summary>
              Determines which distance calculation to use for the <see cref="T:WebApplications.Utilities.Location.LatLng"/> class. 
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Location.DistanceCalculation.Haversine">
            <summary>
              Haversine formula.
            (http://en.wikipedia.org/wiki/Haversine_formula)
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Location.DistanceCalculation.LawOfCosines">
            <summary>
              Spherical Law of Cosines.
            (http://en.wikipedia.org/wiki/Law_of_cosines)
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.Location.LatLng">
            <summary>
              Stores the Latitude/Longitude of a point.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Location.LatLng.Latitude">
            <summary>
              The Latitude of the point.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Location.LatLng.Longitude">
            <summary>
              The Longitude of the point.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Location.LatLng.#ctor(System.Double,System.Double)">
            <summary>
              Initialises a new instance of the <see cref="T:WebApplications.Utilities.Location.LatLng"/> class.
            </summary>
            <param name="latitude">The Latitude of the point.</param>
            <param name="longitude">The Longitude of the point.</param>
        </member>
        <member name="M:WebApplications.Utilities.Location.LatLng.DistanceTo(WebApplications.Utilities.Location.LatLng,WebApplications.Utilities.Location.DistanceCalculation)">
            <summary>
              Calculates the distance (in km) between the current point and the <see cref="T:WebApplications.Utilities.Location.LatLng">point</see> specified.
              By default this uses the Law of Cosines formula (http://en.wikipedia.org/wiki/Law_of_cosines).
            </summary>
            <param name="otherPoint">The point we want to calculate the distance to.</param>
            <param name="calculation">
              <para>The distance calculation to use.</para>
              <para>By default this uses the Law of Cosines formula.</para>
            </param>
            <returns>
              The distance (in km) between the current point and the <paramref name="otherPoint"/> specified.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
              The specified <paramref name="calculation"/> is outside the allowable <see cref="T:WebApplications.Utilities.Location.DistanceCalculation">values</see>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Location.LatLng.MidpointTo(WebApplications.Utilities.Location.LatLng)">
            <summary>
              Calculates the midpoint between the current point and the <see cref="T:WebApplications.Utilities.Location.LatLng">point</see> specified.
            </summary>
            <param name="otherPoint">The other point to use in the calculation.</param>
            <returns>
              The midpoint between the current point and the <paramref name="otherPoint"/> specified.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Location.LatLng.Distance(WebApplications.Utilities.Location.LatLng,WebApplications.Utilities.Location.LatLng,WebApplications.Utilities.Location.DistanceCalculation)">
            <summary>
              Calculates the distance (in km) between two specified <see cref="T:WebApplications.Utilities.Location.LatLng">latlong points</see>.
              By default this uses the Law of Cosines formula (http://en.wikipedia.org/wiki/Law_of_cosines).
            </summary>
            <param name="pointOne">The first point to use in the calculation.</param>
            <param name="pointTwo">The second point to use in the calculation.</param>
            <param name="calculation">
              <para>The calculation to use.</para>
              <para>By default this uses the Law of Cosines formula.</para>
            </param>
            <returns>
              The distance (in km) between the two points specified.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
              The specified <paramref name="calculation"/> is outside the allowable <see cref="T:WebApplications.Utilities.Location.DistanceCalculation">values</see>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Location.LatLng.MidPoint(WebApplications.Utilities.Location.LatLng,WebApplications.Utilities.Location.LatLng)">
            <summary>
              Calculates the midpoint between two specified <see cref="T:WebApplications.Utilities.Location.LatLng">latlong points</see>.
            </summary>
            <param name="pointOne">The first point to use in the calculation.</param>
            <param name="pointTwo">The second point to use in the calculation.</param>
            <returns>
              The midpoint between the two points specified.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Location.LatLng.ToString">
            <summary>
              Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
              A <see cref="T:System.String"/> representation of this instance.
            </returns>
        </member>
        <member name="T:WebApplications.Utilities.EqualityBuilder`1">
            <summary>
              Allows you to define customized equality comparers using lambda functions.
              (http://msdn.microsoft.com/en-us/library/bb397687.aspx)
            </summary>
            <typeparam name="T">The type to compare.</typeparam>
            <seealso cref="T:System.Collections.Generic.EqualityComparer`1"/>
        </member>
        <member name="F:WebApplications.Utilities.EqualityBuilder`1.DefaultGetHashCodeFunction">
            <summary>
              Stores the default GetHashCode function call <see cref="M:System.Object.GetHashCode"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.EqualityBuilder`1.EqualsFunction">
            <summary>
              The function used to calculate equality between two <see cref="T:System.Object"/>s.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.EqualityBuilder`1.GetHashCodeFunction">
            <summary>
              The function used to generate a hash code.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.EqualityBuilder`1.#ctor(System.Func{`0,`0,System.Boolean},System.Func{`0,System.Int32})">
            <summary>
              Initializes a new instance of the <see cref="T:WebApplications.Utilities.EqualityBuilder`1"/> class.
            </summary>
            <param name="equalityComparer">The equality comparer.</param>
            <param name="hashCodeGenerator">
              <para>The hash code generator.</para>
              <para>By default <see cref="M:System.Object.GetHashCode"/> will be used.</para>
            </param>
            <exception cref="T:System.ArgumentNullException"><paramref name="equalityComparer"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:WebApplications.Utilities.EqualityBuilder`1.Equals(`0,`0)">
            <inheritdoc/>
        </member>
        <member name="M:WebApplications.Utilities.EqualityBuilder`1.GetHashCode(`0)">
            <inheritdoc/>
        </member>
        <member name="T:WebApplications.Utilities.EqualityBuilder`2">
            <summary>
            Allows you to define customized equality comparers using lambda functions.
            (http://msdn.microsoft.com/en-us/library/bb397687.aspx)
            </summary>
            <typeparam name="T1">The type of the first operand.</typeparam>
            <typeparam name="T2">The type of the second operand.</typeparam>
            <seealso cref="T:System.IEqualityComparer" />
        </member>
        <member name="F:WebApplications.Utilities.EqualityBuilder`2.DefaultGetHashCodeFunction1">
            <summary>
              Stores the default GetHashCode function call <see cref="M:System.Object.GetHashCode"/> for the <typeparamref name="T1"/> type.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.EqualityBuilder`2.DefaultGetHashCodeFunction2">
            <summary>
              Stores the default GetHashCode function call <see cref="M:System.Object.GetHashCode"/> for the <typeparamref name="T2"/> type.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.EqualityBuilder`2.EqualsFunction">
            <summary>
              The function used to calculate equality between two <see cref="T:System.Object"/>s.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.EqualityBuilder`2.GetHashCodeFunction1">
            <summary>
              The function used to generate a hash code for the <typeparamref name="T1"/> type.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.EqualityBuilder`2.GetHashCodeFunction2">
            <summary>
              The function used to generate a hash code for the <typeparamref name="T2"/> type.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.EqualityBuilder`2.#ctor(System.Func{`0,`1,System.Boolean},System.Func{`0,System.Int32},System.Func{`1,System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.EqualityBuilder`2" /> class.
            </summary>
            <param name="equalityComparer">The equality comparer.</param>
            <param name="hashCodeGenerator1">The hash code generator for the <typeparamref name="T1" /> type.</param>
            <param name="hashCodeGenerator2">The hash code generator for the <typeparamref name="T2" /> type.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="equalityComparer" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:WebApplications.Utilities.EqualityBuilder`2.Equals(System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.EqualityBuilder`2.GetHashCode(System.Object)">
            <inheritdoc />
        </member>
        <member name="T:WebApplications.Utilities.TaskResult">
            <summary>
            Usefull completed Tasks.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.TaskResult.Completed">
            <summary>
            The completed result
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.TaskResult.True">
            <summary>
            A task that returns a <see langword="true"/>
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.TaskResult.False">
            <summary>
            A task that returns a <see langword="false"/>
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.TaskResult.Zero">
            <summary>
            A task that returns a <c>0</c>
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.TaskResult.MinusOne">
            <summary>
            A task that returns a <c>-1</c>
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.TaskResult.One">
            <summary>
            A task that returns a <c>1</c>
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.TaskResult.MinInt">
            <summary>
            A task that returns <see cref="F:System.Int32.MinValue"/>
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.TaskResult.MaxInt">
            <summary>
            A task that returns <see cref="F:System.Int32.MaxValue"/>
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.TaskResult.Cancelled">
            <summary>
            The cancelled result
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.TaskResult.CancelledToken">
            <summary>
            The cancelled token.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.TaskResult.#cctor">
            <summary>
            Initializes static members of the <see cref="T:WebApplications.Utilities.TaskResult"/> class.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.TaskResult.FromException(System.Exception)">
            <summary>
            Creates a <see cref="T:System.Threading.Tasks.Task"/> from the <paramref name="exception"/>.
            </summary>
            <param name="exception">The exception.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.TaskResult.FromException(System.Collections.Generic.IEnumerable{System.Exception})">
            <summary>
            Creates a <see cref="T:System.Threading.Tasks.Task"/> from the <paramref name="exceptions"/>.
            </summary>
            <param name="exceptions">The exceptions.</param>
            <returns></returns>
        </member>
        <member name="T:WebApplications.Utilities.TaskResult`1">
            <summary>
            Usefull completed Tasks.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:WebApplications.Utilities.TaskResult`1.Default">
            <summary>
            A task that returns the <see langword="default"/> value for the type <typeparamref name="T"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.TaskResult`1.Cancelled">
            <summary>
            The cancelled result
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.TaskResult`1.#cctor">
            <summary>
            Initializes static members of the <see cref="T:WebApplications.Utilities.TaskResult`1"/> class.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.TaskResult`1.FromException(System.Exception)">
            <summary>
            Creates a <see cref="T:System.Threading.Tasks.Task"/> from the <paramref name="exception"/>.
            </summary>
            <param name="exception">The exception.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.TaskResult`1.FromException(System.Collections.Generic.IEnumerable{System.Exception})">
            <summary>
            Creates a <see cref="T:System.Threading.Tasks.Task"/> from the <paramref name="exceptions"/>.
            </summary>
            <param name="exceptions">The exceptions.</param>
            <returns></returns>
        </member>
        <member name="T:WebApplications.Utilities.EqualityComparison`1">
            <summary>
            Represents the method that compares two objects of the same type for equality.
            </summary>
            <typeparam name="T">The type of the objects to compare.</typeparam>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns><see langword="true"/> if the specified objects are equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="T:WebApplications.Utilities.UtilityExtensions">
            <summary>
              Useful extension methods
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.UtilityExtensions._equalityFunctions">
            <summary>
              A dictionary of equality operators by their runtime type.
              This is so that, when requested, they can be retrieved rather than recomputed.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.UtilityExtensions._jsonEscapedCharacters">
            <summary>
            Characters to escape for JSON (and their new value).
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.UtilityExtensions.EpochStart">
            <summary>
              The Epoch date time (used by JavaScript).
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.UtilityExtensions.DefaultSplitChars">
            <summary>
              The default split characters for splitting strings.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.UtilityExtensions.AppDomainBaseUri">
            <summary>
            The URI for the current AppDomains <see cref="P:System.AppDomain.BaseDirectory"/>.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.ToOrdinal(System.Int32)">
            <summary>
              Gets the ordinal representation of an <see cref="T:System.Int32">integer</see> ('1st', '2nd', etc.) as a <see cref="T:System.String"/>.
            </summary>
            <param name="number">The number to add the suffix to.</param>
            <returns>The <paramref name="number"/> + the correct suffix.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.GetOrdinal(System.Int32)">
            <summary>
              Gets the ordinal for an integer ('st', 'nd', etc.)
            </summary>
            <param name="number">The number.</param>
            <returns>The ordinal (suffix) for the <paramref name="number"/> specified.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.ToEnglish(System.Int32)">
            <summary>
              Converts a <see cref="T:System.Int32"/> to its English textual equivalent.
            </summary>
            <param name="number">The number to convert.</param>
            <returns>
              The textual equivalent of <paramref name="number"/> specified.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.ToEnglish(System.Double)">
            <summary>
              Converts a <see cref="T:System.Double"/> to its English textual equivalent.
            </summary>
            <param name="number">The number to convert.</param>
            <returns>
              The textual equivalent of <paramref name="number"/> specified.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.ToEnglish(System.Int64)">
            <summary>
              Converts a <see cref="T:System.Int64"/> to its English textual equivalent.
            </summary>
            <param name="number">The number to convert.</param>
            <returns>
              The textual equivalent of <paramref name="number"/> specified.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.AppendEnglish(System.Text.StringBuilder,System.Double)">
            <summary>
            Appends a <see cref="T:System.Double" /> to its English textual equivalent.
            </summary>
            <param name="builder">The builder.</param>
            <param name="number">The number to convert.</param>
            <returns>The textual equivalent of <paramref name="number" /> specified.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.AppendEnglish(System.Text.StringBuilder,System.Int32)">
            <summary>
            Appends an <see cref="T:System.Int32" /> to its English textual equivalent.
            </summary>
            <param name="builder">The builder.</param>
            <param name="number">The number to convert.</param>
            <returns>The textual equivalent of <paramref name="number" /> specified.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.AppendEnglish(System.Text.StringBuilder,System.Int64)">
            <summary>
            Appends an <see cref="T:System.Int64" /> to its English textual equivalent.
            </summary>
            <param name="builder">The builder.</param>
            <param name="number">The number to convert.</param>
            <returns>The textual equivalent of <paramref name="number" /> specified.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.WriteEnglish(System.IO.TextWriter,System.Double)">
            <summary>
            Writes a <see cref="T:System.Double" /> in its English textual equivalent.
            </summary>
            <param name="writer">The writer.</param>
            <param name="number">The number to convert.</param>
            <returns>The textual equivalent of <paramref name="number" /> specified.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.WriteEnglish(System.IO.TextWriter,System.Int64)">
            <summary>
            Writes an <see cref="T:System.Int32" /> in its English textual equivalent.
            </summary>
            <param name="writer">The writer.</param>
            <param name="number">The number.</param>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.EqualsByRuntimeType(System.Object,System.Object)">
            <summary>
              Performs an equality between the two <see cref="T:System.Object"/>s, respecting their runtime type.
            </summary>
            <param name="objA">The first object to compare.</param>
            <param name="objB">The second object to compare.</param>
            <returns>
              Returns <see langword="true"/> if the objects value and type are equal; otherwise returns <see langword="false"/>.
            </returns>
            <remarks>
              This is slow compared to a standard equality and the vast majority of times this can be replaced with a solution 
              that leverages generics, or by making a call to <see cref="M:WebApplications.Utilities.UtilityExtensions.GetTypeEqualityFunction(System.Type)"/> and storing the resulting function
              to avoid the dictionary lookup.
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.GetTypeEqualityFunction(System.Type)">
            <summary>
              Gets the type's equality function as a lambda expression.
            </summary>
            <param name="type">The type.</param>
            <returns>The type's equality function.</returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="type"/> was <see langword="null"/>
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.DeepEquals``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Compares two enumerables to see if they contain the same elements.
            </summary>
            <typeparam name="T">The type of the object contained in the enumerable.</typeparam>
            <param name="enumerableA">The first enumerable object.</param>
            <param name="enumerableB">The second enumerable object</param>
            <param name="comparer">The comparer.</param>
            <returns>
            Returns <see langword="true" /> if both of the enumerable objects are the same size and contain the same elements.
            </returns>
            <remarks>
            <para>This does a robust check of enumerable equality with an algorithm that's no worse that O(N).</para>
            <para>The order in which items appear in the enumerable doesn't matter. For example {1, 2, 2, 3} would be
            considered equal to {2, 1, 3, 2} but not equal to {1, 2, 3, 3}.</para>
            <para>If the list does not contain duplicate items use DeepEqualsSimple.</para>
            <para>If the lists are sorted then use <see cref="T:System.Linq.Enumerable" />'s Sequence Equal.</para>
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.DeepEqualsSimple``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
              Compares two enumerables to see if they contain the same elements.
            </summary>
            <typeparam name="T">The type of the object contained in the enumerable.</typeparam>
            <param name="enumerableA">The first enumerable object.</param>
            <param name="enumerableB">The second enumerable object</param>
            <param name="comparer">The equality comparer.</param>
            <returns>
              Returns <see langword="true"/> if both of the enumerable objects are the same size and contain the same elements.
            </returns>
            <remarks>
              <para>For speed, the number of times elements appear in each enumerable is not taken into account, therefore a
              list of {1, 1, 2} and {1, 2, 2} would be considered equal. Therefore it is recommended that this is only used for
              enumerables that do not contain duplicates.</para>
              <para>If the lists are sorted then use <see cref="T:System.Linq.Enumerable"/>'s Sequence Equal.</para>
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.ToDictionary(System.Collections.Specialized.NameValueCollection)">
            <summary>
              Converts a NameValueCollection to a Dictionary.
            </summary>
            <param name="collection">The <see cref="T:System.Collections.Specialized.NameValueCollection"/>.</param>
            <returns>
              The <see cref="T:System.Collections.Generic.IDictionary`2">Dictionary</see> version of the <paramref name="collection"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="collection"/> is a <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.ToDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Creates a <see cref="T:System.Collections.Generic.Dictionary`2"/> from an <see cref="T:System.Collections.Generic.IEnumerable`1"/>
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> to create a <see cref="T:System.Collections.Generic.Dictionary`2"/> from.</param>
            <param name="comparer">An <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> to compare keys.</param>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.ToJSON(System.String)">
            <summary>
            Encodes a string for JSON.
            </summary>
            <param name="input">The input.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.AppendJSON(System.Text.StringBuilder,System.String)">
            <summary>
            Appends a string to the specified <see cref="T:System.Text.StringBuilder"/> encoding it for JSON.
            </summary>
            <param name="stringBuilder">The string builder.</param>
            <param name="input">The input.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.ToJSON(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
              Converts a list to its JSON representation.
            </summary>
            <param name="list">The list to convert.</param>
            <returns>The <paramref name="list"/> in JSON.</returns>
            <remarks>
              Can be used with other enumerable objects such as Queues, Stacks, etc.
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.ToHexLower(System.Byte)">
            <summary>
            Converts a byte to lower case hex.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.ToHexLower(System.Byte[])">
            <summary>
            Converts an array of bytes to lower case hex.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.ToHexUpper(System.Byte)">
            <summary>
            Converts a byte to upper case hex.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.ToHexUpper(System.Byte[])">
            <summary>
            Converts an array of bytes to upper case hex.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.DiscardWhiteSpaces(System.String)">
            <summary>
            Discards the white spaces in a string.
            </summary>
            <param name="input">The input buffer.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.GetObjectsById``1(System.String,System.Func{System.Int32,``0},System.Char[],System.Boolean)">
            <summary>
              Takes a <see cref="T:System.String"/> of <see cref="T:System.Int32">integer</see> ids and calls a function to retrieve an
              enumeration of <see cref="T:System.Object"/>s.
            </summary>
            <typeparam name="T">The result type for <paramref name="getObject"/>.</typeparam>
            <param name="integers">The integers to split.</param>
            <param name="getObject">A function that takes in the split integer and can be used to retrieve an object.</param>
            <param name="splitChars">
              <para>The characters used to separate the <paramref name="integers"/>.</para>
              <para>This defaults to ' ' , \t \r \n or |.</para>
            </param>
            <param name="executeImmediately">
              If set to <see langword="true"/> executes object retrieval instantly; otherwise uses deferred execution.
            </param>
            <returns>The enumerator to iterate through the retrieved objects.</returns>
            <exception cref="T:System.NullReferenceException"><paramref name="integers"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.GetObjectsById16``1(System.String,System.Func{System.Int16,``0},System.Char[],System.Boolean)">
            <summary>
              Takes a <see cref="T:System.String"/> of <see cref="T:System.Int32">integer</see> ids and calls a function to retrieve an enumeration of objects.
            </summary>
            <typeparam name="T">The result type for <paramref name="getObject"/>.</typeparam>
            <param name="integers">The integers to split.</param>
            <param name="getObject">A function that takes in the split integer as a short and can be used to retrieve an object.</param>
            <param name="splitChars">
              <para>The characters used to separate the <paramref name="integers"/>.</para>
              <para>This defaults to ' ' , \t \r \n or |.</para>
            </param>
            <param name="executeImmediately">
              If set to <see langword="true"/> executes object retrieval instantly; otherwise uses deferred execution.
            </param>
            <returns>The enumerator to iterate through the retrieved objects.</returns>
            <exception cref="T:System.NullReferenceException"><paramref name="integers"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.GetObjectsById64``1(System.String,System.Func{System.Int64,``0},System.Char[],System.Boolean)">
            <summary>
              Takes a <see cref="T:System.String"/> of <see cref="T:System.Int32">integer</see> ids and calls a function to retrieve an enumeration of objects.
            </summary>
            <typeparam name="T">The result type for <paramref name="getObject"/>.</typeparam>
            <param name="integers">The integers to split.</param>
            <param name="getObject">A function that takes in the split integer as a long and can be used to retrieve an object.</param>
            <param name="splitChars">
              <para>The characters used to separate the <paramref name="integers"/>.</para>
              <para>This defaults to ' ' , \t \r \n or |.</para>
            </param>
            <param name="executeImmediately">
              If set to <see langword="true"/> executes object retrieval instantly; otherwise uses deferred execution.
            </param>
            <returns>The enumerator to iterate through the retrieved objects.</returns>
            <exception cref="T:System.NullReferenceException"><paramref name="integers"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.XmlEscape(System.String)">
            <summary>
              Escapes invalid XML characters from a <see cref="T:System.String"/>.
            </summary>
            <param name="raw">The raw string.</param>
            <returns>The escaped <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.XmlEscape(System.Object)">
            <summary>
              Escapes invalid XML characters from the <see cref="T:System.String"/> representation of the specified <see cref="T:System.Object"/>.
            </summary>
            <param name="raw">The object containing the raw value.</param>
            <returns>The escaped <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.IsValidXmlCharStrict(System.Char)">
            <summary>
            Determines whether the specified character is valid in an XML document.
            </summary>
            <param name="c">The character.</param>
            <returns><see langword="true" /> if the character is valid; otherwise, <see langword="false" />.</returns>
            <remarks>
            <para>This does not specify whether the character needs to be further encoded further.</para>
            <para>Consider using <see cref="M:WebApplications.Utilities.UtilityExtensions.IsValidXmlChar(System.Char)"/> to also exclude characters that can cause compaibility issues.</para>
            <para>See http://www.w3.org/TR/xml/#charsets for further info.</para>
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.IsValidXmlChar(System.Char)">
            <summary>
            Determines whether the specified character is valid in an XML document and won't cause compatibility issues.
            </summary>
            <param name="c">The character.</param>
            <returns><see langword="true" /> if the character is valid; otherwise, <see langword="false" />.</returns>
            <remarks>
            <para>This does not specify whether the character needs to be further encoded further.</para>
            <para>This is the preferred compatibility check (compared to <see cref="M:WebApplications.Utilities.UtilityExtensions.IsValidXmlCharStrict(System.Char)"/> as it
            excludes characters that can cause issues.</para>
            <para>See http://www.w3.org/TR/xml/#charsets for further info.</para>
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.GetEmbeddedXml(System.Reflection.Assembly,System.String)">
            <summary>
              Gets the embedded XML from an assembly with the specified filename.
            </summary>
            <param name="assembly">The assembly.</param>
            <param name="filename">The filename.</param>
            <returns>
              An <see cref="T:System.Xml.Linq.XDocument">XDocument</see> containing the retrieved XML.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <para><paramref name="assembly"/> is a <see langword="null"/>.</para>
              <para>-or-</para>
              <para><paramref name="filename"/> is a <see langword="null"/>, empty or consists of only whitespace.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
              Couldn't load the embedded resource from the specified <paramref name="assembly"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.GetEmbeddedXmlSchemaSet(System.Reflection.Assembly,System.String,System.String)">
            <summary>
              Gets the embedded XmlSchemaSet (XSD) from an assembly with the specified filename.
            </summary>
            <param name="assembly">The assembly.</param>
            <param name="filename">The filename.</param>
            <param name="targetNamespace">The target namespace.</param>
            <returns>
              An <see cref="T:System.Xml.Schema.XmlSchemaSet"/> containing the retrieved schema.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <para><paramref name="assembly"/> is a <see langword="null"/>.</para>
              <para>-or-</para>
              <para><paramref name="filename"/> is a <see langword="null"/>, empty or consists of only whitespace.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">
              Couldn't load the embedded resource from the specified <paramref name="assembly"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.GetEpochTime(System.DateTime)">
            <summary>
              Gets the epoch time.
              This is the number of milliseconds since the 1st January 1970 to the specified <see cref="T:System.DateTime"/>.
            </summary>
            <param name="dateTime">The date time.</param>
            <returns>The number of milliseconds since the 1st January 1970 to the <paramref name="dateTime"/> specified.</returns>
            <remarks>
              This is the best way to pass a date time to JavaScript because it ensures that the time will parse successfully
              regardless of the <see cref="T:System.DateTime">date</see>'s localisation/format.
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.GetDateTime(System.Int64)">
            <summary>
              Gets the <see cref="T:System.DateTime"/> from an epoch time.
            </summary>
            <param name="epochTime">The epoch time (the number of milliseconds since the 1st January 1970).</param>
            <returns>The <paramref name="epochTime"/> as a <see cref="T:System.DateTime"/> object.</returns>
            <remarks>
              This is the best way to retrieve a date time from JavaScript because it ensures that the time will parse successfully
              regardless of the <see cref="T:System.DateTime">date</see>'s localisation/format.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
              The result was either less than <see cref="F:System.DateTime.MinValue"/> or greater than <see cref="F:System.DateTime.MaxValue"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.StripHTML(System.String)">
            <summary>
              Strips the HTML tags from the specified <see cref="T:System.String"/>.
            </summary>
            <param name="input">The input string.</param>
            <returns>
              A <see cref="T:System.String"/> containing the contents of <paramref name="input"/> but with the HTML tags stripped out.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="input"/> was <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.Truncate(System.String,System.Int32,WebApplications.Utilities.Enumerations.TruncateOptions,System.String,System.Int32)">
            <summary>
              Truncates the <see cref="T:System.String"/> input to the specified length and appends on an ellipsis if specified.
            </summary>
            <param name="valueToTruncate">The string input.</param>
            <param name="maxLength">The length to truncate to.</param>
            <param name="options">The truncate options.</param>
            <param name="ellipsisString">The ellipsis string.</param>
            <param name="ellipsisLength">
              <para>The length that the ellipsis contributes to the <paramref name="maxLength"/>.</para>
              <para>If no value is specified then this is the length of <paramref name="ellipsisString"/>.</para>
            </param>
            <returns>The truncated <see cref="T:System.String"/>.</returns>
            <exception cref="T:System.NullReferenceException">
              <paramref name="ellipsisString"/> is a <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="maxLength"/> is less than the <paramref name="ellipsisLength"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.ToRadians(System.Double)">
            <summary>
              Converts the specified value from degrees to radians.
            </summary>
            <param name="d">The value in degrees to convert.</param>
            <returns>The value (<paramref name="d"/>) in radians.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.ToDegrees(System.Double)">
            <summary>
              Converts the specified value from radians to degrees.
            </summary>
            <param name="r">The value in radians to convert.</param>
            <returns>The value (<paramref name="r"/>) in degrees.</returns>
        </member>
        <member name="F:WebApplications.Utilities.UtilityExtensions.HexDigitsLower">
            <summary>
            The lower-case hexadecimal digits.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.Unescape(System.String)">
            <summary>
            Unescapes the specified string.
            </summary>
            <param name="str">The string.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.Escape(System.String)">
            <summary>
            Unescapes the specified string.
            </summary>
            <param name="str">The string.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.AddUnescaped(System.Text.StringBuilder,System.String)">
            <summary>
            Adds the string, removing unescaping.
            </summary>
            <param name="builder">The builder.</param>
            <param name="str">The string.</param>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.AddEscaped(System.Text.StringBuilder,System.String)">
            <summary>
            Adds the string, escaping characters.
            </summary>
            <param name="builder">The builder.</param>
            <param name="str">The string.</param>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.GetDateTime(System.Guid)">
            <summary>
              Gets the creation date from a <see cref="T:System.Guid"/> that is a <see cref="T:WebApplications.Utilities.CombGuid"/>.
            </summary>
            <param name="guid">The Guid.</param>
            <returns>The <see cref="T:System.Guid"/>'s creation <see cref="T:System.DateTime"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.Wrap``1(System.IAsyncResult,``0)">
            <summary>
              Wraps the specified <see cref="T:System.IAsyncResult"/> as an
              <see cref="T:WebApplications.Utilities.Threading.ApmWrap`1"/> object, allowing associated data to be attached.
            </summary>
            <typeparam name="T">The type of the data to embed.</typeparam>
            <param name="result">The result to wrap.</param>
            <param name="data">The data to embed.</param>
            <returns>The wrapped result.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.Unwrap``1(System.IAsyncResult)">
            <summary>
              Unwraps the specified result and gets the <see cref="T:System.IAsyncResult"/> as well as the attached data.
            </summary>
            <typeparam name="T">The type of the embedded data.</typeparam>
            <param name="result">The result to unwrap.</param>
            <returns>The embedded data.</returns>
            <seealso cref="T:WebApplications.Utilities.Threading.ApmWrap`1"/>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.Unwrap``1(System.IAsyncResult,System.IAsyncResult@)">
            <summary>
              Unwraps the specified result, retrieving the attached data as well as the <see cref="T:System.IAsyncResult"/>.
            </summary>
            <typeparam name="T">The type of the embedded data.</typeparam>
            <param name="result">The result to unwrap.</param>
            <param name="unwrappedResult">The unwrapped result.</param>
            <returns>The embedded data.</returns>
            <seealso cref="T:WebApplications.Utilities.Threading.ApmWrap`1"/>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.WrapCallback``1(System.AsyncCallback,``0,System.Threading.SynchronizationContext)">
            <summary>
              Creates a wrapper on a call back.
            </summary>
            <typeparam name="T">The type of the data to embed.</typeparam>
            <param name="callback">The callback to wrap.</param>
            <param name="data">The data to embed.</param>
            <param name="syncContext">The synchronization context.</param>
            <returns>The wrapped result.</returns>
            <seealso cref="T:WebApplications.Utilities.Threading.ApmWrap`1"/>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.Split``1(``0[],System.Int32[])">
            <summary>
            Splits the specified array at the selected indices.
            </summary>
            <typeparam name="T">The array object type.</typeparam>
            <param name="array">The array.</param>
            <param name="indices">The indices.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.Join(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Joins the specified elements. Calls <see cref="M:System.String.Join(System.String,System.Collections.Generic.IEnumerable{System.String})"/>
            </summary>
            <param name="elements">The elements.</param>
            <param name="separator">The separator.</param>
            <returns>The joined elements.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.JoinNotNull(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Joins elements that are not null or empty with the separator.
            </summary>
            <param name="elements">The elements.</param>
            <param name="separator">The separator.</param>
            <returns>The joined elements.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.JoinNotNullOrEmpty(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Joins elements that are not null or empty with the separator.
            </summary>
            <param name="elements">The elements.</param>
            <param name="separator">The separator.</param>
            <returns>The joined elements.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.JoinNotNullOrWhiteSpace(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Joins elements that are not null or white space with the separator.
            </summary>
            <param name="elements">The elements.</param>
            <param name="separator">The separator.</param>
            <returns>The joined elements.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.SplitLines(System.String)">
            <summary>
            Splits the string into lines.
            </summary>
            <param name="input">The input.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.LowerCaseFirstLetter(System.String)">
            <summary>
            Lowers the case of the first letter.
            </summary>
            <param name="input">The input.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.AddPercentage(System.Double,System.Double)">
            <summary>
            Increase number by a percentage.
            </summary>
            <param name="number">The number.</param>
            <param name="increaseByPercent">Percentage to increase by.</param>
            <returns>The number increased by given percentage.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.GetAllBytes(System.Net.IPAddress)">
            <summary>
            Gets all bytes necessary to represent an IPAddress.  See also <see cref="M:WebApplications.Utilities.UtilityExtensions.GetFullIPAddress(System.Byte[])"/>.
            </summary>
            <param name="ipAddress">The ip address.</param>
            <returns>A byte[] that fully encodes an IPAddress.</returns>
            <remarks>
            <para>This is necessary as GetAddressBytes() doesn't include the IPv6 scope ID.</para>
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.GetFullIPAddress(System.Byte[])">
            <summary>
            Gets an IPAddress from a byte[] that also encode the IPv6 scope.  See also <see cref="M:WebApplications.Utilities.UtilityExtensions.GetAllBytes(System.Net.IPAddress)"/>.
            </summary>
            <param name="bytes">The bytes.</param>
            <returns>A byte[] that fully encodes an IPAddress.</returns>
            <remarks>This is necessary as GetAddressBytes() doesn't include the IPv6 scope ID.</remarks>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.AreDistinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Determines if all the elements of the enumerable are distinct.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="enumerable">The enumerable.</param>
            <param name="equalityComparer">The equality comparer.</param>
            <returns><see langword="true" /> if all the elements of the enumerable are distinct, <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.GetOrAdd``2(System.Collections.Generic.Dictionary{``0,``1},``0,``1)">
            <summary>
            Adds a key/value pair to the <see cref="T:System.Collections.Generic.Dictionary`2" /> by using the specified function, if the key does not already exist.
            </summary>
            <typeparam name="TKey">The type of the keys in the dictionary.</typeparam>
            <typeparam name="TValue">The type of the values in the dictionary.</typeparam>
            <param name="dict">The dictionary to add the element to.</param>
            <param name="key">The key of the element to add.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.GetOrAdd``2(System.Collections.Generic.Dictionary{``0,``1},``0,System.Func{``0,``1})">
            <summary>
            Adds a key/value pair to the <see cref="T:System.Collections.Generic.Dictionary`2"/> by using the specified function, if the key does not already exist.
            </summary>
            <typeparam name="TKey">The type of the keys in the dictionary.</typeparam>
            <typeparam name="TValue">The type of the values in the dictionary.</typeparam>
            <param name="dict">The dictionary to add the element to.</param>
            <param name="key">The key of the element to add.</param>
            <param name="valueFactory">The function used to generate a value for the key.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.TryParse``1(NodaTime.Text.IPattern{``0},System.String,``0@)">
            <summary>
            Attempts to parse the given <paramref name="text"/> according to the rules of the <paramref name="pattern"/>.
            </summary>
            <typeparam name="T">The type of the value to parse.</typeparam>
            <param name="pattern">The pattern to attempt parse with.</param>
            <param name="text">The text to parse.</param>
            <param name="value">The parsed value if successful, otherwise <see langword="default{T}"/>.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="pattern"/> was <see langword="null"/>.</exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.TryParseAny``1(System.Collections.Generic.IEnumerable{NodaTime.Text.IPattern{``0}},System.String,``0@)">
            <summary>
            Attempts to parse the given <paramref name="text"/> according to the rules of any of the <paramref name="patterns"/>.
            </summary>
            <typeparam name="T">The type of the value to parse.</typeparam>
            <param name="patterns">The pattern to attempt to parse with.</param>
            <param name="text">The text to parse.</param>
            <param name="value">The parsed value if successful, otherwise <see langword="default{T}"/>.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="patterns"/> or one of its elements was <see langword="null"/>.</exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.StdDev(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Calculate the standard deviation of an average
            </summary>
            <param name="values">The values.</param>
            <returns>The standard deviation.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.StdDev``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
            <summary>
            Calculate the standard deviation of an average
            </summary>
            <typeparam name="T">The type of each element.</typeparam>
            <param name="values">The values.</param>
            <param name="selector">A transform function to apply to each element.</param>
            <returns>The standard deviation.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.MaxBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Returns the maximal element of the given sequence, based on
            the given projection.
            </summary>
            <remarks>
            If more than one element has the maximal projected value, the first
            one encountered will be returned. This overload uses the default comparer
            for the projected type. This operator uses immediate execution, but
            only buffers a single result (the current maximal element).
            </remarks>
            <typeparam name="TSource">Type of the source sequence</typeparam>
            <typeparam name="TKey">Type of the projected element</typeparam>
            <param name="source">Source sequence</param>
            <param name="selector">Selector to use to pick the results to compare</param>
            <returns>The maximal element, according to the projection.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> or <paramref name="selector"/> is null</exception>
            <exception cref="T:System.InvalidOperationException"><paramref name="source"/> is empty</exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.MaxByOrDefault``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Returns the maximal element of the given sequence, based on
            the given projection.
            </summary>
            <remarks>
            If more than one element has the maximal projected value, the first
            one encountered will be returned. This overload uses the default comparer
            for the projected type. This operator uses immediate execution, but
            only buffers a single result (the current maximal element).
            </remarks>
            <typeparam name="TSource">Type of the source sequence</typeparam>
            <typeparam name="TKey">Type of the projected element</typeparam>
            <param name="source">Source sequence</param>
            <param name="selector">Selector to use to pick the results to compare</param>
            <returns>The maximal element, according to the projection.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> or <paramref name="selector"/> is null</exception>
            <exception cref="T:System.InvalidOperationException"><paramref name="source"/> is empty</exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.MaxBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
            <summary>
            Returns the maximal element of the given sequence, based on
            the given projection and the specified comparer for projected values. 
            </summary>
            <remarks>
            If more than one element has the maximal projected value, the first
            one encountered will be returned. This overload uses the default comparer
            for the projected type. This operator uses immediate execution, but
            only buffers a single result (the current maximal element).
            </remarks>
            <typeparam name="TSource">Type of the source sequence</typeparam>
            <typeparam name="TKey">Type of the projected element</typeparam>
            <param name="source">Source sequence</param>
            <param name="selector">Selector to use to pick the results to compare</param>
            <param name="comparer">Comparer to use to compare projected values</param>
            <returns>The maximal element, according to the projection.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/>, <paramref name="selector"/> 
            or <paramref name="comparer"/> is null</exception>
            <exception cref="T:System.InvalidOperationException"><paramref name="source"/> is empty</exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.MaxByOrDefault``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
            <summary>
            Returns the maximal element of the given sequence, based on
            the given projection and the specified comparer for projected values. 
            </summary>
            <remarks>
            If more than one element has the maximal projected value, the first
            one encountered will be returned. This overload uses the default comparer
            for the projected type. This operator uses immediate execution, but
            only buffers a single result (the current maximal element).
            </remarks>
            <typeparam name="TSource">Type of the source sequence</typeparam>
            <typeparam name="TKey">Type of the projected element</typeparam>
            <param name="source">Source sequence</param>
            <param name="selector">Selector to use to pick the results to compare</param>
            <param name="comparer">Comparer to use to compare projected values</param>
            <returns>The maximal element, according to the projection.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/>, <paramref name="selector"/> 
            or <paramref name="comparer"/> is null</exception>
            <exception cref="T:System.InvalidOperationException"><paramref name="source"/> is empty</exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.MinBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Returns the minimal element of the given sequence, based on
            the given projection.
            </summary>
            <remarks>
            If more than one element has the minimal projected value, the first
            one encountered will be returned. This overload uses the default comparer
            for the projected type. This operator uses immediate execution, but
            only buffers a single result (the current minimal element).
            </remarks>
            <typeparam name="TSource">Type of the source sequence</typeparam>
            <typeparam name="TKey">Type of the projected element</typeparam>
            <param name="source">Source sequence</param>
            <param name="selector">Selector to use to pick the results to compare</param>
            <returns>The minimal element, according to the projection.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> or <paramref name="selector"/> is null</exception>
            <exception cref="T:System.InvalidOperationException"><paramref name="source"/> is empty</exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.MinByOrDefault``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Returns the minimal element of the given sequence, based on
            the given projection.
            </summary>
            <remarks>
            If more than one element has the minimal projected value, the first
            one encountered will be returned. This overload uses the default comparer
            for the projected type. This operator uses immediate execution, but
            only buffers a single result (the current minimal element).
            </remarks>
            <typeparam name="TSource">Type of the source sequence</typeparam>
            <typeparam name="TKey">Type of the projected element</typeparam>
            <param name="source">Source sequence</param>
            <param name="selector">Selector to use to pick the results to compare</param>
            <returns>The minimal element, according to the projection.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> or <paramref name="selector"/> is null</exception>
            <exception cref="T:System.InvalidOperationException"><paramref name="source"/> is empty</exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.MinBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
            <summary>
            Returns the minimal element of the given sequence, based on
            the given projection and the specified comparer for projected values.
            </summary>
            <remarks>
            If more than one element has the minimal projected value, the first
            one encountered will be returned. This overload uses the default comparer
            for the projected type. This operator uses immediate execution, but
            only buffers a single result (the current minimal element).
            </remarks>
            <typeparam name="TSource">Type of the source sequence</typeparam>
            <typeparam name="TKey">Type of the projected element</typeparam>
            <param name="source">Source sequence</param>
            <param name="selector">Selector to use to pick the results to compare</param>
            <param name="comparer">Comparer to use to compare projected values</param>
            <returns>The minimal element, according to the projection.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/>, <paramref name="selector"/> 
            or <paramref name="comparer"/> is null</exception>
            <exception cref="T:System.InvalidOperationException"><paramref name="source"/> is empty</exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.MinByOrDefault``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
            <summary>
            Returns the minimal element of the given sequence, based on
            the given projection and the specified comparer for projected values.
            </summary>
            <remarks>
            If more than one element has the minimal projected value, the first
            one encountered will be returned. This overload uses the default comparer
            for the projected type. This operator uses immediate execution, but
            only buffers a single result (the current minimal element).
            </remarks>
            <typeparam name="TSource">Type of the source sequence</typeparam>
            <typeparam name="TKey">Type of the projected element</typeparam>
            <param name="source">Source sequence</param>
            <param name="selector">Selector to use to pick the results to compare</param>
            <param name="comparer">Comparer to use to compare projected values</param>
            <returns>The minimal element, according to the projection.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/>, <paramref name="selector"/> 
            or <paramref name="comparer"/> is null</exception>
            <exception cref="T:System.InvalidOperationException"><paramref name="source"/> is empty</exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.MaxOrDefault``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Invokes a transform function on each element of a generic sequence and returns the maximum resulting value.
            </summary>
            <remarks>
            This overload uses the default comparer for the projected type. This operator uses immediate execution, but
            only buffers a single result (the current maximum value).
            </remarks>
            <typeparam name="TSource">Type of the source sequence</typeparam>
            <typeparam name="TKey">Type of the projected element</typeparam>
            <param name="source">Source sequence</param>
            <param name="selector">Selector to use to pick the results to compare</param>
            <returns>The maximal element, according to the projection.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> or <paramref name="selector"/> is null</exception>
            <exception cref="T:System.InvalidOperationException"><paramref name="source"/> is empty</exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.MaxOrDefault``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
            <summary>
            Invokes a transform function on each element of a generic sequence and returns the maximum resulting value,
            using the specified comparer for comparing the projected values.
            </summary>
            <remarks>
            This operator uses immediate execution, but
            only buffers a single result (the current maximal element).
            </remarks>
            <typeparam name="TSource">Type of the source sequence</typeparam>
            <typeparam name="TKey">Type of the projected element</typeparam>
            <param name="source">Source sequence</param>
            <param name="selector">Selector to use to pick the results to compare</param>
            <param name="comparer">Comparer to use to compare projected values</param>
            <returns>The maximal element, according to the projection.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/>, <paramref name="selector"/> 
            or <paramref name="comparer"/> is null</exception>
            <exception cref="T:System.InvalidOperationException"><paramref name="source"/> is empty</exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.MinOrDefault``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Invokes a transform function on each element of a generic sequence and returns the minimum resulting value.
            </summary>
            <remarks>
            This overload uses the default comparer for the projected type. This operator uses immediate execution, but
            only buffers a single result (the current maximum value).
            </remarks>
            <typeparam name="TSource">Type of the source sequence</typeparam>
            <typeparam name="TKey">Type of the projected element</typeparam>
            <param name="source">Source sequence</param>
            <param name="selector">Selector to use to pick the results to compare</param>
            <returns>The minimal element, according to the projection.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> or <paramref name="selector"/> is null</exception>
            <exception cref="T:System.InvalidOperationException"><paramref name="source"/> is empty</exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.MinOrDefault``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
            <summary>
            Invokes a transform function on each element of a generic sequence and returns the minimum resulting value,
            using the specified comparer for comparing the projected values.
            </summary>
            <remarks>
            This operator uses immediate execution, but
            only buffers a single result (the current maximal element).
            </remarks>
            <typeparam name="TSource">Type of the source sequence</typeparam>
            <typeparam name="TKey">Type of the projected element</typeparam>
            <param name="source">Source sequence</param>
            <param name="selector">Selector to use to pick the results to compare</param>
            <param name="comparer">Comparer to use to compare projected values</param>
            <returns>The minimal element, according to the projection.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/>, <paramref name="selector"/> 
            or <paramref name="comparer"/> is null</exception>
            <exception cref="T:System.InvalidOperationException"><paramref name="source"/> is empty</exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.Min``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.Comparer{``0})">
            <summary>
            Returns the minimum value from the list.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source">The source.</param>
            <param name="comparer">The comparer.</param>
            <returns>``0.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.Max``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.Comparer{``0})">
            <summary>
            Returns the maximum value from the list.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source">The source.</param>
            <param name="comparer">The comparer.</param>
            <returns>``0.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.UnionSingle``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Produces the set union of a sequence and a single item by using a specified <see cref="T:System.Collections.Generic.IEqualityComparer`1"/>.
            </summary>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> that contains the elements from both input sequences, excluding duplicates.
            </returns>
            <param name="first">First element to return.</param>
            <param name="second">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> whose distinct elements form the second set for the union.</param>
            <param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> to compare values.</param>
            <typeparam name="TSource">The type of the elements of the input sequences.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.UnionSingle``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Produces the set union of a sequence and a single item by using a specified <see cref="T:System.Collections.Generic.IEqualityComparer`1" />.
            </summary>
            <typeparam name="TSource">The type of the elements of the input sequences.</typeparam>
            <param name="first">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose distinct elements form the first set for the union.</param>
            <param name="last">The last element to union.</param>
            <param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare values.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains the elements from both input sequences, excluding duplicates.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            Prepends an item to the start of an <see cref="T:System.Collections.Generic.IEnumerable`1"/> sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of the input sequences.</typeparam>
            <param name="first">First element to return.</param>
            <param name="sequence">The sequence to be prepended to.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> that contains the first item followed by the elements of the sequence.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.PrependTo``1(``0,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Prepends this item to the start of an <see cref="T:System.Collections.Generic.IEnumerable`1"/> sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of the input sequences.</typeparam>
            <param name="first">First element to return.</param>
            <param name="sequence">The sequence to be prepended to.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> that contains the first item followed by the elements of the sequence.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.Append``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            Appends an item to an <see cref="T:System.Collections.Generic.IEnumerable`1"/> sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of the input sequences.</typeparam>
            <param name="sequence">The sequence to append the item to.</param>
            <param name="last">The item to append.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> that contains the elements of the sequence followed by the last item.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.AppendTo``1(``0,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Appends this item to an <see cref="T:System.Collections.Generic.IEnumerable`1"/> sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of the input sequences.</typeparam>
            <param name="sequence">The sequence to append the item to.</param>
            <param name="last">The item to append.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> that contains the elements of the sequence followed by the last item.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.Concat``1(System.Collections.Generic.IEnumerable{``0},``0[])">
            <summary>
            Concatenates two sequences.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <param name="first">The first sequence to concatenate.</param>
            <param name="second">The second sequence to concatenate.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.HasAtLeast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Determines whether a sequence contains at least <paramref name="count" /> elements.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <param name="source">The source <see cref="T:System.Collections.Generic.IEnumerable`1"/>.</param>
            <param name="count">The minimum number of elements the <paramref name="source"/> needs.</param>
            <returns><see langword="true"/> if the sequence has at least <paramref name="count"/> items, otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.HasAtLeast``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Func{``0,System.Boolean})">
            <summary>
            Determines whether a sequence contains at least <paramref name="count" /> elements that satisfies a condition.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <param name="source">The source <see cref="T:System.Collections.Generic.IEnumerable`1"/>.</param>
            <param name="count">The minimum number of elements the <paramref name="source"/> needs.</param>
            <param name="predicate">The predicate.</param>
            <returns><see langword="true"/> if the sequence has at least <paramref name="count"/> items that match the <paramref name="predicate"/>, otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.HasExact``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Determines whether a sequence contains exactly <paramref name="count" /> elements.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <param name="source">The source <see cref="T:System.Collections.Generic.IEnumerable`1"/>.</param>
            <param name="count">The exact number of elements the <paramref name="source"/> needs.</param>
            <returns><see langword="true"/> if the sequence has exactly <paramref name="count"/> items, otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.HasExact``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Func{``0,System.Boolean})">
            <summary>
            Determines whether a sequence contains exactly <paramref name="count" /> elements that satisfies a condition.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <param name="source">The source <see cref="T:System.Collections.Generic.IEnumerable`1" />.</param>
            <param name="count">The exact number of elements the <paramref name="source" /> needs.</param>
            <param name="predicate">The predicate.</param>
            <returns><see langword="true"/> if the sequence has exactly <paramref name="count"/> items that match the <paramref name="predicate"/>, otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.ToMemorySize(System.Int16,System.Boolean,System.UInt32,System.Double)">
            <summary>
            Converts a number of bytes to a friendly memory size.
            </summary>
            <param name="bytes">The bytes.</param>
            <param name="longUnits">if set to <see langword="true" /> use long form unit names instead of symbols.</param>
            <param name="decimalPlaces">The number of decimal places between 0 and 16 (ignored for bytes).</param>
            <param name="breakPoint">The break point between 0 and 1024 (or 0D to base on decimal points).</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.ToMemorySize(System.UInt16,System.Boolean,System.UInt32,System.Double)">
            <summary>
            Converts a number of bytes to a friendly memory size.
            </summary>
            <param name="bytes">The bytes.</param>
            <param name="longUnits">if set to <see langword="true" /> use long form unit names instead of symbols.</param>
            <param name="decimalPlaces">The number of decimal places between 0 and 16 (ignored for bytes).</param>
            <param name="breakPoint">The break point between 0 and 1024 (or 0D to base on decimal points).</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.ToMemorySize(System.Int32,System.Boolean,System.UInt32,System.Double)">
            <summary>
            Converts a number of bytes to a friendly memory size.
            </summary>
            <param name="bytes">The bytes.</param>
            <param name="longUnits">if set to <see langword="true" /> use long form unit names instead of symbols.</param>
            <param name="decimalPlaces">The number of decimal places between 0 and 16 (ignored for bytes).</param>
            <param name="breakPoint">The break point between 0 and 1024 (or 0D to base on decimal points).</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.ToMemorySize(System.UInt32,System.Boolean,System.UInt32,System.Double)">
            <summary>
            Converts a number of bytes to a friendly memory size.
            </summary>
            <param name="bytes">The bytes.</param>
            <param name="longUnits">if set to <see langword="true" /> use long form unit names instead of symbols.</param>
            <param name="decimalPlaces">The number of decimal places between 0 and 16 (ignored for bytes).</param>
            <param name="breakPoint">The break point between 0 and 1024 (or 0D to base on decimal points).</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.ToMemorySize(System.Int64,System.Boolean,System.UInt32,System.Double)">
            <summary>
            Converts a number of bytes to a friendly memory size.
            </summary>
            <param name="bytes">The bytes.</param>
            <param name="longUnits">if set to <see langword="true" /> use long form unit names instead of symbols.</param>
            <param name="decimalPlaces">The number of decimal places between 0 and 16 (ignored for bytes).</param>
            <param name="breakPoint">The break point between 0 and 1024 (or 0D to base on decimal points).</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.ToMemorySize(System.UInt64,System.Boolean,System.UInt32,System.Double)">
            <summary>
            Converts a number of bytes to a friendly memory size.
            </summary>
            <param name="bytes">The bytes.</param>
            <param name="longUnits">if set to <see langword="true" /> use long form unit names instead of symbols.</param>
            <param name="decimalPlaces">The number of decimal places between 0 and 16 (ignored for bytes).</param>
            <param name="breakPoint">The break point between 0 and 1024 (or 0D to base on decimal points).</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.ToMemorySize(System.Double,System.Boolean,System.UInt32,System.Double)">
            <summary>
            Converts a number of bytes to a friendly memory size.
            </summary>
            <param name="bytes">The bytes.</param>
            <param name="longUnits">if set to <see langword="true" /> use long form unit names instead of symbols.</param>
            <param name="decimalPlaces">The number of decimal places between 0 and 16 (ignored for bytes).</param>
            <param name="breakPoint">The break point between 0 and 1024 (or 0D to base on decimal points).</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:WebApplications.Utilities.UtilityExtensions.TypeCounter">
            <summary>
              <para>A utility class to simplify the DeepEquals code.</para>
              <para>Used for counting the enumerable object's types.</para>
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.Mod(System.Int16,System.Int16)">
            <summary>
            Calculates the modulus of the value.
            </summary>
            <param name="value">The value.</param>
            <param name="modulus">The modulus.</param>
            <returns>The modulus.</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.Mod(System.UInt16,System.UInt16)">
            <summary>
            Calculates the modulus of the value.
            </summary>
            <param name="value">The value.</param>
            <param name="modulus">The modulus.</param>
            <returns>The modulus.</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.Mod(System.Int32,System.Int32)">
            <summary>
            Calculates the modulus of the value.
            </summary>
            <param name="value">The value.</param>
            <param name="modulus">The modulus.</param>
            <returns>The modulus.</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.Mod(System.UInt32,System.UInt32)">
            <summary>
            Calculates the modulus of the value.
            </summary>
            <param name="value">The value.</param>
            <param name="modulus">The modulus.</param>
            <returns>The modulus.</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.Mod(System.Int64,System.Int64)">
            <summary>
            Calculates the modulus of the value.
            </summary>
            <param name="value">The value.</param>
            <param name="modulus">The modulus.</param>
            <returns>The modulus.</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.Mod(System.UInt64,System.UInt64)">
            <summary>
            Calculates the modulus of the value.
            </summary>
            <param name="value">The value.</param>
            <param name="modulus">The modulus.</param>
            <returns>The modulus.</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.TopologicalSortDependants``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}})">
            <summary>
              Performs a topological sort on an enumeration.
            </summary>
            <typeparam name="T">The enumerable type.</typeparam>
            <param name="enumerable">The enumerable.</param>
            <param name="getDependants">
              The function to get dependants for each element of the enumeration.
            </param>
            <returns>
              The enumeration sorted so that all elements that have dependencies follow their dependencies.
            </returns>
            <exception cref="T:System.InvalidOperationException">The dependencies are cyclical.</exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.TopologicalSortDependencies``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}})">
            <summary>
              Performs a topological sort on an enumeration.
            </summary>
            <typeparam name="T">The enumerable type.</typeparam>
            <param name="enumerable">The enumerable.</param>
            <param name="getDependencies">
              The function to get the dependencies of the individual collection element.
            </param>
            <returns>
              The enumeration sorted so that all elements that have dependencies follow their dependencies.
            </returns>
            <exception cref="T:System.InvalidOperationException">The dependencies are cyclical.</exception>
            <exception cref="T:System.ArgumentNullException">
              <para><paramref name="enumerable"/> is <see langword="null"/>.</para>
              <para>-or-</para>
              <para><paramref name="getDependencies"/> is <see langword="null"/>.</para>
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.TopologicalSortEdges``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``0}})">
            <summary>
              Performs a topological sort on an enumeration.
            </summary>
            <typeparam name="T">The enumerable type.</typeparam>
            <param name="enumerable">The enumerable.</param>
            <param name="edges">The edges.</param>
            <returns>
              The enumeration sorted so that all elements that have dependencies follow their dependencies.
            </returns>
            <exception cref="T:System.InvalidOperationException">The dependencies are cyclical.</exception>
            <exception cref="T:System.ArgumentException">There are duplicates in <paramref name="enumerable"/>.</exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.Enumerate``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Enumerates the given <see cref="T:System.Collections.Generic.IEnumerable`1"/>. 
            If the enumerable implements <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/> then it will just be returned; otherwise it will be enumerated.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source">The source.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.SemanticVersion(System.Reflection.Assembly)">
            <summary>
            Gets the semantic version of an assembly.
            </summary>
            <param name="assembly">The assembly.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.CreateSet(System.Type,System.Collections.IEnumerable)">
            <summary>
            Creates a strongly typed <see cref="T:WebApplications.Utilities.HashCollection`1" /> from the value or values.
            </summary>
            <param name="elementType">Type of the element.</param>
            <param name="values">The values.</param>
            <returns>A hash set of the values.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.Randomize``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Randomizes the order of an enumerable.
            </summary>
            <typeparam name="T">The item type.</typeparam>
            <param name="enumerable">The enumerable.</param>
            <returns>A random order version of the initial enumerable.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.Choose``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Chooses a random item from the specified enumerable.
            </summary>
            <typeparam name="T">The item type.</typeparam>
            <param name="enumerable">The enumerable.</param>
            <returns>A random item.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.Choose``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
            <summary>
            Chooses a random item from the specified enumerable, where each item is weighted.
            </summary>
            <typeparam name="T">The item type.</typeparam>
            <param name="enumerable">The enumerable.</param>
            <param name="getWeightFunc">The get weight function, any item with a weight &lt;= 0 will be ignored.</param>
            <returns>A random item.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.Flatten(System.Exception)">
            <summary>
            Flattens the specified <see cref="T:System.Exception"/> to an enumeration of <see cref="T:System.Exception">Exceptions</see>.
            </summary>
            <param name="exception">The exception.</param>
            <remarks>Unwraps <see cref="T:System.Reflection.TargetInvocationException"/> and <see cref="T:System.AggregateException"/> automatically.</remarks>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.Flatten``1(System.Exception,System.Func{System.Exception,``0})">
            <summary>
            Flattens the specified <see cref="T:System.Exception"/> to an enumeration of the <typeparamref name="TException">required exception</typeparamref>.
            </summary>
            <typeparam name="TException">The type of the exception required.</typeparam>
            <param name="exception">The exception.</param>
            <param name="convert">The function that converts any <see cref="T:System.Exception"/> that doesn't already descend from <typeparamref name="TException"/>.</param>
            <returns>An enumeration of <typeparamref name="TException"/></returns>
            <remarks>Unwraps <see cref="T:System.Reflection.TargetInvocationException"/> and <see cref="T:System.AggregateException"/> automatically.</remarks>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.Unwrap(System.Exception)">
            <summary>
            Unwraps the specified exception if possible.
            </summary>
            <remarks>
            The exception can be unwraped if it is an <see cref="T:System.AggregateException"/> with a single inner exception, 
            or a <see cref="T:System.Reflection.TargetInvocationException"/>.
            </remarks>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.ReThrow(System.Exception)">
            <summary>
            Re-throws the exception with the original stack trace.
            </summary>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.TryPop``1(System.Collections.Generic.Stack{``0},``0@)">
            <summary>
            Attempts to remove the object at the top of the <see cref="T:System.Collections.Generic.Stack`1"/>, returning it if successful.
            </summary>
            <typeparam name="T">The type of the items in the stack.</typeparam>
            <param name="stack">The stack to pop.</param>
            <param name="value">The value at the top of the stack, or <see langword="default{T}"/> if the stack is empty.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.TryPeek``1(System.Collections.Generic.Stack{``0},``0@)">
            <summary>
            Attempts to return the object at the top of the <see cref="T:System.Collections.Generic.Stack`1"/>.
            </summary>
            <typeparam name="T">The type of the items in the stack.</typeparam>
            <param name="stack">The stack to peek.</param>
            <param name="value">The value at the top of the stack, or <see langword="default{T}"/> if the stack is empty.</param>
            <returns><see langword="true"/> if the stack was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.TryDequeue``1(System.Collections.Generic.Queue{``0},``0@)">
            <summary>
            Attempts to remove the object at the beginning of the <see cref="T:System.Collections.Generic.Queue`1"/>, returning it if successful.
            </summary>
            <typeparam name="T">The type of the items in the queue.</typeparam>
            <param name="queue">The queue to dequeue.</param>
            <param name="value">The value at the beginning of the queue, or <see langword="default{T}"/> if the queue is empty.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.TryPeek``1(System.Collections.Generic.Queue{``0},``0@)">
            <summary>
            Attempts to return the object at the beginning of the <see cref="T:System.Collections.Generic.Queue`1"/>.
            </summary>
            <typeparam name="T">The type of the items in the queue.</typeparam>
            <param name="queue">The queue to peek.</param>
            <param name="value">The value at the beginning of the queue, or <see langword="default{T}"/> if the queue is empty.</param>
            <returns><see langword="true"/> if the queue was not empty; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.Do``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Performs the given action on each element of the sequence.
            </summary>
            <typeparam name="T">The type of them elements in the sequence</typeparam>
            <param name="sequence">The sequence.</param>
            <param name="action">The action to perform on each element.</param>
            <returns>The sequence.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.Cross``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1})">
            <summary>
            Performs a cross product on two enumerables.
            </summary>
            <typeparam name="T1">The type of the first enumerable.</typeparam>
            <typeparam name="T2">The type of the second enumerable.</typeparam>
            <param name="enumerable1">The first enumerable.</param>
            <param name="enumerable2">The second enumerable.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.Tuple`2"/> containing all possible pairs of the elements in the two enumerables.</returns>
            <remarks>The order of the elements of the enumerables will be maintained.</remarks>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.SkipTake``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
            <summary>
            Bypasses a specified number of elements in a sequence and then returns a specified number of contiguous elements from the remaining elements.
            </summary>
            <typeparam name="T">The type of the elements of <paramref name="source"/>.</typeparam>
            <param name="source">The sequence to return elements from.</param>
            <param name="skipCount">The number of elements to skip.</param>
            <param name="takeCount">The number of elements to return.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> that contains the specified number of elements elements that occur after the specified index in the input sequence.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.SkipWhileTake``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Int32,System.Boolean)">
            <summary>
            Bypasses elements in a sequence as long as a specified condition is true and then returns a specified number of contiguous 
            elements from the remaining elements.
            </summary>
            <typeparam name="T">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">The sequence to return elements from.</param>
            <param name="skipPredicate">A function to test each element for a condition.</param>
            <param name="takeCount">The number of elements to return.</param>
            <param name="includeFirst">If set to <see langword="true" /> the first element that passes the test will be the first element returned.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains the specified number of elements starting at the 
            first element in the linear series that does not pass the test specified by <paramref name="skipPredicate" />.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.SkipWhileTakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Int32,System.Boolean)">
            <summary>
            Bypasses elements in a sequence as long as a specified condition is true and then returns a specified number of the previous elements.
            </summary>
            <typeparam name="T">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">The sequence to return elements from.</param>
            <param name="skipPredicate">A function to test each element for a condition.</param>
            <param name="takeCount">The number of elements to return.</param>
            <param name="includeFirst">If set to <see langword="true" /> the first element that passes the test will be the first element returned.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains the specified number of elements starting at the 
            first element in the linear series that does not pass the test specified by <paramref name="skipPredicate" />.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.Yield``1(``0)">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerable`1"/> that yields a single item.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="T:WebApplications.Utilities.UtilityExtensions.SingleEnumerable`1">
            <summary>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> that yields a single item.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.SingleEnumerable`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.UtilityExtensions.SingleEnumerable`1"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.SingleEnumerable`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.SingleEnumerable`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.SingleEnumerable`1.Add(`0)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.SingleEnumerable`1.Add(System.Object)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.IList" />.
            </summary>
            <param name="value">The object to add to the <see cref="T:System.Collections.IList" />.</param>
            <returns>
            The position into which the new element was inserted, or -1 to indicate that the item was not inserted into the collection.
            </returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.SingleEnumerable`1.Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:System.Collections.IList" /> contains a specific value.
            </summary>
            <param name="value">The object to locate in the <see cref="T:System.Collections.IList" />.</param>
            <returns>
            true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, false.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.SingleEnumerable`1.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.SingleEnumerable`1.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.
            </summary>
            <param name="value">The object to locate in the <see cref="T:System.Collections.IList" />.</param>
            <returns>
            The index of <paramref name="value" /> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.SingleEnumerable`1.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.IList" /> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="value" /> should be inserted.</param>
            <param name="value">The object to insert into the <see cref="T:System.Collections.IList" />.</param>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.SingleEnumerable`1.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.
            </summary>
            <param name="value">The object to remove from the <see cref="T:System.Collections.IList" />.</param>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.SingleEnumerable`1.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1" /> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="P:WebApplications.Utilities.UtilityExtensions.SingleEnumerable`1.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
            <exception cref="T:System.IndexOutOfRangeException"></exception>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.SingleEnumerable`1.Contains(`0)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>
            true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.SingleEnumerable`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies to.
            </summary>
            <param name="array">The array.</param>
            <param name="arrayIndex">Index of the array.</param>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.SingleEnumerable`1.Remove(`0)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>
            true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.
            </returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.SingleEnumerable`1.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
            <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
        </member>
        <member name="P:WebApplications.Utilities.UtilityExtensions.SingleEnumerable`1.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <returns>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
        </member>
        <member name="P:WebApplications.Utilities.UtilityExtensions.SingleEnumerable`1.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.
            </summary>
            <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</returns>
        </member>
        <member name="P:WebApplications.Utilities.UtilityExtensions.SingleEnumerable`1.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).
            </summary>
            <returns>true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, false.</returns>
        </member>
        <member name="P:WebApplications.Utilities.UtilityExtensions.SingleEnumerable`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.</returns>
        </member>
        <member name="P:WebApplications.Utilities.UtilityExtensions.SingleEnumerable`1.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IList" /> has a fixed size.
            </summary>
            <returns>true if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, false.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.SingleEnumerable`1.IndexOf(`0)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1" />.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1" />.</param>
            <returns>
            The index of <paramref name="item" /> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.SingleEnumerable`1.Insert(System.Int32,`0)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1" /> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1" />.</param>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.SingleEnumerable`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1" /> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="P:WebApplications.Utilities.UtilityExtensions.SingleEnumerable`1.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
            <exception cref="T:System.IndexOutOfRangeException"></exception>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Gets the first index of the <paramref name="value"/> in the <paramref name="source"/> enumerable.
            </summary>
            <typeparam name="T">The type of the elements in the enumerable.</typeparam>
            <param name="source">The source enumerable.</param>
            <param name="value">The value to find the index of.</param>
            <param name="comparer">The comparer to use, or <see langword="null"/> to use the default comparer for the type.</param>
            <returns>The index of the value if found; otherwise -1.</returns>
            <exception cref="T:System.ArgumentException">The length of the enumerable exceeded Int32.MaxValue</exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},``0,WebApplications.Utilities.EqualityComparison{``0})">
            <summary>
            Gets the first index of the <paramref name="value" /> in the <paramref name="source" /> enumerable.
            </summary>
            <typeparam name="T">The type of the elements in the enumerable.</typeparam>
            <param name="source">The source enumerable.</param>
            <param name="value">The value to find the index of.</param>
            <param name="equals">The equality comparison method to use.</param>
            <returns>The index of the value if found; otherwise -1.</returns>
            <exception cref="T:System.ArgumentException">The length of the enumerable exceeded Int32.MaxValue</exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.LastIndexOf``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Gets the last index of the <paramref name="value"/> in the <paramref name="source"/> enumerable.
            </summary>
            <typeparam name="T">The type of the elements in the enumerable.</typeparam>
            <param name="source">The source enumerable.</param>
            <param name="value">The value to find the index of.</param>
            <param name="comparer">The comparer to use, or <see langword="null"/> to use the default comparer for the type.</param>
            <returns>The last index of the value if found; otherwise -1.</returns>
            <exception cref="T:System.ArgumentException">The length of the enumerable exceeded Int32.MaxValue</exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.LastIndexOf``1(System.Collections.Generic.IEnumerable{``0},``0,WebApplications.Utilities.EqualityComparison{``0})">
            <summary>
            Gets the last index of the <paramref name="value" /> in the <paramref name="source" /> enumerable.
            </summary>
            <typeparam name="T">The type of the elements in the enumerable.</typeparam>
            <param name="source">The source enumerable.</param>
            <param name="value">The value to find the index of.</param>
            <param name="equals">The equality comparison method to use.</param>
            <returns>The last index of the value if found; otherwise -1.</returns>
            <exception cref="T:System.ArgumentException">The length of the enumerable exceeded Int32.MaxValue</exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.AddRange``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds the elements of the specified sequence to the end of the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection">The collection to add the elements to.</param>
            <param name="sequence">The sequence whose elements should be added to the end of the <see cref="T:System.Collections.Generic.ICollection`1" />.
            The collection itself cannot be null, but it can contain elements that are null, if type <typeparamref name="T" /> is a reference type.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection" /> or <paramref name="sequence" /> is null.</exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.TryRemove``1(System.Collections.Generic.ICollection{``0},System.Func{``0,System.Boolean},``0@)">
            <summary>
            Tries to remove the first item from the <paramref name="collection" /> matched by the <paramref name="predicate" />.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection">The collection.</param>
            <param name="predicate">The predicate.</param>
            <param name="removed">The item removed (if any).</param>
            <returns><see langword="true" /> if an item was removed; otherwise <see langword="null" /></returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="predicate"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.ToGenericComparer``1(System.Collections.IEqualityComparer)">
            <summary>
            Gets a generic version of the <see cref="T:System.Collections.IEqualityComparer" />.
            </summary>
            <typeparam name="T">The type of object to compare.</typeparam>
            <param name="comparer">The comparer.</param>
            <returns>If the <paramref name="comparer"/> is already generic, then it is just returned; otherwise it is wrapped in a generic comparer.</returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.ToGenericComparer``1(System.Collections.IComparer)">
            <summary>
            Gets a generic version of the <see cref="T:System.Collections.IComparer"/>.
            </summary>
            <typeparam name="T">The type of object to compare.</typeparam>
            <param name="comparer">The comparer.</param>
            <returns>If the <paramref name="comparer"/> is already generic, then it is just returned; otherwise it is wrapped in a generic comparer.</returns>
        </member>
        <member name="T:WebApplications.Utilities.UtilityExtensions.WrappedEqualityComparer`1">
            <summary>
            A generic wrapper around a non-generic <see cref="T:System.Collections.IEqualityComparer"/>.
            </summary>
            <typeparam name="T">The type of object to compare.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.WrappedEqualityComparer`1.#ctor(System.Collections.IEqualityComparer)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.UtilityExtensions.WrappedEqualityComparer`1"/> class.
            </summary>
            <param name="comparer">The comparer.</param>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.WrappedEqualityComparer`1.Equals(`0,`0)">
            <summary>
            Determines whether the specified objects are equal.
            </summary>
            <param name="x">The first object of type <typeparamref name="T" /> to compare.</param>
            <param name="y">The second object of type <typeparamref name="T" /> to compare.</param>
            <returns>
            true if the specified objects are equal; otherwise, false.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.WrappedEqualityComparer`1.GetHashCode(`0)">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <param name="obj">The object.</param>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.WrappedEqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="x">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <param name="y">The y.</param>
            <returns>
              <see langword="true" /> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.WrappedEqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <param name="obj">The object.</param>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:WebApplications.Utilities.UtilityExtensions.WrappedComparer`1">
            <summary>
            A generic wrapper around a non-generic <see cref="T:System.Collections.IComparer"/>.
            </summary>
            <typeparam name="T">The type of object to compare.</typeparam>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.WrappedComparer`1.#ctor(System.Collections.IComparer)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.UtilityExtensions.WrappedComparer`1"/> class.
            </summary>
            <param name="comparer">The comparer.</param>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.WrappedComparer`1.Compare(`0,`0)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>
            A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.Value Meaning Less than zero<paramref name="x" /> is less than <paramref name="y" />.Zero<paramref name="x" /> equals <paramref name="y" />.Greater than zero<paramref name="x" /> is greater than <paramref name="y" />.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.UtilityExtensions.WrappedComparer`1.Compare(System.Object,System.Object)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>
            A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />, as shown in the following table.Value Meaning Less than zero <paramref name="x" /> is less than <paramref name="y" />. Zero <paramref name="x" /> equals <paramref name="y" />. Greater than zero <paramref name="x" /> is greater than <paramref name="y" />.
            </returns>
        </member>
        <member name="T:WebApplications.Utilities.Interfaces.Caching.ICaching`2">
            <summary>
              Defines a generic caching interface.
            </summary>
            <typeparam name="TKey">The key type.</typeparam>
            <typeparam name="TValue">The value type.</typeparam>
        </member>
        <member name="P:WebApplications.Utilities.Interfaces.Caching.ICaching`2.DefaultAbsoluteExpiration">
            <summary>
              Sets the default absolute expiration.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Interfaces.Caching.ICaching`2.DefaultSlidingExpiration">
            <summary>
              Sets the default sliding expiration.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Interfaces.Caching.ICaching`2.Clear">
            <summary>
            Clears the cache.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Interfaces.Caching.ICaching`2.ContainsKey(`0)">
            <summary>
              Checks whether an entry with the specified key currently exists within the cache.
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <returns>
              Returns <see langword="true"/> if the cache contains an entry with the same key value as
              <paramref name="key"/>; otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Interfaces.Caching.ICaching`2.GetOrAdd(`0,`1)">
            <summary>
              Inserts a new entry into the cache using the specified key and value
              (if an entry doesn't already exist otherwise the existing value is returned).
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="value">The object to cache the value of.</param>
            <returns>
              Either the inserted or retrieved value depending on whether there's already an existing
              entry with the same key.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Interfaces.Caching.ICaching`2.GetOrAdd(`0,`1,System.DateTimeOffset)">
            <summary>
              Inserts a new entry into the cache using the specified key and value along with the absolute expiration
              (if an entry doesn't already exist otherwise the existing value is returned).
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="value">The object to cache the value of.</param>
            <param name="absoluteExpiration">Sets when the cache entry will be expired.</param>
            <returns>
              Either the inserted or retrieved value depending on whether there's already an existing
              entry with the same key.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Interfaces.Caching.ICaching`2.GetOrAdd(`0,`1,System.TimeSpan)">
            <summary>
              Inserts a new entry into the cache using the specified key and value along with the sliding expiration
              (if an entry doesn't already exist otherwise the existing value is returned).
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="value">The object to cache the value of.</param>
            <param name="slidingExpiration">
              The duration to wait before expiring the cache (if no requests are made for it during that period).
            </param>
            <returns>
              Either the inserted or retrieved value depending on whether there's already an existing
              entry with the same key.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Interfaces.Caching.ICaching`2.GetOrAdd(`0,System.Func{`0,`1})">
            <summary>
              Inserts a new entry into the cache using the specified key and a factory to create the value
              (if an entry doesn't already exist otherwise the existing value is returned).
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="addValueFactory">Used to create the value we want to cache.</param>
            <returns>
              Either the inserted or retrieved value depending on whether there's already an existing
              entry with the same key.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Interfaces.Caching.ICaching`2.GetOrAdd(`0,System.Func{`0,`1},System.DateTimeOffset)">
            <summary>
              Inserts a new entry into the cache using the specified key, the factory to create the value and the absolute expiration
              (if an entry doesn't already exist otherwise the existing value is returned).
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="addValueFactory">Used to create the value we want to cache.</param>
            <param name="absoluteExpiration">Sets when the cache entry will be expired.</param>
            <returns>
              Either the inserted or retrieved value depending on whether there's already an existing
              entry with the same key.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Interfaces.Caching.ICaching`2.GetOrAdd(`0,System.Func{`0,`1},System.TimeSpan)">
            <summary>
              Inserts a new entry into the cache using the specified key, the factory to create the value and the sliding expiration
              (if an entry doesn't already exist otherwise the existing value is returned).
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="addValueFactory">Used to create the value we want to cache.</param>
            <param name="slidingExpiration">
              The duration to wait before expiring the cache (if no requests are made for it during that period).
            </param>
            <returns>
              Either the inserted or retrieved value depending on whether there's already an existing entry with the same key.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Interfaces.Caching.ICaching`2.AddOrUpdate(`0,`1)">
            <summary>
              Inserts a new entry into the cache using the specified key and value
              (if an entry doesn't already exist otherwise the existing value is updated).
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="value">The object to either insert or update the existing value with.</param>
            <returns>
              Either the inserted or updated value depending on whether there's already an existing entry with the same key.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Interfaces.Caching.ICaching`2.AddOrUpdate(`0,`1,System.DateTimeOffset)">
            <summary>
              Inserts a new entry into the cache using the specified key, value and absolute expiration
              (if an entry doesn't already exist otherwise the existing value is updated).
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="value">The object to either insert or update the existing value with.</param>
            <param name="absoluteExpiration">Sets when the cache entry will be expired.</param>
            <returns>
              Either the inserted or updated value depending on whether there's already an existing entry with the same key.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Interfaces.Caching.ICaching`2.AddOrUpdate(`0,`1,System.TimeSpan)">
            <summary>
              Inserts a new entry into the cache using the specified key, value and sliding expiration
              (if an entry doesn't already exist otherwise the existing value is updated).
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="value">The object to either insert or update the existing value with.</param>
            <param name="slidingExpiration">
              The duration to wait before expiring the cache (if no requests are made for it during that period).
            </param>
            <returns>
              Either the inserted or updated value depending on whether there's already an existing entry with the same key.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Interfaces.Caching.ICaching`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})">
            <summary>
              Inserts a new entry into the cache using the specified key and the add/update factories
              (if an entry doesn't already exist otherwise the existing value is updated).
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="addValueFactory">Used to create the value that we want to cache.</param>
            <param name="updateValueFactory">Used to update the value if it's already cached.</param>
            <returns>
              Either the inserted or updated value depending on whether there's already an existing entry with the same key.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Interfaces.Caching.ICaching`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1},System.DateTimeOffset)">
            <summary>
              Inserts a new entry into the cache using the key, the add/update factories and the absolute expiration
              (if an entry doesn't already exist otherwise the existing value is updated).
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="addValueFactory">Used to create the value that we want to cache.</param>
            <param name="updateValueFactory">Used to update the value if it's already cached.</param>
            <param name="absoluteExpiration">Sets when the cache entry will be expired.</param>
            <returns>
              Either the inserted or updated value depending on whether or not there's already an existing entry with the same key.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Interfaces.Caching.ICaching`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1},System.TimeSpan)">
            <summary>
              Inserts a new entry into the cache using the key, the add/update factories and the sliding expiration
              (if an entry doesn't already exist otherwise the existing value is updated).
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="addValueFactory">Used to calculate the value we want to cache.</param>
            <param name="updateValueFactory">Used to update the value if it's already cached.</param>
            <param name="slidingExpiration">
              The duration to wait before expiring the cache (if no requests are made for it during that period).
            </param>
            <returns>
              Either the inserted or updated value depending on whether or not there's already an existing
              entry in the cache with the same key as <paramref name="key"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Interfaces.Caching.ICaching`2.TryGetValue(`0,`1@)">
            <summary>
              Tries to retrieve the value using the specified key.
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="value">The value retrieved.</param>
            <returns>
              Returns <see langword="true"/> if the corresponding <paramref name="key"/> exists and the value was
              successfully retrieved; otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Interfaces.Caching.ICaching`2.TryRemove(`0,`1@)">
            <summary>
              Tries to remove an entry using the specified key.
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="value">The value removed.</param>
            <returns>
              Returns <see langword="true"/> if the corresponding <paramref name="key"/> exists and the value was
              successfully removed; otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Interfaces.Caching.ICaching`2.TryAdd(`0,`1)">
            <summary>
              Tries to insert an entry into the cache using the specified key and value.
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="value">The object to cache.</param>
            <returns>
              Returns <see langword="true"/> if the entry was inserted successfully; otherwise returns <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Interfaces.Caching.ICaching`2.TryAdd(`0,`1,System.DateTimeOffset)">
            <summary>
              Tries to insert an entry into the cache using the specified key, value and absolute expiration.
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="value">The object to cache.</param>
            <param name="absoluteExpiration">Sets when the cache entry will be expired.</param>
            <returns>
            Returns <see langword="true"/> if the entry was inserted successfully; otherwise returns <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Interfaces.Caching.ICaching`2.TryAdd(`0,`1,System.TimeSpan)">
            <summary>
              Tries to insert an entry into the cache using the specified key, value and sliding expiration.
            </summary>
            <param name="key">The unique identifier for the cache entry.</param>
            <param name="value">The object to cache.</param>
            <param name="slidingExpiration">
              The duration to wait before expiring the cache (if no requests are made for it during that period).
            </param>
            <returns>
              Returns <see langword="true"/> if the entry was inserted successfully; otherwise returns <see langword="false"/>.
            </returns>
        </member>
        <member name="T:WebApplications.Utilities.Reflection">
            <summary>
              Extensions to the <see cref="N:System.Reflection">reflection namespace</see>.
            </summary>
            <summary>
             Extensions to the reflection namespace.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflection.AccessorBindingFlags">
            <summary>
              Binding flags for returning all fields/properties from a type.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflection._converters">
            <summary>
            Cache the conversions so that when requested they can be retrieved rather than recomputed.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflection.ToStringMethodInfo">
            <summary>
            The <see cref="T:System.Reflection.MethodInfo"/> for <see cref="M:System.Object.ToString"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Reflection.CurrentCultureExpression">
            <summary>
              The <see cref="T:System.Linq.Expressions.Expression"/> to get the <see cref="P:System.Globalization.CultureInfo.CurrentCulture">current CultureInfo</see>.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.GetGetter``1(System.Type,System.String)">
            <summary>
            Retrieves the lambda function equivalent of the specified property/field getter static method.
            </summary>
            <typeparam name="TValue">The type of the value returned.</typeparam>	
            <param name="type">The type from which to retrieve the getter..</param>
            <param name="name">The name of the field or property whose getter we want to retrieve.</param>
            <returns>A function that takes an object of the type T and returns the value of the property or field.</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.GetGetter``2(System.Type,System.String)">
            <summary>
            Retrieves the lambda function equivalent of the specified property/field getter instance method.
            </summary>
            <typeparam name="T">The type of the parameter the function encapsulates.</typeparam>	
            <typeparam name="TValue">The type of the value returned.</typeparam>	
            <param name="type">The type from which to retrieve the getter..</param>
            <param name="name">The name of the field or property whose getter we want to retrieve.</param>
            <returns>A function that takes an object of the type T and returns the value of the property or field.</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.GetSetter``1(System.Type,System.String)">
            <summary>
            Retrieves the lambda action equivalent of the specified static setter method.
            </summary>
            <typeparam name="TValue">The type of the value returned.</typeparam>	
            <param name="type">The type.</param>
            <param name="name">The name of the field or property whose setter we want to retrieve.</param>
            <returns>A function that takes an object of the declaring type as well as a value and sets the field or property to that value.</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.GetSetter``2(System.Type,System.String)">
            <summary>
            Retrieves the lambda action equivalent of the specified instance setter method.
            </summary>
            <typeparam name="T">The declaring class' type.</typeparam>	
            <typeparam name="TValue">The type of the value returned.</typeparam>	
            <param name="type">The type.</param>
            <param name="name">The name of the field or property whose setter we want to retrieve.</param>
            <returns>A function that takes an object of the declaring type as well as a value and sets the field or property to that value.</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.GetFunc(System.Reflection.MethodBase,System.Boolean,System.Type[])">
            <summary>
              Gets the lambda function equivalent of a method, for much better runtime performance than an invocation.
            </summary>
            <param name="methodBase">The information about the method.</param>
            <param name="checkParameterAssignability">
              If set to <see langword="true"/> checks that the function parameters can be assigned to the method safely.
            </param>
            <param name="funcTypes">The parameter types, followed by the return type.</param>
            <returns>
              A functional equivalent of the specified method info.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="methodBase"/> is a <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
              <para>The method specified is a static constructor.</para>
              <para>-or-</para>
              <para>No parameter/return types specified.</para>
              <para>-or-</para>
              <para>The method specified doesn't return a value. (An Action should be used instead.)</para>
              <para>-or-</para>
              <para>The number of parameters specified in <paramref name="funcTypes"/> is incorrect.</para>
              <para>-or-</para>
              <para>The parameter type is not assignable to the type specified.</para>
              <para>-or-</para>
              <para>The return type is not assignable to the type specified.</para>
            </exception>
            <exception cref="T:System.InvalidOperationException">No parameter/return types specified.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.GetAction(System.Reflection.MethodInfo,System.Boolean,System.Type[])">
            <summary>
              Gets the lambda action equivalent of a method, for much better runtime performance than an invocation.
            </summary>
            <param name="methodInfo">The information about the method.</param>
            <param name="checkParameterAssignability">
              If set to <see langword="true"/> checks that the function parameters can be assigned to the method safely.
            </param>
            <param name="paramTypes">The parameter types.</param>
            <returns>
              A functional equivalent of the specified method info.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="methodInfo"/> is a <see langword="null"/>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
              <para>The number of parameters specified in <paramref name="paramTypes"/> is incorrect.</para>
              <para>-or-</para>
              <para>The parameter type is not assignable to the type specified.</para>
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.GetConstructorFunc(System.Type,System.Boolean,System.Type[])">
            <summary>
              Gets the lambda function equivalent of a constructor, for much better runtime performance than an invocation.
            </summary>
            <param name="type">The object type.</param>
            <param name="checkParameterAssignability">
              If set to <see langword="true"/> checks that the function parameters can be assigned to the method safely.
            </param>
            <param name="paramTypes">The parameter types.</param>
            <returns>
              A functional equivalent of a constructor.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="type"/> is a <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.IsAutomatic(System.Reflection.PropertyInfo)">
            <summary>
              Determines whether or not the specified <see cref="T:System.Reflection.PropertyInfo">property</see> is automatic.
            </summary>
            <param name="property">The property we want to look at.</param>
            <returns>
              Returns <see langword="true"/> if the specified property is automatic; otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.GetAutomaticFieldInfo(System.Reflection.PropertyInfo)">
            <summary>
              Determines whether or not the specified <see cref="T:System.Reflection.PropertyInfo">property</see> is automatic
              and returns its underlying field.
            </summary>
            <param name="property">The property we want to look at.</param>
            <returns>
              Returns the field info if the property is automatic; otherwise returns null.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.GetConversion``2">
            <summary>
              Gets the conversion from the input type to the output type as a lambda expression.
            </summary>
            <typeparam name="TIn">The type to convert from.</typeparam>
            <typeparam name="TOut">The type to convert to.</typeparam>
            <returns>A lambda expression for converting (if any); otherwise returns <see langword="null"/>.</returns>
            <remarks>
              Conversions are cached, which saves a conversion being recomputed if it's requested more than once.
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.GetConversion">
            <summary>
            Gets the conversion from the input type to the output type as a lambda expression.
            </summary>
            <returns>A lambda expression for converting (if any); otherwise returns <see langword="null"/>.</returns>
            <remarks>
              Conversions are cached, which saves a conversion being recomputed if it's requested more than once.
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.GetConversion(System.Type,System.Type)">
            <summary>
              Gets the conversion from the input type to the output type as a lambda expression.
            </summary>
            <param name="inputType">The type to convert from.</param>
            <param name="outputType">The type to convert to.</param>
            <returns>A lambda expression for converting between the two types (if any); otherwise returns <see langword="null"/>.</returns>
            <remarks>
              Conversions are cached, which saves a conversion being recomputed if it's requested more than once.
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.GetConversion``2(System.Type,System.Type)">
            <summary>
              Gets the conversion from the input type to the output type as a lambda expression.
            </summary>
            <typeparam name="TIn">The type of the input for the function.</typeparam>
            <typeparam name="TOut">The type of the output for the function.</typeparam>
            <param name="inputType">The type to convert from.</param>
            <param name="outputType">The type to convert to.</param>
            <returns>A lambda expression for converting (if any); otherwise null.</returns>
            <remarks>
              Conversions are cached, which saves a conversion being recomputed if it's requested more than once.
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Convert(System.Linq.Expressions.Expression,System.Type)">
            <summary>
              Converts the specified expression to the output type.
            </summary>
            <param name="expression">The expression.</param>
            <param name="outputType">The type of the output.</param>
            <returns>An expression where the type has been converted.</returns>
            <remarks>
              This version is more powerful than the Expression.Convert CLR method in that it supports
              ToString() conversion, IConvertible and TypeConverters.
            </remarks>
            <exception cref="T:System.InvalidOperationException">The conversion is not supported.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.TryConvert(System.Linq.Expressions.Expression,System.Type,System.Linq.Expressions.Expression@)">
            <summary>
              Converts the specified expression to the output type.
            </summary>
            <param name="expression">The expression.</param>
            <param name="outputType">The type of the output.</param>
            <param name="outputExpression">The output expression.</param>
            <returns>
              Returns <see langword="true"/> if the conversion succeeded; otherwise returns <see langword="false"/>.
            </returns>
            <remarks>
              This version is more powerful than the Expression.Convert CLR method in that it supports
              ToString() conversion, IConvertible and TypeConverters. It also prevents exceptions being thrown.
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.GetCastMethod(System.Type,System.Type,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
              Returns the method info of an explicit/implicit cast on <paramref name="type"/>
              that casts between <paramref name="type"/> to <paramref name="destinationType"/>.
            </summary>
            <param name="type">The type.</param>
            <param name="destinationType">The destination type.</param>
            <param name="forwards">
              If set to <see langword="true"/> returns cast from <paramref name="type"/> to <paramref name="destinationType"/>;
              otherwise returns casts in the reverse direction (from <paramref name="destinationType"/> to <paramref name="type"/>).
            </param>
            <param name="includeImplicit">If <see langword="true"/> include implicit casts.</param>
            <param name="includeExplicit">If <see langword="true"/> include explicit casts.</param>
            <returns>
              Returns the <see cref="T:System.Reflection.MethodInfo"/> (if any); otherwise returns a <see langword="null"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.ImplicitlyCastsTo(System.Type,System.Type)">
            <summary>
              Determines whether or not a type implicitly casts to the specified destination type.
            </summary>
            <param name="type">The type.</param>
            <param name="destinationType">The destination type.</param>
            <returns>
              Returns <see langword="true"/> if the types are the same or if <paramref name="type"/> can be implicitly cast
              to <paramref name="destinationType"/>; otherwise returns <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.ExplicitlyCastsTo(System.Type,System.Type)">
            <summary>
              Determines whether or not a type explicitly casts to the specified destination type.
            </summary>
            <param name="type">The type.</param>
            <param name="destinationType">The destination type.</param>
            <returns>
              Returns <see langword="true"/> if the types are the same or if <paramref name="type"/> can be explicitly cast
              to <paramref name="destinationType"/>; otherwise returns <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.CastsTo(System.Type,System.Type)">
            <summary>
              Determines whether or not a type casts to the specified destination type.
            </summary>
            <param name="type">The type.</param>
            <param name="destinationType">The destination type.</param>
            <returns>
              Returns <see langword="true"/> if the types are the same or if <paramref name="type"/> can be cast
              to <paramref name="destinationType"/>; otherwise returns <see langword="false"/>.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.CanConvertTo(System.Type,System.Type)">
            <summary>
            Determines whether this type can be converted to the specified type.
            </summary>
            <param name="type">The type.</param>
            <param name="destinationType">Type of the destination.</param>
            <returns><see langword="true" /> if this types can convert to the specified destination type; otherwise, <see langword="false" />.</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.GetEquivalent(System.Reflection.MethodInfo,System.Type)">
            <summary>
              Gets the equivalent method on the new type specified.
            </summary>
            <param name="methodInfo">The method info.</param>
            <param name="declaringType">The declaring type.</param>
            <returns>
              Returns the equivalent method. If the <paramref name="declaringType"/> is equal to the
              <paramref name="methodInfo"/> declaring type then <paramref name="methodInfo"/> is returned. 
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.RawDefaultValueSafe(System.Reflection.ParameterInfo)">
            <summary>
              Implements a safe version of <see cref="P:System.Reflection.ParameterInfo.RawDefaultValue"/> that always returns a default value.
            </summary>
            <param name="parameter">The parameter.</param>
            <returns>The default value.</returns>
            <remarks>
              If the CLR fails to grab a raw default value then this will return the default value for the type instead.
            </remarks>
            <seealso cref="P:System.Reflection.ParameterInfo.RawDefaultValue"/>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Default(System.Type)">
            <summary>
              Gets the default instance for the specified type.
            </summary>
            <param name="type">The type.</param>
            <returns>The default instance for the specified type.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.SimplifiedTypeFullName(System.Type,System.String[])">
            <summary>
            Simplifies the full name, removing the specified assemblies, version, culture info and public keys (including in nested generic types).
            </summary>
            <param name="type">The type.</param>
            <param name="excludedAssemblies">The excluded assemblies (if none specified defaults to mscorlib and calling assembly).</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.SimplifiedTypeFullName(System.String,System.String[])">
            <summary>
            Simplifies the full name, removing the specified assemblies, version, culture info and public keys (including in nested generic types).
            </summary>
            <param name="typeAssemblyQualifiedName">The type's assembly qualified name.</param>
            <param name="excludedAssemblies">The excluded assemblies (if none specified defaults to mscorlib and calling assembly).</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Matches(System.Type,WebApplications.Utilities.Reflect.TypeSearch,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Matches the specified type against the specified search..
            </summary>
            <param name="type">The type.</param>
            <param name="typeSearch">The type search.</param>
            <param name="allowCasts">if set to <see langword="true"/> allows casts.</param>
            <param name="allowTypeClosures">if set to <see langword="true"/> allows type closures.</param>
            <param name="allowSignatureClosures">if set to <see langword="true"/> allows signature closures.</param>
            <param name="isOutputType">if set to <see langword="true" /> then the type is an output so casts are performed to the search type, rather than from the search type..</param>
            <returns><see langword="true"/> if matches; otherwise <see langword="false"/></returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Matches(System.Type,WebApplications.Utilities.Reflect.TypeSearch,System.Boolean@,WebApplications.Utilities.Reflect.GenericArgumentLocation@,System.Int32@,System.Type@,System.Boolean)">
            <summary>
            Matches the specified type against the specified search..
            </summary>
            <param name="type">The type.</param>
            <param name="typeSearch">The type search.</param>
            <param name="requiresCast">if set to <see langword="true" /> the type requires a cast to match.</param>
            <param name="closureLocation">The closure location if a closure is required to match (will always be None, Method or Type).</param>
            <param name="closurePosition">The closure position if a closure is required to match.</param>
            <param name="closureType">Type of the closure if a closure is required to match.</param>
            <param name="isOutputType">if set to <see langword="true" /> then the type is an output so casts are performed to the search type, rather than from the search type..</param>
            <returns><see langword="true" /> if matches; otherwise <see langword="false" /></returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Matches(WebApplications.Utilities.Reflect.ISignature,WebApplications.Utilities.Reflect.TypeSearch[])">
            <summary>
            Matches the specified signature.
            </summary>
            <param name="signature">The signature.</param>
            <param name="types">The types to match against (last type should be return type).</param>
            <returns><see langword="true"/> if matches; otherwise <see langword="false"/></returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Matches(WebApplications.Utilities.Reflect.ISignature,System.Int32,WebApplications.Utilities.Reflect.TypeSearch[])">
            <summary>
            Matches the specified signature.
            </summary>
            <param name="signature">The signature.</param>
            <param name="genericArguments">The number of generic arguments on the signature.</param>
            <param name="types">The types to match against (last type should be return type).</param>
            <returns><see langword="true"/> if matches; otherwise <see langword="false"/></returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Matches(WebApplications.Utilities.Reflect.ISignature,System.Boolean,System.Boolean,System.Boolean,WebApplications.Utilities.Reflect.TypeSearch[])">
            <summary>
            Matches the specified signature.
            </summary>
            <param name="signature">The signature.</param>
            <param name="allowCasts">if set to <see langword="true"/> allows casts.</param>
            <param name="allowTypeClosures">if set to <see langword="true"/> allows type closures.</param>
            <param name="allowSignatureClosures">if set to <see langword="true"/> allows signature closures.</param>
            <param name="types">The types to match against (last type should be return type).</param>
            <returns><see langword="true"/> if matches; otherwise <see langword="false"/></returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Matches(WebApplications.Utilities.Reflect.ISignature,System.Boolean,System.Boolean,System.Boolean,System.Int32,WebApplications.Utilities.Reflect.TypeSearch[])">
            <summary>
            Matches the specified signature.
            </summary>
            <param name="signature">The signature.</param>
            <param name="allowCasts">if set to <see langword="true"/> allows casts.</param>
            <param name="allowTypeClosures">if set to <see langword="true"/> allows type closures.</param>
            <param name="allowSignatureClosures">if set to <see langword="true"/> allows signature closures.</param>
            <param name="genericArguments">The number of generic arguments on the signature.</param>
            <param name="types">The types to match against (last type should be return type).</param>
            <returns><see langword="true"/> if matches; otherwise <see langword="false"/></returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Matches(WebApplications.Utilities.Reflect.ISignature,System.Boolean[]@,System.Type[]@,System.Type[]@,WebApplications.Utilities.Reflect.TypeSearch[])">
            <summary>
            Matches the specified signature.
            </summary>
            <param name="signature">The signature.</param>
            <param name="castsRequired">Indicates which parameters (or return type) will require casting.</param>
            <param name="typeClosures">The type closures required to match (if any).</param>
            <param name="signatureClosures">The signature closures required to match (if any).</param>
            <param name="types">The types to match against (last type should be return type).</param>
            <returns><see langword="true"/> if matches; otherwise <see langword="false"/></returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Matches(WebApplications.Utilities.Reflect.ISignature,System.Boolean[]@,System.Type[]@,System.Type[]@,System.Int32,WebApplications.Utilities.Reflect.TypeSearch[])">
            <summary>
            Matches the specified signature.
            </summary>
            <param name="signature">The signature.</param>
            <param name="castsRequired">Indicates which parameters (or return type) will require casting.</param>
            <param name="typeClosures">The type closures required to match (if any).</param>
            <param name="signatureClosures">The signature closures required to match (if any).</param>
            <param name="genericArguments">The number of generic arguments on the signature.</param>
            <param name="types">The types to match against (last type should be return type).</param>
            <returns><see langword="true"/> if matches; otherwise <see langword="false"/></returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.UpdateSearchContext(System.Boolean@,System.Type[],System.Type[],System.Boolean,WebApplications.Utilities.Reflect.GenericArgumentLocation,System.Int32,System.Type)">
            <summary>
            Updates the search context.
            </summary>
            <param name="castRequired">if set to <see langword="true"/> [cast required].</param>
            <param name="typeClosures">The type closures.</param>
            <param name="methodClosures">The method closures.</param>
            <param name="requiresCast">if set to <see langword="true"/> [requires cast].</param>
            <param name="closureLocation">The closure location.</param>
            <param name="closurePosition">The closure position.</param>
            <param name="closureType">Type of the closure.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.BestMatch(System.Collections.Generic.IEnumerable{WebApplications.Utilities.Reflect.ISignature},WebApplications.Utilities.Reflect.TypeSearch[])">
            <summary>
            Finds the best match from an enumeration of signatures.
            </summary>
            <param name="signatures">The signatures.</param>
            <param name="types">The types to match against (last type should be return type).</param>
            <returns><see langword="true" /> if matches; otherwise <see langword="false" /></returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.BestMatch(System.Collections.Generic.IEnumerable{WebApplications.Utilities.Reflect.ISignature},System.Int32,WebApplications.Utilities.Reflect.TypeSearch[])">
            <summary>
            Finds the best match from an enumeration of signatures.
            </summary>
            <param name="signatures">The signatures.</param>
            <param name="genericArguments">The generic arguments.</param>
            <param name="types">The types to match against (last type should be return type).</param>
            <returns><see langword="true" /> if matches; otherwise <see langword="false" /></returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.BestMatch(System.Collections.Generic.IEnumerable{WebApplications.Utilities.Reflect.ISignature},System.Boolean,System.Boolean,WebApplications.Utilities.Reflect.TypeSearch[])">
            <summary>
            Finds the best match from an enumeration of signatures.
            </summary>
            <param name="signatures">The signatures.</param>
            <param name="allowClosure">if set to <see langword="true" /> will automatically close the signatures generic types if possible.</param>
            <param name="allowCasts">if set to <see langword="true" /> then types will match if they can be cast to the required type.</param>
            <param name="types">The types to match against (last type should be return type).</param>
            <returns><see langword="true" /> if matches; otherwise <see langword="false" /></returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.BestMatch(System.Collections.Generic.IEnumerable{WebApplications.Utilities.Reflect.ISignature},System.Int32,System.Boolean,System.Boolean,WebApplications.Utilities.Reflect.TypeSearch[])">
            <summary>
            Finds the best match from an enumeration of signatures.
            </summary>
            <param name="signatures">The signatures.</param>
            <param name="genericArguments">The generic arguments.</param>
            <param name="allowClosure">if set to <see langword="true" /> will automatically close the signatures generic types if possible.</param>
            <param name="allowCasts">if set to <see langword="true" /> then types will match if they can be cast to the required type.</param>
            <param name="types">The types to match against (last type should be return type).</param>
            <returns><see langword="true" /> if matches; otherwise <see langword="false" /></returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.BestMatch(System.Collections.Generic.IEnumerable{WebApplications.Utilities.Reflect.ISignature},System.Int32,System.Boolean,System.Boolean,System.Boolean[]@,WebApplications.Utilities.Reflect.TypeSearch[])">
            <summary>
            Finds the best match from an enumeration of signatures.
            </summary>
            <param name="signatures">The signatures.</param>
            <param name="genericArguments">The generic arguments.</param>
            <param name="allowClosure">if set to <see langword="true" /> will automatically close the signatures generic types if possible.</param>
            <param name="allowCasts">if set to <see langword="true" /> then types will match if they can be cast to the required type.</param>
            <param name="castsRequired">Any array indicating which parameters require a cast (the last element is for the return type).</param>
            <param name="types">The types to match against (last type should be return type).</param>
            <returns><see langword="true" /> if matches; otherwise <see langword="false" /></returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.ExpandParameterType(System.Type,System.Type[],System.Type[])">
            <summary>
            Expands the parameter type.
            </summary>
            <param name="parameterType">Type of the input.</param>
            <param name="signatureArguments">The signature arguments.</param>
            <param name="typeArguments">The type arguments.</param>
            <returns>Given a parameter type, will expand the type based on a set of signature and type arguments.</returns>
            <remarks></remarks>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.DescendsFrom(System.Type,System.Type)">
            <summary> 
            Checks to see if a type descends from another type. 
            </summary> 
            <param name="sourceType">Type of the source.</param> 
            <param name="baseType">Type of the base.</param> 
            <returns></returns> 
            <remarks></remarks> 
        </member>
        <member name="M:WebApplications.Utilities.Reflection.DescendsFrom``1(System.Type)">
            <summary>
            Checks to see if a type descends from another type.
            </summary>
            <typeparam name="TBase">The type of the base.</typeparam>
            <param name="sourceType">Type of the source.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.ImplementsInterface(System.Type,System.Type)">
            <summary>
            Checks to see if a type implements an interface.
            </summary>
            <param name="type">The type to check.</param>
            <param name="interfaceType">The type of the interface.</param>
            <returns><see langword="true"/> if the type implements the interface; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.ImplementsInterface``1(System.Type)">
            <summary>
            Checks to see if a type implements an interface.
            </summary>
            <typeparam name="TInterface">The type of the interface.</typeparam>
            <param name="type">The type to check.</param>
            <returns><see langword="true"/> if the type implements the interface; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.AddFunc``1">
            <summary>
            Creates a function that will add parameters of the specified type.
            </summary>
            <typeparam name="T">The type of parameters to add.</typeparam>
            <returns>An addition function.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.AddFunc``3">
            <summary>
            Creates a function that will add parameters of the specified type.
            </summary>
            <typeparam name="TLHS">The type of the LHS of the addition.</typeparam>
            <typeparam name="TRHS">The type of the RHS of the addition.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <returns>An addition function.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.AddFunc``1(System.Type)">
            <summary>
            Creates a function that will add parameters of the specified type.
            </summary>
            <typeparam name="T">The type of parameters to add.</typeparam>
            <param name="type">The actual type.</param>
            <returns>An addition function.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.AddFunc``2(System.Type)">
            <summary>
            Creates a function that will add parameters of the specified type.
            </summary>
            <typeparam name="TParam">The type of parameters to add.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="type">The actual type.</param>
            <returns>An addition function.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.AddFunc``3(System.Type,System.Type)">
            <summary>
            Creates a function that will add parameters of the specified type, performing casts where necessary.
            </summary>
            <typeparam name="TLHS">The type of the LHS of the addition.</typeparam>
            <typeparam name="TRHS">The type of the RHS of the addition.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="typeLHS">The actual type of the LHS of the addition.</param>
            <param name="typeRHS">The actual type of the RHS of the addition.</param>
            <returns>An addition function.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.SubtractFunc``1(System.Type)">
            <summary>
            Creates a function that will subtract parameters of the specified type.
            </summary>
            <typeparam name="T">The type of parameters to subtract.</typeparam>
            <param name="type">The actual type.</param>
            <returns>A subtraction function.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.SubtractFunc``2(System.Type)">
            <summary>
            Creates a function that will subtract parameters of the specified type.
            </summary>
            <typeparam name="TParam">The type of parameters to subtract.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="type">The actual type.</param>
            <returns>A subtraction function.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.SubtractFunc``3(System.Type,System.Type)">
            <summary>
            Creates a function that will subtract parameters of the specified type, performing casts where necessary.
            </summary>
            <typeparam name="TLHS">The type of the LHS of the subtraction.</typeparam>
            <typeparam name="TRHS">The type of the RHS of the subtraction.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="typeLHS">The actual type of the LHS of the subtraction.</param>
            <param name="typeRHS">The actual type of the RHS of the subtraction.</param>
            <returns>A subtraction function.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.LessThanFunc``1">
            <summary>
            Creates a function that will evaluate a LessThan comparison on parameters of the specified type.
            </summary>
            <typeparam name="T">The type of parameters to evaluate.</typeparam>
            <returns>A less than comparison function.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.LessThanFunc``1(System.Type)">
            <summary>
            Creates a function that will evaluate a LessThan comparison on parameters of the specified type.
            </summary>
            <typeparam name="T">The type of parameters to evaluate.</typeparam>
            <param name="type">The actual type.</param>
            <returns>A less than comparison function.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.LessThanFunc``2(System.Type,System.Type)">
            <summary>
            Creates a function that will evaluate a LessThan comparison on parameters of the specified type.
            </summary>
            <typeparam name="TLHS">The type of the TLHS.</typeparam>
            <typeparam name="TRHS">The type of the TRHS.</typeparam>
            <param name="typeLHS">The actual type of the LHS of the comparison.</param>
            <param name="typeRHS">The actual type of the RHS of the comparison.</param>
            <returns>A less than comparison function.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.LessThanOrEqualFunc``1">
            <summary>
            Creates a function that will evaluate a LessThanOrEqual comparison on parameters of the specified type.
            </summary>
            <typeparam name="T">The type of parameters to evaluate.</typeparam>
            <returns>A less than or equal comparison function.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.LessThanOrEqualFunc``1(System.Type)">
            <summary>
            Creates a function that will evaluate a LessThanOrEqual comparison on parameters of the specified type.
            </summary>
            <typeparam name="T">The type of parameters to evaluate.</typeparam>
            <param name="type">The actual type.</param>
            <returns>A less than or equal comparison function.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.LessThanOrEqualFunc``2(System.Type,System.Type)">
            <summary>
            Creates a function that will evaluate a LessThanOrEqual comparison on parameters of the specified type.
            </summary>
            <typeparam name="TLHS">The type of the TLHS.</typeparam>
            <typeparam name="TRHS">The type of the TRHS.</typeparam>
            <param name="typeLHS">The actual type of the LHS of the comparison.</param>
            <param name="typeRHS">The actual type of the RHS of the comparison.</param>
            <returns>A less than or equal comparison function.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.GreaterThanFunc``1">
            <summary>
            Creates a function that will evaluate a GreaterThan comparison on parameters of the specified type.
            </summary>
            <typeparam name="T">The type of parameters to evaluate.</typeparam>
            <returns>A greater than comparison function.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.GreaterThanFunc``1(System.Type)">
            <summary>
            Creates a function that will evaluate a GreaterThan comparison on parameters of the specified type.
            </summary>
            <typeparam name="T">The type of parameters to evaluate.</typeparam>
            <param name="type">The actual type.</param>
            <returns>A greater than comparison function.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.GreaterThanFunc``2(System.Type,System.Type)">
            <summary>
            Creates a function that will evaluate a GreaterThan comparison on parameters of the specified type.
            </summary>
            <typeparam name="TLHS">The type of the TLHS.</typeparam>
            <typeparam name="TRHS">The type of the TRHS.</typeparam>
            <param name="typeLHS">The actual type of the LHS for the comparison.</param>
            <param name="typeRHS">The actual type of the RHS for the comparison.</param>
            <returns>A greater than comparison function.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.GreaterThanOrEqualFunc``1">
            <summary>
            Creates a function that will evaluate a GreaterThanOrEqual comparison on parameters of the specified type.
            </summary>
            <typeparam name="T">The type of parameters to evaluate.</typeparam>
            <returns>A greater than or equal comparison function.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.GreaterThanOrEqualFunc``1(System.Type)">
            <summary>
            Creates a function that will evaluate a GreaterThanOrEqual comparison on parameters of the specified type.
            </summary>
            <typeparam name="T">The type of parameters to evaluate.</typeparam>
            <param name="type">The actual type.</param>
            <returns>A greater than or equal comparison function.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.GreaterThanOrEqualFunc``2(System.Type,System.Type)">
            <summary>
            Creates a function that will evaluate a GreaterThanOrEqual comparison on parameters of the specified type.
            </summary>
            <typeparam name="TLHS">The type of the TLHS.</typeparam>
            <typeparam name="TRHS">The type of the TRHS.</typeparam>
            <param name="typeLHS">The actual type of the LHS for the comparison.</param>
            <param name="typeRHS">The actual type of the RHS for the comparison.</param>
            <returns>A greater than or equal comparison function.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.AndAlsoFunc``1">
            <summary>
            Creates a function that will evaluate a conditional AND operation on parameters of the specified type.
            </summary>
            <typeparam name="T">The type of parameters to evaluate.</typeparam>
            <returns>A conditional AND operator function that only evaluates the second operand if the first operand evaluates true.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.AndAlsoFunc``1(System.Type)">
            <summary>
            Creates a function that will evaluate a conditional AND operation on parameters of the specified type.
            </summary>
            <typeparam name="T">The type of parameters to evaluate.</typeparam>
            <param name="type">The actual type.</param>
            <returns>A conditional AND operator function that only evaluates the second operand if the first operand evaluates true.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.AndAlsoFunc``2(System.Type,System.Type)">
            <summary>
            Creates a function that will evaluate a conditional AND operation on parameters of the specified type.
            </summary>
            <typeparam name="TLHS">The type of the TLHS.</typeparam>
            <typeparam name="TRHS">The type of the TRHS.</typeparam>
            <param name="typeLHS">The actual type of the LHS for the conditional operation.</param>
            <param name="typeRHS">The actual type of the RHS for the conditional operation.</param>
            <returns>A conditional AND operator function that only evaluates the second operand if the first operand evaluates true.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.OrElseFunc``1">
            <summary>
            Creates a function that will evaluate a conditional OR operation on parameters of the specified type.
            </summary>
            <typeparam name="T">The type of parameters to evaluate.</typeparam>
            <returns>A conditional OR operator function that only evaluates the second operand if the first operand evaluates false.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.OrElseFunc``1(System.Type)">
            <summary>
            Creates a function that will evaluate a conditional OR operation on parameters of the specified type.
            </summary>
            <typeparam name="T">The type of parameters to evaluate.</typeparam>
            <param name="type">The actual type.</param>
            <returns>A conditional OR operator function that only evaluates the second operand if the first operand evaluates false.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.OrElseFunc``2(System.Type,System.Type)">
            <summary>
            Creates a function that will evaluate a conditional OR operation on parameters of the specified type.
            </summary>
            <typeparam name="TLHS">The type of the TLHS.</typeparam>
            <typeparam name="TRHS">The type of the TRHS.</typeparam>
            <param name="typeLHS">The actual type of the LHS for the conditional operation.</param>
            <param name="typeRHS">The actual type of the RHS for the conditional operation.</param>
            <returns>A conditional OR operator function that only evaluates the second operand if the first operand evaluates false.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.ExpressionFunc``3(System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression},System.Type,System.Type)">
            <summary>
            Creates a function from a binary expression that handles casts where necessary.
            </summary>
            <typeparam name="TLHS">The type of the LHS of the addition.</typeparam>
            <typeparam name="TRHS">The type of the RHS of the addition.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="binaryFunc">The binary func.</param>
            <param name="typeLHS">The actual type of the LHS of the addition.</param>
            <param name="typeRHS">The actual type of the RHS of the addition.</param>
            <returns>An addition function.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.IsOptional(System.Type)">
            <summary>
            Determines whether the specified type is optional.
            </summary>
            <param name="type">The type.</param>
            <returns>
                <see langword="true" /> if the specified type is <see cref="T:WebApplications.Utilities.Optional`1" />; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.IsOptional(System.Object)">
            <summary>
            Determines whether the specified value is optional.
            </summary>
            <param name="value">The value.</param>
            <returns><see langword="true" /> if the specified type is <see cref="T:WebApplications.Utilities.Optional`1" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.GetNonOptionalType(System.Type)">
            <summary>
            Gets the type of the non optional equivalent of a type (or the original type if already not optional).
            </summary>
            <param name="type">The type.</param>
            <returns>Type.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.GetOptionalType(System.Type)">
            <summary>
            Gets the optional type equivalent of the non optional equivalent of a type (or the original type if already optional).
            </summary>
            <param name="type">The type.</param>
            <returns>Type.</returns>
        </member>
        <member name="F:WebApplications.Utilities.Reflection._optionalDefaultAssigneds">
            <summary>
            Holds optional nulls by type
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.DefaultAssigned(System.Type)">
            <summary>
            Gets the optional default assigned value for the optional of type <paramref name="type" />
            </summary>
            <param name="type">The type.</param>
            <returns>Type.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.IsUnassigned(System.Object)">
            <summary>
            Determines whether the specified value is an unassigned optional.
            </summary>
            <param name="value">The value.</param>
            <returns>
                <see langword="true" /> if the specified value is unassigned; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.ToOptional(System.Object)">
            <summary>
            Converts a value to an Optional assigned value, unless it is already Optional, in which case it gives a
            non-type specific version of the optional.
            </summary>
            <param name="value">The value.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.IsNullable(System.Type)">
            <summary>
            Whether the type can accept <see langword="null" />.
            </summary>
            <param name="type">The type.</param>
            <returns>
                <see langword="true" /> if the specified value can accept <see langword="null" />; otherwise,
                <see langword="false" />.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.IsNullableType(System.Type)">
            <summary>
            Determines whether the specified type is nullable.
            </summary>
            <param name="type">The type.</param>
            <returns>
                <see langword="true" /> if the specified type is <see cref="T:System.Nullable`1" />; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.GetNullableType(System.Type)">
            <summary>
            Gets the nullable version of a type.
            </summary>
            <param name="type">The type.</param>
            <returns>Type.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.GetNonNullableType(System.Type)">
            <summary>
            Gets the non-nullable version of a type.
            </summary>
            <param name="type">The type.</param>
            <returns>Type.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.IsNumeric(System.Type)">
            <summary>
            Determines whether the specified type is numeric.
            </summary>
            <param name="type">The type.</param>
            <returns>
                <see langword="true" /> if the specified type is numeric; otherwise, <see langword="false" />.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.IsNull(System.Object)">
            <summary>
            Determines whether the specified value is null (includes <see cref="F:System.DBNull.Value"/>, <see cref="T:WebApplications.Utilities.Optional`1"/> and <see cref="T:System.Data.SqlTypes.INullable"/> support).
            </summary>
            <param name="value">The value.</param>
            <returns><see langword="true" /> if the specified value is null; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.IsCompilerGenerated(System.Reflection.MemberInfo)">
            <summary>
            Determines whether the given <paramref name="member" /> is compiler generated.
            </summary>
            <param name="member">The member.</param>
            <returns></returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.GetEnumerableItemType(System.Type)">
            <summary>
            Gets the type of the items in the enumerable type given, or <see langword="null"/> if the type is not an enumerable.
            </summary>
            <param name="type">The type.</param>
            <returns>The type of the items in the enumerable type given, or <see langword="null"/> if the type is not an enumerable</returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.IsEnumerable(System.Type)">
            <summary>
            Determines whether the specified type is an <see cref="T:System.Collections.Generic.IEnumerable`1" />.
            </summary>
            <param name="type">The type to check.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">type</exception>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.IsEnumerable(System.Type,System.Type@)">
            <summary>
            Determines whether the specified type is an <see cref="T:System.Collections.Generic.IEnumerable`1" />.
            </summary>
            <param name="type">The type to check.</param>
            <param name="itemType">If the type is an <see cref="T:System.Collections.Generic.IEnumerable`1" /> with type arguments supplied,
            will contain the type of the items in the enumerable. Otherwise <see langword="null" />.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">type</exception>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Func``1(System.Reflection.MethodBase,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a method base, for much better runtime performance than an invocation.
            </summary>
            <typeparam name = "TResult">The type of the result.</typeparam>
            <param name = "methodBase">The method base.</param>
            <param name = "checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a method base.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.ConstructorFunc``1(System.Type,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a type, for much better runtime performance than an invocation.
            </summary>
            <typeparam name = "TResult">The type of the result.</typeparam>
            <param name="type">The type.</param>
            <param name="checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a type constructor.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Action(System.Reflection.MethodInfo,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a method info, for much better runtime performance than an invocation.
            </summary>
            <param name="methodInfo">The method info.</param>
            <param name="checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a method info.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Func``2(System.Reflection.MethodBase,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a method base, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name = "TResult">The type of the result.</typeparam>
            <param name = "methodBase">The method base.</param>
            <param name = "checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a method base.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.ConstructorFunc``2(System.Type,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a type, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name = "TResult">The type of the result.</typeparam>
            <param name="type">The type.</param>
            <param name="checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a type constructor.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Action``1(System.Reflection.MethodInfo,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a method info, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <param name="methodInfo">The method info.</param>
            <param name="checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a method info.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Func``3(System.Reflection.MethodBase,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a method base, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name = "TResult">The type of the result.</typeparam>
            <param name = "methodBase">The method base.</param>
            <param name = "checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a method base.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.ConstructorFunc``3(System.Type,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a type, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name = "TResult">The type of the result.</typeparam>
            <param name="type">The type.</param>
            <param name="checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a type constructor.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Action``2(System.Reflection.MethodInfo,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a method info, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <param name="methodInfo">The method info.</param>
            <param name="checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a method info.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Func``4(System.Reflection.MethodBase,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a method base, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name = "TResult">The type of the result.</typeparam>
            <param name = "methodBase">The method base.</param>
            <param name = "checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a method base.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.ConstructorFunc``4(System.Type,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a type, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name = "TResult">The type of the result.</typeparam>
            <param name="type">The type.</param>
            <param name="checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a type constructor.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Action``3(System.Reflection.MethodInfo,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a method info, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <param name="methodInfo">The method info.</param>
            <param name="checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a method info.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Func``5(System.Reflection.MethodBase,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a method base, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name = "TResult">The type of the result.</typeparam>
            <param name = "methodBase">The method base.</param>
            <param name = "checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a method base.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.ConstructorFunc``5(System.Type,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a type, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name = "TResult">The type of the result.</typeparam>
            <param name="type">The type.</param>
            <param name="checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a type constructor.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Action``4(System.Reflection.MethodInfo,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a method info, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <param name="methodInfo">The method info.</param>
            <param name="checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a method info.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Func``6(System.Reflection.MethodBase,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a method base, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name = "TResult">The type of the result.</typeparam>
            <param name = "methodBase">The method base.</param>
            <param name = "checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a method base.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.ConstructorFunc``6(System.Type,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a type, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name = "TResult">The type of the result.</typeparam>
            <param name="type">The type.</param>
            <param name="checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a type constructor.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Action``5(System.Reflection.MethodInfo,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a method info, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <param name="methodInfo">The method info.</param>
            <param name="checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a method info.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Func``7(System.Reflection.MethodBase,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a method base, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name = "TResult">The type of the result.</typeparam>
            <param name = "methodBase">The method base.</param>
            <param name = "checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a method base.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.ConstructorFunc``7(System.Type,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a type, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name = "TResult">The type of the result.</typeparam>
            <param name="type">The type.</param>
            <param name="checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a type constructor.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Action``6(System.Reflection.MethodInfo,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a method info, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <param name="methodInfo">The method info.</param>
            <param name="checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a method info.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Func``8(System.Reflection.MethodBase,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a method base, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name = "TResult">The type of the result.</typeparam>
            <param name = "methodBase">The method base.</param>
            <param name = "checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a method base.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.ConstructorFunc``8(System.Type,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a type, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name = "TResult">The type of the result.</typeparam>
            <param name="type">The type.</param>
            <param name="checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a type constructor.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Action``7(System.Reflection.MethodInfo,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a method info, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <param name="methodInfo">The method info.</param>
            <param name="checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a method info.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Func``9(System.Reflection.MethodBase,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a method base, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name = "TResult">The type of the result.</typeparam>
            <param name = "methodBase">The method base.</param>
            <param name = "checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a method base.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.ConstructorFunc``9(System.Type,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a type, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name = "TResult">The type of the result.</typeparam>
            <param name="type">The type.</param>
            <param name="checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a type constructor.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Action``8(System.Reflection.MethodInfo,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a method info, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <param name="methodInfo">The method info.</param>
            <param name="checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a method info.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Func``10(System.Reflection.MethodBase,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a method base, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name = "TResult">The type of the result.</typeparam>
            <param name = "methodBase">The method base.</param>
            <param name = "checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a method base.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.ConstructorFunc``10(System.Type,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a type, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name = "TResult">The type of the result.</typeparam>
            <param name="type">The type.</param>
            <param name="checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a type constructor.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Action``9(System.Reflection.MethodInfo,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a method info, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <param name="methodInfo">The method info.</param>
            <param name="checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a method info.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Func``11(System.Reflection.MethodBase,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a method base, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name = "TResult">The type of the result.</typeparam>
            <param name = "methodBase">The method base.</param>
            <param name = "checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a method base.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.ConstructorFunc``11(System.Type,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a type, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name = "TResult">The type of the result.</typeparam>
            <param name="type">The type.</param>
            <param name="checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a type constructor.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Action``10(System.Reflection.MethodInfo,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a method info, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <param name="methodInfo">The method info.</param>
            <param name="checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a method info.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Func``12(System.Reflection.MethodBase,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a method base, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name="T11">The type of parameter 11.</typeparam>
            <typeparam name = "TResult">The type of the result.</typeparam>
            <param name = "methodBase">The method base.</param>
            <param name = "checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a method base.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.ConstructorFunc``12(System.Type,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a type, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name="T11">The type of parameter 11.</typeparam>
            <typeparam name = "TResult">The type of the result.</typeparam>
            <param name="type">The type.</param>
            <param name="checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a type constructor.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Action``11(System.Reflection.MethodInfo,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a method info, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name="T11">The type of parameter 11.</typeparam>
            <param name="methodInfo">The method info.</param>
            <param name="checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a method info.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Func``13(System.Reflection.MethodBase,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a method base, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name="T11">The type of parameter 11.</typeparam>
            <typeparam name="T12">The type of parameter 12.</typeparam>
            <typeparam name = "TResult">The type of the result.</typeparam>
            <param name = "methodBase">The method base.</param>
            <param name = "checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a method base.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.ConstructorFunc``13(System.Type,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a type, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name="T11">The type of parameter 11.</typeparam>
            <typeparam name="T12">The type of parameter 12.</typeparam>
            <typeparam name = "TResult">The type of the result.</typeparam>
            <param name="type">The type.</param>
            <param name="checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a type constructor.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Action``12(System.Reflection.MethodInfo,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a method info, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name="T11">The type of parameter 11.</typeparam>
            <typeparam name="T12">The type of parameter 12.</typeparam>
            <param name="methodInfo">The method info.</param>
            <param name="checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a method info.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Func``14(System.Reflection.MethodBase,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a method base, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name="T11">The type of parameter 11.</typeparam>
            <typeparam name="T12">The type of parameter 12.</typeparam>
            <typeparam name="T13">The type of parameter 13.</typeparam>
            <typeparam name = "TResult">The type of the result.</typeparam>
            <param name = "methodBase">The method base.</param>
            <param name = "checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a method base.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.ConstructorFunc``14(System.Type,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a type, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name="T11">The type of parameter 11.</typeparam>
            <typeparam name="T12">The type of parameter 12.</typeparam>
            <typeparam name="T13">The type of parameter 13.</typeparam>
            <typeparam name = "TResult">The type of the result.</typeparam>
            <param name="type">The type.</param>
            <param name="checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a type constructor.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Action``13(System.Reflection.MethodInfo,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a method info, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name="T11">The type of parameter 11.</typeparam>
            <typeparam name="T12">The type of parameter 12.</typeparam>
            <typeparam name="T13">The type of parameter 13.</typeparam>
            <param name="methodInfo">The method info.</param>
            <param name="checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a method info.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Func``15(System.Reflection.MethodBase,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a method base, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name="T11">The type of parameter 11.</typeparam>
            <typeparam name="T12">The type of parameter 12.</typeparam>
            <typeparam name="T13">The type of parameter 13.</typeparam>
            <typeparam name="T14">The type of parameter 14.</typeparam>
            <typeparam name = "TResult">The type of the result.</typeparam>
            <param name = "methodBase">The method base.</param>
            <param name = "checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a method base.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.ConstructorFunc``15(System.Type,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a type, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name="T11">The type of parameter 11.</typeparam>
            <typeparam name="T12">The type of parameter 12.</typeparam>
            <typeparam name="T13">The type of parameter 13.</typeparam>
            <typeparam name="T14">The type of parameter 14.</typeparam>
            <typeparam name = "TResult">The type of the result.</typeparam>
            <param name="type">The type.</param>
            <param name="checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a type constructor.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Action``14(System.Reflection.MethodInfo,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a method info, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name="T11">The type of parameter 11.</typeparam>
            <typeparam name="T12">The type of parameter 12.</typeparam>
            <typeparam name="T13">The type of parameter 13.</typeparam>
            <typeparam name="T14">The type of parameter 14.</typeparam>
            <param name="methodInfo">The method info.</param>
            <param name="checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a method info.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Func``16(System.Reflection.MethodBase,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a method base, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name="T11">The type of parameter 11.</typeparam>
            <typeparam name="T12">The type of parameter 12.</typeparam>
            <typeparam name="T13">The type of parameter 13.</typeparam>
            <typeparam name="T14">The type of parameter 14.</typeparam>
            <typeparam name="T15">The type of parameter 15.</typeparam>
            <typeparam name = "TResult">The type of the result.</typeparam>
            <param name = "methodBase">The method base.</param>
            <param name = "checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a method base.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.ConstructorFunc``16(System.Type,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a type, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name="T11">The type of parameter 11.</typeparam>
            <typeparam name="T12">The type of parameter 12.</typeparam>
            <typeparam name="T13">The type of parameter 13.</typeparam>
            <typeparam name="T14">The type of parameter 14.</typeparam>
            <typeparam name="T15">The type of parameter 15.</typeparam>
            <typeparam name = "TResult">The type of the result.</typeparam>
            <param name="type">The type.</param>
            <param name="checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a type constructor.
            </returns>
        </member>
        <member name="M:WebApplications.Utilities.Reflection.Action``15(System.Reflection.MethodInfo,System.Boolean)">
            <summary>
              Gets the lambda functional equivalent of a method info, for much better runtime performance than an invocation.
            </summary>
            <typeparam name="T1">The type of parameter 1.</typeparam>
            <typeparam name="T2">The type of parameter 2.</typeparam>
            <typeparam name="T3">The type of parameter 3.</typeparam>
            <typeparam name="T4">The type of parameter 4.</typeparam>
            <typeparam name="T5">The type of parameter 5.</typeparam>
            <typeparam name="T6">The type of parameter 6.</typeparam>
            <typeparam name="T7">The type of parameter 7.</typeparam>
            <typeparam name="T8">The type of parameter 8.</typeparam>
            <typeparam name="T9">The type of parameter 9.</typeparam>
            <typeparam name="T10">The type of parameter 10.</typeparam>
            <typeparam name="T11">The type of parameter 11.</typeparam>
            <typeparam name="T12">The type of parameter 12.</typeparam>
            <typeparam name="T13">The type of parameter 13.</typeparam>
            <typeparam name="T14">The type of parameter 14.</typeparam>
            <typeparam name="T15">The type of parameter 15.</typeparam>
            <param name="methodInfo">The method info.</param>
            <param name="checkParameterAssignability">if set to <see langword="true"/> check's function parameters can be assigned to method safely.</param>
            <returns>
              A functional equivalent of a method info.
            </returns>
        </member>
        <member name="T:WebApplications.Utilities.Singleton`2">
            <summary>
              A base class for singletons.
            </summary>
            <typeparam name="TKey">The singleton key type.</typeparam>
            <typeparam name="TSingleton">The singleton type.</typeparam>
            <remarks>A singleton is a globally available object that can only be initialised once.</remarks>
        </member>
        <member name="F:WebApplications.Utilities.Singleton`2.Singletons">
            <summary>
              Holds all singletons of the type <typeparamref name="TSingleton"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Singleton`2.Constructor">
            <summary>
              Holds a function to create a singleton.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Singleton`2.Key">
            <summary>
              The singleton key.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Singleton`2.#cctor">
            <summary>
              Gets the singleton's type constructor.
            </summary>
            <exception cref="T:System.TypeInitializationException">Failed to get the type constructor.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Singleton`2.#ctor(`0)">
            <summary>
              Prevents an instance of the <see cref="T:WebApplications.Utilities.Singleton`2"/> class from being created externally,
              which therefore enforces the singleton pattern.
            </summary>
            <param name="key">The singleton key.</param>
            <remarks>
              A singleton can be created more than once but only one created object will 'win'.
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.Singleton`2.GetSingleton(`0)">
            <summary>
              Creates and returns the singleton.
            </summary>
            <param name="key">The singleton key.</param>
        </member>
        <member name="T:WebApplications.Utilities.SqlExtensions">
            <summary>
              Extension methods for SQL Server functionalities.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.SqlExtensions.Set``1(Microsoft.SqlServer.Server.SqlDataRecord,System.Int32,``0)">
            <summary>
              Sets the value of the specified column in a <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/>. This is an improvement
              from <see cref="M:Microsoft.SqlServer.Server.SqlDataRecord.SetValue(System.Int32,System.Object)"/> as it correctly handles <see langword="null"/> values.
            </summary>
            <typeparam name="T">The type of the <paramref name="value"/> to set.</typeparam>
            <param name="sqlDataRecord">A single row of data from a record.</param>
            <param name="ordinal">The zero based ordinal of the column.</param>
            <param name="value">The value to set.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="ordinal"/> is less than zero or greater than the number of columns in the record.
            </exception>
            <exception cref="T:System.InvalidCastException">
              There is a type mismatch between the retrieved column and the specified <paramref name="value"/>.
            </exception>
            <exception cref="T:System.NullReferenceException">
              <paramref name="sqlDataRecord"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.SqlExtensions.Set``1(Microsoft.SqlServer.Server.SqlDataRecord,System.Int32,System.Nullable{``0})">
            <summary>
              Sets the value of the specified column in a <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/>. This is an improvement
              from <see cref="M:Microsoft.SqlServer.Server.SqlDataRecord.SetValue(System.Int32,System.Object)"/> as it correctly handles <see langword="null"/> values.
            </summary>
            <typeparam name="T">The type of the <paramref name="value"/> to set.</typeparam>
            <param name="sqlDataRecord">A single row of data from a record.</param>
            <param name="ordinal">The zero based ordinal of the column.</param>
            <param name="value">The value to set.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="ordinal"/> is less than zero or greater than the number of columns in the record.
            </exception>
            <exception cref="T:System.NullReferenceException">
              <paramref name="sqlDataRecord"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.SqlExtensions.Set``1(Microsoft.SqlServer.Server.SqlDataRecord,System.String,``0)">
            <summary>
              Sets the value of the specified column in a <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/>. This is an improvement
              from <see cref="M:Microsoft.SqlServer.Server.SqlDataRecord.SetValue(System.Int32,System.Object)"/> as it correctly handles <see langword="null"/> values.
            </summary>
            <typeparam name="T">The type of the <paramref name="value"/> to set.</typeparam>
            <param name="sqlDataRecord">A single row of data from a record.</param>
            <param name="columnName">The name of the column to set.</param>
            <param name="value">The value to set.</param>
            <exception cref="T:System.IndexOutOfRangeException">The column couldn't be found.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="columnName"/> is a <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidCastException">
              There is a type mismatch between the retrieved column and the specified <paramref name="value"/>.
            </exception>
            <exception cref="T:System.NullReferenceException">
              <paramref name="sqlDataRecord"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.SqlExtensions.Set``1(Microsoft.SqlServer.Server.SqlDataRecord,System.String,System.Nullable{``0})">
            <summary>
              Sets the value of the specified column in a <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/>. This is an improvement
              from <see cref="M:Microsoft.SqlServer.Server.SqlDataRecord.SetValue(System.Int32,System.Object)"/> as it correctly handles <see langword="null"/> values.
            </summary>
            <typeparam name="T">The type of the <paramref name="value"/> to set.</typeparam>
            <param name="sqlDataRecord">A single row of data from a record.</param>
            <param name="columnName">The name of the column to set.</param>
            <param name="value">The value to set.</param>
            <exception cref="T:System.IndexOutOfRangeException">The column couldn't be found.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="columnName"/> is a <see langword="null"/>.
            </exception>
            <exception cref="T:System.InvalidCastException">
              There is a type mismatch between the retrieved column and the <paramref name="value"/>.
            </exception>
            <exception cref="T:System.NullReferenceException">
              <paramref name="sqlDataRecord"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.SqlExtensions.AddWithValueNull``1(System.Data.SqlClient.SqlParameterCollection,System.String,``0)">
            <summary>
              Adds a value to the end of a <see cref="T:System.Data.SqlClient.SqlParameterCollection"/>. If the <paramref name="value"/> is a
              <see langword="null"/> then it will be passed as a <see cref="F:System.DBNull.Value"/>.
            </summary>
            <param name="parameters">
              The parameters associated with an <see cref="T:System.Data.SqlClient.SqlCommand"/>.
            </param>
            <param name="name">The name of the parameter.</param>
            <param name="value">The value of the parameter to add.</param>
        </member>
        <member name="M:WebApplications.Utilities.SqlExtensions.AddWithValueNull``1(System.Data.SqlClient.SqlParameterCollection,System.String,System.Nullable{``0})">
            <summary>
              Adds a value to the end of a <see cref="T:System.Data.SqlClient.SqlParameterCollection"/>. If the <paramref name="value"/> is
              <see langword="null"/> then it will be passed as a <see cref="F:System.DBNull.Value"/>.
            </summary>
            <param name="parameters">
              The parameters associated with an <see cref="T:System.Data.SqlClient.SqlCommand"/>.
            </param>
            <param name="name">The name of the parameter.</param>
            <param name="value">The value of the parameter to add.</param>
        </member>
        <member name="M:WebApplications.Utilities.SqlExtensions.GetValue``1(System.Data.IDataReader,System.Int32,``0)">
            <summary>
              Gets the value of the specified column.
            </summary>
            <typeparam name="T">The value type.</typeparam>
            <param name="dataReader">The data reader object.</param>
            <param name="ordinal">The zero based ordinal of the column.</param>
            <param name="nullValue">
              <para>The value to use if the data is null.</para>
              <para>By default this gets the default value of <typeparamref name="T"/>.</para>
            </param>
            <returns>The value of the column specified by the <paramref name="ordinal"/>.</returns>
            <remarks>
              Use this only if the ordinal is guaranteed not to change otherwise use the column name instead.
            </remarks>
            <exception cref="T:System.NullReferenceException">
              <paramref name="dataReader"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.SqlExtensions.GetValue``1(System.Data.IDataReader,System.String,``0)">
            <summary>
              Gets the value of the specified column.
            </summary>
            <typeparam name="T">The value type.</typeparam>
            <param name="dataReader">The data reader object.</param>
            <param name="columnName">The name of the column to get.</param>
            <param name="nullValue">
              <para>The value to use if the data is null.</para>
              <para>By default this gets the default value of <typeparamref name="T"/>.</para>
            </param>
            <returns>The value of the column specified.</returns>
            <exception cref="T:System.IndexOutOfRangeException">
              The <paramref name="columnName"/> provided is invalid.
            </exception>
            <exception cref="T:System.NullReferenceException">
              <paramref name="dataReader"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.SqlExtensions.TryGetValue``1(System.Data.IDataReader,System.String,``0@,``0)">
            <summary>
              Tries to get the value of the specified column.
            </summary>
            <typeparam name="T">The value type.</typeparam>
            <param name="dataReader">The data reader object.</param>
            <param name="columnName">The name of the column to get.</param>
            <param name="value">The retrieved value.</param>
            <param name="nullValue">
              <para>The value to use if the data is null.</para>
              <para>By default this gets the default value of <typeparamref name="T"/>.</para>
            </param>
            <returns>
              Returns <see langword="true"/> if the value is found; otherwise returns <see langword="false"/>.
            </returns>
            <exception cref="T:System.NotSupportedException">
              There is no current connection to an instance of SQL Server.
            </exception>
            <exception cref="T:System.NullReferenceException">
              <paramref name="dataReader"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.SqlExtensions.AddWithValue(System.Data.SqlClient.SqlParameterCollection,System.String,System.Collections.Generic.IEnumerable{System.Int64},System.String)">
            <summary>
              Adds a single column table parameter to a parameter collection,
              based on an <see cref="T:System.Collections.IEnumerable"/>.
            </summary>
            <param name="sqlParameterCollection">
              The parameters associated with an <see cref="T:System.Data.SqlClient.SqlCommand"/>.
            </param>
            <param name="parameterName">The name of the parameter.</param>
            <param name="enumerable">The <see cref="T:System.Int64"/> type enumerable.</param>
            <param name="columnName">
              <para>The name of the column in the table parameter.</para>
              <para>By default this is set to "Value".</para>
            </param>
            <returns>The parameter that was added.</returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="columnName"/> is a <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.SqlExtensions.AddWithValue(System.Data.SqlClient.SqlParameterCollection,System.String,System.Collections.Generic.IEnumerable{System.Byte[]},System.String)">
            <summary>
              Adds a single column table parameter to a parameter collection,
              based on an <see cref="T:System.Collections.IEnumerable"/>.
            </summary>
            <param name="sqlParameterCollection">
              The parameters associated with an <see cref="T:System.Data.SqlClient.SqlCommand"/>.
            </param>
            <param name="parameterName">The name of the parameter.</param>
            <param name="enumerable">The <see cref="T:System.Byte"/> type enumerable.</param>
            <param name="columnName">
              <para>The name of the column in the table parameter.</para>
              <para>By default this is set to "Value".</para>
            </param>
            <returns>The parameter that was added.</returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="columnName"/> is a <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.SqlExtensions.AddWithValue(System.Data.SqlClient.SqlParameterCollection,System.String,System.Collections.Generic.IEnumerable{System.Boolean},System.String)">
            <summary>
              Adds a single column table parameter to a parameter collection,
              based on an <see cref="T:System.Collections.IEnumerable"/>.
            </summary>
            <param name="sqlParameterCollection">
              The parameters associated with an <see cref="T:System.Data.SqlClient.SqlCommand"/>.
            </param>
            <param name="parameterName">The name of the parameter.</param>
            <param name="enumerable">The <see cref="T:System.Boolean"/> type enumerable.</param>
            <param name="columnName">
              <para>The name of the column in the table parameter.</para>
              <para>By default this is set to "Value".</para>
            </param>
            <returns>The parameter that was added.</returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="columnName"/> is a <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.SqlExtensions.AddWithValue(System.Data.SqlClient.SqlParameterCollection,System.String,System.Collections.Generic.IEnumerable{System.String},System.Int32,System.String)">
            <summary>
              Adds a single column table parameter to a parameter collection,
              based on an <see cref="T:System.Collections.IEnumerable"/>.
            </summary>
            <param name="sqlParameterCollection">
              The parameters associated with an <see cref="T:System.Data.SqlClient.SqlCommand"/>.
            </param>
            <param name="parameterName">The name of the parameter.</param>
            <param name="enumerable">The <see cref="T:System.String"/> type enumerable.</param>
            <param name="maxLength">
              <para>The maximum length of the string.</para>
              <para>By default this is -1, which is the default value of <see cref="P:Microsoft.SqlServer.Server.SqlMetaData.Max"/>.</para>
            </param>
            <param name="columnName">
              <para>The name of the column in the table parameter.</para>
              <para>By default this is set to "Value".</para>
            </param>
            <returns>The parameter that was added.</returns>
            <exception cref="T:System.ArgumentException">
              The <paramref name="maxLength"/> specified is out of range.
            </exception>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="columnName"/> is a <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.SqlExtensions.AddWithValue(System.Data.SqlClient.SqlParameterCollection,System.String,System.Collections.Generic.IEnumerable{System.DateTime},System.String)">
            <summary>
              Adds a single column table parameter to a parameter collection,
              based on an <see cref="T:System.Collections.IEnumerable"/>.
            </summary>
            <param name="sqlParameterCollection">
              The parameters associated with an <see cref="T:System.Data.SqlClient.SqlCommand"/>.
            </param>
            <param name="parameterName">The name of the parameter.</param>
            <param name="enumerable">The <see cref="T:System.DateTime"/> type enumerable.</param>
            <param name="columnName">
              <para>The name of the column in the table parameter.</para>
              <para>By default this is set to "Value".</para>
            </param>
            <returns>The parameter that was added.</returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="columnName"/> is a <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.SqlExtensions.AddWithValue(System.Data.SqlClient.SqlParameterCollection,System.String,System.Collections.Generic.IEnumerable{System.Decimal},System.String)">
            <summary>
              Adds a single column table parameter to a parameter collection,
              based on an <see cref="T:System.Collections.IEnumerable"/>.
            </summary>
            <param name="sqlParameterCollection">
              The parameters associated with an <see cref="T:System.Data.SqlClient.SqlCommand"/>.
            </param>
            <param name="parameterName">The name of the parameter.</param>
            <param name="enumerable">The <see cref="T:System.Decimal"/> type enumerable.</param>
            <param name="columnName">
              <para>The name of the column in the table parameter.</para>
              <para>By default this is set to "Value".</para>
            </param>
            <returns>The parameter that was added.</returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="columnName"/> is a <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.SqlExtensions.AddWithValue(System.Data.SqlClient.SqlParameterCollection,System.String,System.Collections.Generic.IEnumerable{System.Double},System.String)">
            <summary>
              Adds a single column table parameter to a parameter collection,
              based on an <see cref="T:System.Collections.IEnumerable"/>.
            </summary>
            <param name="sqlParameterCollection">
              The parameters associated with an <see cref="T:System.Data.SqlClient.SqlCommand"/>.
            </param>
            <param name="parameterName">The name of the parameter.</param>
            <param name="enumerable">The <see cref="T:System.Double"/> type enumerable.</param>
            <param name="columnName">
              <para>The name of the column in the table parameter.</para>
              <para>By default this is set to "Value".</para>
            </param>
            <returns>The parameter that was added.</returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="columnName"/> is a <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.SqlExtensions.AddWithValue(System.Data.SqlClient.SqlParameterCollection,System.String,System.Collections.Generic.IEnumerable{System.Int32},System.String)">
            <summary>
              Adds a single column table parameter to a parameter collection,
              based on an <see cref="T:System.Collections.IEnumerable"/>.
            </summary>
            <param name="sqlParameterCollection">
              The parameters associated with an <see cref="T:System.Data.SqlClient.SqlCommand"/>.
            </param>
            <param name="parameterName">The name of the parameter.</param>
            <param name="enumerable">The <see cref="T:System.Int32"/> type enumerable.</param>
            <param name="columnName">
              <para>The name of the column in the table parameter.</para>
              <para>By default this is set to "Value".</para>
            </param>
            <returns>The parameter that was added.</returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="columnName"/> is a <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.SqlExtensions.AddWithValue(System.Data.SqlClient.SqlParameterCollection,System.String,System.Collections.Generic.IEnumerable{System.Single},System.String)">
            <summary>
              Adds a single column table parameter to a parameter collection,
              based on an <see cref="T:System.Collections.IEnumerable"/>.
            </summary>
            <param name="sqlParameterCollection">
              The parameters associated with an <see cref="T:System.Data.SqlClient.SqlCommand"/>.
            </param>
            <param name="parameterName">The name of the parameter.</param>
            <param name="enumerable">The <see cref="T:System.Single"/> type enumerable.</param>
            <param name="columnName">
              <para>The name of the column in the table parameter.</para>
              <para>By default this is set to "Value".</para>
            </param>
            <returns>The parameter that was added.</returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="columnName"/> is a <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.SqlExtensions.AddWithValue(System.Data.SqlClient.SqlParameterCollection,System.String,System.Collections.Generic.IEnumerable{System.Guid},System.String)">
            <summary>
              Adds a single column table parameter to a parameter collection,
              based on an <see cref="T:System.Collections.IEnumerable"/>.
            </summary>
            <param name="sqlParameterCollection">
              The parameters associated with an <see cref="T:System.Data.SqlClient.SqlCommand"/>.
            </param>
            <param name="parameterName">The name of the parameter.</param>
            <param name="enumerable">The <see cref="T:System.Guid"/> type enumerable.</param>
            <param name="columnName">
              <para>The name of the column in the table parameter.</para>
              <para>By default this is set to "Value".</para>
            </param>
            <returns>The parameter that was added.</returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="columnName"/> is a <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.SqlExtensions.AddWithValue(System.Data.SqlClient.SqlParameterCollection,System.String,System.Collections.Generic.IEnumerable{System.Int16},System.String)">
            <summary>
              Adds a single column table parameter to a parameter collection,
              based on an <see cref="T:System.Collections.IEnumerable"/>.
            </summary>
            <param name="sqlParameterCollection">
              The parameters associated with an <see cref="T:System.Data.SqlClient.SqlCommand"/>.
            </param>
            <param name="parameterName">The name of the parameter.</param>
            <param name="enumerable">The <see cref="T:System.Int16"/> type enumerable.</param>
            <param name="columnName">
              <para>The name of the column in the table parameter.</para>
              <para>By default this is set to "Value".</para>
            </param>
            <returns>The parameter that was added.</returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="columnName"/> is a <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.SqlExtensions.AddWithValue(System.Data.SqlClient.SqlParameterCollection,System.String,System.Collections.Generic.IEnumerable{System.Byte},System.String)">
            <summary>
              Adds a single column table parameter to a parameter collection,
              based on an <see cref="T:System.Collections.IEnumerable"/>.
            </summary>
            <param name="sqlParameterCollection">
              The parameters associated with an <see cref="T:System.Data.SqlClient.SqlCommand"/>.
            </param>
            <param name="parameterName">The name of the parameter.</param>
            <param name="enumerable">The <see cref="T:System.Byte"/> type enumerable.</param>
            <param name="columnName">
              <para>The name of the column in the table parameter.</para>
              <para>By default this is set to "Value".</para>
            </param>
            <returns>The parameter that was added.</returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="columnName"/> is a <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.SqlExtensions.AddWithValue``1(System.Data.SqlClient.SqlParameterCollection,System.String,System.Collections.Generic.IEnumerable{``0},System.Data.SqlDbType,System.String)">
            <summary>
              Adds a single column table parameter to a parameter collection,
              based on an <see cref="T:System.Collections.IEnumerable"/>.
            </summary>
            <typeparam name="T">The type of the enumerable item.</typeparam>
            <param name="sqlParameterCollection">
              The parameters associated with an <see cref="T:System.Data.SqlClient.SqlCommand"/>.
            </param>
            <param name="parameterName">The name of the parameter.</param>
            <param name="enumerable">The enumerable of type <typeparamref name="T"/>.</param>
            <param name="dbType">The SQL server specific data type of the column.</param>
            <param name="columnName">
              <para>The name of the column in the table parameter.</para>
              <para>By default this is set to "Value".</para>
            </param>
            <returns>The parameter that was added.</returns>
            <exception cref="T:System.ArgumentException">
              An invalid <see cref="T:System.Data.SqlDbType"/> has been passed to <paramref name="dbType"/>.
              See <see cref="T:Microsoft.SqlServer.Server.SqlMetaData"/> for which types are allowed.
            </exception>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="columnName"/> is a <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.SqlExtensions.AddWithValue``1(System.Data.SqlClient.SqlParameterCollection,System.String,System.Collections.Generic.IEnumerable{``0},System.Data.SqlDbType,System.Byte,System.Byte,System.String)">
            <summary>
              Adds a single column table parameter to a parameter collection,
              based on an <see cref="T:System.Collections.IEnumerable"/>.
            </summary>
            <typeparam name="T">The type of the enumerable item.</typeparam>
            <param name="sqlParameterCollection">
              The parameters associated with an <see cref="T:System.Data.SqlClient.SqlCommand"/>.
            </param>
            <param name="parameterName">The name of the parameter.</param>
            <param name="enumerable">The enumerable of type <typeparamref name="T"/>.</param>
            <param name="dbType">The SQL server specific data type of the column.</param>
            <param name="precision">The maximum number of decimal digits that can be stored (left and right of the decimal point).</param>
            <param name="scale">The maximum number of decimal digits that can be stored to the right of the decimal point.</param>
            <param name="columnName">
              <para>The name of the column in the table parameter.</para>
              <para>By default this is set to "Value".</para>
            </param>
            <returns>The parameter that was added.</returns>
            <exception cref="T:System.ArgumentException">
              <para>The only <see cref="T:System.Data.SqlDbType"/> allowed for <paramref name="dbType"/> is
              <see cref="F:System.Data.SqlDbType.Decimal"/>.</para>
              <para>-or-</para>
              <para><paramref name="scale"/> was greater than <paramref name="precision"/>.</para>
            </exception>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="columnName"/> is a <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.SqlExtensions.AddWithValue``1(System.Data.SqlClient.SqlParameterCollection,System.String,System.Collections.Generic.IEnumerable{``0},System.Data.SqlDbType,System.Int64,System.String)">
            <summary>
              Adds a single column table parameter to a parameter collection,
              based on an <see cref="T:System.Collections.IEnumerable"/>.
            </summary>
            <typeparam name="T">The type of the enumerable item.</typeparam>
            <param name="sqlParameterCollection">
              The parameters associated with an <see cref="T:System.Data.SqlClient.SqlCommand"/>.
            </param>
            <param name="parameterName">The name of the parameter.</param>
            <param name="enumerable">The enumerable of type <typeparamref name="T"/>.</param>
            <param name="dbType">The SQL server specific data type of the column.</param>
            <param name="maxLength">
              <para>The maximum length of the specified type.</para>
              <para>By default this is -1, which is the default value of <see cref="P:Microsoft.SqlServer.Server.SqlMetaData.Max"/>.</para>
            </param>
            <param name="columnName">
              <para>The name of the column in the table parameter.</para>
              <para>By default this is set to "Value".</para>
            </param>
            <returns>The parameter that was added.</returns>
            <remarks>
              Only <see cref="P:Microsoft.SqlServer.Server.SqlMetaData.Max"/> or -1 is allowed for a <see cref="T:System.Data.SqlDbType"/> of Text, NText, or Image.
            </remarks>
            <exception cref="T:System.ArgumentException">
              <para>The only <see cref="T:System.Data.SqlDbType"/>s allowed for <paramref name="dbType"/> are
              Binary, Char, Image, NChar, Ntext, NVarChar, Text, VarBinary and VarChar.</para>
              <para>-or-</para>
              <para>The <paramref name="maxLength"/> specified is out of range.</para></exception>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="columnName"/> is a <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.SqlExtensions.AddWithValue``1(System.Data.SqlClient.SqlParameterCollection,System.String,System.Collections.Generic.IEnumerable{``0},Microsoft.SqlServer.Server.SqlMetaData)">
            <summary>
              Adds a single column table parameter to a parameter collection,
              based on an <see cref="T:System.Collections.IEnumerable"/>.
            </summary>
            <typeparam name="T">The type of the enumerable item.</typeparam>
            <param name="sqlParameterCollection">
              The parameters associated with an <see cref="T:System.Data.SqlClient.SqlCommand"/>.
            </param>
            <param name="parameterName">The name of the parameter.</param>
            <param name="enumerable">The enumerable of type <typeparamref name="T"/>.</param>
            <param name="sqlMetaData">The SQL meta data describing the column.</param>
            <returns>The parameter that was added.</returns>
        </member>
        <member name="M:WebApplications.Utilities.SqlExtensions.AddWithValue``1(System.Data.SqlClient.SqlParameterCollection,System.String,System.Collections.Generic.IEnumerable{``0},System.Func{``0,Microsoft.SqlServer.Server.SqlDataRecord,System.Boolean},Microsoft.SqlServer.Server.SqlMetaData[])">
            <summary>
            Adds a table parameter to a parameter collection, based on an <see cref="T:System.Collections.IEnumerable"/>.
            </summary>
            <typeparam name="T">The type of the enumerable item.</typeparam>
            <param name="sqlParameterCollection">
              The parameters associated with an <see cref="T:System.Data.SqlClient.SqlCommand"/>.
            </param>
            <param name="parameterName">The name of the parameter.</param>
            <param name="enumerable">The enumerable of type <typeparamref name="T"/>.</param>
            <param name="convertor">The convertor function.</param>
            <param name="sqlMetaData">The SQL meta data describing the columns.</param>
            <returns>The <see cref="T:System.Data.SqlClient.SqlParameter">parameter</see> that was added.</returns>
            <remarks>
              <para>The <paramref name="convertor"/> function is supplied with a new <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/>
              and an item of type <typeparamref name="T"/> from the supplied enumerable, which should be used to
              populate the <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/>.</para>
              <para>If you do not wish the item to be added to the table then return <see langword="false"/>; otherwise
              <see langword="true"/> should be returned.</para>
            </remarks>
        </member>
        <member name="M:WebApplications.Utilities.SqlExtensions.ToSqlParameterValue(System.Collections.Generic.IEnumerable{System.Int64},System.String)">
            <summary>
              Converts the specified object to a single columned <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/>.
            </summary>
            <param name="enumerable">The enumerable of type <see cref="T:System.Int64"/>.</param>
            <param name="columnName">
              <para>The name of the column.</para>
              <para>By default this is "Value".</para>
            </param>
            <returns>
              The converted <paramref name="enumerable"/> as an <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="columnName"/> was a <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.SqlExtensions.ToSqlParameterValue(System.Collections.Generic.IEnumerable{System.Byte[]},System.String)">
            <summary>
            Converts the specified object to a single columned <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/>.
            </summary>
            <param name="enumerable">The enumerable containing a <see cref="T:System.Byte"/> array.</param>
            <param name="columnName">
              <para>The name of the column.</para>
              <para>By default this is "Value".</para>
            </param>
            <returns>
              The converted <paramref name="enumerable"/> as an <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="columnName"/> was a <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.SqlExtensions.ToSqlParameterValue(System.Collections.Generic.IEnumerable{System.Boolean},System.String)">
            <summary>
            Converts the specified object to a single columned <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/>.
            </summary>
            <param name="enumerable">The enumerable of type <see cref="T:System.Boolean"/>.</param>
            <param name="columnName">
              <para>The name of the column.</para>
              <para>By default this is "Value".</para>
            </param>
            <returns>
              The converted <paramref name="enumerable"/> as an <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="columnName"/> was <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.SqlExtensions.ToSqlParameterValue(System.Collections.Generic.IEnumerable{System.String},System.Int32,System.String)">
            <summary>
            Converts the specified object to a single columned <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/>.
            </summary>
            <param name="enumerable">The enumerable of type <see cref="T:System.String"/>.</param>
            <param name="maxLength">
              <para>The maximum length of the string.</para>
              <para>By default this is -1, which is the default value of <see cref="P:Microsoft.SqlServer.Server.SqlMetaData.Max"/>.</para>
            </param>
            <param name="columnName">
              <para>The name of the column.</para>
              <para>By default this is "Value".</para>
            </param>
            <returns>
              The converted <paramref name="enumerable"/> as an <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="columnName"/> was <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.SqlExtensions.ToSqlParameterValue(System.Collections.Generic.IEnumerable{System.DateTime},System.String)">
            <summary>
            Converts the specified object to a single columned <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/>.
            </summary>
            <param name="enumerable">The enumerable of type <see cref="T:System.DateTime"/>.</param>
            <param name="columnName">
              <para>The name of the column.</para>
              <para>By default this is "Value".</para>
            </param>
            <returns>
              The converted <paramref name="enumerable"/> as an <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="columnName"/> was <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.SqlExtensions.ToSqlParameterValue(System.Collections.Generic.IEnumerable{System.Decimal},System.String)">
            <summary>
            Converts the specified object to a single columned <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/>.
            </summary>
            <param name="enumerable">The enumerable of type <see cref="T:System.Decimal"/>.</param>
            <param name="columnName">
              <para>The name of the column.</para>
              <para>By default this is "Value".</para>
            </param>
            <returns>
              The converted <paramref name="enumerable"/> as an <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="columnName"/> was <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.SqlExtensions.ToSqlParameterValue(System.Collections.Generic.IEnumerable{System.Double},System.String)">
            <summary>
              Converts the specified object to a single columned <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/>.
            </summary>
            <param name="enumerable">The enumerable of type <see cref="T:System.Double"/>.</param>
            <param name="columnName">
              <para>The name of the column.</para>
              <para>By default this is "Value".</para>
            </param>
            <returns>
              The converted <paramref name="enumerable"/> as an <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="columnName"/> was <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.SqlExtensions.ToSqlParameterValue(System.Collections.Generic.IEnumerable{System.Int32},System.String)">
            <summary>
            Converts the specified object to a single columned <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/>.
            </summary>
            <param name="enumerable">The enumerable of type <see cref="T:System.Int32"/>.</param>
            <param name="columnName">
              <para>The name of the column.</para>
              <para>By default this is "Value".</para>
            </param>
            <returns>
              The converted <paramref name="enumerable"/> as an <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="columnName"/> was <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.SqlExtensions.ToSqlParameterValue(System.Collections.Generic.IEnumerable{System.Single},System.String)">
            <summary>
              Converts the specified object to a single columned <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/>.
            </summary>
            <param name="enumerable">The enumerable of type <see cref="T:System.Single"/>.</param>
            <param name="columnName">
              <para>The name of the column.</para>
              <para>By default this is "Value".</para>
            </param>
            <returns>
              The converted <paramref name="enumerable"/> as an <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="columnName"/> was <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.SqlExtensions.ToSqlParameterValue(System.Collections.Generic.IEnumerable{System.Guid},System.String)">
            <summary>
              Converts the specified object to a single columned <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/>.
            </summary>
            <param name="enumerable">The enumerable of type <see cref="T:System.Guid"/>.</param>
            <param name="columnName">
              <para>The name of the column.</para>
              <para>By default this is "Value".</para>
            </param>
            <returns>
              The converted <paramref name="enumerable"/> as an <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="columnName"/> was <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.SqlExtensions.ToSqlParameterValue(System.Collections.Generic.IEnumerable{System.Int16},System.String)">
            <summary>
              Converts the specified object to a single columned <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/>.
            </summary>
            <param name="enumerable">The enumerable of type <see cref="T:System.Int16"/>.</param>
            <param name="columnName">
              <para>The name of the column.</para>
              <para>By default this is "Value".</para>
            </param>
            <returns>
              The converted <paramref name="enumerable"/> as an <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="columnName"/> was <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.SqlExtensions.ToSqlParameterValue(System.Collections.Generic.IEnumerable{System.Byte},System.String)">
            <summary>
              Converts the specified object to a single columned <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/>.
            </summary>
            <param name="enumerable">The enumerable of type <see cref="T:System.Byte"/>.</param>
            <param name="columnName">
              <para>The name of the column.</para>
              <para>By default this is "Value".</para>
            </param>
            <returns>
              The converted <paramref name="enumerable"/> as an <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="columnName"/> was <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.SqlExtensions.ToSqlParameterValue``1(System.Collections.Generic.IEnumerable{``0},Microsoft.SqlServer.Server.SqlMetaData)">
            <summary>
            Converts the specified object to a single columned <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/>.
            </summary>
            <typeparam name="T">The type of the enumerable items.</typeparam>
            <param name="enumerable">The enumerable.</param>
            <param name="sqlMetaData">The SQL meta data describing the column.</param>
            <returns>
              The converted <paramref name="enumerable"/> as a <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
              <paramref name="enumerable"/> or <paramref name="sqlMetaData"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:WebApplications.Utilities.SqlExtensions.ToSqlParameterValue``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,Microsoft.SqlServer.Server.SqlDataRecord,System.Boolean},Microsoft.SqlServer.Server.SqlMetaData[])">
            <summary>
              Converts the specified object to a corresponding <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/>.
            </summary>
            <typeparam name="T">The type of the enumeration items.</typeparam>
            <param name="enumerable">The enumerable of type <typeparamref name="T"/>.</param>
            <param name="convertor">The convertor function.</param>
            <param name="sqlMetaData">The SQL meta data describing the columns.</param>
            <returns>
              The converted <paramref name="enumerable"/> as a <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord"/>.
            </returns>
        </member>
        <member name="T:WebApplications.Utilities.ValueComparer`2">
            <summary>
            Equality comparer for <see cref="T:System.Collections.Generic.KeyValuePair`2"/> that only considers values.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="F:WebApplications.Utilities.ValueComparer`2.Default">
            <summary>
            The default <see cref="T:System.Collections.Generic.KeyValuePair`2"/>.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.ValueComparer`2.#ctor(System.Collections.Generic.IEqualityComparer{`1})">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.ValueComparer`2"/> class.
            </summary>
            <param name="comparer">The value comparer.</param>
        </member>
        <member name="M:WebApplications.Utilities.ValueComparer`2.Equals(System.Collections.Generic.KeyValuePair{`0,`1},System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Equalses the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns>System.Boolean.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ValueComparer`2.GetHashCode(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Gets the hash code.
            </summary>
            <param name="obj">The obj.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="T:WebApplications.Utilities.ReadOnlyWindow`1">
            <summary>
            Holds a window on existing data.
            </summary>
            <typeparam name="T">The item type.</typeparam>
            <seealso cref="T:System.Collections.Generic.IReadOnlyList`1"/>
            <seealso cref="T:System.Collections.ICollection"/>
            <seealso cref="T:WebApplications.Utilities.Window`1"/>
            <seealso cref="T:WebApplications.Utilities.ReadOnlyMap`1"/>
            <seealso cref="T:WebApplications.Utilities.ReadOnlyOffsetMap`1"/>
        </member>
        <member name="F:WebApplications.Utilities.ReadOnlyWindow`1.Data">
            <summary>
            The data to be compared.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.ReadOnlyWindow`1.AllowExpansion">
            <summary>
            Whether you can expand the window using <see cref="M:WebApplications.Utilities.ReadOnlyWindow`1.GetSubset(System.Int32,System.Int32)"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.ReadOnlyWindow`1.Offset">
            <summary>
            The offset.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.ReadOnlyWindow`1._delta">
            <summary>
            The delta between the data count and the window count (allows the window to change with the underlying data).
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.ReadOnlyWindow`1.Length">
            <summary>
            Gets the length of the underlying data.
            </summary>
            <value>The length.</value>
        </member>
        <member name="M:WebApplications.Utilities.ReadOnlyWindow`1.#ctor(System.Collections.Generic.IReadOnlyList{`0},System.Int32,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.ReadOnlyWindow`1" /> class.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset (defaults to zero).</param>
            <param name="length">The length (defaults to the data length - the offset).</param>
            <param name="allowExpansion"><see langword="true"/> to allow expansion; <see langword="false"/> otherwise.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offset" /> is out of range.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="length" /> is out of range.</exception>
        </member>
        <member name="P:WebApplications.Utilities.ReadOnlyWindow`1.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:System.Int32" /> with the <paramref name="index">specified index</paramref>.
            </summary>
            <returns>An <see cref="T:System.Int32"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index"/> is out of range.</exception>
        </member>
        <member name="M:WebApplications.Utilities.ReadOnlyWindow`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.ReadOnlyWindow`1.Count">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.ReadOnlyWindow`1.System#Collections#ICollection#SyncRoot">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.ReadOnlyWindow`1.System#Collections#ICollection#IsSynchronized">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.ReadOnlyWindow`1.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.ReadOnlyWindow`1.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.ReadOnlyWindow`1.GetSubset(System.Int32,System.Int32)">
            <summary>
            Gets a subset of the data.
            </summary>
            <param name="offset">The offset (can be negative to expand/move window).</param>
            <param name="length">The length.</param>
            <returns>A subset <see cref="T:WebApplications.Utilities.ReadOnlyWindow`1"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offset" /> is out of range.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="length" /> is out of range.</exception>
        </member>
        <member name="M:WebApplications.Utilities.ReadOnlyWindow`1.op_Implicit(System.Collections.Generic.List{`0})~WebApplications.Utilities.ReadOnlyWindow{`0}">
            <summary>
            Implements the implicit cast operator from <see cref="T:System.Collections.Generic.List`1" />.
            </summary>
            <param name="list">The list.</param>
            <returns>A <see cref="T:WebApplications.Utilities.ReadOnlyWindow`1" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.ReadOnlyWindow`1.op_Implicit(`0[])~WebApplications.Utilities.ReadOnlyWindow{`0}">
            <summary>
            Implements the implicit cast operator from an array of <typeparamref name="T"/>.
            </summary>
            <param name="array">The array.</param>
            <returns>A <see cref="T:WebApplications.Utilities.ReadOnlyWindow`1" />.</returns>
        </member>
        <member name="T:WebApplications.Utilities.Window`1">
            <summary>
            Holds a window on existing data.
            </summary>
            <typeparam name="T">The item type.</typeparam>
            <seealso cref="T:System.Collections.Generic.IList`1"/>
            <seealso cref="T:System.Collections.IList"/>
            <seealso cref="T:WebApplications.Utilities.ReadOnlyWindow`1"/>
        </member>
        <member name="F:WebApplications.Utilities.Window`1.Data">
            <summary>
            Gets the underlying data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="F:WebApplications.Utilities.Window`1.AllowExpansion">
            <summary>
            Whether you can expand the window using <see cref="M:WebApplications.Utilities.Window`1.GetSubset(System.Int32,System.Int32)"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.Window`1.Offset">
            <summary>
            The offset.
            </summary>
        </member>
        <member name="P:WebApplications.Utilities.Window`1.Length">
            <summary>
            Gets the length of the underlying data.
            </summary>
            <value>The length.</value>
        </member>
        <member name="F:WebApplications.Utilities.Window`1._delta">
            <summary>
            The delta between the data count and the window count (allows the window to change with the underlying data).
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.Window`1.#ctor(System.Collections.Generic.IList{`0},System.Int32,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WebApplications.Utilities.Window`1" /> class.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The offset (defaults to zero).</param>
            <param name="length">The length (defaults to the data length - the offset).</param>
            <param name="allowExpansion"><see langword="true"/> to allow expansion; <see langword="false"/> otherwise.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offset" /> is out of range.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="length" /> is out of range.</exception>
            <exception cref="T:System.ArgumentException">The data must not be readonly - consider using <see cref="T:WebApplications.Utilities.ReadOnlyWindow`1"/> instead.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Window`1.Add(`0)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Window`1.System#Collections#IList#Add(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Window`1.Clear">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Window`1.Contains(`0)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Window`1.System#Collections#IList#Contains(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Window`1.CopyTo(`0[],System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Window`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Window`1.Remove(`0)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Window`1.System#Collections#IList#Remove(System.Object)">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Window`1.Count">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Window`1.System#Collections#ICollection#SyncRoot">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Window`1.System#Collections#ICollection#IsSynchronized">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Window`1.IsReadOnly">
            <inheritdoc />
        </member>
        <member name="P:WebApplications.Utilities.Window`1.System#Collections#IList#IsFixedSize">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Window`1.IndexOf(`0)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Window`1.System#Collections#IList#IndexOf(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Window`1.Insert(System.Int32,`0)">
            <inheritdoc />
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index"/> is out of range.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Window`1.System#Collections#IList#Insert(System.Int32,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Window`1.RemoveAt(System.Int32)">
            <inheritdoc />
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index"/> is out of range.</exception>
        </member>
        <member name="P:WebApplications.Utilities.Window`1.Item(System.Int32)">
            <inheritdoc />
            <exception cref="T:System.ArgumentOutOfRangeException" accessor="get">The <paramref name="index"/> is out of range.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException" accessor="set">The <paramref name="index"/> is out of range.</exception>
        </member>
        <member name="P:WebApplications.Utilities.Window`1.System#Collections#IList#Item(System.Int32)">
            <inheritdoc />
            <exception cref="T:System.ArgumentOutOfRangeException" accessor="get">The <paramref name="index"/> is out of range.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException" accessor="set">The <paramref name="index"/> is out of range.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Window`1.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Window`1.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:WebApplications.Utilities.Window`1.GetSubset(System.Int32,System.Int32)">
            <summary>
            Gets a subset of the data.
            </summary>
            <param name="offset">The offset (can be negative to expand/move window).</param>
            <param name="length">The length.</param>
            <returns>A subset <see cref="T:WebApplications.Utilities.Window`1"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offset" /> is out of range.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="length" /> is out of range.</exception>
        </member>
        <member name="M:WebApplications.Utilities.Window`1.op_Implicit(WebApplications.Utilities.Window{`0})~WebApplications.Utilities.ReadOnlyWindow{`0}">
            <summary>
            Implements the implicit cast operator to <see cref="T:WebApplications.Utilities.ReadOnlyWindow`1"/>.
            </summary>
            <param name="window">The window.</param>
            <returns>A <see cref="T:WebApplications.Utilities.ReadOnlyWindow`1"/>.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Window`1.op_Implicit(System.Collections.Generic.List{`0})~WebApplications.Utilities.Window{`0}">
            <summary>
            Implements the implicit cast operator from <see cref="T:System.Collections.Generic.List`1" />.
            </summary>
            <param name="list">The list.</param>
            <returns>A <see cref="T:WebApplications.Utilities.Window`1" />.</returns>
        </member>
        <member name="M:WebApplications.Utilities.Window`1.op_Implicit(`0[])~WebApplications.Utilities.Window{`0}">
            <summary>
            Implements the implicit cast operator from an array of <typeparamref name="T"/>.
            </summary>
            <param name="array">The array.</param>
            <returns>A <see cref="T:WebApplications.Utilities.Window`1" />.</returns>
        </member>
        <member name="T:WebApplications.Utilities.XObjectComparisonOptions">
            <summary>
            Comparison options for <see cref="!:XNodeExtensions.DeepEquals" />.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.XObjectComparisonOptions.None">
            <summary>
            Everything is considered significant.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.XObjectComparisonOptions.IgnoreAttributeOrder">
            <summary>
            The attribute order is not considered significant.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.XObjectComparisonOptions.IgnoreAdditionalAttributes">
            <summary>
            Attributes that occur in the second node but don't occur in the first node are ignored (Also sets <see cref="F:WebApplications.Utilities.XObjectComparisonOptions.IgnoreAttributeOrder"/>).
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.XObjectComparisonOptions.IgnoreAttributes">
            <summary>
            All attributes are ignored.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.XObjectComparisonOptions.IgnoreElementOrder">
            <summary>
            The child element order is not considered significant.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.XObjectComparisonOptions.IgnoreAdditionalElements">
            <summary>
            Child elements that occur in the second node but don't occur in the first node are ignored (Also sets <see cref="F:WebApplications.Utilities.XObjectComparisonOptions.IgnoreElementOrder"/>).
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.XObjectComparisonOptions.IgnoreElements">
            <summary>
            All child elements are not considered.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.XObjectComparisonOptions.IgnoreCommentOrder">
            <summary>
            The comment order is not considered significant.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.XObjectComparisonOptions.IgnoreAdditionalComments">
            <summary>
            Comments that occur in the second node but don't occur in the first node are ignored (Also sets <see cref="F:WebApplications.Utilities.XObjectComparisonOptions.IgnoreCommentOrder"/>).
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.XObjectComparisonOptions.IgnoreComments">
            <summary>
            All comments are ignored
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.XObjectComparisonOptions.IgnoreTextOrder">
            <summary>
            The text/CDATA order is not considered significant.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.XObjectComparisonOptions.IgnoreAdditionalText">
            <summary>
            Text/CDATA that occurs in the second node but doesn't occur in the first node are ignored (Also sets <see cref="F:WebApplications.Utilities.XObjectComparisonOptions.IgnoreTextOrder"/>).
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.XObjectComparisonOptions.IgnoreTextOutsideOfChildren">
            <summary>
            All text/CDATA that occurs outside of child elements is ignored, but text in nodes without child elements is considered.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.XObjectComparisonOptions.IgnoreText">
            <summary>
            All text/CDATA is ignored
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.XObjectComparisonOptions.IgnoreProcessingInstructionOrder">
            <summary>
            The order of processing instructions is ignored.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.XObjectComparisonOptions.IgnoreAdditionalProcessingInstructions">
            <summary>
            Processing instructions that occur in the second node but don't occur in the first node are ignored (Also sets <see cref="F:WebApplications.Utilities.XObjectComparisonOptions.IgnoreProcessingInstructionOrder"/>).
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.XObjectComparisonOptions.IgnoreProcessingInstructions">
            <summary>
            All processing instructions are ignored.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.XObjectComparisonOptions.IgnoreAdditionalDocumentTypes">
            <summary>
            Document types that occur in the second node but don't occur in the first node are ignored .
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.XObjectComparisonOptions.IgnoreDocumentTypes">
            <summary>
            All document types  are ignored.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.XObjectComparisonOptions.Default">
            <summary>
            The default options.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.XObjectComparisonOptions.Normalised">
            <summary>
            The order of elements is ignored.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.XObjectComparisonOptions.Loose">
            <summary>
            Order does not matter, text outside of child nodes, comments, processing instructions and document types are all ignored.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.XObjectComparisonOptions.IgnoreAdditional">
            <summary>
            The order of elements is ignored, and additional nodes are ignored.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.XObjectComparisonOptions.Legacy">
            <summary>
            The legacy option is most similar to <see cref="M:System.Xml.Linq.XNode.DeepEquals(System.Xml.Linq.XNode,System.Xml.Linq.XNode)"/>.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.XObjectComparisonOptions.Semantic">
            <summary>
            The semantic mode ensures that the second node is effectively compatible with the first node, i.e. it 
            contains all the nodes in the first, but not necessarily in the same order, additonal nodes are allowed,
            and insignificant nodes are ignored.
            </summary>
        </member>
        <member name="F:WebApplications.Utilities.XObjectComparisonOptions.Exact">
            <summary>
            Everything is considered significant.
            </summary>
        </member>
        <member name="T:WebApplications.Utilities.XObjectExtensions">
            <summary>
            Extension methods for <see cref="T:System.Xml.Linq.XNode"/>.
            </summary>
        </member>
        <member name="M:WebApplications.Utilities.XObjectExtensions.DeepEquals(System.Xml.Linq.XObject,System.Xml.Linq.XObject,WebApplications.Utilities.XObjectComparisonOptions,System.StringComparer)">
            <summary>
            Compares two <see cref="T:System.Xml.Linq.XObject">XObjects</see>for equality.
            </summary>
            <param name="obj1">The first <see cref="T:System.Xml.Linq.XObject" />.</param>
            <param name="obj2">The second <see cref="T:System.Xml.Linq.XObject" />.</param>
            <param name="options">The comparison options.</param>
            <param name="stringComparer">The string comparer.</param>
            <returns>The <see cref="T:System.Xml.Linq.XObject"/> at which the first mismatch
            occurred; otherwise <see langword="null"/>.</returns>
            <remarks><para>The order of the parameters maters for ceratin options.</para></remarks>
        </member>
    </members>
</doc>
